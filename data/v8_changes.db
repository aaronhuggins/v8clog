{"name":"v8_changes","options":{"prefix":"data/"},"index":{"7":2823,"8":2822,"9":2821,"10":2820,"11":2819,"14":2812,"15":2813,"16":2810,"17":2809,"18":2811,"19":2773,"20":1,"21":2774,"23":2770,"24":2771,"25":2769,"26":2768,"27":2767,"28":2766,"29":2775,"30":2764,"31":2765,"32":2761,"33":2762,"34":2760,"35":2759,"36":2763,"37":2758,"38":1844,"39":1845,"40":1843,"41":1766,"117":0,"63a853d9a329aa67c8cbb41a8950695f27cd8ced":2,"297b72383b8fd4335196c2861e051984756262b5":3,"9c25454c652080e73ad48a0e5478f8031cc99217":4,"10455f13c54affa3958b9260b15c4b9cef939d42":5,"ee48926106051afb784d8f39c31aab0d2a04823f":6,"8545b83fed782b957741ce0b06e686b088adc3ff":7,"6832ffec54bed96a105ca5436b4da4138d91fc8c":8,"0ea52064e75c109dd106782ad2242e09e27b0f63":9,"3cc08e81ef2ee9bbfbb241bfada649b5ca7a5bce":10,"f481eed2ff09ccdf43360367fd190883df2e79ec":11,"2ece7e7ef06bdf0c3231f8f5cd74de9b196ab022":12,"2963e167f637a4fca55aa4bdb2a6c081499dc6e6":13,"a49dc69cee627007f82bd9860e88e0404374b0e3":14,"ce50641a7fd34ac879dff53e29c371bd318c4f17":15,"434e9ec835dff9048a148dec4427579c9f13793b":16,"6e68cc754a9b2a00f50c28e2849571a3909b81d1":17,"6584b6661b00e4b62ce82912b722a6dc201b7f8b":18,"02e64e0d09bea3240135bf0b2d4ef423f66b3a82":19,"26c1fc95c3fb8d4c7589eafc46df73b7446401f3":20,"ca548e3863f178b1377c0d013dc6c673114488e4":21,"4becb939339f1de4744f95b9fcb10bda57cf7e99":22,"c750b6c85bd1ad1d27f7acc1812165f465515144":23,"18a6a6c680b0cf122cab8d51e1e9ffc10f11bd69":24,"ab30afd14661123c29ccccc3bcb960e8d6624aa8":25,"948737431627f283980aa074ffd887de770c78ff":26,"b8020e1973d7d3a50b17c076cd948f079e59f9e5":27,"f1dffadd65c4667a93f4edd7d8dfb74e9b6c8086":28,"04521d8d50f8627206cdb2fe78343e01b109d411":29,"83eb51c6d9945770f551c68217be770827e87c20":30,"9029b66b5138933bc017632107e8e8a5bc6e1512":31,"be6a57a93be48e2bb4c724224e9adf0677394a62":32,"57a41c4f3e5ce79741d03b0ec0bdc35378a0145e":33,"7c1317266b0e786e68fc5880df281743b7f4721d":34,"cb7660d2c8ae5f5a324fd5c2ab729f6ee51ecaa0":35,"b53c30245b2ac85d78f6a46a92de841e3b9fbbc7":36,"c42bf33ee52e26401b372e8bbdf8b09a94c57fa1":37,"efc7b911e06b6129555aee93f6c52d10b66599fd":38,"a4909649bc9431346c916943e2d899c807d12bb1":39,"79b7b38cb7ddc3b987a414f9024ad46d8ce7f9c8":40,"4e88734f59617de77dcbc07b7539ebe3510dfe29":41,"09342420230c6f5e2bf2ad824f434061e51d2653":42,"29bc884807a41e938a31e0586aa09148e3e6484f":43,"d76cceec3f12f16ecb31edab31908fcec8efb756":44,"f9dee3a51e2d45806aaf5847abf7aaed8d5959a6":45,"e17bbd604586a791c440a132d1b035b8df634006":46,"6b84a7a996ef4af3fa0baf0fd58b06b5aaadfc5e":47,"c56358be5854af110470acc1c32be1b83694a938":48,"4eb6ba4a998ffb9930d1bd929865f7a4b65a2f70":49,"eabf864ad1f829319ba7fdbe0776999a77632acb":50,"bc45e84fe4abaa72c3e7cd37c250b484840ad512":51,"9020b6d0e475ff7ec6a26ce32118955fc53825a6":52,"cf13b9b46572a9824d2d632abdd48c56161ace02":53,"1950f83719311be8970e85b78a4acfa3aafbd4d8":54,"3fd57b875f365696b6d6e303143887ecfe9ee63f":55,"32a4b2e4cbb22e1441c30b90fcbdb30c4054f098":56,"099fac8935b5f42417231a223f9d8d74ac5d127b":57,"0d5082c13b82ad2072d4372a6a374afc107fe598":58,"fc48e3351c676168132c3ae796c916fd2c86a181":59,"154d1e4ee6d8980e1c254124625d162ef49067b8":60,"1aadce005740e7100b4c9ba64d178c41a2ef4f91":61,"4f94782e87a227072295dde051c50634af3eda05":62,"699affae4e1529c13f0b8707fbc585965459bd23":63,"3b95056f5b5987ea8153f43169445f51e9a1c113":64,"e4400ca802fc949e7a36c2ec0cf0d7689befaa82":65,"4757205b3c2a080780bfd6c04f407aed163bfe42":66,"08e95d81d52dc4411f5891ed7e7847d612ecfec6":67,"ccddea063b568d768b19865446d1f3812baf060c":68,"068536f1091b0edc5671b68640681b279c8064ff":69,"f4fb8fc1f7e2760948d2d9b53f6e975a05030c04":70,"90742c6040eddcc591dac0a0dc4565cca698974e":71,"8ef8a016dcde0e50f11cdb940d5a3b19ba68dd9a":72,"b296ab30f7a64fea2d8061bb0e06f77431376c22":73,"744570e583a611a7330871c13feb8e2df4d7e6df":74,"224cbd21795445fddbd59a315979f8812e1ae871":75,"bc831f8ba33b79e2eb670faf1f84c4e39aeb0f9f":76,"8ca9f77d0f7c2d5ec5ef8255b9689f5ac1c547a3":77,"2301870e757aac6148fd9f7508201d5a8217110c":78,"06aaa9625f8abccb422924d109949a85277c853f":79,"aa684004d02589f89cc2ad790f53aebbb81ba99c":80,"dbc6e5658055cc230db1485926fee77338cc72b8":81,"bb90b9cfcbca2f3757ed06d34d9f2f8f405deb8b":82,"86640aa589d5dd0196155cf83c0fdc113c348fb1":83,"ab12885a59d86d43a624ffaf6d56ca0d34e8e8bb":84,"46bbda242e1df4488fae65b5d682df9fe0f05c6d":85,"f2e6b8d2746d24d78f192a2f99fb4c6fd1aa2ed4":86,"2ac01f6c600f577af95d057eab4b35f1714354e2":87,"7b19557f8cb73895bda339c7a98decfb1dc9c5c2":88,"2833957c7753f22d56016305dd90987ed2ea7487":89,"2e357c4814954c6d83c336655209e14aa53911d4":90,"81aa89592bf85f39a9ee99ebedaf748437038ddf":91,"5080c7727af949a6bcf0fb60bde46a105aa2905e":92,"e33c3a09b31af5b69286f904a378fcbfb36a726d":93,"8b231d80ca253f82c5a0b1ec032f83384fdebb0c":94,"d0b1dac0f9f3c5c1bbf296bd84c8f362d4832a88":95,"0ea9064e39a55d50a6c41e0d80dbaa80c0dad58e":96,"b691cca3dec6fc37183fb1dc8c355e24dbd943a2":97,"4724f988aede98a5f9f2c1f60f8956acb71c388a":98,"11a63fa8d297aa46ee8ba144a9630b29b7d88fd9":99,"debcabf7b5e639c7dc6df375b0b9550f3b5ad6f2":100,"1ef43e7ba9cc876f8a3080b4816d46cad9e30dd2":101,"7777e0321df5745ba5d4741d148ad6ec87d105ff":102,"8fe57bf6415748d35567db47a338458374be7bb6":103,"ca3a939da83b87453d8c59d8acced5ac6452ef50":104,"a8a1805e126d45ea635f332df26f786c67787419":105,"28cb67cdec1777bebf44e4b921d81a3ff31cd78c":106,"f6d85958e08c0f4fd4083b740ce4059e8cf48064":107,"e29e64e7293238020d165efd420034709dcb0c67":108,"4b451843fd29b9f7a434e081c88ca30f6690599a":109,"97924c16ff70552497da834a6e81017865e50c27":110,"b5485fd81f49f4e887a11db5bdf1953154a5c16b":111,"6eb8316e7aaf83ed35185e97acb9320acecbb741":112,"9df5ef70ff18977b157028fc55ced5af4bcee535":113,"b6969920f490dab27c51379c98918d514cb004fa":114,"91ffb88d4ed2208590d717be1c4a92cfc70a14c8":115,"69ad9552b28299558b52eb002daf949b8f9e8bbc":116,"c23bc72c834ce6b3e51a13abefbcc4eec4d7d65c":117,"724e7ce1744be2141fcf4fbd8afec922bf33d850":118,"b2892b5f24b7b97ad930356a9376b8a9b2a1d360":119,"e144483823e93bb5eb2d4848ff5b39f4907a7dcc":120,"2f0384871fcb4a92aefb4024f05c520a9610a6b0":121,"6dc05091212a6b1c482d64f7d150c803889c0fc8":122,"35e58232e681a4a7c055088a8ab1cc35321bdddc":123,"7e4ee6862e122379703ce40c63e85e66a73b85c1":124,"e1dbe835d7b24ea4aa52a23e9376bb10d1a8a82b":125,"a26ca5ed147dde47f02d70c5b38d8befc1c93cb3":126,"49c59678301fafcd7f70221cdd7936253a229093":127,"87ce9fce749c8f1fa41dee2bd9499391dca76d49":128,"5d4567279e30e1e74588c022861b1d8dfc354a4e":129,"d00c040547f22858c1ab724e9db1933c00daccec":130,"e7bf81100af1cdfd84994ec7d3071a29cbef5257":131,"ba14e4d0626a1dfb2f9c239f3d70b10714f29cca":132,"d855d7f7b18905748772d10a4a569366e240e120":133,"a27a527b7573977439fd07dca1f07c874535d90f":134,"6229eee3657284cb6ad9b457d477925ad60bb743":135,"d843cda7690404d574db25f6eb0ed390e090b598":136,"752408926404509f37a6ea8fa33f5ae2e8045d66":137,"a94048877ddd3732b1ceacf797319af366a80c30":138,"51acc286e03705b85eaf373057ce0f87e8377dfb":139,"5c152a0f7b53ad24c4e103daad3cbfa94d51c29d":140,"31e17fe62d59968f6f89f5c33eaf8fa75d375b77":141,"2dd434f4db0e22935dd5422ed47fade3113e84be":142,"4c8c8cacdfe11095b75f2496759cc9a89436e06d":143,"bf5e3a8a0edfb78c975da04c0f79eb92215255e3":144,"4be9de90ac89585cbf79d452bba766f485a17941":145,"134ca75cd3233b3b54d41ec08ac363836d78b19e":146,"24cf9bd945d8cc08eaa7b3b2b3ccca800709449a":147,"e1f585ed94d799555793a4150281ce2baf22a666":148,"5e07ef10e06c69a72cf515abfa11ecb9556e114f":149,"f4c70bc5e89b70ca4b040a3b89326733daffb3a5":150,"e9775165b6fe77c4a94cf7802865ed40996197aa":151,"283791d250fe8cce64e1d973116faf92ddd304e4":152,"c3dffe6e2bdab79bb5bfb94be9fcc6a16adf6cf5":153,"39f0b4ad8a45d921bafa2bd331cce579152cdd1c":154,"4e23f53cdf2014db83155ed06d0de1195733010c":155,"56816d76c121c8dd5b406dc6019350eee05f4abd":156,"8b870395361633a134a257c604470378d06335ed":157,"d7fcbba80e35e845a85e900cf4e3c479e3b69790":158,"3d59a3c2c16405eea59263300c5591c3283a2a0e":159,"6b42df84b459c2904fc76cd73ee893e3c6d3f8e4":160,"bc0ca547b9e6976dff5d1d00d5e3120b697e96bc":161,"6b2dc157d44722df58e679310d09122af995071f":162,"f3737bbb12351042cf81198202ba07288b99f597":163,"00704f5a03d9db02c14c4f4c35188effc46e82ab":164,"df2fc0725e5456159e42e1aaab71ccca8464f2c5":165,"543b54da6607d7016adaabe2fdac2bef844fc0c4":166,"192d8c172a354cf1421fbf813838b3b7af5a82ef":167,"126d4779256509a492671bba8bdc440916a9f89a":168,"8a59678b8335ae8c3fa237317aa8ae6cb281efa2":169,"9318e064bfc230106b243837cb3be4c0cede2470":170,"d89d185fad8e7015989f9f5032100398156dbc17":171,"84e078c6cfdf330d1d3bb909d810a262138445cb":172,"5e55121e3a4b6ca17039ab69ff43edc08b187b89":173,"80575e2816036567c2c8a52ea11f236f946ea940":174,"8ca93205cc1c3b8f9e4c1b01e25e2cbfc0182701":175,"ece27af6932790856a96472a67081e7c5036faaf":176,"28b5d299845f6ca289647241badd08844b51bb7c":177,"8933f9fe8e532142331db41a00f39e5d03eea309":178,"6b4850484f1364731b2a8c7c1169ce5027f315a5":179,"0d94a5144c5c2ef1b0fcc8d54c348b63c47a20cf":180,"8487e66d755569d004d9b6a8e73d842e868a69a4":181,"f789c6a02058022b69eba665d8a92f2495e8ab72":182,"be41754f9f790ee541e03099d653d01b20afbfd9":183,"ed6be498130b3827acafa7f6c47ecbda9db5db85":184,"7e0294dcfaecbcfd3a7370654de32cde8de0cbfc":185,"dac61556497c6268db0f2960e67e26116300b314":186,"61a6fd84e19f897c5b4f444f66d5e7162ed475e0":187,"6723438813475898c20f98a1cc2701f78f433a69":188,"7445a4fd2ab9ea65cb2b89ed9ecc814d0ab1da80":189,"dd6d96c8cd560c1b17e32005ee0218bd8917f9bb":190,"6a0889817d9761a4cae55b5a6c53b3941bfdcdd2":191,"4cf204da0a7c59f476bc2ea6622d897f660e22d0":192,"31850be1c265468cf6b1f5739ec816be41ee0d2b":193,"50683aa68d3649ac27c6931fe4a95cfb24325805":194,"c51a81e705d2e407052c6c281214d9d7e209cbab":195,"a63575a3f952ec1d4e6f948492de20f2121352a9":196,"e50d19cb1190735eaf42351b69bb2c3bd5f8b1b7":197,"ca7e0c669bb2c9a1fd65c8afa0bc2f06f064a417":198,"d5d3ecaeeac7d9e04af81648a5822e82a7432155":199,"5cabf1b800fb3e5f51f5d8a100098bdee2be1a9b":200,"ea9a1f1cbe3dc642c10c08de5f10240653025779":201,"c90cdd167fb45641584c51d5bcf7561a136d2dfd":202,"4d6ddf1b5fcb98ac38fc7fc6739e642a54c49eea":203,"d812c9a977934d7e5404fdd6fc16bc376e7984e5":204,"6a977bd1fda752aba07cb78494ada0b29a3d1f57":205,"7eacc4d552272dbce2973de9ee1ebdcd61d8f757":206,"b33179ae4d3cdafd1c465efba89168aa06418f83":207,"b15aa56c820f70aec19993ba7d63a1ba24293afd":208,"008c4888897b2afa8381fb325fad1ada04769739":209,"6f5f5662cc87ec5fc56af90018a633e840da4168":210,"8278cb5015e5664f101f40bb0805244e500ad4cd":211,"485f2ecd8a924f7d5d91ce887773f42ff8ee1d30":212,"6ec7be21e68a72509c7fc4de19708283bb3a814e":213,"f1033c43b7c58e6a0d2439f91028ae8fd58669d1":214,"76d7448925720510dde106da724370bce87d49fa":215,"65034fdf545d2f937dd05f1aa535c39ba21ccac5":216,"0195a5c9a966599f60eacf650cfe0fe99a5db933":217,"c04716065626d3ea66032580d095eeb2e0df0e90":218,"d15d49b09dc7aef9edcc4cf6a0cb2b77a0db203f":219,"5b41233f3afaf351e3804043ca32a7f5dd1cdb01":220,"dff6d86419eb8268c567ed0b7cb9da72cdce52ac":221,"491de34bcc84e33468c7b299027b1f6b59ec2d15":222,"2916cf59277f39bcb90be6784c7d6bfb9b0e8d99":223,"6c64338c7819edcb0f9bb95fbd633844a5f943e9":224,"362306ea177eb9addd7aa7c2a169177195b59dbe":225,"7586dc7910e66f2a2d45721f685980535f961645":226,"2679a36ea9fb9fd7107fa589dbbba1d5656c6bc1":227,"42af5dcd821c6d19b4fa99375cc06ca190439609":228,"1078ab76665a268ca41d152f38f44a46f25281cc":229,"6e72b810c5c0e943fc0651ed9b03fe978e1a971e":230,"2eb73988a37a60520a0f8e0b1109edbcc0b91415":231,"efac35f3b8ef0572e1e0dfdfca74e8b40a797ffd":232,"588fa294ef954bd98ce3092f70978106adf780d8":233,"e0b5a83f53ba9b860d72a4ab62e888e2c56b1e7a":234,"18751c5b4669ec5c754786419790e24207953a75":235,"0998bbe6fb6b41b746ae334f97f60d20d2fee573":236,"d180d40d28d253abb5ed79a3f47fd2c150713694":237,"376813dfeb129907f0b892ee5c7350e8a554b3ea":238,"44c02e18f6e2467566532b520002a22e7efbdabb":239,"d16de30137d6066111d3ef95f61454a6f1b76333":240,"5a968b08b368ea0cac045268adfbf5a2f477e486":241,"924cc893848e11db45eb1a3661fac05c5933c994":242,"1e9f07757625bea3a636dfb3cdbd2e156955a1cf":243,"426233a1186fb3705a4a0c4928ba3a296c1487cd":244,"f43f8a0bb5a236bc758151eb4a903f7b41390d28":245,"418b5fc2ce22d1578293b670afeea534b65c7789":246,"df696e72b1fd0fc6c9210e7cf52d759612e81a62":247,"38db63b2b8b83a7400d68994cf1b6847000518be":248,"a1faaf06a496cb85e4b26eefd20fd35265388923":249,"eeab7016a7e9a4dc1664269c962fe127bb7d33e9":250,"09f39ae00d1261c20e2f9ec0dfa2e853ee0c9a1a":251,"e57f4bb3fced34521d08ea8ce5a0806747a47fb2":252,"fee2336535714a2ee4018f02bcf7e258b1bd8ed8":253,"44c748474260f6b4c93f43870b6b474230bc6fcd":254,"08348dba4e1aa572dc52f7589f11a27a3f733af7":255,"c42e620355453fc0510b06e089ca7d92598bd54f":256,"46224e75f3a42fb7ab1291c63d642e69dcdb4ac9":257,"f2ff0d50651dfa435250646c3358891f01570836":258,"35fc0c17c951d310b53042eb5749cba2597f54aa":259,"5e1f856d18f7ad82ead1cb0ff7862bee1743d40d":260,"c674a1f60876fb8836cd23a79debfe9048a058ab":261,"2655d3d18d05a8710e37ac3c803644306e26a9a8":262,"759e841a05a5def99a631d57144daec44a80e188":263,"18159ba6104ad2def0296f4d22700c92ba061926":264,"3e2d5bfafa46276db1010d352ffd72bdbff37264":265,"ee72b7a11f66c1a6da02bc4f64586ca0f6f9ce4c":266,"015632a0a8574cc276193368438c2a0529739377":267,"91badec697cb6e93d88b74534cd40f92e64fb945":268,"2ae2aa92b10e95357f044f6014b1cc22d0e1b946":269,"ec41a70e38def3dbfb05473be5d40fb81fcc8dc2":270,"a913a75b8c1fd761d90cbd1c59fde9df9a299616":271,"cce601bae6fa8728475699ba886f6894eb023bfe":272,"ca51ae3ac8b468509603633adb6ee3b3be9306ec":273,"9238afb0c0ee52c9111a7e9f2f055137628771ad":274,"cff2b5000a1aa417a9c4499bcfa3ffda4542f4f1":275,"1ff685d8b1a13794abaca3adf36cfd9838b1f6fc":276,"a8beac553b0a1639bc9790c2d6f82caf6b2e150f":277,"56cfdd68c731c53d016326b890b56b5c30098998":278,"7ff07f6ec53f24d455b3880c5b5995ede6604b60":279,"f6386018d472665e36d662c8b159d95325999d69":280,"ffae028b37991566c080c5528463f7d16017668c":281,"b2978927d8a96ebc814cccbc5a9f1c35910ee621":282,"ccc689011280419901e6ee42cae39980c0e96030":283,"a76e7b4b3838f355fed5e4185a818a9bb9e3bbef":284,"6e06d756b754ac37058f8b7583db438641b4119b":285,"0bca3b45630495fe8b7b73f1844f8f1daf0080bb":286,"e08f7ae5580c28790b6cab5da216f10370e8cf3d":287,"05643c76f587793d1ebd185cd8435067a78d6c21":288,"e3ca1f1a734a7ca31f139a128cfdd1bb743c9001":289,"d3038386e88d296438abb351e46e3b18f2ebbc84":290,"e7f7c4bbdaae03622dbdc90a37fddd6d95e6bda3":291,"36707481ffa24d0ea398c647fa247f45298c4a17":292,"9cf4f1319d022b658cc8ab88ba117c39e9b2034b":293,"10a777ee7e8f535823872f51e9f9049e9ac01096":294,"df3ebe5dcca41b88ae7801f816e1c97f272a0d77":295,"40db472a323b578944a7ead54137717f60dfc237":296,"116ca00f206578800c05c6f864205386bf73ddf9":297,"4a3e41c5ca0b4a7b8c7a2956789f35e4ee7fde7d":298,"2eb253764fc1de6842c4f7c9d4de03bf74bab2d1":299,"1f53cbf1974e2114a11a9dd5c4d1d9e8c4fe9379":300,"0a61fa5184b480ee6d6c74c27bdbc2e198842f60":301,"44a8a7d685f25c35da9872da7475e58e00923e28":302,"3cb4039cd1c1d6a5e06056e7688e41bc7427867f":303,"87cf0bdddf10b0d896c2120ebcccf49687eff491":304,"638993ae223651fead586e172c5486864aa4712a":305,"e784cbd12b383c349f4ed516bf7a7bfad6343468":306,"747cdba92b376db8b3fe3c6803dda99dfc3394d0":307,"406d65d3bc57f6eca7e1617833a2bd71b4806567":308,"ed7b66400e1c2d4acb9b8f7e1487e83fca16209b":309,"e608acf40addd844ad9df776a2e5b4ec7d207b5d":310,"890b1866f12c4ee55a5cf97bea17342af5f19dac":311,"277fdd1de7110a889f6fd4c2da2ddfdf2f28416f":312,"79a9d2eb34774163c5b2596418bf50196dc5df4a":313,"ce02d2f45250f01db43b3cf0e8a1e6df580dc860":314,"272cf914f0c5d5d8124d262f95359587d5248e50":315,"6e2078d659080a79eb217a174c4eb77c9d0902e6":316,"2d087f237eadd78f5545548675642f013fdfe675":317,"a7cb30b0e976e1a2444d772c0db2048304359053":318,"42ed4928cdd5d26e8808d23665bfb3164ee407f8":319,"138605e6313309911bc0dc3c5df25c32c43d6dfd":320,"38f97cae6bc93330b8ad916a3faefb8ec35352e1":321,"44166c60910121cd0f6086699e3fee101a6e0a0c":322,"f4e02f266b64f07ffda57e66936402a309bb6968":323,"25cd6f26b4fbbcaae0c09f850bee0e5df5b981ad":324,"d915b902547e72f30b0f3a7c635decd0679c6173":325,"b1a6f769830ddc49405d61b547b54d30767bc06d":326,"b0c6dd86bd563672dba6256f482dc5e145f094ae":327,"d315657ef5850541c0245142e792ca05b1c6dccc":328,"084de665de85453475e1c7ad02b9972270cf53fb":329,"835ff2bcf5d834a9cc3921323f28606add61182b":330,"b295d0b0afe25286bcabbe74f6ebd0597dd1deac":331,"7126db2f51cb61481776e943a0827dea9073fd18":332,"821c2c17d24d2b804f5ba5feb2b61d2af1dda1b6":333,"2b3df06b3141f0ae4703eacda96fda599d8d013f":334,"ee41a8a88652750a61ced0ed3be63fd2b2071096":335,"3a858a91faa5c0910769fe5072726b041923a6ab":336,"b9ddcbc86f76fb393e9343162348e976ae6d3a33":337,"f0e5e3b282f6fb24af0c2f6832a45c71e39e2fc2":338,"a5700ffd5dd6ba0ffa4beef296cb362809de4723":339,"0bf11af7e4a5c42454af697054f10c7fccf43714":340,"04a58fedd57dbf9d96b3ed3351ddef1eea1d1578":341,"d78d8b7d1c4a39bd61947eaf14cade01f486f0f9":342,"0461ccba27eaf48ac9b5ad0e2fda9061f8f0fbed":343,"582f8021d4ad1f870c5968c67df75aff633aea09":344,"6247f98df58cd686a02e8f418144542bb7e37db9":345,"88c43927a9e8db2d8aaf09257f3dd037276e6b94":346,"e262e1cb4a0f9ab0051eb981a01dc1e66c0b4125":347,"ab836859d964d03ec43de9e7d0096c4ebf6ab64c":348,"2e9c972b2ac94e4ce881a93228f089b4d2bca9df":349,"40a21f03f2eab3b1491b5ec66989a5984758e947":350,"95ca07c895045570cb2121bfdcd04fe60440ce6b":351,"06af754cea8006e0a802655250c129dc8e9cdce0":352,"b3d9ba8156396fb6fbac38bccac0b404f9146e25":353,"6ff9c6869e5e3f4522c6d6742a046cfb79893545":354,"d407af0de1c32e78ea7468d3797c458e3edbc846":355,"4a02c06b5318f5aaac2929c8c552c59eba30d0ee":356,"2149ccd59ed4717fc3ae048dee8bfdb695c65dd9":357,"e84ac8bc3b3864a844a22544c17bc259723a245d":358,"f733008ed60fd9ebcd330ae7f3b7012795b4363b":359,"d1b27019d3bf86360ea838c317f8505fac6d3a7e":360,"e7f4c2a15a8da67421e06dc1d7b2f199c4680130":361,"ffa4cda65ca38e57cae9c35b3c0db6f97b063870":362,"f5634b56b583e149f79aad46312aed5552a8e3af":363,"9d14f87da379f4cbffdd1ead0b0cee7cbbca3c6b":364,"816e9fa3b995830c8d4d64a38ca381b30e2b2828":365,"a3b2c4ec810d7fa52490ea78bac979035659b2df":366,"8581adaee602aa31f7480f26a008914c56174fde":367,"417dee4d1b0f967e3cac360a0b012decbc9f6908":368,"36cff05fea5f63af76ce5f85721b41f64088bb45":369,"6fbb9eb495a08723d97a3fd73c3c1256fb9b1bd2":370,"afd1554963d2bcb5de8adaf3a5bda10a8223bb07":371,"8e364522463bc76268c814a5a72098550574443e":372,"e5a509049ebd519c5e519d677e7b3d65bce05bdf":373,"dff140dd25eeec96132e4b303c9962d04190869e":374,"78387ca75dc95e39118805fa72e52aea12a37a66":375,"91475f958a044bf756314e43a4601b4f09abfe4b":376,"8678fc629d38800401ae1c510d6439b666a5131f":377,"1e0567fb6013ddd90395aa97051f0ec6fe6f33b1":378,"e53e9c108f51d7d6d88caf97e16e6cbb1ee6355a":379,"7efcab88db75376811e5b140c4302feb3c06922a":380,"571eca5ced91f43dacb16c731cce555cabab478a":381,"af1d043c21512eab93ea973148972ce87149fdad":382,"1ea76c1397c830a540c996f17c8c474f4e4c881d":383,"f19ee5e09391824a2143c3e4c28b766758665b12":384,"98d7bbb43528752b80e030b78ad84fcac7f30bfe":385,"5578195db3c1f66afcca53ec7c66845f7572f7ba":386,"52a491070ab286dfd36891796b7c24ab1de50017":387,"3c4c6011ed2778f9bdc54b5151c2dd3f8bd2e8e2":388,"8e945ced4d120b82db508e9a5ae89df4d6b79254":389,"22f326b8af3baafa5968003d61403175bc10d6dd":390,"eb41cd5837f133bccae6aa1ae3f9c22ad8a319fe":391,"390456678a8261827cd9a1b5f0c4dc8e4328af07":392,"0f56f71b10b1ef6aea0d91dee1163c2b9491499c":393,"7df6678c32255ec5a1b1470f1e5a7e56b3b192fa":394,"f888f48e4c65e3ccfd9fd831c71c1832b957c945":395,"639e856310875bdfc77a02c2b38503f73a9f199e":396,"09249d123ed681114234ab8c713146893c33b4c3":397,"caf6582a42488d03e1a2dfb56ce8581b5945e1d0":398,"e4dcbab5e18702229c5d29cc6f4faba85ae035e1":399,"530fd795a9ebae01f0dd182d98431c957a4f315d":400,"63811e8680ca4657f1952a1eebe790b829913006":401,"84d5b027a71b10b385b82d6aac46217f8ec1b413":402,"19e693a35736422155db09562bb6105b10bf8285":403,"905aafab8b56e005caf26ecd9689395a7b87c007":404,"0f9e9e2010c7fcb0efbec1b7760d76811565b9aa":405,"2690d46507027ffa5ae55efb4f5669b99cf14b6e":406,"f5fa0694688c9f5a95f1bbb1359a0d6c88d6d121":407,"32328edd548c9183a70ebf46decc2e25afc2f590":408,"50296372eac9984ca2172bd180bfa83ecaa9f1bd":409,"d0aebc06e020afd44e35fe3b398ddb6fb7711759":410,"e8c5de213737baaa35deac9b6bc44e1f7e6ace23":411,"60dfa4de6b43a1824fd7dc32017a317cf63af728":412,"227e90188b9d26a366f048c72fbc65ff08375a21":413,"5f82dbbe534635a8b1e93f27e8fd7e68c0eaf291":414,"0b95f282f726490f89a38d7bea00b5598d33acfb":415,"87e0d0a4d3c5678f39f7e411288c441f8f238627":416,"ca05c5a2e53b3c3b4e3cba410cac5c99c134bb5f":417,"cda92a6150f6a97bfb6e5ee3eee364b198d44ca5":418,"22a32f11f7a39e4a73105608a51ebab0ad97960f":419,"7261bf01d7a244afee69eb342dcced303dd73072":420,"3e12e60a27cd166e024bce2793d330f63713ab2e":421,"87132919a42f0ddedee557145ee3d8336a8320c7":422,"55cbb2ce3be503d9096688b72d5af0e40a9e598b":423,"ad4eab00e7ec96730eb2c1b6ddcef14ba2e4becd":424,"47db786ca620b4adbe5137af937dbfc1726f506f":425,"fc49e77f26263401b6354f1b8dcc502cc69f32fa":426,"57afcaf4f50b4bdb1f483fd50c2555bdaab88d23":427,"499f169be3e99fc597e11836f0203d1ff7a6717b":428,"a7980d43e030ba4bdb36813d4bc99f85982bf4ee":429,"6328961158c151e548a6ef74c5558d2fc5bbc4c5":430,"22f124cec03d518f50f6885fc35aadcd7a9b0ed1":431,"51fe55719c128ec07285afb233cab4b7db172b06":432,"bc1eb7b478140d113ac0a695e5ab968ea5c19e9c":433,"7d5e5f6c62c3f38acee12dc4114c022441e7d36f":434,"93f85699e22df958618206dbf94a790cf0bad8c4":435,"3b2552de14991d49be0c0482040b93ca47383e42":436,"0b5ec843cc9b883cfe9b295fdb812f3393f5453f":437,"d057c823136361fb787ed57c1d7189a62c1eb109":438,"10c137a2d82ca5df40c5fd6843875be95eae76fb":439,"0115a7e0f7544bc73831e2a63b4b7edd329bd087":440,"0aacfb2a6ecbeda1d1d97ca113afd8253a1b9670":441,"1527c4878a08e9cf1f83eace6a934a36b48b66d2":442,"6124a534b2de3f640a67fb36ee6ae2fdc4535542":443,"7f52e4f92d3d3ded9a1701ee2f93966075ae5004":444,"bbc72ef6c7d6d8e2c4dd074d7713e5c841003163":445,"d435eaa5e452ba39c7f8ccce6575ae199839b68a":446,"521ae93bf652b0cc1fec1fdd788e3b80fb72a349":447,"ceb8e42b872cb9bbd5383889297a294b3abcf8ea":448,"6165fef8cc9dde52973e54c915e6905221b3f8fb":449,"153f2cea8b4eee28e19741af2c21636a773feb2f":450,"3ada6f27404b4ffd6d3e97cf15be76672f60c10d":451,"5e0b94c4dc7988e4414d9a4c7722a4a9bed0eb48":452,"dcdaf42fa8e66e442d0eb974dcf5f2dd000d72d4":453,"d5457f5fb7ea05ca05a697599ffa50d35c1ae3c7":454,"baf2b088dd9f585aa597459f30d71431171666e2":455,"e28dadc2070b202aab77b9e50a46e50be02f8f1c":456,"d9cf7c203b712f10e5b6c7478295587708d47518":457,"c83c9590baf677665b0872ca68cba2c1cf3524c1":458,"9eba2d85f420933c9c97caebf357b257b00dc93f":459,"16d9298a9c1f06ed8192c31baaef9c9cb1a4484c":460,"84e0835ce79dd1e5383b4fd18f2d18ea666f72bb":461,"578f6be77fc5d8af975005c2baf918e7225abb62":462,"3094d59889a19e61eb993e206f3db7b5918ce0a4":463,"bc123a1fccd663144209937659946e4f64dd2f07":464,"aee471b2ff5b1a9e622426454885b748d226535b":465,"3ba9e86665e80014cc8377843f16413a4b326e7d":466,"c613eb97792c5b264a1d03626cacfef3a505b421":467,"1dd8624b524d14076160c1743f7da0b20fbe68e0":468,"0390795feea75d550ff8b0ef22e4200ef4cf8bae":469,"3a2836e01bc61fc5fa944f05ab0e36e66543c7cf":470,"db34c5a140ac04bd0e2a9d802c135b76eeda72ce":471,"cde7a77e3a253dc96424a7ef8d7118022cd26dfd":472,"99b72a674570547b9d4d2eefe173563386ad4351":473,"8b33c87239c35f665c39ad1c4030e06069e4e277":474,"39645430e219bce7f27cecdf0da2843ebc5bcc01":475,"f656eab5928876809ef46e18de0c9d35d489e17a":476,"6e9f33f99cd6e1cfc048360feb0405dc931309eb":477,"8ae4dc4088826210a52bd678b1921b4e68be2c4b":478,"4df69aca81f6d84af86e5883cf80b8ccb8b465f8":479,"e677c91f189878d441002a07880cbb2a33cd5624":480,"4bf051d536a172e7932845d82f918ad7280c7873":481,"72249208e745e01999669522f0e75bfe192e671e":482,"a8f6c0610883ffd6ac3f2e06206e9b23335a2f48":483,"058299a8817e60abf9ee37c769b00cda37d5bdfd":484,"ed64b9822219f26660592ee5048418c1d4ade2a9":485,"17ed49b5605ed9b9fcf7fbef8a59ca9594dfef01":486,"9d72d08a8c74d48eed53f742aebd56a5076cb8dd":487,"9a1b4763765e8061db6d56c9d374c37fe8627f15":488,"03a940ebee4a18b6a595440a9c3793f1be3574d9":489,"f588c889a40d8e67c93089bd0c816b0955747faa":490,"9750bda3dfd985a5f2732f163daf3c24ceea1547":491,"546939fe77cdeee1f870b7393a82d88525a67963":492,"a48fcd6d3bdeaf7f6541b7de5c9609841ecd4dd2":493,"7a62cceb72cd9d9b95cf2517accb29c665a60330":494,"9f5b10b19e8885010a72b6690275fe0211d8d3b7":495,"b0d990f93239529e56c024045b7b38c10b23160a":496,"e50161e549579d6b4ea6a525c0b274b06d8d1ad2":497,"a18a674bb8423d0eec98e3d3933f648a7029d79d":498,"9ec952d76584beb3b95d1c54107b971c0ff55677":499,"2970147b913c84df0c2dcafc99f7210a6c3bbe14":500,"8bd612d13f4fcbfebdfab38c63b92c0c0557b4ae":501,"ed225df70cc62b03942850ddd5493c365aff3157":502,"6c5d7c2a807b02d8d804772fceb8e5605da98545":503,"eec25f2199e726d7915b15e29ad7718ae5e09711":504,"b38bf5b0b1f149f7af3fd90a2ce12344e7191d03":505,"2678e60b7ac143948c640fdd968443fe70a2abe2":506,"518b3633de23b4ab1d13a6cded045bc2522ac10c":507,"c5cf7db1f2180472bd8df6cf0b55a12389e20096":508,"bdf74a170007754bce916c19b6666ab1975b8014":509,"b1c36b23051f48d7b4bd4b837e7b1fa40d7023b2":510,"f033e2a1548a73cf98fea2a556aa864e714f011d":511,"4c9d7ff91672586fb6f7659ad53f71159ab5b86b":512,"ffd9e82dd5dd314bad48ab602517bd378b6d2184":513,"fbcaf729f21cd0cbd8f62e8cf38b20b29cbafc0b":514,"8e5026b5a54fd9c89d484188885575cf8f669a4f":515,"f10edd090069dbff1a9f7ee939aa3d79795f349c":516,"c781da6c8b360ed3afdae1e50e5cc689f4ee8a50":517,"412203f203730678155246202c8f9f7d50325122":518,"2ff3bbbc70d61bcace3f3b15e082d065ac1f45c2":519,"a09c076f0022f31c19c33bb80dfc4f58f2097ecb":520,"81e7e2f437d20f2ecbcd7ca70c012f90e2259adb":521,"53cb6654ea39316ef2bb67176e5bf0ee104c0884":522,"9515942d2c31c8f1e879ed8b33a9fc22e7c56d12":523,"fd4813bb9d880d2fc2ef4f22f86bab36e3b02e04":524,"61972b112d4a764f95d1c56197ca2c25174c7342":525,"810eaab3c5a99194a22f393d0e02c4db6db1a3c0":526,"852294fc4abb31c89f55858c1f808393539abc40":527,"70fbfb0cc422fcf1a7e499ac1448780ad8654016":528,"ee3f5ba10b47e21775634f9b5fcd47e06453c793":529,"32dfefac49da56ef9fea27d690d10b500d2406bf":530,"4e57789f26f3de83fb961ad1e9a52c3151bcc8df":531,"5488d2dbd888a78067406c75123d6f2c4af8c223":532,"2d0cad7c3ae1f7b1ca0bb4bc8be17d0072174c49":533,"2e37bfc5b9f8bd6f1633ad1461e7eafc3c833a39":534,"a36f40cb3fedbece3d5659f1233b683d38e09aad":535,"c3927608432d9399e340c2b0047a57733e3ce88f":536,"d855a6aa03158734ea1b67bfa258e3dd899f209d":537,"4eb150599719c7a0e756287003fb548530c47709":538,"5c8492903b42579ccb34e30ac9f9749e7dff2cd2":539,"75d4b18a77c3aa508aa3b9a77ac3f81fc4e0a0cd":540,"260ec995992fee58b61490debc438e23832027a2":541,"84be14c24590e066e6c12d855636d45d95488f3f":542,"c1c38e1973634f6ebcde96cfdde1606076a994a6":543,"af92046ad3c9b07e3b0445b9be3d12d14e0bfbf7":544,"367da305431fbe391618fa888f0e4634c51e0581":545,"83d7c4d34be4d7d835a61a543d3d3c5e0318e605":546,"76b53b66b0a441494748b82250b7d3ea3f1ef6fe":547,"93292424eca878792f15775cdf65c4518b7c174c":548,"4aa185bcb199dd9ad864ca347c02689f4c6a5600":549,"b8e51d9307bafa49bc1931cd2cb5b351e0405db1":550,"470b6146087fe7ed1847322c566b13891679d8db":551,"cb082a6026124c8761dd278b8f39bcd0d516d88d":552,"0c1a75ee23d2ae9261e3fab412f7efd7de8b72bf":553,"ca1e6573e42724040cc68a6f92724f0ebe9973fa":554,"9a11ada5fc3c3cfa13ae50b88ff2953cf99ac1b2":555,"335350232294006bf1f07e3553ef0f9df63374c8":556,"10fdca843da971014cb0a2300460ec8b22b05432":557,"3a50eae04822118cd501f8e3d6a5216078834166":558,"b7bbe0af0fa8f1a338b2231f3bbe6d917504dfde":559,"f70c2d62fa282201f223d98163c980427ca68083":560,"787568a9d2e89ee82ab718327211da16b09b0a00":561,"f67131e50029ad3b84b7a8d9097457b9068fcb46":562,"fff219bff776d9fca320a41377900bf539657beb":563,"df8b8117a9096e04b235a814a6de026a311f6723":564,"9c546d8fe09b3f983d0be4feca006f9e6c8c039e":565,"5bf47728786ab7483c0f3b63095e1f0e64ebd1cf":566,"c64b52a8929108cbeb98369f54e6f8513a00fc68":567,"37cdcdf421c0de20ad6615f6900a5af229378d86":568,"abad484607db298245da0eafbc286910feaa1a5d":569,"4570ce146c67bc98ac084572ae0b65d006f90305":570,"961c21b1ca0ebebf2f02564b6a1a440ef00b9bd8":571,"4cab8099cdd1b5e4451bb5aa8fcfbfd5a32f48e3":572,"7b582b615ee8758073b3c5bc86031836fbb8183e":573,"de4c0042cbe6772ac034d1bef4c4c3b925afeec2":574,"679945ff12ab9547ef2120a6a12c7f4bc79e6741":575,"920a53b6b6aa703951674dd8d06e037ceb4f9445":576,"7ae30cb7b61622b7bb17cfc0b8ba64d02ff6dd89":577,"05b6268126c1435d1c964ef81799728088b72c76":578,"ba33e9dcd78258b1f820ac25d735082cb6005328":579,"9dbab9bbdb979af4366b2ace6fc2e31cbf7f8324":580,"fa3e37e511ee242e8fa0ca09f5425dea4d7cecff":581,"5241205835e0e0e9e740aa13957c986908268473":582,"2db93c0233790b2cfb9e80fa1fa89dee18c7109f":583,"bb9f0c2b2fe920a717794f3279758846f59f7840":584,"e2e42338a20335128e6e2bf30d25ea32717a9b86":585,"0d6debcc5f08fe3c41d07686f82c9de05310519f":586,"e7cb911a93f372a6dbbeacab8f0a615c0c58a9c4":587,"155d2bc4aea7879ba5e3aa34b3b38abe2457de51":588,"844fe8f7d965fcb305bd1b71fe6b34628fc4d1fd":589,"7a3c7b155a362636a063bc718c525f563736c618":590,"19de495c3fd6bd50f9eccc8abe535e5d38980aff":591,"d1253ae95b099d8ede3aacbdc5e5834ebd5d8865":592,"e71d328fb396cab9ef0b7bc14fdabd442c73bccf":593,"98b1ef80c722b1a9e6584a0b49b63eda188cbc41":594,"5cf02f0f207c05cebce74b1a8f2d0fe2accc7df6":595,"42f2e1fcc0cc5af5c31f649111f18e9e12eccd7f":596,"92ffc9106eb51765c1d32ba792a592d43df96d0c":597,"5b5b72fdd9971274c1fa6de23d2834219be2d32e":598,"de05e68e3e45de40f1c399227ecfac23fe74795e":599,"e63ca1581a72259aa3adeb2f1e42dab5617871d1":600,"6574a7133d175f5ffec389f236742c248ca231a0":601,"f510c66b96441c518c8734e69d739bfe798cde56":602,"94dd3e992ef52dc72001b1c46bdb50431a89dffa":603,"87ec89deeba0eb2981d227f1dd09e62b84a6c848":604,"f08cbfdc4051266e4200b6e26775d35307b1259b":605,"fe201c34db38d3583231701ebbcad62c303e6d17":606,"e51ad7e339d07ce343b5a39a4ab41c2d44bf5ab8":607,"ba688c6ec9c0fb4439f7381cb8046ea14b159d0e":608,"226fa8da81562e55c8430c96100e594713c68bb5":609,"04210bb8bf85537a96f183fa16ac16bcaea64482":610,"c3112fc2ff8351b668394fb44c13c136b28b143d":611,"d5f7622136d4fd13d6c85910da932b04daf5401a":612,"c9e883e803822f098056bfae0fd9a9bbcfbb16a8":613,"2ccd4dc564b93a46246e73604c4a6ef0ddb89f99":614,"543e5633af40bf003b301d542f0774fb7c964765":615,"5ce10a0b5e213d432f0306751ea3487a13d602a6":616,"9a49b2298f65f6b18c5245f3681aca04e5fe4e46":617,"4fb053d847e1f693e0fb87b65a4bcf04dcfba0b3":618,"5720d2056c80daba09e0977fce3f111d72ea9fed":619,"954b3a778762a6d5e4de99c6ecc42f9690f1c010":620,"aabe6406c472f427aac903cee69dc3c45815c45f":621,"a5490e39e5152de4e37efd9127bd6139866e6bae":622,"b6ebafa2d520a874ba8952efb9119c5fa3a8a4e9":623,"aa42907747a606cf64e32b971aa502c9b98a1fe9":624,"b63d4841a1d8d12b3141806d3ca7bd6d8de82596":625,"e5c6a3bd750f1db5d42fff6b5997719c11177cf6":626,"d6c586f756ffe25884d55d4f6f76b0318871662d":627,"4d5e6fb3018ef61e87b3441739afbcec0f166f75":628,"10b847c76589c6fd3d80c2cded20fb218b9e55e3":629,"c1c4f292192edad83234044e74c6ce0f9b52fd8a":630,"cf84dd04a3503325e8b8519e4904645866bb9c23":631,"c6368d294a293d16fb19fe19e4c3edd4a41e6db2":632,"977b77a332c77a57f75f2b7aa086d5562d398434":633,"4569ffae0bc2924f9f6a4a80fb168bd539a60bbd":634,"3499b8567ac2e8e6ac46c717df495e5ed91b3fc6":635,"4f1bf7d10bbb1e39e83f6dac3c8113d04cf6ddec":636,"cc65d55212f9beedecc437a8c62ecba3bdc57b09":637,"add718276e045f5154050639ab96374d46ab71f6":638,"086eecbd96b63f8d8604d5d373d2850c2edc840d":639,"66bafce629750e0a0649c5079a5359d9493d8b6c":640,"fe947abf4d753413653aae24529b508442cd0a9d":641,"abacd4c11518d10459da7848be4eef8dd030c69e":642,"32e2584405e8071958fa83e8db3c84ac84d89b31":643,"023e2376863f279d6b000fdc8e1e500268c73246":644,"b4207358689ccaba6895cd88ab65d4c5ddd442e2":645,"075d24d497ac07d6ba0d6dec2771d2b442afe40e":646,"0da7ca8781c6c7ec852bef845b72ca7f212cdc23":647,"78786a2f668b18aea4d04425dad5521993aa9872":648,"3bbadd008bf77e4845be8052fdaabd1a1a2eee8e":649,"866621dd16feca4554d1a3cb1f12b8917a8dcce8":650,"99268b15c21ac76f561cb4ec6336708ad91de759":651,"162c5b0ff973c7af1123338e78beb62d9f747dd8":652,"6ec6ed9cbe3cab6651979f3e4bab105e0b660483":653,"f83b1b3beb4baf219461ef111a924fb8d125aade":654,"501739245ccb53985002d33ae355f01b139afdcd":655,"276b13cb001d13b2b8d90e697b2777810b2c0a96":656,"91c8be959941b7fc6156954844c0518d67361c02":657,"5c23e6b5f2c43fa06348ac6b770846f2181912ed":658,"6c0825aaa73ca3163f089ca161c1f6e15633f306":659,"63dc55568b6cf7da700d0e68c3d63030141209e0":660,"7bd40681016b634c7a917e394f31232b382cf1a8":661,"bfe3d6bce734e596e312465e207bcfd55a59fe34":662,"2f9a967369a000604eae9e7c888ab391f3d51873":663,"6b0a9535e6983a626420d864b45582167cd61540":664,"b1c1a81faf9c153163d620b6e9d8198997bcf5b1":665,"b0fadf7f70e36bee6981444430d934b69ef1b38e":666,"6f1de28834a44a81d0bf2bf62eabac70a53c06f5":667,"10b5e80637bc026415dfe8718078f5912fa1b0b2":668,"6f7eeec89d94e6a1caef53ce80a2e60896eb462e":669,"bba5f1f43d59cf06e6043eb94d689021cc94a4e2":670,"c4f502ed4d53320e5405502817b501213f331227":671,"777fa98cc47ac32f0fde3d9aafd830949deb5d23":672,"edd7434b3dba10ca3b704199f1c1a708001771b5":673,"d0ae6031e76a56dc940695e7bd0890f5943b8104":674,"11e50bc31ba1020036633ed87acb24278a3bf2ab":675,"f3b29768bd113a405b2fd4bd4502ba5d85e04e27":676,"ec5807099f40964190d10e9498a69f194d192129":677,"143241483b532d5067b664c94bd2fcc6f941e5ac":678,"ce38a0679ba29fcbb6a638e6dc1f26f174b20ba4":679,"b77c63c0a65376d1598ca7b1978d4193ffdef710":680,"54b141ef9a1b836c760fa813f6694fe17699f733":681,"69951fa707443893d5a129128eea8198c1817160":682,"05af36810076ace617805a2343bc5e6bcd2006d0":683,"a29b44e570030dbb0475f281b0b448ea002db384":684,"96618d094c6ce1f081559093ef9f40469c69f774":685,"74ede0710396b4aa4a53f4e4ce71cdf944a968ad":686,"6b3e8e693eaaa1cdc0ea6c2d705caef2c6829e4c":687,"3f315b0088035a21b9a523d15c9cda0cf79f1124":688,"018e370041baec872bd84de13cf100e2caabf1ba":689,"9d413c635de2d9ed042371cb5012d0335ae5749b":690,"d4d0cf326238be6b029131aea70be5fe56615e87":691,"0ab923b8c08af5c094090ca6b61177b93a2bb045":692,"61216077be6d64304b28a3307314e66a9d6d6fb9":693,"d77e12bcb9f4bf1fe35a051d30416ef428c6e08c":694,"9c5eed71c75112beaae65f7dcd179068752acc64":695,"acbb989b3e0b879ba021c1c618317bc814da9126":696,"8d08318e1a852efc17f3c6a0ee6935f596734aaa":697,"b097a8e5de7aa918c079d7defb7fa6a613b3e300":698,"9423ede124f86a9a0e6f54d882c5e7f36c52185a":699,"1ed469833165cd1a6801e56a2d1ec956a5af4b21":700,"65238018ca4be983c804bf74115f415e0184b354":701,"d5b444bc5a842fbbb1cccfaf0733dba9a551f7bd":702,"cca9dd1012f132be9ae49c4b71e495994dd19e2f":703,"61e117d7948223771087b6c1c682b875103e2ac6":704,"700b1b97e9ab1c3ae7b0a99ef4003de32e2d1590":705,"e5ffd0ce90b6c3b16a0a8f86769b8e133ce97f33":706,"ff89c6bc6fc3204bf9bb921e4d511d81feb76551":707,"1161fe868d8a80e1a4b11dff25086c361ce707e2":708,"4e11ad92f3e1a2ea4f401ebd52e7d37f49cabdfa":709,"9f0f2cb7f08d0aecf22c684779b8ecd696bf9675":710,"50790c0b0dca8c05b81caf7e5737d61381859ec2":711,"8738ab8027849225b29bd59ea7e7646b8f851aa7":712,"117520e2191891613a069f1970d9b48fdc34d283":713,"4b1447e4bb0e306c40214026342858664a13b551":714,"31d8ff7ac5f4a91099f2f06f01e43e9e7aa79bc4":715,"f0057afc2fb629e9625bb43df9fcdff06cbf6bf9":716,"8c8af291e19d3e0b1da809ce9004667a8cba26e7":717,"94723c19719961a15b1f5546ec02fd3e916e1c0d":718,"e395d16984537c0767dc8152c7f273dbf2a555f5":719,"535c5053e4ad36475dbeafc1d0d8a87447a77ab0":720,"9e52d5c5d7178ae522c71562b01af79a89f88fad":721,"ea56bf5513d0cbd2a35a9035c5c2996272b8b728":722,"e8ba5699c648fb5d9878b582342482360f74f80b":723,"8be98077e06c1aaa4c87e345fc98f881a551186d":724,"b5c917ee80cbf33b18a96bfcf67a4c598ea85722":725,"67a2d9761af383e99f84894730418984889add77":726,"4411585c75ec5dba6c610d3fb65e2aeb633045b8":727,"3d53c701ee9bfad3db65dbe4cf139775ca55531e":728,"1920e6c92f9212d83fdc0cc29a311413b178983d":729,"1dc3ac969366fecc2fe81449e5db0373baf7c438":730,"a8d059d9adc74eb66526e1a4a3102e2d4e73aa17":731,"d92bc122430f322ac445268e66e4b282b066b465":732,"d968ae0acc88d795a982f0c971885ed55c3f09a2":733,"67b6af7ca58eeac4c9df8c30227000d14a2d3d1c":734,"a184598fb40aa0254cb88f2aebc07d90eb474f72":735,"9e3f60700ab362f8e63d35a3aaf6dbdcdf8debd7":736,"ee8602d33430da7a921dff0bc0bbf1c9b8a7d9de":737,"8024204828361d4bc9d5be9f63f368dcc943fa9a":738,"27e9b54558f1944a7edc7895c81bce0c59ee3422":739,"26ca6abd2eec76b79871ffad9365b884ec3adca6":740,"1a4b5990543088e9771cdfacab7a1ccc22072861":741,"8b7113bf3c61dc1df33cb74452b5a40acb25c07a":742,"1e7e3e9b8a4b065240295efb2e6a9463a5e9edef":743,"1069eb3ca7fe8f978411b03fa14a8490b0af0a81":744,"b05c5896a1e1ed6d47bd79bfe0d2a30c17367687":745,"95aba36b52eecdec56752956a7960b916f986a39":746,"ab723525b2a11644ce43fd846a58314948dbfb4a":747,"e08436ce07c11eb1a43b2eb5065da1f6a1f89c6b":748,"bf8ef94cfe6c3e00981d2355f594e3fdb00df0da":749,"285e4d69de9da09b1f940a60447a51786180c0d3":750,"bdb828c9c6cae705e30f2883fb787123022153d5":751,"83786cb49d1e74470b0d910da19ccd13bb6b2047":752,"a68ee60ac3ff3ee58b7ee0f492eaa47af4b40243":753,"9645810552d5181c783cf14a2cce20ae5914f4d7":754,"963ff849dfc3c390b8dc6abfb117ea8e80d870c9":755,"e359c49b9d4b9ac37fc6dc49cdf91e0c2f9a2bb6":756,"f05bae1e0df48aa6a32d958fb4339a85fefb5179":757,"55be65da1597926416e5546d95ac723419e4c8ef":758,"def681de0025b513f4c7f77e355abc67f756fbcb":759,"4693fdf9b785a855f36eb962820eb614b7859950":760,"0b4e0f8558e109a7dfac673a67db6ed42573e720":761,"6f8381958cb7808a2ba12e72617e8249a86117d2":762,"db5afff86e7a4943d0a8cc725a8f02de3f8ef4ec":763,"ebe753234a3c868a58429f1d096397b229a96388":764,"be346c6a5c3cae2754bf3c4f84fc346aac80dc08":765,"739bee71faeae2b7a6472aae96d32ac52a860045":766,"557c745eb0f7e72c43a6424f4b29811781a64ae8":767,"1b5f3be087e0b984db55ca5390382bed4b85acf2":768,"3677468397fa7f9fad9bbd71e9fb3120bdf67620":769,"340868769c3161fde6e21938acab8111c3d89415":770,"fe78dd71a7bcd9d43b7fd45f8f158e2f28ad986b":771,"618bb202383363a5560850adbfdadc7a5843646d":772,"28a9dc2b81faec353c8cbcfcba699e61910cf51c":773,"7d0f593e8ff16368dba6b25bdaae7a35b594a5de":774,"fd4cc2b254463886e529e8701e8e985568b5dfd7":775,"c7848612d87d5f8a32d074b54930abb9babd7058":776,"ee21e39044190b24befa06cf5651ae0c4ae84380":777,"6f60c36248c92ef6a0c72e218da4ca1c8e289b51":778,"337611a443a9b92d6d12da281be9058670b1195c":779,"55c48820f8697f90895e0ef9d085425a2ff42c06":780,"60624b569283e534ef9936744dfb02021e3ced7d":781,"abf47eee04ccd4634cf46e75d0a00ff816d56b7e":782,"d16cda8fc3476cc534a756873cc8aa2692a57054":783,"75790c9823481d21d1f2a45cf3e28ef7c041973b":784,"fe3d51e1b2823e183e45eb7baf7f2fffe42e725d":785,"aaf4714310eebe5d161a30192c6c8e62f21363d0":786,"e9730043cf00e78a0229b584b60d785cdb2a524d":787,"e36eb3e9477f0548f10d96f1dcfc266b87683afe":788,"fe7b3f9dbbcd6b9df687b06fdc710ab95009910d":789,"bb5b15c1fd9a3029ac25de08da74150d4a6f004a":790,"5c1fc7bdc3abdc8c736ce46269694eb3cde801e8":791,"0292896dbf869e39bd0e4903b53f71b336b55b93":792,"b1f6461029a04ada29ac9aae85d0a7c642de90bc":793,"0af80a3796f795bb52daec6e434ac5657c095683":794,"64c88d86982e4a8203656267ce7cb3ee3431a6c8":795,"e66cee7e9e9630bd8ee28943a3ca0da20fed647d":796,"8c1de9ce37472b0481dffd166740ee5c0f52f68b":797,"489e7deb7ea28c5bf6093b682827a0f3c8ae01e8":798,"debbfe4ebd28a7508661d7768b7b242af45d7afe":799,"f93fe955aca2042e24815961c6a60d9230081532":800,"35558d385b0231000ec676f8529a8889f7048a3e":801,"fb698cec37c6f082917436fa14bb800f17753ccc":802,"6d21451b86a9bff5fd94e9af38ae65c5278f8422":803,"04a6f872f26f100764d8e4abba3182f0e7f73a1c":804,"2ac8bb719992296a70463f549aef55d037cbe436":805,"fb0df2c8978ab4acbd0b8eae92a14eb5670d16e4":806,"5ab7510e93350fe119e0ddcaa3129602c612adc8":807,"9d4a2ae1179737f8ad5d71567a388fabb1028fd0":808,"f391faf1d10d10bfb79e535525bec8a2977ba93c":809,"5611f70b3d74fc28d6b6994a2bcabf7728b4bb75":810,"df8e61777295ad5568eff27722a99fab765eabbd":811,"743ce7726dbfb775e8c7e0f78b10e03c23382f30":812,"8f97640136d732ca0f0dc67ed84aec1551d694a3":813,"dd7190a97952ff61b140430468aa1689254c90ac":814,"b33af60dd9e7e5b2557b9fbf3fdb80209f6db844":815,"749f0727a263b2e32de864aa49bf84fe78a5a2ce":816,"ef332f7a6911c80ef18f31f81d642eee241a405e":817,"31cd5d83d34ece8d1917082236b76bfeb09f038b":818,"edd383fbcd3511cfc4c6abc20e90df7e986180f2":819,"8e11cc395afeca1cd3f0c5038f00e734779f4a23":820,"92147e3aca982c714e9b6a26e108889b8cd66073":821,"00e389d238846a67cbf01fb3a3ccf63212526bad":822,"ff5a3e3d86118577de526c6b8d92afe7c0966bbe":823,"9ae5a9a1d6920da424647dd876b79a28c2cf63df":824,"632239011db501e76475d82ff6492f37fa8c1edc":825,"6f7ebd03857bed07b8594a15e9b606e801f08ac4":826,"b9342b7b5ff2e5588eceb503dd52bb1e3fbfb21c":827,"1c1aa818aff76bfa8e0bc7cbb1afaccf1738f55f":828,"af927dac4953a1d50c28fdd9cd5eb9e7ab1f2ace":829,"e77e65f159b6d3218e3c43b51991a3714c3ebc06":830,"e423f0040333dd3ab410b3c6cab5b71a4f75fa6a":831,"cbf72529dabfd6fffdb6aa0f10bebd6cbf94dd5a":832,"8f4845117b6e212ee5504b2ba4513a959a4fd27a":833,"d64f582ae40fc93f32021d7db25a5ac4b09aa0b5":834,"d365f62ec1c2681a05a358fa996533f79a673286":835,"99a927c6926490e436b34051b565306d890e7e30":836,"a03ed626797be8e9424bef58a7dde4415eb9181f":837,"245a5b38e7ed136e3e88ffc13a390ff46e63376e":838,"cfe281f3dba735f14bc114ea3fd0e7cca2aa60db":839,"deb3231a23b231e423bc1a99cb26e7fad1ab8313":840,"2021d4ef2c0f0088347806a9cdbdeb79d55bc96c":841,"5554781f7453ce6f2017eda9b87a97b163ee0ad4":842,"68449685e96d2774c42bed5988a2a002930c9fa2":843,"e0d7f816990ada28ebe1281ca9431236ef8c6e4f":844,"89ed6b764afb0878ab0fb0a2f96e90e12220b490":845,"2f4c928c65f2fa095be1991a58f78d10d55fca10":846,"7ebcb5a1531fa64815ed41bc7632585307c842f2":847,"9d7c1947f52dcfa6c678f63022c19027bf5536ac":848,"8f4063c6ea5597e03a95f42631c33c1618c7cf38":849,"da8feb091111bb4c8fab9e6c5903e5f86594839c":850,"b7134d3af6c12393d317fe2b4fca7a03ec6184f9":851,"e0a109c05821fa36ec20e1f25895c23baa8d64c3":852,"4349e32d4cd7e9af391987d11b4b555109c14cf1":853,"8e01d664dcbd755689487d9c13450e37d42d193e":854,"c76f377a990343b18953123c2726337b38c59812":855,"30eb6e7ed9f02481bba5f28e2c3e87f51f6b5194":856,"b08412723b360cca9322803d965df36c9e4a6ea3":857,"381a7f9e76d5fd6ee78a45acf146ae5d29117792":858,"5f652b84c0f6049f8c9c4c8630e1f37b1a2b263c":859,"fa6ec3cb0836fe0ff8fd692ae2c94cf5de56ea32":860,"1ebf5f7281fc91cb4ad2d949e1e677c6eab24894":861,"0d988491b6ba697d00b3a9f70d4d14f759cf8dba":862,"8b3cd48db859788520ea3cfd273252bc9e3b0020":863,"1ab717db8495b4ad40d2754dd0ba2b339c9c80a4":864,"1b51dca30d697a448f70fdf3e11c8491b122f4ee":865,"97562879b1edaf62c085c2ef8ca0d1d2bb8812a1":866,"f7f24659c38d009803e1f9f6ce57dd88d13029dc":867,"b0077b3b50e551a10d8ef4fabfe18f9005494b5a":868,"8bedd291665aa2f385bc3f2299b3a072b39e779c":869,"fe98ad93e98264ca6a2ad3d95e2f531134289ef2":870,"3cda21de77d098a612eadf44d504b188a599c5f0":871,"0188634ee523aef39ba71732b1ab9d422f449825":872,"d6a60a0ee1921213320ecb4555e5d463406a4ab7":873,"efa249a898c49d512349f439d396175eb24b3c6b":874,"c8785d1572b8b7d7dc4df3578e249312a30be4b9":875,"f4b860d9b81956fb9d6815932522f4043fef56fa":876,"d82c9afb8c79255efd8ef65257b14bcf9c64a9c2":877,"de7ab39a018ea107b2bf3d1b111ec4d1f907ff06":878,"d5f08e4e4fa5beedda1e22c2e16d8da99540574e":879,"6b09d21c8c13051d62ad146099da868fc0c41898":880,"f0bb5d2fcf52cdc4147b0f17ab19f3d10d585f14":881,"803fdb8f2026967d7eacb4fa0c562c4e48ab0eed":882,"5b0510db7c9f6f9f43f322d32fe33a19e3935f89":883,"91f0cd00820a6e8d4567c1ce3a51d48a28165ab5":884,"392316ddd11104ad759131732dfe0805f3972ab2":885,"2f79d68664ba113b69f62c29ce85fd29dcf87df3":886,"1744803073948ab7e4ec00e34c62dee779fe7564":887,"980e0d32d020fdf02a6b1aca64038b13f39046e8":888,"3f8b03164775bc1c966a06d0ecdf3e8afdedb9d8":889,"cce33f37528253b47e0e0de34073b096c8d62ac1":890,"7b6a7379b612c1c2bd553682c2c1c5d825eecc1e":891,"51e80efd1292053afeffe7f8dd7af554171a2990":892,"4868ee165a2e560c19cb925f7cf17b2b14795e6d":893,"d3308d042c9637958491333831c33335ab9fc734":894,"d342122f265e60e15a8e10774abdd1a526ae7685":895,"2f8a5f595f6bf3dd3c3d1974b1ce0019cffa0dda":896,"f781f522af39fa5d5c84b111e392fe67a9a18296":897,"4325ebb29d862f5c7597015a2768271ae7b4255a":898,"df95cff9959a732894429672fc503d6a849182a8":899,"cbd8f4269f91e8ade38876092b433bda9ddb89a9":900,"b9af6ad89df746aa8a7c6c9ced11a47679d8a4bc":901,"9b2bcf57babfbec050b4678de29ebbfe2cfc0df7":902,"c6d21691838833ed5b8ca4ac9f370850ad13999c":903,"c4411b0be8d81af1bbbe4f9c546cdbc0a521ccfa":904,"648ba1f7dd7a41151983ec93220803ffd84685aa":905,"edef7f1341be3c62d29a4ca8de97bd9e29f9cb57":906,"96315d1622d0c5e2b5e9773936373b90eaf14124":907,"7539549e28d79b83c43771dce0024c7d9fc58b3e":908,"06193b0b796124eb53bd8779965db61b4f82c770":909,"4089299494353c5f81af53e3f3b33d3857ccc49a":910,"76c93685935b0520cc0059862017d413ac30f4d7":911,"5b1c8b6b6374954172a3394ed0b3c2ea6f408deb":912,"7613345248f98db31b48111cbbee90b4cbd4c4e1":913,"2452e59835f205fded26955430529d42935479c6":914,"ab10dae92927456f11d967dd8a51f00509ca289e":915,"eeef820601f13d5b693a0ac7c2bdf8ff6982976a":916,"584f0b43b2f3016bdee1c3f14f343273402bc2e1":917,"0781f42b67cdcaf0d8246b95bb7a76d43b500a6f":918,"48624bc390c0c11c24fe08786171637821610dcc":919,"b121cde9011ac418249e14bf83e3e72349054de8":920,"93283bf04ae3fd96592b4090e90ac75130aa9d52":921,"bc3d7298809cdf990aea2d0755f8263392e1ba7e":922,"a16c1250e03b3ffa8bd8c020c122555f14f88b7f":923,"75a780920a5810bfccb2ce54d0aa68c92d8fa7b6":924,"195686d37c027083c267eceac44e63ffca5c299a":925,"f49efaef06c468ec7a8bac101f1978f6771c58f5":926,"90698aee1819ce81c75286b6a42c76a9bb35f121":927,"fc479d516b935615a4317d550d500ed87915ce03":928,"9302db480e8cd7c88fd948baf0cf05cb5fbb7502":929,"14ebea15a4658c569f6301100076e28fec86ed6e":930,"2b2a0ddeac689030ff15737b6e50182bbd02f853":931,"d637ab914138edd33f4dc08e007b15ce5bbe997c":932,"b5c757d6b79c695ab4c15de8b5b3fe3643cf1e89":933,"228b362a5250966b1526b307daaf268504efb621":934,"4e5008a50dfa8d22fc6e8f49389740ea6cd914f7":935,"8badfe6e9fad5a525cb845af6830d4f3d1ac2323":936,"81060c32da9f9c1a356a238c7d5bd5e614594cdc":937,"c1bf25bb68d30cc0aa346226c899b724513508b3":938,"f68ee6e7e49ac33b3ba870f7287555c5dae9051e":939,"cc636ba7960fd5e0caa0b48faf93e8c2924953f2":940,"255048c5e2721fe22922f53c2605aaa03dbed140":941,"134c67ef8abb2374488c71240347de58dadfe9e0":942,"a0858cf0cad01296e7da59072a5919d9c3e8d006":943,"16afa0a226ca6b2ef489117ccd3b61760b37dd85":944,"54ded121cea1c12eef90fabf3ac14f83b7e9c15a":945,"3d80831d02194f60daf985abf5b778ac2a083a72":946,"e84b92d7658dee79c34304a67c4fb84c93cd071b":947,"5b343483f1f9e02f5533c55436dabce55dbef523":948,"7a491d032093e61057fdb9811c9f09aee9f4df23":949,"d3e406413861582a366cb8eac18687fb47ca9124":950,"29ad898c886e9ff817634e9cf3e1df5c0ecf16ed":951,"9436e8a817fde725425eb1dd95cc245205154569":952,"3f8c6e0143e7ab74b5dbfcfa439bfe96c1867429":953,"6029498ea8e8a0253683e824fa7283e7567fbc5d":954,"5fb5509786d0ae08177bd230fdb3cac26f871fa9":955,"31228a69c36c65f1f2c9e7f2f5b433ff40bcd5a6":956,"a0c48e1daa6f4c17be4d19a0ac3fed882eb8d22c":957,"d235f550ab1a25b9c9fc2af6aee6ebfe64ecd936":958,"81c9e3936beaf761f2b57f879766b9aed875ed05":959,"261cd2f5396bbe54104ecbaa5ae1f98e2f8f43e6":960,"1f3802a1e718e8315c826cc7cd43a100f896e1ec":961,"c7a0049e1b70e8f455229c8a470df605ea064f70":962,"18380a3c1529af45d0b23b137b192c2945e39bb4":963,"1f1eb625a8088168ec88538c48bf0cc1ebdbdd97":964,"b0af30948505b68c843b538e109ab378d3750e37":965,"ad832c4145ba5a9accc219123d7d307fda0e5c09":966,"a1da383fb3257e13912f4b10ea398d05bf221b56":967,"1c2aa60520653a7a94ff0e5709438040783011d7":968,"3cc682ba5ab16ba591f6ebb93cbaaab5662d4eee":969,"2d62067879d21afcd775b7effdafba2fa6ac878d":970,"2616df737d79efe33a2b804ee63dc6defb8325c3":971,"4a97d53301e46d9a6bfb32d2517424a6bc29ae7f":972,"26b145ab12993b1585396a3f346b3c3aca093204":973,"a921d89e5fea24e7fa4c9db98a229caabb2d60b1":974,"63960f7b1ce255fb7b6c36a669279d56420759f0":975,"1624b5c679014c6454080207f2c21cc577b5d584":976,"f4bb38c32124933cabaf78bc5d40e5e205107d7a":977,"21c415735c74e47942987aa033bbf66bb2ee0aa7":978,"ea9f847d36a60036e1eff2bdf610b35a9ab2a1a7":979,"81a654e7a0d8dc86896dd94773ad839b6ffc2383":980,"d469fec064da93b4ba3753bbdb4e8f4fd1691a73":981,"7303633b1ce11ca6ee84e90dae53a8c6a57e1cf0":982,"1e9ead8ac66ba08804771aec183aea001e6a4e9c":983,"073073b4f12b683fc0406cd15b3cb284633fe18e":984,"e2f0a90ec6e47284f1cb14290b79b137369de3cd":985,"cff29e8dc0088748131475bbded56d2b3edddd43":986,"4495cba3d689e9ee136850550fd864ddf011b81e":987,"0483e9a9abe77a73632fd85b9c0cd608efa9aa0d":988,"6d706ae3a0153cf0272760132b775ae06ef13b1a":989,"2995df7d3002ab28ca844f89f3c6906d10e7cd6e":990,"2e2604b9670825a94a3f6faa9c8712b724c9b8ad":991,"a600594d5a8f75f89ebbc48bbbda3114393c6630":992,"3421ad20d8e82c88902183f7444ee4f28e3f7d6e":993,"4fc90a2597787670baebdc3574fc4dd659b2653d":994,"ae45472b6c7e5cce7c0979bbeafbf5c098b77221":995,"961125b7d0ec0412044186a01a0e362cffa1dae7":996,"a124f0da9b15509ae56dc9ad15b1e798ec71982a":997,"1e7588617b842ca77a8e85a3b705a058cb1c9216":998,"c2021a857a23c2b3860479bf954ce0105db6722a":999,"581192aab92bc5729975cfac0441696e113d9d99":1000,"1a6517622f744d0b744545dee90e2418cda77600":1001,"e5b4229bd1167c26a5013a1f793dc1fc3b5324f4":1002,"63ca293dcf23a997ebc7940ecf39af1df99c6a90":1003,"4d07af1a3461a682361d58b928c02eae5dccadf9":1004,"a2f182483929c58ebcf9d5667d8ef19ad2db2f26":1005,"e11053a96fd51b4815476e37a08905856c4b953d":1006,"9ecd4545fe424146f0a5fa5dbcaccd775048131a":1007,"e8faae72c59beb6ca234313830d8cb5239772d7d":1008,"c47de2934a6b5ea8402df55b4e908d67c5445eec":1009,"9136dd8088a95484b059a0301b25235510fc2882":1010,"faa6cfbbf1e3d1ad9428f896370e00ccf5b32726":1011,"c74babee50c31464a27fb49fc825260f92c28620":1012,"b10a967f4b88e397728a8eda47d548a049911370":1013,"a6938128f49f9a88c6065bf2c226bad8be2936d4":1014,"bf1e47e6ff10734045b2d6a501da49d20980f742":1015,"8c6415471b869304efdad136ca112a7e0a8b9729":1016,"e1a76995ef311eb3ca66e12ef1941ed596034d59":1017,"71805cab16718636506c3ef83ff15caed19bd7a7":1018,"22cb8d45c341289a79b551284325ed75b93a70f0":1019,"fba8c5ecc24e33643448ad9f2340ab99deb3b1d9":1020,"ba735dde20869a2ae4781c880184dcf8f1a1a5fd":1021,"dbfcc4878afda13babffbc0faa8e59cafa7ed4b8":1022,"5012e883ddc8d7a045b4f7148e76099df3518535":1023,"9f3170dad5395739422bd37321b22ca13369005d":1024,"5414884aec08a936fbdb51eb699933523c1a2780":1025,"497f5a710fec4997e403bd2882acfde26a1c9d60":1026,"842569eb4b5680f0fa7d8b85f8aa88cfbf23c3d5":1027,"5d411aef293e1005f3292a7f1683ec0d97224c50":1028,"85cef38d2a42fb0b8c73535198fafce2d218d54a":1029,"30ce1ba66080c2450ac7510f6daecd903f17aaaa":1030,"0fc61ecae54ebaa7328157607cc98ea025cdca13":1031,"765c1eac1f0377dc133eecf25e623b8d68b69376":1032,"2c4c2ad694dfd4e852039644c7bfe22e594587c6":1033,"54723da77150699df42c9fc21f47d4013b52cd7f":1034,"ed9ea21661a88a0d876c9f36fdaa1697d60ffbd6":1035,"ff0a979333408f544f081489411814b84df6e2d9":1036,"1e8d963fb355093545a995415732bd9e1207d17f":1037,"8f6ffbfca7fc09473ae551148e0a0b7b01b10b61":1038,"8ec92f5118ea58a60e40c1794bf4337046b8b334":1039,"8f1c90d2ee7dcbad54bce813e2b18dc27895228e":1040,"d0a034a26442496bf93616af79bb677475cf83cc":1041,"18f2636ac7c2eb0a0b5e883813c8cf786bc10119":1042,"11aaf0fb84f979a4f09e63c65f500350e053e221":1043,"8aee014194a42c358946836fbeb355802f6e7852":1044,"9a49396c7c5ad0a4355ccf8c715af4f8270808dc":1045,"23652c5f4cd07dd6304f78b407541c6a02caf60e":1046,"4b52f964807c269bbede2b390109cc7fa6d16729":1047,"2d3f6f9103518ae57509f2e94ce89aaf7923504e":1048,"1a0efd803ae80e4b6caa1e501a7fc3d955d2396d":1049,"fd2d5314c66db8033139c07cd6e3e11776457fb5":1050,"4ac96190f74f94f6950c3c8c817ae444efc22b6b":1051,"4b13a22ff477d56ead2ee452ac4bba52d8f05e92":1052,"afd73a4856b69eea1ae1576a1d813e5b1f97acf7":1053,"e81b0db78744b8d3b8cd35af160280e82bb74d35":1054,"2393710a27afdb6e9eba99a8160d851543821783":1055,"9b3dafb99a1c0ed272c90e776b17a23f1acda0d9":1056,"5c9b30ae38101d89ea4d643b9b1dc087f184976e":1057,"b3738e658345adabaa958b9f9a94ca01fc87d5e4":1058,"7d291c7286dfb74fea631d94ac45b020b3a3dd88":1059,"55110038a121062f514374eaaed946547f0efed1":1060,"f7d6b19f6c674c056496b6995d2df5ef2684b9ae":1061,"a440efb27f5b6e27bbc00d8e0f29d0c395cab00e":1062,"39d546a24022b62b00aedf7b556ac6c9e2306aab":1063,"c6e3e1c0a8ef03aa928c8caad352b13ab84eb611":1064,"1def6cd4a340c66e88efb7584215abcd1b732bbf":1065,"3dd5c6fe38355b8323597341409b37f931de5a85":1066,"8a011b57d8b26e9cfe1c20a2ef26adb14be6ecc2":1067,"6ee834532d6f924f6057584085fa79b4777c396a":1068,"7971f9d6f747708b2847aa5a485cbff1f7a446ea":1069,"8de19ddbcf872c2c0928ea2d02d4f086bee0eafa":1070,"848f989e3d5e77f8ff8ab463dba94b1ba631be3e":1071,"907d7bcd18c13a04a14eea6699e54167494bf9f9":1072,"c7ad1ddd44e2f1424be75f032232ac826c88c7bc":1073,"ce409375b3d2a179508a5dfe4d50d9fdf052c803":1074,"c5c4b588f18900a6c9659690a71b0affcf7bc33a":1075,"477df066dbb82c86ac9edbc037a84896fd9b3dea":1076,"9635e1a3037bbc9355eb4cbb84b9f2415c270fc1":1077,"e90af2c7026aa28dbfe80924e3517316dd1c3f46":1078,"4da05e97ad419fe924f5d18cc16b57c387434f38":1079,"555c811c0d44d9aaaccf8e76059ed24537b3f012":1080,"d123f30b6df5507b2acda8e85ad63e05de8ca8a7":1081,"5eaa03b2d3f9ff743173de030416dae16094ef39":1082,"60a858deb189f1013f721219d1459d46f8da53b4":1083,"90569cb053f8f9e49fc9cb9351a22a36f3680c90":1084,"70b5fd3b6ec1281e8502c1304cffa70c8558c706":1085,"0fd549f88545ddeea46e53e6446586825fbfcd3f":1086,"aa6ce3ee617b2f324bea3a5d8e3263aee4cde6d7":1087,"fb436a5e153876c55b725d04db582ad37b225d83":1088,"ecae80cdb350dde1e654c531b56f5b6c44dc8c77":1089,"c41e3e277c84f3e082d5c20bd0350f44330da72b":1090,"0da04f78c8626e38c8950d5e659f7fbe1d980091":1091,"0e511c42c8a4a250618512395cb918bef6f11bf9":1092,"609c8059b2fc90ea7608f2b9eb809b155f8cc2f0":1093,"6da12d420a3cb90c4ba22fd5041602782000f38b":1094,"34cf25855ccd925a9caf8614a8bfd6ac78614df9":1095,"e71055211c11d498c3a415715b0454e430caa0a6":1096,"84a80e103b090f35334fe2d168ece17489395417":1097,"64dbd26e1ca19eb2af5680b611a12e8602994c01":1098,"1983f3055d48275cfbf8a1d7c842c4224ecd3125":1099,"c69b03baec74e0b0c69e9bbedac40b8a7e4377cf":1100,"69040ced454e2c8928bc5df49feeceed53896f3d":1101,"79e6f35e80d9e9b51cc590df24cb74bb8a0435ad":1102,"7c61c3ce6e9e66182b03217c8f2e6273de20b444":1103,"23a593b9d86a32b6a72094b36080baa29cde7526":1104,"747d198cad7471e3a007a4acf4fe1b962856802f":1105,"6ad63309ed535f318108cef31721d216e7baa3a5":1106,"9fe417cb7f5ccd915a26afd929d2f5e4e811466d":1107,"bf9ab7294d5db31e54d06ee75371b9ec2e6b5663":1108,"bf505e6065d2b66a367bb7d9a8f3e187838c7fd8":1109,"1b9f518d21e89501ec10af913480e75b41384498":1110,"e089566716c6f2c5bca71c131dba72c39af66e86":1111,"308d4e28f354a84fe9ec0a98c2229ad9fbe72b24":1112,"58e15ee246974f9bc572d866b726316e61c962e0":1113,"21b984be72631b1375c2e03fa14c2955ae8c42e8":1114,"07c1e641d9864cb2de9692cf69bccca4b49a6f6a":1115,"9568cea8bf422c5cff5555eb8d9a6b4d02d5876d":1116,"ed2e7dc6187b2fe3291be1de5ca3e77e4925d9b8":1117,"70222a9d032193d12455d9a1a2c72fa0eda70fa2":1118,"ce1cc81468c73a3d0a44a0065fbc69f80fa9c429":1119,"2600038ddbca59d1b706ada5da5707d9d84f5e78":1120,"86b4b5345afc541e920caf3c09cf2c0dcf96de9e":1121,"4f6df6e346810b60ab6675877079378525f51af6":1122,"91d87dd70c93e1855c69edfa87d0fb8e78af0586":1123,"5da78ea40b5f4c013d73f6d3f790f4de61c38404":1124,"46c4979e860a9aaf4444616955e896e70e72afbf":1125,"d2a370494e737c4ec2b99ca8d7dbe97b4e87d861":1126,"252e8a1c2d629ef5300a3b4610e626b71e75973b":1127,"466d157cb7f947763126798a374a533f535b35f8":1128,"dda0419ecd14eb8fee094edf184b1283b1a3b419":1129,"1de6157f0afabd2a2588c1bd2ba5fa63cef0f413":1130,"0ee594ddfc154afb370749fe7df6ffc8a2b4eb42":1131,"9009d21b9e372f038b1df20085586eb9f43d6d3b":1132,"4128082eb181cd1da391c24d1481ffa1c1848da1":1133,"6004c53da337dec12141cb0c53d55fe24179cb27":1134,"239dd8124b9afea52f2983d37c7ac63262a9329f":1135,"85a13975ab24e8b7a056c272a632a3f194fb3c47":1136,"480aed5595e41baa351dfba3b0d58e1ac2f9a4aa":1137,"2dc69c102d16b3ccc0a6a7ae5c824eafa1e9c835":1138,"47104429415c4c580cea8da4a3e3e7bf32338775":1139,"d023c696206b135cc1ce0f0ee05d8c6d06a8d2d0":1140,"7278b5afb781fe7ddf01af1c1cbc28e764f24d19":1141,"bf19e60cc564f0cacd345f3191a6f860bf36c9f8":1142,"40eeaefb79a4b4617854f5b59cc80123ba8c0754":1143,"982c3164033d3afd51c0d765fc4af98f22b5ccd4":1144,"9026c6e95608dcfbc7a6d7d33af2e792841d9aea":1145,"7dbfec50e3f2f66a3d0035f2eff91c5bdf472a0e":1146,"25b2116770aa63a0f41d2b80d1e360c92739594d":1147,"473d747dbe385f522fb585aa46f03fa67146eb1b":1148,"c3bb73f6b95c280cee3a4d6b03c87fce93d617c7":1149,"814577e3fd097ef772fd6d92a1ad3abd934506e6":1150,"5b9adade648b6d4fb717bb0348cdee27d15b6355":1151,"1300f51ff637051a075d7fe283a782466bc8d0e9":1152,"11e80a350972d0f407e4af55be198cd543569673":1153,"b822d3e17f30b74489422dbb455db9e1de898a8d":1154,"c5eb79e6aab8d320eb6481dfdf6c463ec8bf5472":1155,"29bb707e9b5d27110efadb22bad115d9ab356cfb":1156,"c8736f689967c38afe940baa7839cc0b4afd888c":1157,"a067281d3910a64303dfa8ed7fdd2c9604df3149":1158,"699144a2258c15cb79aae4ca4b82ea5467f12b8f":1159,"7821aadc535174e195a88d3aa318be9a8feacdff":1160,"9c6bc7afc0f8a62e24df92d72e41f2f9d590e023":1161,"a0b9a235d557e0bfdd9c31f7e309e57308e3213f":1162,"64d145534c3ce97adcc8ce9d41f5ba7e69e13fcd":1163,"298f0cd4389654e36a878410fe5ff92da255e32a":1164,"42a7c0be4c8ea44e4d1661860d2cf6c1f90cb655":1165,"5275c3c41c83426360a68d172b0eec4d109e63c7":1166,"bb23ab834659bed92987ef020d1e1ff2cbfe75df":1167,"5d4a090377978b881215c8575b063250a69dc406":1168,"6381c541fa93e44a69295e5d1cdc1c2c5e1dede9":1169,"932aafb91f6f53e3c9dd2d2420ea9901c6a33718":1170,"cb46310a799eb0d60a613ead0af8c8200c5338b1":1171,"3a41b697cd9ba043b670a063f595a85c904d3878":1172,"0d7a870b27846a63cd2425cb3e22edca6e9e4c28":1173,"0944553ee8498bda5b9897871e29c70e9c5ae00e":1174,"ffa30ced179f6723ee955bc531cafec05d526472":1175,"65cd9669edd7088a821202d8a664e071447bbb25":1176,"8c5e2d758d7846127e3368165cb9f9e19f7c73ae":1177,"25820bdab9c1092dcde6dbfdfeaeafcaba188e67":1178,"71ad48fb8f214e80518ba0419796e4c571351255":1179,"d51f4c82682b1f0747e85b4aca876135f60813bc":1180,"f576902c99845b21880a1681dd76acd61ddde9fa":1181,"61e04e2867d5057ae594316112ad48d4e9407d4f":1182,"98c40a4bae915a9762c73de3307300c61e4fd91a":1183,"c00bb6da1cef9f7e9dab842904232255717f8291":1184,"81931e726be5c8a1bbf0c422a992a096b0fc4db6":1185,"c44da6c271f5ff686bd4e2e45410763456ce528d":1186,"84ad1f7c7113f5e4fcd037f2dd5c76caab7f6abb":1187,"1719ecb9dc5209d0c77c2b84d76d17aebf1ba1f6":1188,"295c9cc643a2a5e410207fd1f4634ad9c8c83405":1189,"5b0a753d2aa8498c6f44d187dd6fe64c18c02efc":1190,"91ec9872fb7590068bca76f5dcc281702ce27d8d":1191,"f571da954cbb0f8881f4d9da6a8dcdf219ee4dce":1192,"d521a1e26106804c86758320db8544b53f934804":1193,"67aae25f61b8fd116dd6ba9c67ff7be2ae6de175":1194,"c690f54d9580243c53f7d892fcff1ce6bae4bfc0":1195,"bc8c97c72a4f5a72015f06ea60cc78e23bd5d300":1196,"07de62ca185ebd36df0687e7b6208633a67e41bd":1197,"f65251be3c7c6b70c974e537d06e05228dc524d9":1198,"b1cd96ec4b836348bcffba357cd29076ab3ae48b":1199,"39b2227bbdcf8ae5c6a488884d5d526955677ca3":1200,"ed6f00fb8e19c541f0a8927222be13eeee89a82c":1201,"a2ebf86f8e596593716e6c8f3870be1ec306ab67":1202,"e0ab5dd8a81ef1252fc91a6252b25424feddf034":1203,"d3c9812143f14fa616ebe2581f8b0a14f725d92e":1204,"7f9de3dce97ca4ec252de3eb8b2e2de7da615789":1205,"a787c3f9e12d8f392f56d7116dbf1fac09b12123":1206,"549692cbc0ab4e9929e6e5f13db879072b119fb0":1207,"0c246c33a36f613078a086fa4f9918b05e665963":1208,"6716a7f641fbd520fde38d84daef4121ea978897":1209,"9b218658222434f1fd85c95569d3ebbb6c2f1531":1210,"ba145b32b43047a727ab0ec86d3b5ac2a8f6a92b":1211,"43bb27789891c51b331e354f5c48e0d674d1077d":1212,"88212a2a8456bfa5d099d3a21703f2899b5f6c25":1213,"d138f8d7ef6bb1021c4b7ddce51374a10eef2061":1214,"dbfe4a49d88f6655ed31285a40b63786ab1e8e49":1215,"11ba497cd887b6cdedba403d540094433082b33b":1216,"ce05578aa6606cf662984a968cc99d421cea30d8":1217,"779bb1b1724c02a7b88480db857d8d4c3f5ede74":1218,"fe598532ec1317e8b85343133be9fb708e07bd2e":1219,"837b80166689d91d758355a73a507d5d603a91c8":1220,"03850446dc17f2183387627c2585d395e9ab281a":1221,"749b9c062ea20eaf4fa5701b2c0da67d3c2d939b":1222,"b6059a67cae1c3eb1d3c6698c61042efca68a3bc":1223,"7e15bf819cce5770ee525d3e7e4e15a0781abd04":1224,"c19547f690ea024000a99a4c52c6afc2d437ee4d":1225,"dadbde038d9526bb08195bfa5ef2a87d036da046":1226,"a5f321cd9bfe93e5b097969d02cb759f2c7ae9fb":1227,"b8d4ce2b9955ebd08159a522c834a9a8d31dcd4c":1228,"946f78a0ad8b2e6f4d9b70d82c8d47637b5e8ead":1229,"19fee8b24b2f1580a92910635e0ca02cbdf615af":1230,"b41f857b9eeb89f16120bb036ece9d249b3aa413":1231,"7ff6471c481d0200b2026f5c41f68308d313d30b":1232,"3f90d9f994671a0f8aaa666f43bafd67ba369bad":1233,"920025f523c4754064089f6a5398e0d320c05d32":1234,"13532c0869de0903e91082eea7ab8ae628333822":1235,"37680d6563275f92ed78eb883dec0d5309c64668":1236,"832e5b9f479bff2b5a171c32e6c25c542b8c8036":1237,"ddec1c4f57a94f5e0450e70c98c1b5d2d5f0d46e":1238,"d77e98e8dfb3555e7d0553621d88e800f3581af9":1239,"4037ad6bdb37d6afc71fd780f38e8837690de5fd":1240,"bb29f9a4d6fb5e3277aa5b58bc532cd90f687f0c":1241,"33ad95682c7576410fd02f73d50ec429bcac4acf":1242,"7d02925ee6b8b6d52037c08a6de89fd5d11e7712":1243,"ea632716d72cb87904e3d78ddb55a6c0c5f1d59f":1244,"cf466f72b3ad31bb7f863902b48bdc8525e6fdcd":1245,"b9b8cc9bad0128bf07638c138d709a50433884f1":1246,"28bc6998a8e29a40499460c563b06df169843cdc":1247,"22e95814a86037332d1d8d75b49fd71b28182592":1248,"3d8e87aa7d3c66c14cc0d87dea2c4759765d0236":1249,"a209dcf6a151b0bc26aace1b49507af255b948b2":1250,"e9de55d595d9713d109851459ca7d7232033f864":1251,"7a02ba0df5b6049820cee45a13b4d86438b50872":1252,"6bd8f99925ee09c9388575386d641dfc55719a29":1253,"5152d97870ddd7d4e18ef2e0616c42a5fb95974c":1254,"c4852ea94c9b30bdca647cb53650931894233fe9":1255,"417123dd4f43c13bb8e6f6f763cfe809b65a7913":1256,"d9be9fd88d9ee86288c966a4091ef56868e7d5f7":1257,"4cf144dc2e1ba011d99f026880cee6e1346f3d4a":1258,"0d2ed6c3287ec48ee06ec1b69287ed4bf0dd60d7":1259,"322b2d7d14cdf1d6d53fb763e14b9b058f29a020":1260,"ee596af2502cd5e7ef2940989ce61677a2f9603d":1261,"c72a612667a104ac5ce989ae210b53c8f87add23":1262,"be1135132aeb951a82008d295250a22ba358a8a7":1263,"8f39e07d80f689eda04c176e9cb33dce1471f7d1":1264,"cf8f7bdc9d5ee314a10fe043e421ec95604d4eca":1265,"5ebd6fcd269de6ac85d6805049882e75e298ddb3":1266,"fc3cc3bc3083ca14d1ec9c9db2401053e594a36e":1267,"fb096eea4102e679aebec4b158bf3447de1cd592":1268,"502c6ae6a03979efbd3e006e6a0b8c3369ca2bbc":1269,"fc0fccd0dbbf29c53f5e1fced69ec49863ebaffa":1270,"b21bc232aacd8bc3b4bbee8e96545caa99a1c4c3":1271,"e73825fec4d9ab3de7d7c9a274c01198c79cd2a5":1272,"f314b3cdb9766eb1ba6efe1243ac89b3d0295f63":1273,"697f1bdae3cdb4f9351d87a420e53d4c3f337df1":1274,"74df916bc4febaa23f5e336e6724fba6988e1f79":1275,"74681db644dd3dbd662e900f56caf411a2e546e6":1276,"68aa1ab38879e30b0f07c7766ed387e0605faf99":1277,"70de12b73c150b368520334b7dcb38a9dc229202":1278,"f4664d0257e23bb5d79612c2aeb283c6f7e411be":1279,"a2cbab1bf4ade784e1ee9cf4407b5f6f2223b59c":1280,"cdd9ed0879a6a33ab88278bdd6aafbf5e850d04f":1281,"6803eef1424979ff787aaf4e3b604594f535c384":1282,"381d7b1c748e837f8472c052fdcfe454dc87dc6d":1283,"b5e610c19208ef854755eec67011ca7aff008bf4":1284,"536a5cd2a9cd493e1d0d815e7fb3ad695ee3596c":1285,"184c9833705d7c18a8a8112e49a2c0b5346c778d":1286,"bd59e7452beddbae7d2455ff56c8ea9f652b2181":1287,"ceb2bb3b9b437597c0d22793645508c5c7d1161f":1288,"18a26cfe17419633856e614577a84cc1e8385e14":1289,"a9e56f4f36d70d16a956367133dda258c4f52bf4":1290,"ce538f70c12864fe700c716b991fa57c5693ff4f":1291,"cea359906a97b408e1154e5793fa31bfc62bb4ad":1292,"4f82f1d948cf4b431e695c05caab84c6e4ddc102":1293,"448501f6875f8c9c97c69d0cfae50b4b9dd801d1":1294,"de964dbe57a40fb7d4e3a9bb50a135f8fdcb23e1":1295,"3f4536894ac3001c53256d08d1e85aa442eb0f02":1296,"0733add072bdb3e5e95f8c4dda192fc799e31e04":1297,"f5fad6d9b85d31fd5d05b5c86bf2f2162391c589":1298,"a16c3c910548e37eb62bb467fea706a21f6a2d46":1299,"4fdf9fd481350ed258d44c48e149d365dd83d076":1300,"3cc88456804ebe0f989f12353202b9dc768f6669":1301,"486cd04f3d9a75acb4d9f929b333954b8f59cec0":1302,"1da951ad0bd1a3c2247863060b87adeaef68fbd8":1303,"54271c21e2860273abd6018c398b04f672ef2615":1304,"c80c0f11f4c14d7ede75b79efccab1d4d1fc86ab":1305,"a011e2b83fa089f625e5842a7f5d37126cb50b8e":1306,"768c5e2143830f4538765b24381908670028c32d":1307,"5f90a6eb0675b79f2bc29ebfa05d30051d3bd23e":1308,"b17bdfee2966154603e4882f1622a00f31ac59f9":1309,"2e4a68733803222274b1e029081ecd650b4344d6":1310,"94283dcf4459fac0ef404d67898e2ba2012b32e6":1311,"c0c1d760283a52918ac0cbf5237e010930ffb734":1312,"5ec1cddcdd0c599b00ae8f4fbb54987f92867b12":1313,"f5dc738cda0336929dcb8eb73b87fdcd01b7c685":1314,"e46f841849ef541e31c2cc4891c1ce44e57285b1":1315,"0bd9f1b8e60466fcfbbb01b5d048c72e3d01d361":1316,"cc74ea0bc4fe4a71fa53d08b62cc18d15e01fbb3":1317,"55905f85d63d75aaa9313e51eb7bede754a8e41c":1318,"dc662e5b740c46dc6350485efd64bccd4a4d7630":1319,"cec39ad1ade5b38a7b203e9cc64cca867196f33a":1320,"a63744d50d0e8ee64446acc042b07708e69ec2ab":1321,"bf463c4dc080abb1ae39c6f0a93e6a95867b0ca3":1322,"da5b745dba387d0afdb99cd385ba1467a3ca2831":1323,"4c78e4bbad6ff4686d041c34a1ee30103fc49e52":1324,"6226576efa82ee8748e0711af2f98dbda031b8c7":1325,"43791ce02c8bb566915c948fd6f48d3fe8bb99fa":1326,"5fdb5a148e7759b89d09ca5eac5a24af63bdd125":1327,"78905107d3a6465f346d909fa7f1c22ffec144c2":1328,"4e92e124858c56bd0c99533395c9c2333d954e5f":1329,"99743ad460ea5b9795ba9d70a074e75d7362a3d1":1330,"4acdb5eec2c79331c47081c23f7d51d3244a2bf0":1331,"3700a01c8243a1f394380e87e479e7db32dc8a14":1332,"72e539360ed644c905b0a67b02b3d63b18a282a7":1333,"876725d5d5d69cc6ce8a6dfa92a91ebbc90b89db":1334,"18c77ce51bcfd20f7821aad581749f7c15fb550a":1335,"d0e604bf261470b1404e2ddf6da29206dad72026":1336,"2cd2f5feff3a811eb1d2a69996f8be9f501c44a5":1337,"118c376fcbe483b155eec26f8d9192f8cb4b4721":1338,"338622d7cae787a63cece1f2e79a8b030023940b":1339,"faf5f52627cdb398cac2f756e79dba042c48d7b2":1340,"9ac64ca19157ce679299a4b9bcc9cfb5372e4818":1341,"dab18fb0bbcddfc2468abf41ffdb83a53305838a":1342,"de1461b7efd2f52adc9b544240a04937c510a91c":1343,"78867ad8707a0163b27b925d9282f18fd4c026ae":1344,"a5af7fe9ee388a636675f4a6872b1d34fa7d1a7a":1345,"ae66dcbec0b2457d5c050e1869a2de18925e23e1":1346,"60991f990b2ec0efe57668c499091695ac416f39":1347,"40008aa5dfaea16a4c0086733e5dab9a1312f98f":1348,"d3cc730b45037ff0034946a49d8fa6bc93d53000":1349,"b40d44ecc1ea662ea6d30d703cf1820cea9ee190":1350,"d9bc0ffb16e633d52d7bcfd547a6125f0e4dfb87":1351,"3b15d950eeddcf6dba091b611e1a6cc100e2edd9":1352,"0a8de761ffdf79e00dfdfba503fd9f0b3fe6f628":1353,"7f6b82377bb549348e10441baa583c123f319e1c":1354,"328ad0a7c4afbb32f7d8a8752590e8cd5a54be4f":1355,"deabb19abc3328149ed76990cdd3a1d5e4e5b3ed":1356,"a9b59a11f1bfe069afabe5567f919727456f1f12":1357,"d170c57ab996d00c4665a9d865bd5754a1806c6c":1358,"7cc1694f512bbae571bc13c921b9d348d4b8fb78":1359,"01882d7f6a2b8115c20482dd375dee65308edbf0":1360,"e7b78ac22937f994d35376b38416a5844d6beced":1361,"9e248dde60ebe3af279746395c144b529cf5bf84":1362,"8ae463d736c1a85d66babf2593fd4397162a80f0":1363,"966355585bb3e6e21c063c2b670045f5a75e5aa5":1364,"82ef9f75e343bb49f99a6f39f8c280bf3ef42b64":1365,"34bee46b0be6afc06f254ec0debd4b868443a649":1366,"76e31da4f668dbd962456e21634c14d6a12ba37c":1367,"6eba6b4b89db81bc359dc041c62d1277f24bb8d4":1368,"876da98a5182a03f631f9ab4469bd6838225cb16":1369,"e26a58e43c51a680a0a6363e0066886f4971a41f":1370,"4cf44599ebada52299d15c6e45b0bdbb8eda4ce0":1371,"45b10228abfdc23587bd1cd44eb5c1edc39e41a6":1372,"f09e57923ae9f0b18e63ec4edcec404a7e5862ed":1373,"3e915e12a146fb346765ab5027c5e9ebad0600f9":1374,"b0f5abbea372b0cc4d27f267de271766f5c8a11a":1375,"c759a3d847b9216d7fc0e54e84eab3b31c7654f8":1376,"5d3ce7ea4fa299f8463ee15282fa986b50702cd8":1377,"94142ed8c91d2110bba85d4820bd098da3f76fea":1378,"58a753053c5ebacec3c603c084b5b4a94799583a":1379,"5b1de36d93d8c0729422acdbd8405fe5ae8ff6bc":1380,"cadcd787cf185f9fb974a1f0c12fdd13c45171e9":1381,"7fede7bb98cf2c76b8f441ef1f5a1cb837af9f93":1382,"43995e2fa876c9501f7eb9440d33999708f1428b":1383,"2525b0573b28e929a25a41ac7b57bdb84d9abf40":1384,"9c7819434365bad8de953cee6b2af115fc710aec":1385,"26547761efbcb6ed0d07f894afe3cbf2b5dd0068":1386,"6df8096a00382d10cab1bb2052238e324d66fe54":1387,"f07421508221dfcca43a6c10ad8e9047f8f8fcdf":1388,"39ed137bce316138e04aefbb5165daf5ae7201ca":1389,"91a5a219d46d592b49f6e963d308b2bbdc9b5b60":1390,"ef690ca387c116569a2f5dbd71c6f0733a070cc6":1391,"2282dd09414b6b135991184ee379356caa4ff107":1392,"73460009a6ef799d912f8ab7ebe38563d7242d03":1393,"29ddd7ff82a410136250d03b4c741e2b8899a608":1394,"6f94a8f1c7f0a94c74c5055b02b660d8e93fe5fe":1395,"38ac7fe6583b66d6f2bc678cb7b888281baa3363":1396,"610fe2892b2c61858e5f4c81563b6fa0056a8672":1397,"9d2051fc2896bcb771cfb41b2864601c6c40e299":1398,"9cf8fce74cf6e7afd6aea3f3545f6bb61572f277":1399,"c59cf8cd211cfb93e5a6b2aeea2a51b1eb5c9b30":1400,"cc02e74320c940902d7004ec070587289c04d8da":1401,"0d2830a265f3858836fcbea75383d7a5f103ce01":1402,"917ef616cccfcee30fc9871d8c6025c17b29b05b":1403,"4b575dfceff4575ddd5ba0c74089c127d9b68c4f":1404,"eeaa239889796116ea2155b1b37c183b6a536b06":1405,"b98b2190bf24960388760146c771fa94b4860ac0":1406,"d84f2b2b7ee3cb94afd1d539e5ebdbaa29e5b26c":1407,"2bff49cc617da075d13f2433579f3a97d5f0dd7c":1408,"3e4c170bc7f0f8ceb73fee904d83a253b1cb7c99":1409,"57a87a52700deffdcb89d19de4d5163c4e6878fd":1410,"ffc0931f879b5aeb48490d1ff34f710b45462e11":1411,"e00eae9e89dba96c523fec1ab5a60714ecb23567":1412,"9cd0de73dc920f7c75cb0f3aa55405701d43cae3":1413,"81c62e070b8656432899fc17b46b882bfcf1d59a":1414,"45938454177f53fa24cfc08ad97ccbc162c3ba6d":1415,"ec45e6ed2e11698c713e664b1510bc31bcdbbdba":1416,"0befccd21b2634b841bcec11c51743c50d169796":1417,"18104fac86ed56ab21843e3e628f33aab92b1c4a":1418,"a8cfc2f5e49a40f134ac342ae0cf629df494e6ce":1419,"4c699e349a4986b28574b3a51e8780e3a3d067b1":1420,"af51befe694fe039db3554d4b9165f7d6baceb77":1421,"09167bf6cd4aaa321803eb8f4261295840e89730":1422,"081193d5b14a1481849d9bb4ada45e3c39bb1075":1423,"f81590a1c8344cf87e72e312722abe0b35d9601f":1424,"534ddf645be293800ab0bd7107b307f668ac8d5b":1425,"1795343f3c0ff1f43bdde3e5f16cd65c0882ae67":1426,"224d3764e52fd4df91ece9274cee1305c3677286":1427,"bf9e013bbc52f8fb3040a15fb71c8abfc0c15de7":1428,"d6c66dbce610713fc96edc94e6a7036a7ef6c695":1429,"381082168d37d4f2794360ae31dc078f2a350113":1430,"28432588c231019c2bb0dfbba8eba4304779706b":1431,"c0282f608c381152ce5d3614ebd83ca3263e2de9":1432,"b1c148b91f84d5825c9a52688e71b08fe2be2958":1433,"92b370ee642743d4d795536900da7715c73152c9":1434,"1c5e1504e0305363cd262f1706cbd63f9a62ae46":1435,"449829b85ccb8e76ae5b2aafed65606e275a9bd1":1436,"aabbbec67c3c7363ef08c657f2d688ad2e8f7de8":1437,"222541dff51aba0623edc98bbecb6e1a35d22063":1438,"98b563ebf3fe39740970416691d8220c91cf599e":1439,"39e6f2ca4a2bdc39bd0291db944f0728bd527c5c":1440,"1a6dae8070ee6ddb3f676acf3a0dac40871182e4":1441,"4292f32ed37f16d5a5196a79268d52738aa68d55":1442,"d385ed069bb7b3759b6237f380f8585f16674f39":1443,"85321456cd1c52575babad6c9c7a1f6869087882":1444,"a39522f44f7e0be4686831688917e9675255dcaf":1445,"4c9f56d90a6c36fee2a097061fbab107e5723955":1446,"d5ada19ce71f4fd74d0501966fbc2009c81c6573":1447,"abdbfc953d8d3b7cece335b9b56a323a8bd52ec4":1448,"81a64aa5488602e4643f1ecc3beeddb8828a853c":1449,"eb3551d0a34dcc64abe871b79e9da1b19516a428":1450,"21091c327b0fa84270b968cd6c102844c29f5615":1451,"afd49054ac89d36060a9cdb250e400583513e2ac":1452,"541c36c00ea3960d026af743e68c105928ce921d":1453,"0d258b35c8698d5be5f01f3fb5693ac5b42efb27":1454,"c668dfb3c38e0efcab923d8381e60f67a5cbb4c0":1455,"c34cc7a6ff20d7fb5a6ae1e7327278d3eb12e688":1456,"b2ce1fa20cd741bc4a63f888ea55291b0a5be620":1457,"815da79694218031e8219a4bef037e9499cffe2a":1458,"c7715c2fbee025f69acc539f8620b7d423d5c3e8":1459,"706b3f2730729f80686ad4a3228b860a13627afd":1460,"c5ae5bb16ba7c1c767f6920df7f22b6e6a4c8f6a":1461,"0b177bc06cb1c2f6ea01d107f1cba5d810ade4d7":1462,"eaafd900e9dbe1e82cd4d690db7434be76606dac":1463,"533453f9290b5668097f8db5362407f6e73a1d18":1464,"ac1587bb86708d800f8e7bd9a2d30f4c04c6f964":1465,"e5760c08086d7d0de9144ca549b824846d718da9":1466,"d77963feeab432464c200fed24851600bdc4b97d":1467,"2f863593d11c9459bd6e4eb721f39fffaa4ccd58":1468,"70acfe39c07322144f5fe9b40bb584a8b1099ffd":1469,"490131987e1ecf7660b62bdc7eeeab861e680a50":1470,"cec0ed0f77e91bfd49bbd298ab58f77375eecead":1471,"31c0c024bb73e2d7ac3f66d70d9450beaef39c2e":1472,"839f3fd406426a221d74eb7a33a72794c3c7a548":1473,"0f93486699aad9dd6a6c2f9465106351898d840a":1474,"37394eb3b0b7d38bccedef268aed4bb307db6ce7":1475,"279e274eccf95fbb4bd41d908b9153acf6ec118a":1476,"089da007bb990b5b29aab257aa836fdd3f3b8ce0":1477,"63efe9e4164a68888a8ee74aae75a31fe3149cab":1478,"07fadde87c0de118daf80e42c9ae64e8a611e1f6":1479,"c1af2821eaf8333ea2af8f121bd69c9701d8ae65":1480,"06cc9b7c176a6223971deaa9fbcafe1a05058c7b":1481,"b2d8bfc7931eef49d527605ba485950dea41cde3":1482,"ba8ecfd58f62fa0ce762861758391038bf48e684":1483,"e17c68c49355ca83cddec2d050ac8d95005762c5":1484,"5fa2734d39bd14116695e73a8ea7042a9e010a5a":1485,"e4e3650e8b6289bd0cd7500af6176dda81e8b585":1486,"c5e735deac14e8876cdbd1d93adcf4e8b1525e81":1487,"0698f1066128804c6ef6e0b92d4530a96e116dd4":1488,"ab486146d4a446a3e4f654c0671111d6637b5436":1489,"fcf1bac99a6277234d35797847a01dfdb1f86f7a":1490,"4810f41a521227ccab4f231aa4a439d790428953":1491,"9285e66630c4173d80929038f3862b6910b580b8":1492,"dcac49af485fe5d4c0027f153901435dbb29c232":1493,"713e247e7dd1bdf79b3f596c77a2fc28758de50b":1494,"3bbd11c23390243a237158af4a01358497958b5b":1495,"e882623820bd4e49581a3bf61527ebae63c2140c":1496,"8c87ae9b880f0b6c6824a68b39aec6a204d566c1":1497,"cf127e81449f0bc4d09368a376623fe3743094a7":1498,"4f5695229e49a7615bf7b03d26209314ffa48985":1499,"ce037789264b33e3edf302fab74736537c04cf22":1500,"2c10ca8086a4d595ecf9aa843d2031b068470d65":1501,"aa6db9d99075f16007ea8fda4509a94ede4e80b6":1502,"7c05d8a4a6336b9cee984a765504531b80590fc7":1503,"3d10918d2e1c57d72531c55a956262f5a72fceaa":1504,"d825492bb6ae0874400bde7456da1ed9f64b308c":1505,"5465c25cea64684fb8cc94a32208b3fac38fbdf2":1506,"16f34a416ea443bfe0188235d81c08a6a8b6940e":1507,"b0a7738a5feb75d23a9707393d102cc34814fbf7":1508,"9048298d4c52406faa3f15be8edda2cc0912ebaf":1509,"81b7e77ff02189bf7d4d4b86e1ebd666960cbe51":1510,"2b1397682009fc2529b66b7d74d911e22c410e3d":1511,"ca6c87341f440742c42a4877f21a9354b88b95fe":1512,"5a97e955204c4782d9727e8248b12739720232ba":1513,"f72351f5400151d9a4b63da2be4049f4c8155e75":1514,"d9a026e628bf4127c3f9728d4a9d3a2d174314df":1515,"7c401bd84cbd71a0dcdce01031875a7b90471ffb":1516,"b9d985975cf3bab0ded0cec9fafd3799f9bde29a":1517,"8acb7ab9f152f6e0b3e96ce91a6c48df74446c4e":1518,"8225465b09118908f4079a19863e174ef60a6f6b":1519,"e2361954e53f60ea688553b6b8395f6580a60c9c":1520,"47bcea99fbad7e8cc1ad242537f766293777f94d":1521,"0f01a5881f932fedafa93e08300f6ec429662a8f":1522,"25e2d1588eb519c3f4657f768362f8b55cbd062d":1523,"97118fb5043bb78c8c5ae818eee77518d65b3a90":1524,"260d0f1c197579218cded0d21d9efe26150a76bb":1525,"5aa7230516a2ed74a547d40c0ac2c0896645c953":1526,"864728085d8eaa04199bd8f741e00beaaa58e3d4":1527,"7a57dd1540d3ae5073f67dd5b9a5853d93c8e672":1528,"58cac6501f6b17d9cc8fb84ce65e7c89416dd9af":1529,"32422eff6c8c5777f22ffe0f1ce4577f1bb2d687":1530,"8ce60a195c2e6514e892d70f791b002980361dcf":1531,"6effe72f4629558f07540382e9368ac5db6e051c":1532,"ceadddd15d3dbd7be5e300909a3fdc848297e6b2":1533,"fc63889fe6ab3537218ce3814b3d26f41e2fd99a":1534,"6cfa92fb45b4f808495b8ed17db34c7e87fa2cf8":1535,"d003bd9b84d352292bfc0571256e3092bc11eb8a":1536,"3a0a24dcf36cb9c8084d9c69a6847c8cf50c161a":1537,"30da343d11a978f3326807eab48742daa28c2b08":1538,"00c49a3e855793278d8ca6920ac98e9c922b966c":1539,"b2a257f9ffb63a1e1bd0d89a6ef297a1f595f5cc":1540,"f4e92fe13e512b0f190db82fed8e1b0da2314cea":1541,"28e13bd6a75c9467dae43043e7b741a1387d5252":1542,"b4c1aefb9c369f1a33a6ca94a5de9b06ea4bf5c4":1543,"0686c414a6c7e2ec26a8a773fd042ca883964596":1544,"c72f637c73823c64b3baea069be73efbca01e747":1545,"0359e1f63ec7361e6dd659c8d09d19235aca39a1":1546,"d073777bbf60df574ad0ba4b6069c90752d01ff1":1547,"d29bb4bfab5775e1922a367c872b9ef1b5e5a812":1548,"0cabbd3d60acf1e040113d59e4cdbc99b953843b":1549,"5de4722278e6a89c787e2ae951d9c2a0fb4a9ef8":1550,"682a8f71d85cb7b79e5886800be702633af584fe":1551,"c8241635f1dd6cf539c6dc3839b6a268b50d807c":1552,"ce49c329735530d66bb98cb13b4a8f5b1f48500f":1553,"9a6a56d21fd606415685d2078d120f6acb9a2027":1554,"d25e45df73545e6893a9081f38be77b18ffb1485":1555,"292cebc58bc827992c43a6a0f9e6f3887b3c1f30":1556,"cf1779495d454003b806d50de80a2c713a782466":1557,"43ab247f56b2742214f848edc977e9bc3593bf2b":1558,"3d598452679ce208ad9b2f48e0fb3fae352ce375":1559,"ff542972f677c9d5b4f604da605d2c7610a820ad":1560,"562bb5823c4dd4eb8520b0f3fd3a969d3c4922cd":1561,"0abba43524eb618ae9733a28d424b395722ea33b":1562,"d52b403f51ee52507ad0ef83645aef551cce8962":1563,"ad93c01aa5dae273d1209faca200a8bd331647ed":1564,"bc44b1c627e92000cd37d46092f8bed8986f52f5":1565,"f810ccc86759f204f8f149ba4b40f6166d5bae2b":1566,"992e34c21635b179a993b82ac1d81753e7a6a57a":1567,"f592f2e51642b0e21ef7fadc6b25f208841cc4ef":1568,"120b753f71af7588480f4e35bdb6ffb001e87e2e":1569,"0058f82e2c47b8e12428cbb37093d10eaa4a8064":1570,"3172f6a9ce72e7318dd55239677dd542a3fab9e6":1571,"46428e45e9982a7490685ff1af6ffe680096c1a4":1572,"0ff7b4830c82b9e6a9f14d375b05ee64009e1d01":1573,"805b0dd0e10ad6d8304ff85a4d4aa804d6d04404":1574,"356a85be5d8dd3087c319d73f2e80d16957c9d6b":1575,"c4f4d6352fcf9466b46415e65d6c3793923b6a3d":1576,"872c461b0003f0d453afcbd3c166faeb132293f8":1577,"5582e158e5d40eb61caf2f8968c37573b802cce0":1578,"b32f9599bee0f37fd75129482b0008b953870129":1579,"d0b6686c14339bd5d0aeaf610705c7ed85393e1f":1580,"c0b2cdf8043fea503659652ec733b13a4a2900bb":1581,"6f419dfe6796296c3e944faac2f3724198b4062f":1582,"acbbd59f29306a679e9e85b8ccfaa4eaaf969a6d":1583,"a6da98d86ffab7e1e50319ed12b57fcb366e24ee":1584,"82dcb2beeeb85369902c76e48374caed4fac58fb":1585,"0a8cd4dc02ee1237f3c65ec20ecbc26c1bbda76e":1586,"f0d27360a6e574eddcad5dca8ceba899c2fa0b3c":1587,"d441100b70acbe19b439c76c0159b2bf758aec4a":1588,"6df9379cb0e3400b5d50d582d3cb10d8a65d7757":1589,"306c412ce04a7c21a208e33dfce530536453c20d":1590,"7895b396f896548151fe0cafac4951c817bbe914":1591,"d1fb8384e02be1904e6a4e033ec1d3a6053a53f5":1592,"39939eebf84e8f62b9fffa46b0e18563e800516e":1593,"0eae5650dec265e961a1024fd2090301f2cdca16":1594,"0ba934d7bff00298511e38139c7f1dda076fc179":1595,"00a589d9ffdfcd73126dffcf1683f811305d6752":1596,"b60548260055e3b7bda3d7ad77174d002353c162":1597,"93c60dca132a30d58a8a6c7ee2b0e1937b5bb331":1598,"97e3909a53a1865df1032d31c3870395c210579a":1599,"6d1f7282aff7cf332bbecf3f63e99b2e7716fa14":1600,"b3d793e48ab513b964d3e21be81f6b6713854ab2":1601,"70c4216bc807472b81ed7857e761d8c60a9ee19e":1602,"d2eb555ee11f54ca6b227839831ca5419cf2287e":1603,"59c7657d642bf500c49da3c4bd0e6d7bf647ec7d":1604,"e64fd96a6c38ccc46b8bd99cc6adb83a978fbef0":1605,"215351f8bf4352b98aeb738810468c5665226097":1606,"e93dd427e4815c5041a944eb36e26b97096336c9":1607,"2371116af64d1d77e8bb5f26d55ea816b26d6bf2":1608,"7033ae511f3cca7e5464353e80acbba645e07c44":1609,"0e9ea48c469334b284f3b8d43c432696840206f4":1610,"78f3b2faf50f7e4f103348f4bc45571d10bfc0e7":1611,"f0090eee1224c2d421a4bf893ea39864ee14b4b3":1612,"44823c3c6965966c63b7e2e2361d0f2a58d196ea":1613,"f222240374169c69186f5b59ea50101841642109":1614,"a75b2c8f69634685288b419c8b4daf2d661b4bf4":1615,"d472cf448471dd6bfb7435ea8a69e4403da28233":1616,"ae1f32a1cccc9288a9eeb64e9b3576678fffacd8":1617,"11e8c03f94c6110d9bc7397741a6904580fac86b":1618,"b6c9b70356ca4d2d36424a384290baaa7ba85207":1619,"4a2f3ee8002d2b062efaf2ff05ad0d6f3e819cb3":1620,"fd20f1659d092badd8e1b37a25e75a3ecf474efb":1621,"7068caf5fd614bab588b200d264c0eb3564690af":1622,"ed2be747ad13746797b655fa4f5c23dc6b0ef3e3":1623,"e5a9947811db9c9e23557dbad27f8b8a349b3262":1624,"1d3e837fcbbd9d9fd5e72dfe85dfd47c025f3c9f":1625,"e4b41d64e582cf1b265a1bd6919d7288dfadfe10":1626,"ea5a1ac8b5d5fd95cb891e4da2492e08b3ef06e8":1627,"725672512ad69befe75584852de57bd345ce063b":1628,"eebdee8eafa97849cc70c25f3fecf1b075bac248":1629,"cb7aa79b1265b09e21a82d31d4c60470a4444fa5":1630,"289f3824973714e8a917bdcd485fcd8cbb58fdfd":1631,"21f1dfe9169e7e0099141204961fccaf8798975a":1632,"037f7f62159fe673e29d12419033ddc53ac5002e":1633,"bb9b74e75495ff0d00897760f5f13784e88930b0":1634,"890f3dd7c5df5ec330a010928db0b302b8e005f0":1635,"2a1570ef1a92f2622418330a1e088f0a5d869fed":1636,"91d344288aa51ed03eaaa1cb3e368ac1e82f0173":1637,"f507bc1c7242d338b04d6bba5ea78cbb42cf0e13":1638,"4ea11ca941fc074fcbacace405ac684d20e34f61":1639,"9a1387f6a965edb295931012b4f76c689c02a5c2":1640,"10f6a9e62b4081f0b226c9efbd7f015ceeefb2b5":1641,"db77cec242dbdf8ee26da8232fa930270429f253":1642,"0e7f095c6dd4363d66f8b14a428f9c1f07f7dba3":1643,"2608ecc7157a9d6d482709fc197b2fc0317d9d09":1644,"f3fcdcfa1a68ff2c0a81b729ef38827581f869d8":1645,"d1df58e8d734ceb7d475b9c83263466f6ccd9031":1646,"e8c914f18fd88cd58aaaf5d8cee53b9e57477b52":1647,"020dbfe4321476bb51a29ba4547e8efe86def28e":1648,"66b87c00b8145ba6fbf709504b4571154d103129":1649,"b0a804da4f41c10294babfde0be109b1bbb94fe0":1650,"7ff114e287f25e28f4bf8ea36e644bcdfe9d268e":1651,"2237ba0dba22841e29e2fba877f4f9cd0f23eff7":1652,"152163c1646b45f5fc5d31a4ec2eb55d7f4a2ffc":1653,"85494e90bb63a3a9e19a1bf862cb6bfcb0162ee9":1654,"b5c80a31ad266eb38a0cf2ff756be59c66d34aa5":1655,"60e8877e161fe6175e19fafce2d6ed1c3999cdb1":1656,"16ca5c61025dd414b33afa88db0b8c287bac2f26":1657,"0fa11bfb8008cbc6ec9841fad941530dcd532f48":1658,"959e050c1dd943f89bec53dcae52f9279243d23e":1659,"67dc6ce5fde32c1895974903ea566dc0dadd39f7":1660,"15f36b2b1e166a511966a9991fddea94f890a755":1661,"e2675937d5b6d2e555edeaabcda7ce70551ea236":1662,"133d4a88f2fb634134a6e56c833f0d30e71c7368":1663,"527a94017af8f25d7033b532c377a4fa0041c82c":1664,"1be2b46c854af7314aae0111ff70ee8a5766135d":1665,"24aca8709000f1d05341aaa7f131369896f72b63":1666,"8561dbd655769cb63fc797e7ebd3923bee943212":1667,"1ee712ab8687e5f4dec93d45da068d37d28feb8b":1668,"01590d660d6c8602b616a82816c4aea2a251be63":1669,"6a769ac1df0e407d5623170a6cc150a99b9f4ea4":1670,"0f32fcf4730ea3dfd0864878f744aa25b7d00733":1671,"ddafe2c4940ae20a7c925047d27b54be234cada4":1672,"ed110a1715e245a93fd8be60cc9edac06ba11887":1673,"0b48b2a8ebfc791a36f4ec1f299f46db76265a3a":1674,"3a204ea97eaf5946415baf60f418032f2d822f6f":1675,"92e85aed109d03498eb8cb5ad1b10e95b1686e42":1676,"093f7260e9260b5ea0fc8b78b6b7c68cf37c5112":1677,"38d46c037288999043080b006756cdc76f2d262b":1678,"03704f3d94113f8248819fa98e75801e70d48f8b":1679,"365fd7bc351705e4fb181741829f89e580549daf":1680,"b21358651d34d9a3b957e129c80a669e3a356ef0":1681,"999a1ff991bbb5770b3e71d13da63513c01708e2":1682,"f022e53b9579457d53ee59b46ce6a959d27669a4":1683,"c8211b64cdee1dc71fa91945c8e5fa9880fcee2f":1684,"3997ae1b469617be5abbe517d61ea71481bc6638":1685,"cd85493faaa484e9d2a99a069c5f995629343752":1686,"1d73a81ae0341a0d9c8d78c3fcf67bc2827d75d0":1687,"df472240285a93f25edac20100db2240fae5c7c6":1688,"93d6216099b60e95bc816bcc913f8f841ee795b6":1689,"31e3177bb01fbe2b0a1e2a08dc82165ee6fbe692":1690,"c487aba74c1898e6f54a00001d84e30b39261d96":1691,"f145765524b11b6ce5d23bfa94180002a77fcc9d":1692,"eac7f04669208cb15132d03ca15c8acd1a2be869":1693,"f9dd3446da82fbbf20c344ceb6a87be2c11f5759":1694,"353310b7c11fcdf7fa41c64d63109e9a017d90b1":1695,"696184a0477054897aec76946f3715682451ac5c":1696,"a9404029343d65f146e3443f5280c40a97e736af":1697,"4b548dd15a750ed28f4517280576e06fd4efc4fd":1698,"2a058de88fa6cfa6d7a76783269f39043f0d8afc":1699,"dea59184cc44ac131c43596972bea49524dae85e":1700,"cb07b8ef1a5d868a66d847c8d78af58947d21425":1701,"a8d9c58b1f618f518dc3a5a73023e6847544979f":1702,"395fa8ba2439f7e768376f7512553d66b67d1c87":1703,"85a0542df592cc297f52f00e00d74ada1206efdf":1704,"c52bb1f03aa146aa68265489aa3411c853afb78a":1705,"aff8ebb0ebe165dceb03b567fe54633cf3f0a1f7":1706,"b6ac16dabd67772d73f355e952454fdac603d5e6":1707,"8c0e936a4834c3e9294a678fd9e528ffec65a6dc":1708,"57170bff7baf341c666252a7f6a49e9c08d51263":1709,"65bea197ee8a4f04746e0a57f574499817c9b0da":1710,"e514015264f1e0193b57dee76487c85d24f7e4f1":1711,"29deaef505b5868f2bbe635d76cded6c8c0b67e4":1712,"bf032c2ec8d4858e6cba4ccaf63200f7f39c7cd8":1713,"9a1490ad6ffb7100c4b35581b2787ac1c08695d8":1714,"66083dd05ff812f3402758340bfab18e4f75fa50":1715,"c5eb9573e74471b6aa3bd0df049a6113073f6a60":1716,"7a599c5e1242d3c5ab7515ee149623da90ae69ec":1717,"fe6598cffb82ec4180dcc2e2310e77d07a803f96":1718,"1d7a513ff0ac21ba37801af0cf790f3cb107967e":1719,"7590d302e37dd04664ef2bd68042063a8e634599":1720,"ae6ec1861e7184bce4f45f73db6af355944ef58f":1721,"bdeb0de88c8cf5f2c78f261b45314138f525110d":1722,"cf07add2272fee6e2ee8c99da087aa50ff654eff":1723,"ae87d088bc4deccd267672f2cd36442b52864391":1724,"5bc51bb454ba4e96e9bcbdc4106b6986a27eed6e":1725,"692530531ddef91c3c91deefef892abef00f28c0":1726,"3809b683c9c90d7b9a9020ea0118417e8b13e6ad":1727,"ad547cea05f3e02c67243b682e933fc53ac763d9":1728,"6618793e876a20ebe91a87eb20069ef4070280ed":1729,"64d73404393f25e2ba3a2b80106bdca2dcb95fe9":1730,"98140318fac953e675369d0e97dc8f8646324060":1731,"9ba5fe028f5420012cd161820ff0a6fa0e1e8a68":1732,"0a1352a716e9af5d861dcede0d7c6580f018a10b":1733,"39c31da2142ab0fca9dae279b9e59cd4951a1982":1734,"10b979e6aaf9b39867497773b09c28aea9a71620":1735,"8a9fe731fb92c786718e32f8e02fa550cec753d1":1736,"d707942d47f4288afd82bc3c96d34f60d9d44842":1737,"202a97c88eb6807915135a1e6be9aa921cd8efac":1738,"ad854ea11e787a673a40b7917a955bee6d7dc253":1739,"53cc6486df3e787898294664c0991f00ce57dcef":1740,"36f17ed0305017547fce39cb6a53c1c2ba79b3d8":1741,"063fc25122d2e569785587ff1bd13fa5c3e185ba":1742,"4a597f527a657846210edcc69e2b20ff1ba02afd":1743,"281d30d758dc9060045ada1b3d326bfe3ef668dd":1744,"47cca4684e18c928d5d32b290b4c1314ac156953":1745,"ac23150fd2be43fcda9ad12dc118c6b16d96cdb6":1746,"a684535693b4949e4863d0f60178ac3fc6638e82":1747,"ada32ae63651f544801647b7a6fe16f0f6146996":1748,"1f85559a69fb385b9fd7d6724c6113e743ce6fec":1749,"e7ba4791e5d4c6c185fe68809f1369b4674403b1":1750,"f56fb72f984a212e698c27799b5d10b9aace59db":1751,"1f7a7b32d721cd48447017340961bf5ec80d199a":1752,"4e7163ce05f135918205c7855ae60a48e5d46cc5":1753,"eb95406e2bc46e14efac17a771a21989a59a6ec9":1754,"baf927ff5115ec62a6dad684b9232ed9d3960e3a":1755,"8e723e98929b68c87ce39ff9f5c2d136a2ed8a46":1756,"90cbede58882383173963809c90bf5514cc91648":1757,"31bbcc3e197cd69c0bb806107448aff2c1ae8b15":1758,"ce7cc5119c1e031bf1eb8476fbf5e55bef738f94":1759,"2a5eb8299b2fa13d57d1d4741d4f121df1c3e883":1760,"83f827a00b552de4f3289c9afa09b49422514ab1":1761,"729b85ae8678ebd998a0e5f254817683198d0610":1762,"3fbc0cb79a2e1208cc94309eda5205119f938fce":1763,"de9c3e59f0e3d1248849d2eba7e7e04925659d41":1764,"f303b81bde52ba45228aa26a69a2ac25c01c10b3":1765,"102b18acddf7ffaa962995dd961eee1230f67b3f":1767,"25a166b8c7ecdb1cff7b9cfa1b2d0268ff6b0671":1768,"a45a1de7aafcc048118a60fdcba8d1d9d8be9fcf":1769,"2455aadf7b88f3da8e1f260238df40fbc768c208":1770,"f13d04d28cf1eb8d6783416d8d3a1d71d82df846":1771,"a037a44582b83b0799d8580ab9c3aa8fd7ab3dd7":1772,"fc7ff65c6d8d1b75ad904ddea95110e91db2b987":1773,"bb880058f6499510cff12d98dc7d524d35d769cb":1774,"adeb82ef236158f39d875592aed7ca43b11e9671":1775,"d19d0be8a04745959ded069b83793571b77cf984":1776,"79c5948b16e4a01517f74927df45eb56934bd99b":1777,"f1d970a4aeb992805e04ca06e04db8271d77386c":1778,"5d8e3bfaffd1c0edac4f03b41767b101dd75c482":1779,"c622cb637a2831f9c2bf0ec7b80bb65440e9afc4":1780,"0880d4da26d5db48c9c1784e6c4d53aaf473ef59":1781,"7f38011a04ca27e8f88b300713c8dc05ba8d61d7":1782,"16c8485a35efc36cf6ccd15185282d65412e1502":1783,"0e024449b8322f99534c1901ac6acc6611ddcb1d":1784,"257ff4893114854519530957c2eeb97c15cd359f":1785,"85a0e8075f433fe92c9a4f2df3c86d14000580d9":1786,"4a99e6f49308c1294a60a1e879f063af6d952f8c":1787,"f92c8a36709efb1514846b3bb672c40e4fb4c672":1788,"83245abb6b6503772f39625025d64caef84b513f":1789,"f71e26268338d2840133264329bf35a63011bb5a":1790,"5234d9977d637668e66b9e2e9f0456c6f97f749e":1791,"8bdac106312c88e2f3059efa067ebbbfc7467360":1792,"619d4535cced3be482ea7f0a5ac1a31573e01119":1793,"37729a52fdf3eaa4789612559e955d23328a2b8f":1794,"39d329103f5b5556a3155c736a4ebf582fa18d17":1795,"66969fb2ad6161d2d1da87cdd6fb50e1e6c970e5":1796,"60c1ad026d084b62fc963330af0b4802346eab7d":1797,"47154aa8b2564ccb72e233a6c3c449c8edb53001":1798,"c23035cdd0b47afe3717c1a25f13ca075af0c1a2":1799,"1b00451f5748ece669127ce9986ad77e4285bdad":1800,"b9bf2051cd9c62de75fdd0300d2801c6328a80cc":1801,"e33ae81ce1c13f80533d6c997fd39ab7d6609dfc":1802,"95c1f5ddc87e60906e47db633898aec685a50252":1803,"3f5ae16c62b031ad572f750d81ffc71c5d6d1f9b":1804,"6e189f5ae6af20eb9d27f954bae8c5532749fb1b":1805,"bde194974447853ee6dc30a72f898fb410c7e46b":1806,"6130b02524059069413c1fccce5695c2802019b8":1807,"1fcedda6689c88acc055ddfc43441d58f2f99ce2":1808,"602d0dab9380c4bae92f58e00ef35661f541d5b3":1809,"30637108dd3977884cb81741bec248c9eb22f4e3":1810,"8d839ead046f3b377135509a2264a9e5fecc98ba":1811,"2fc51d9cfa8d1b5e1a3a5b82b9af34994e286879":1812,"9dac60ad2d38ae934ea37a5e90096cce8d950e08":1813,"726eb0582b23bc90f4acd496ebb6a08be1d8f3ac":1814,"c094da92331f4a20abc0e3da6c7f64cfbfe1885f":1815,"4b5ff0c5e2a05fbdc559e48646e360da43d98f75":1816,"4e82baae8e9c69e68b7ebfbe4df8fec8103188b1":1817,"32e56fabcd221c9ce2a35e98f82cf070a504d907":1818,"8aef442917e82491f0fc66426f71f865353d94e2":1819,"e4c286900e29647f5ac3cd49d63d06bbfb98d078":1820,"c69e2eae548d4a68bb1b91032e9825709155a8c5":1821,"3aca47b7aa4bf2d9156d62b9d6bf27a6761890c9":1822,"d746dbfed7b8493d9ff46fc5ef824ea171993782":1823,"a0364972fcf5383078017914cc2fe75a02889117":1824,"f4c079d450a5990639b295d40a3d1663d70412d6":1825,"3cc7adc7c4c12d3b054f904359a170b4a5ad43b4":1826,"2dff84e66fd3c26a08aa214ee9a8d8d7cccb396c":1827,"0a1a714f7e700b3d882e3485008fa5a24cf80584":1828,"4a2e4420b8af50ca066905d99e7d7938c9105258":1829,"7b9670b63b486ba3b6f8a569552d307282dbccfd":1830,"4fc6f5472441523c1a46d0d273ba8b216f96250f":1831,"607ef7c6009a24ebf195b4cab7b0b436c5afd21c":1832,"cb6e7056862ee6991d3d884a92d36bebe45b8152":1833,"7f6012c093ab12ab6e215d9bec8d3eaaa5dd9ce0":1834,"ac1c713646bf4e59115d825f1e1c4984517cb68f":1835,"61130584270ebffdfc43c4ab802c6b0b75f1504b":1836,"9aa1dac802112e8fc3c805286c314335edef1bdf":1837,"e5ed3bee99807c502fa7d7a367ec401e16d3f773":1838,"e6e53390cc4c2765a9104fdbceed79cf41f07551":1839,"a9c7712eb8e464cf1ee2f35662dbbfe5046cd77a":1840,"e5a77abcf8c651a1abd3949540ce6c9100ced4ef":1841,"40b64652f9e4601dc79242239093b4bd834a584b":1842,"286b12f5cea3f2de4c64ad4e5fb86ed62b74ee15":1846,"58deea0ad05147ff6a5789b55a6f29315d0630d6":1847,"b79b985988fd3f9e09dcab506da56a9c269e9149":1848,"8aae1b3096eb4e810231a7c23f6771d1f1a19400":1849,"79417664b2ef50f4224b660c5514591b1e94514f":1850,"30674bdeb45241836bc309e42f008e66908f65e1":1851,"313b24dbc24b64babf53c1830c2b23170ee1c269":1852,"70079dab1386d1b5ffc80d05591597d015aeffde":1853,"a559367956d870de38375a51e919a2c06c004e26":1854,"b7d27ea58307e9201c1196cf2cf523205cd8ab60":1855,"8064582626f4f2e012352750fda839ae3f975127":1856,"ee7ed39ac8327124e74dd7ad5f1de0dede988cb7":1857,"37d4c57630636f21e3add8d3d1c7c978ff5fc8e0":1858,"16843e239d95f5e8eaaa06d2a0a6e371298fe11f":1859,"f1ba8d8f86ad1a5c8b4777f969506c88272549c3":1860,"0deaa4b629faeae6832046c294dc7c034a0a6653":1861,"eaae397c42d6744153bf8b520077875deab58108":1862,"a18fdd61dc21648836c0c5bd5dc0b95a9fb142dd":1863,"8c58ed1a0c3d18bd080ef1b551fc3eee4ca03668":1864,"0aef24e2cf52d155fc0fe2ea64e97120abe74e99":1865,"e99faf93ff85b5fc44dbf664c2d8294e7b071464":1866,"c15c737362cd756f271d627221fee5962dc873dc":1867,"6950ead0b0a8373441dc8f8d3b2c316e82549ce9":1868,"c65799e7c509bd21ce8e2817827ddf51d71e8c94":1869,"39cd762c6c1675304dc9a3ba9637ac405a6eb211":1870,"7db1759b656ecdc017236165c756ceb4488f5711":1871,"a5aa01beec96441d9653f51c42dcfc388267e0e1":1872,"18b1e6d353501a30a750ac12da68bdc0f93b923e":1873,"c37e09d7ea1880ec128528085cf9008442041deb":1874,"87e4bba31eabfd3b12e42b5886dc9da08d2daf13":1875,"3ff951943f60ffbfe6c29325a9a9c39195de54b5":1876,"d28b2a194de1a1e2cc9bc1902363c3ad77bf4d6f":1877,"5ce364d8173ef82e0e95fe47a1528def602c3005":1878,"f434123a16e65188d944edba335c3549337b7f6a":1879,"643c24eb95e702dc0a59d26dd57d21c7e3ae3611":1880,"297935b34f48c20a2152c6e4a32723c5f682c86e":1881,"50ef0690b21cca416554212e5a56461650176414":1882,"30b43a8aac56ae9bc09c687d99415c05b28c6577":1883,"1a2a18b66cdbc68e1af70b6818abd71fb586be53":1884,"9b8d40594a1aa6451ae6c98d518174447face04b":1885,"0f57ce8f1a3d6b4f3a4b65739d719b8467ff5d9c":1886,"4f6c75f83a37c79dc6339006aabcf4f8eb97475b":1887,"eafce666f49f13011849b6c0c40b271676ec91cf":1888,"c93c8969d1c9fbc6f926b9760cb3a230e644ea41":1889,"5f7b24f7b42950f81a609d0eb82a9090751ac2dd":1890,"eacdfa0b7a5c587755b89bf12adce1042e8f423f":1891,"dc416ef328f2e69a59654d3cbe0d02ac8a5ec941":1892,"1a64b02dcf061bc4a60eb7e9b2a0ae674b8d34be":1893,"d56a21ebff2ca9fe83e5ee167de2a376378ee2c4":1894,"35eaced2084861a44ef41f5d74170f0b9331965e":1895,"3d62e24c5f9ef27642406f7689d45051dfc4b0c7":1896,"aeb7ba52590922b07d533b21d2799d6b67b75d9b":1897,"ad4515fd1f3ad6f517896c78468f0d1ba87e7140":1898,"e589ae22e427e47127961d89aea7f0116a5cd9d2":1899,"d24cd63fff6d383e09443a5f84989f6cada2a1d5":1900,"f118921e3b9f9da6a7cb1b4338c2f3c613dccc6a":1901,"891e289d0fb9bfd90ef2b9ddc422af879f811a2f":1902,"b714772c07fdb2fbb337557658bcea713d051a0f":1903,"8214cc0e56e201c0cb4d5eb6069570e40f2f3cf7":1904,"37bd114925b6e6fcba816638beb940696205b0bc":1905,"37b7dde54de1d2130f070aa5faedb737c4655c4b":1906,"3de17c695007bfa4f1a76a756419588ee0b1e343":1907,"78f4212ed42e112eb571eeb1aac2957b81f3d1e6":1908,"299ed092ad605cc7b0f093727e3da8396d74d921":1909,"010f089971c5255c8f6850caef671bcac759f1b7":1910,"f3bfd04bcfdbc9eedcbb925bdfd10427f821975b":1911,"b96b570628e89a075f5dd2a93c18c7e9694b786a":1912,"dd49272c00668387afc257c430c78cc7f73c2da7":1913,"61b68155c30c8a95fa8ba794160bcbf2380fe774":1914,"f99fd3867bd388d7abb31b59699631051905bda2":1915,"73733bb3eb8f5f1cb375c34d5b94182326312b4c":1916,"304d91d2a7718b7122f429a714fc99cfc63dae36":1917,"ec871585fc6621d75b66349e2990093967fece33":1918,"7cbe1ef9ca6fdfbe32eed41478196d534228a08a":1919,"43257b61aee0948fdf9a4bcfb9a9d6559454fc72":1920,"a2099f52929f2e118638e5e61c0989b92a915f49":1921,"6482fb3ee41670b73a1c6c3c17210d618d39b946":1922,"906d16a7500c768c9584ccd6cd76359ee77a32a1":1923,"321dad9b8e7c78290d2a2d9b2e4613b504e4ff91":1924,"153ec0329edde3142abd944206d67f679847847a":1925,"e68e62c8917405e33155965303bb263fae68fcb0":1926,"24d1ef4868ba15eccaebb26ef651877d94c83e2a":1927,"9b32bb22c1e516a4931ac647656bdf07bd7332be":1928,"4b072d16f261baa88eb3079d3ff68be53e4cda76":1929,"4bdd165fccb957eaabc57598aea9a39a9e116d85":1930,"27f3cc1b9c3ef6f5ff46478de3ee92733b9b6e4d":1931,"069a9c75ad325716ec0bd129031cc2f517ff2bec":1932,"65a1857824492a2582b9f3638276f9b201529e5d":1933,"eb19fc013a3487a68ab02b38518d9722c7edc9ce":1934,"96716c060d5c4eaa13e11af300b469c9c79dcee0":1935,"61c9683d712e5f168b34ca79d6e94a10bb30e59f":1936,"4e670fd05e439145b3f46dd2c54d332044a72954":1937,"bbd96b97e47ccc2720d8f3410ff44690f3d78f9a":1938,"51d11d4e19ededef3ed8eb0c6d9f04d5215e1d0c":1939,"30f18f0f7d6248b6792eb2a1deed50dfec23af89":1940,"40da0e5ee62b07196f7dad19066be28202bfb12c":1941,"983aa69aa193676a92b8b9f7180789c4f6f31485":1942,"6190ac0882453f52c673db97b03bec49a26a9085":1943,"22d5ceb1f28a274338f854cc12138c3bcb0cd70c":1944,"e929f5fe43d67794ac55fbf279eaea4acd4e96e1":1945,"b15a082d56fb9fa8832109970f40312761566c0d":1946,"5832ab85019d2916e51f98929f4a73fe154ad12a":1947,"8394975ec7da4b7887c042d750b86e5a8584195f":1948,"84edfa3d0c4806ab94ddd7ffb9d7d4f2a3fece91":1949,"3a3d6bd4f61b679a87c30685e8ae8280570b3ec3":1950,"159cc8ddf2bb3c661562d1486c88849bf05573ac":1951,"fb7da07a13dc34340a4d4900836f41f569d54afe":1952,"a1383e2250dc5b56b777f2057f1600537f02023e":1953,"a56c917009ad16b74f98fa3e453b30332a264efb":1954,"b337649d14f4107ddc3fb3f85035fd5ac851d512":1955,"4a956ab1c2ebf59a21ca3e73f04225b564b7eebe":1956,"cb8105e223237d5f676d3c4709539a161d7a6c92":1957,"a42612b4a788841f8043bf4d4ec1440c337bae25":1958,"319e5226e900bfe9fb066e2baca10c22a547ac02":1959,"6466ff39fb244390554a8354c5864fe90cd37655":1960,"339bc81390580433813b7d99b9e626c2b5acf3a9":1961,"c1f6a0306e0c25610ed077d78ce156137673b9ae":1962,"6302fc67713d5c9ab88eac76c956e83b7d87752b":1963,"6d5d4b44b512eaa982adc1f8d03e9c649b5b08d9":1964,"952a986dd13dfaf001638558d9e3c24aa31fb936":1965,"1859b04071521c78fc0a0286bb6897d5440432c5":1966,"c1231d426f389475b1dc3a0e1dcb1e0760527d61":1967,"7b94143287ee47c73d3f81328411d4191860b952":1968,"ca16bb7ae2259672f5ae6b38e51d3a8790f6f05a":1969,"1f24d32b0022066059f28de5c696a2e928817168":1970,"7717f2366f764bce20dcda94228ee98accccd0d5":1971,"570a0bf8f54ccb3b9dfc3fc69779294f5b848eec":1972,"e1d80e28580bdc8f70046b407761df2c6630b742":1973,"f6c4178aa70c5adc3d4ccdba02dae6b88b08197c":1974,"cea1824f58128330928207918c4756612b5c37de":1975,"0133d96be397ab725813880c47b09973bd867787":1976,"0339d069d9a3978ba59dd9dadf8b326f2cebd2b4":1977,"62ffc7de209589400f012b063bef38a93438a863":1978,"52fa41c3df98db6381e99ae5afaa4905f763abdb":1979,"7b7bb25a24deeeb1ff4304b9922c05aaba8db5e3":1980,"ce02221828185d864a1b9226478afd8ce50b6661":1981,"b6b57605eda23e200975931985ccdab79da38c90":1982,"a862f7819bfcae928c6e6d4170ee0783a2eb7e3e":1983,"48e1ae334f2c25f0587dba412bd00ce2a6ea0593":1984,"a290cf8cda13f90921c3a2e2c421f909b202f241":1985,"6e29768eb60fa060360a4cd0afaae337465a5064":1986,"dfb1c7dc9e1a0504f108c06bb15fb7c563215203":1987,"d757f378d31174738220178df59cdfc3286e75e9":1988,"f67f8fc4c5dd5247fd89af34eed11ed8c249ce25":1989,"e02158e8c15cfb8c589c0efa3ad3730c77bc84bd":1990,"ba9f391bc066268dfc520b7ddde95b8700bd9740":1991,"16be5bb3771c289d7710f457d0b49297e451604f":1992,"a83b1b9cb3114308ee59b842570787a9c0005b0c":1993,"13d2f365cc278b7636260814751e351525aaaf6a":1994,"61509aaea57b767dcdc47e2b74842c3c462457ca":1995,"60a71d8a8ca9c30a1b59b46d0e5e560b80047908":1996,"50cba82cb9e877052bf88f380989b27dd6029bd7":1997,"20eeff9ae433374956cd5f2bccf08042734405e2":1998,"06086a90e04070c1a558355d43edf9f8b2d2a74f":1999,"f0527ae6852bda50d3b15b91b8f0ab683e4e4bf4":2000,"06f746a5769e3ab077b0280afea39cff1f15e034":2001,"875132370101cf83ee67d327d6a9985e0421a91c":2002,"1b70812e7d9f90ea19beb478b6e679c1893139d9":2003,"33fba3bfa1b3b104051e69d14142cdff0ac0ccac":2004,"98849dd1cec1e8c28b3debd3ac3676a867e5304b":2005,"20a627183f48c779a978cbb5e195598853d516da":2006,"631b66190bb378e64f49f49cc7eebfd306210f16":2007,"cf8327994db39d1f9ac864cc7a21770a0bf4f948":2008,"988ea995c49d24f83aafe9bab6a1490301c7cfa3":2009,"03905e47536563435039a407cd90d0e4707a18c4":2010,"623f2371eba0096cfbac4283af6b7c6e32c13d30":2011,"ff2d004f85c02a95c7077eaf5dff8d67fd3e1fab":2012,"6b1f74260acd8b0a05e22b376c6854e82d079040":2013,"f56701f30ccc24095785d7ed119a54f58f3a819e":2014,"de21c8a245915e3313eab009ba17fa749e78f4ce":2015,"c165fbd29852b9eb457e12fb7acc5b34dc2d4647":2016,"4dd8b111714fc42ecb1159629695ffc2089316a9":2017,"eed0e7e7a3775f835c5b63b253573b9c5ec3ae36":2018,"3a92c26e36640158271c3e3243e444060fe7be96":2019,"d4b533d41b5d9f692aa19f2b2731aae04b119bb2":2020,"ee0cd292d764ddbe6ad2645fd696c5c4ebb067e6":2021,"a9655b7d37e68187fe24807400b4e04ca37d8099":2022,"c27da0c9b21343b2fa5e76ab8cc2dfccf5572715":2023,"28f5cf398ed8752d22f28e279f04910aadd5c677":2024,"b0f91095bdbea79a08577b88ccacd711e5c154cf":2025,"2c394ad00ddfac23ee8f0fd92ad05cfe00dd8cf6":2026,"b97a2a258545bac1af67133982918904737bb5ff":2027,"39b5090f8e5fde9af6b88e4970458f3e5868369d":2028,"cd89f90bd1df5d3275668191881cddf16670e956":2029,"22f7451e6c7538ed60331b4a152fcb483fe85e7e":2030,"9843789de0bb6b6894a0eab20a3de2953ede112d":2031,"069d783a910705d0a51d90ca237daeb269944697":2032,"5633dfa6f5828e095435cb609834f26fda523c98":2033,"dc4ba08d17ea156f800542f4a72756726c09414c":2034,"902ad4a17afe10dd4bf7a1a484d83c9ca12ad12c":2035,"8601ddc73ba5388f5fef5638cc3a6bbcdff71d7b":2036,"448486ed48169c67e21393ea3bcbff7cca6eac9d":2037,"82279ba02230f934eb723e0d8c1be96dee7f452a":2038,"ebe0c79594c77fe346ec61cbe8ceb72c41653cdb":2039,"5838d03291520fec2e2f6c3f1ca3ffca309a7326":2040,"997ce1cac7618ed0ee5236bca48991df3a68455d":2041,"681c15eb4e541255af1d7e1dd4e634913f26565c":2042,"d486f52cf49611b5d8a73e2a13d16212572cb1e9":2043,"8b304a683215a264c3dae3f659904d05d2ebadee":2044,"6730ec84331c97f0c07f05faa6cfeb0bae5cc415":2045,"f7b437d086c17cce1c1fe08e89ee589ee5cf43d6":2046,"085dddc69d135724794f26e25fc5b37a9d60bd29":2047,"76b8f25edbea72df2e58b86eeaf201cfbc86eea1":2048,"654b6a27d10e9c144027689cae88e49389a4ef0c":2049,"322a474bf2597ca749cff9e3f383a0d2b2edcf8b":2050,"04eefb86f46a43d56f19b4c63581c03eec08b2f4":2051,"5664936497434a71523d38f9db55e092e0b14cb6":2052,"ff1186c834c54d5d6dff0561d864bdd85cbcca37":2053,"e5f5cc951a2c4425593c0840b156d935db5a303f":2054,"62f65d8697a6516a00df20ba8819e2a7e99b921b":2055,"3ab0622b9619cd9b60f6ec875d02d581d96be41c":2056,"be4c4953b7afefa3589cc399c440061663e0b068":2057,"0f71f617998dacd8c2ed8e7fa98c3e8ece4090d8":2058,"9cd1057c3e185047d78874845e52f142c579dbe9":2059,"99b115b120a94e6a1a8962fcd85749f0631dd539":2060,"932a29a66a407d42abb670f352a903821f768fed":2061,"d8c3c5ef0a83ee3311c93412acf938646738e020":2062,"0bc684a7945d725bb55ab445d76c02810ff6ff50":2063,"6deb7b0db45c1710d4ad655ed9cdf5b83ffd430b":2064,"4c20e76b4b3cc03e6661763c5985586554ab4843":2065,"0a2f4c86bd9fa97d376a012400270132b4d7051a":2066,"386063bf9ee184ce863c8f63352c0084b75f3422":2067,"587b54482ffe97986ccb10791add586f8d452467":2068,"45ffad09d8de3779c74b63b9b6d7ca2e42aee4fd":2069,"6923d84785569a944ab3cf32daf42a05a2588ca4":2070,"0a61b7c996f94a7cafe7a538aaa6a65b636522ad":2071,"52c0098f0d0cd78fed1e4580bdbdc70b701bbcce":2072,"75ad285860cfc6a07a8904c954d523aaf66bc75b":2073,"25468478e3e06af59b7ee42ed176e36e6387442f":2074,"94b5180db08a48cc45ca6e33cdd0f9da686da484":2075,"d3a16a2e2a4db65606a23d54ddb656fc864ca583":2076,"2c74163f598bba140bb46f7fdaac98f087f9c7dd":2077,"7d8cda6ea0ee0502f7bfc4d08b36ddd91ab8cd80":2078,"1d3652ebe60926034d05e1a822a39df2070ac5c5":2079,"bd1fb97d5c9b57b8d5e57242571f29bdc744ea11":2080,"1aeaeb2b903487914eac78cf084d2d411edd14b8":2081,"55750b1c62c30cb08184038aa50a21c2f5a31033":2082,"1bace575f03b451734f2e536c2b3b04a85bb75b5":2083,"7f6dc1ff9b6f4325475e69e8980aa164c19ba6ff":2084,"6b5a4cdef28826e9d9dd1fd9469515f4721e2f5f":2085,"3f86546bb45d839761f3f5d6b1486f935de795cd":2086,"99ce5a24845d20c7404fa1249777de38e2c69307":2087,"868ad01ecb6cce36f129102fc7fa510e1792fdc6":2088,"215da5eca3c1ec7901b6ed43d85e52c30685648b":2089,"1a67b7f86a5d262fa74eba8f6d8937b2d3c1f844":2090,"f93f8ded96365c29a60bc79175286e9bbe799fcf":2091,"e8f935a630546592ba640646bed5d12f3833e567":2092,"5da41be7b82691aff1ee3d66dbdec5add67cc241":2093,"97040ce67b42b35ee6dea0ac48d9a54c39b5bc6e":2094,"0c960c2e96a2e1c780ca58ad31dbc9fc2628ae5f":2095,"b25bb230cd12cfbc92b1f19ac25991c143a53672":2096,"2638dca48f535bfb6991a924370865c4f5507d93":2097,"38cde8572914dbf8788a3e5dbdda0efd2056134e":2098,"1d4c0532d7833285da8d970e88e21e458690d6f3":2099,"21f1ca58509769afead8d78119ac0b61fcd5e063":2100,"8f7720aa25fafde77ee372d0cdbd9f8c1e2d1fab":2101,"c2514db4582a2a17a90667f62348d9da8348896f":2102,"80c2c4080de0663996a1063733d122cd9978a3d4":2103,"0899da3697fe651b6c997dc51d217a3eca95b112":2104,"78ab4379d3f44a7bd93dc678f2cb120d823395a3":2105,"18e865d4fa54c44454cf526cc6a290003aaf8667":2106,"61c1692c9bfb262fc6aef0133dc60df707234ee9":2107,"d54a4e6d4041c4df746ffe5fb4fbba74a47ebb67":2108,"64d2dfa2324ad936364673b75d6e68e7d16df3d0":2109,"19b6b7ada8a3310e3061af113de3e3ac7eed6084":2110,"8b542494c3bdd990fc4715ed96b0912b5adace71":2111,"402139f686d495d82d7bbd246068fabe46d3119d":2112,"19f29c380ee96a345142013e2be0e52d3ff48720":2113,"d5787278bce7d551a585da4b4006bf02b4c0eacf":2114,"e87fe7b71f5c25f09bd8d6d3a14b76822ea4b03b":2115,"52649593744241b20c04a9e4d8581ca88ecd7dbe":2116,"c1da40c08dbd746287fa150c172daf03d06793dc":2117,"89fb55c463851e4d9ef8a07bb9e0373c68bd872f":2118,"4765788a115cb8878f06fbab51e5c3aaf6046e26":2119,"5e177bd658362be737f9b59e9b5a3eac77522d6a":2120,"24814616b907dc21ac59d439faad47fd3d9d5976":2121,"4452341b55913f6532f1ab9e5c4aeb3f85ec34c8":2122,"662dd448750b767e89761f3bf28f29e24b17179e":2123,"9318e1cc4af0f80fe557b044e1fb8de91b264a55":2124,"782040d27552abc2de993ae4ff032d7ea83d49cb":2125,"57dc3139cb0bd94daeb6f9dcb357ec87f0bd40a3":2126,"4515fb5c4f4f00400d533c75bd4d483b7b9296e9":2127,"611e1185be25a4f9002a4f5815269af6541a5fc7":2128,"c24ce076e9fb1eda4f77e724d7906ee550bf32ce":2129,"34b534c9060497ddb734a8cd55bf97cd9daec5ef":2130,"062f0b0b217f9866e110db03b878c8d0ab2f569c":2131,"e2563d7a8ec2ea1f053d96a9dbb2ca714d25cb18":2132,"c6705f5e40fe155b5325ae448c147e5d4b1aa1a6":2133,"96b18590fd27e2174bce2c81ebbf9736793a95b3":2134,"67edfbaef8594c21df699a4b7e1aff07d926b9fc":2135,"cec8383cff10f620e93a51a5a6c22bec048950dc":2136,"6aad7fb992e5cbf06229b55bd31bb7b8c8fd01c4":2137,"7df10557a57bb0c3e5e0bf832ec2ac4e6b664a96":2138,"3e9786ef24da5ab027dcc5f1631a2598ebb26505":2139,"3c8cee2f8ddaf82ac1a9e45a61fdb3203abadd87":2140,"8385804c55938e482adb7eb8cbd982bb20397980":2141,"5177d5b5cd402a729cd92568f2df6d6bb950ace0":2142,"c71eccf95f32e2cf552d094cd5a693545153f1b9":2143,"f039f334f50a5c20053927fcf1d133ae41c25d90":2144,"83c63cf555e60a73802296993be87cf1b0a6cf1d":2145,"15db1d7c3a47ab64bddda15230f5c61b9bb342ed":2146,"344d836d0f973642b833494356b519b7d6361fe2":2147,"49b739dec2aa7f5ad385019f2668624cb392551e":2148,"3c8e87d840933e1d910da6c2f43d2de6d2cfedb1":2149,"7fae9959e9490f43453fac72054048321abde1f0":2150,"b267a955d8d8ebf3aa87b29d1b23b407f17df461":2151,"9674a7b1bd00730b5de3b87bacfbd6f69864304b":2152,"a81d7b1e7c7424e5ce892eb21ac3a426aa2473b2":2153,"6dd72b6416a5ea14814c754291b31b576d187b4b":2154,"f03dbcff949262687073e5764e52ee884b5fa23c":2155,"ca2bcdf8889ed75b9a6bd4a8c1af0799a2917868":2156,"112b59efbb7a084798ca7c55c5145a077bf867bb":2157,"b81c581b38379a83875e5506470b763835c57d02":2158,"7fcd0f395ef32f45b0b8af0d4e73226e672961e0":2159,"47e32d0339eaaf241c5f48fff061d1df906e9519":2160,"a57300fb9ea6e65fe02824304bd3f52ffdd8935e":2161,"2dc3eca47dfd0d2413a24c7e5213aa91b6cdb5d6":2162,"4078a89a27b624b4def577ea808b92a97174d0a5":2163,"7bad4ba648b2db6ea9c477236ccb68359645c96f":2164,"8d549fb1c0c339ea8e8b642e850996823d79d2c3":2165,"2efd6aa17970d0ae65cea0e3f8593b497cae9825":2166,"45ab50673e5ed78502065be8dcc5a10b6e7f4285":2167,"d59b8fe5d746a4bcea86f650206fbff5e4f52895":2168,"c5751ce72cde2785ae778dd4a3a39f712cb7f808":2169,"9a62b1dab75d52a4a49785c23c8f58b6ad0599c1":2170,"86a2e4849a288efa6f35f8bf931d336ffc7b9703":2171,"c96a606e774a91a87acaa931fd296a8d07e27baa":2172,"f34340033e4fc3aa88a15aa952663dc00235e7fd":2173,"0020146f24e457461767f0583a09aab6d32cf6a3":2174,"7b41d6d491bbeb7d9f9b2e2680e178b0821e26a4":2175,"34edb73332835f7fcdd6cd57c8473b31f1b61570":2176,"541840f8c16cb68d2290322fd994886236cbd909":2177,"488ba18a1399a7133714d0f678c26762557ed309":2178,"b60d340e085bd050900d7bfffd8c7b647a66e55c":2179,"562d8ddcb99b25b14924fc0992ace5f955650893":2180,"a797a3597558b715b7610dd8d0ec87754fcae9d9":2181,"ce687e4bed9d5ee8f67e0cf32ac79889aab07aa4":2182,"f6b7ec4da0ed11afc072d613fbbab9d1db9154c8":2183,"4ef84b9240035eccdeb8d15a5fed2643f49332e5":2184,"d9bc6f70781c5cdd8250e5be718633eab1e76f89":2185,"dcc93c914496fb64c7738408bcdc2f5882e0df6f":2186,"d571a91e4ae55441b3430a2cab740fe4046c20b2":2187,"3d855d4707b399c0e1e85644719f392bd294f367":2188,"8fa8ca8b1aec464fee17c571c7ba5c7e87d68e10":2189,"66c8b527e8fd5c2991826fd3408bd55394151d34":2190,"c20f87a6541ad0869ba63f5fa8ed3ecd5199401c":2191,"ddc5d437bb307f3b1dd4b1741bf03677296bd9ce":2192,"63c817cc55919c129ab6b574f99ab1231eccc909":2193,"bbd26abedb2d37ca4ce201523146c2dd002833d4":2194,"c034bb48b504192a35b07762a8b5bebc0b3973c7":2195,"913b244bb528534b1669638a7257593b1999c2d1":2196,"615c34869c06b894346b06fd0ab7357e3ea7b507":2197,"625874a48c974f7ebcec0f1f9efe4843e7d863af":2198,"7bd61f8ca40b4d6a5ce6a571165b0ac0ac4dfd10":2199,"1379f4efebb7672478906059449dd6b60fc4806c":2200,"8292b68acf30c5770b7e90082ba92525bbd89606":2201,"d4ff9ce39fe434ccc52a7ae5ba695a646eb659a4":2202,"740bfa5dd02379cf600f2da544f3b3a8974768a7":2203,"1083d1f817ae5a2c4f61d1ade3349667ae59abb5":2204,"22b70b050845dd1dc5fe312e6246070b46f5bc73":2205,"4f60ee6bd7d23917f79e10c05cc8cc81bc490192":2206,"dc670f441215e5d7a69d8013da51bb767b88be4b":2207,"5857d951dd7343183b3ac2acfcb32959a7a3a274":2208,"b2ca7e0b0a4cd9f3b12e1b108ad48e144b443292":2209,"166b6d07479da6983746f10a1cd3a1ffb1e21fa1":2210,"09f5042adf250d278517498cb6e81e4af77e75fc":2211,"2f102680458be6825d9e6a2929808ee1cc0a5b66":2212,"fc68cb74e52c1044b0ba1caf97072a4959c3ed52":2213,"ad9cc8e716e823bce9e57243710f2c59f1bba75b":2214,"10a4570282c1182624b4a3f75f4621cce560621e":2215,"b1bc71a51030c26f4ab1e3d6d5aee3975647c47b":2216,"1a6dd16270640be7c114d1f70501789d37fe5c66":2217,"fb190fb6ae207938f9e21eab2cea07bef362f683":2218,"bb19c48faa0e743efca0440c0e0c2e7c1162d13e":2219,"7a2c253e24f439e5b00b141ed455d96935dc99ee":2220,"798809ce7341469b4f827f9de23bfdbc173fb3bd":2221,"aca068462ff1c63f34427aad3294553631098fff":2222,"85d8178d87b95d6c01cb022d9b0ae0d7002e0d55":2223,"122327d1c676ec1c6be38b8a9553f551448db0aa":2224,"707fdd4c6ad0d3a2c863a0a9a2fbdc07f57d4949":2225,"5818d831c5b92a2ec415e4a59cf6625a757c6249":2226,"cd74a0988688cd79d143ee927ac70390f9816c8b":2227,"2144dc2d0fad2032048498703dfab2a44252a6e4":2228,"e06343431ab5cd6d0b63a942259e6115560cfa95":2229,"d38bbe354b19690b232d960673a559677351a9e2":2230,"cb68e2cd9be2b3054223a8608d935c258db27f33":2231,"207396101f3cd04c981b29fd31fa921d13b8dd3e":2232,"411d21b2b19c80b1ee84c8563d987e3cb9906525":2233,"eb52c66fd01259c57f59e98107955416cb74e6d5":2234,"5230c19d8bcd0d220c399a83be4971eda0efa674":2235,"1688f3c167fb5858276a445aecb4177d2f29c7aa":2236,"4ebeda216de6cfba8fea666295ff38fb1a2569ba":2237,"d208eea478d9cb025d1b209d530b155921c2dd75":2238,"e53471dbaa21d6a063de63e0662bf5b0f707bbeb":2239,"96fc677d25a5a69522d4316f1b2a179fb66d621b":2240,"31e56df122d32e81bfbdbb2394836f80d224fecc":2241,"0826f85a025bc11859cd4c8a9893bb8f0eb7a0fa":2242,"3c0483af52cb1f502be7c310dcbeebad59a58d2f":2243,"682a0d65c6406d47b664ccb971f7df4e7e223843":2244,"260af16edece8e4bbaebeac6ea4f5d765dae44b2":2245,"9f65cf6bffd2da760804f1edfe10c5cc8bdc3dfd":2246,"16bb1dc210fba22db0a4ba0eac38da1777a43aca":2247,"625a0e97594ee4e8ceb05f1c949d2625cad147c2":2248,"97409c236396144d94c1403ecd0a2cb69f12a036":2249,"67d9051bcdd6b5c9125b90838a93216ed24292ab":2250,"696090196d7bbd1b347376f72432e30289509720":2251,"7e0ee5301ef8f2302fd7f6ca2b6fb634cc337e5f":2252,"44981e4f5e3ad103c2321dbf37a0aa01d785e27a":2253,"a0140093ba73ea2f00d5c49e35152b4a6c3bcc5c":2254,"bc9f6c607f2dd7b36b5b32c8662dd0c7823bd001":2255,"de07db147f183dbe559ebb5bc26e505444c1856c":2256,"cc2f01d31ffaaf5b615cd033741cb96697b1c2ab":2257,"1642f32d1c568dea0ebe4f6e7d8e68e994815276":2258,"8494f3bf2559eda4b712070fb3b8aa8a961faf21":2259,"53eb53f4afb1014f77989f1e5e132eaa7b89d1ba":2260,"4308fb462d8a606916808c6d97adb58b3bdbbdd2":2261,"1c22b2cd98f89f0f6c7112d9cdfa35ea2375edd1":2262,"9ef18efff60d0bd1832b5d7166c79fea58874ac5":2263,"91eb5f8d2550a117fec3a41c3e2241ee13460dd0":2264,"6f09cb471b194dbdedfbe96b4f3e3eb94e98331d":2265,"8202410ccaa872797582d6c71e6f5ad2d85874b0":2266,"43a805fc2750e2777b30ef4cf5e3261a942a39a4":2267,"eeded306fd0a3bd73ef2fb52cc439fda653f47ec":2268,"a1d359d20e4884a8c534216482933e0a17a6517e":2269,"8b2c26d736ebbf96895b0687254f344044932643":2270,"9103afa291f56c2ff0f79b1aa477369ad7110f98":2271,"1b89cbf817c11642917b02b53fbd5d9305d6e59a":2272,"9278a4b7b1e22dea6c6a6b6e06ea264946c86c45":2273,"c90e697a3003436ef2cf1e4e1965e50528006ba0":2274,"a9ce5bb5ea4a55a94949b01691ab126bee75f286":2275,"cbb11dbe6c269a8e78e6e3500ba036c4a718f93c":2276,"b3282c290e077a571eb6619b45b5e786406105ba":2277,"a0f786f02203d0208d6e3be85288960310e4e9be":2278,"72098711b7e2321570b47584aacd679874425c51":2279,"3c8a79cabadeaa8c356b7789a8b621464d643b2d":2280,"372457a79301b11a26d4d2bb3a07a2aa47e685ed":2281,"16199c63d86a3171132a8d08d7d85aad42d36bd3":2282,"6f5d899248e92d2b0f5d54d65d911a99578f7672":2283,"c6519a142fba527d50edeff386e0d35235d7d996":2284,"2380eff265b5c2b41bf7d92afa32bf585c12563a":2285,"7f8a3d803cf1136f3e502e533c5a3e1dc8cb3163":2286,"7d55c1638910c1af33727065f404c358e2016fa4":2287,"595d0ea8b0c96b42249bcd8b2e0d53592cb82846":2288,"0fbfdf16992a8084626a12c6510c595dc18418df":2289,"09959efe41fe37de9e0a6ba457518e4449e3e399":2290,"ccae2a75ca8c77163228ca4876430b24462f1297":2291,"f16ebc61c9ab55aa01873e8f099e59ff5eb0edc8":2292,"515aec2014c7f42824b20a353c235b52ad4daa39":2293,"fec64cd698f961e1d4868929e83a24b73109a4f1":2294,"7b82ad9b987c7c5f0eda6d55c313a04bf6c5494b":2295,"ff2a76b5d572930eef0f2798d0c6f5781603ba24":2296,"eecc9ff8f1bb79592af8dcff8e60291fa64a49a4":2297,"9974d932b29bdb97b777a97a77e94d2ad38300eb":2298,"f69727d8498fc653b8daa3d1d075c44aa2758eb0":2299,"81e5778718f9c9714c4f377d3862541b82f4e996":2300,"fc73052dc2970aac5c232e74c8dce9215c9137db":2301,"366948840ad87f68e36e29434d07fe1c3f8e093b":2302,"36e91242fd6ec5f991865b41707bcecc168e3ee9":2303,"648e99e3087221f919065201a3be18dab830793f":2304,"aadfc39a12723bd4e28bb8a969264cca96ca523f":2305,"1045d627335d7f595b52ba750d6a7ee6ec25c29c":2306,"881476a7afec14b5ef03f8ff6400849af3cfe632":2307,"2ff3e2e0f4f127c02e2ca9bb764f9ff98217a449":2308,"cfe3e039ca95b2373377f1800105a7f029ef21a4":2309,"b774c3edfe4c540c3c7bbb8b2433e92aa02950ea":2310,"05e8e0e7b407736f72ad500528cfd19c01ff8b07":2311,"d97fe8d4dfa468f8b14a96de07e288aab8c253f8":2312,"3f09e0a3d82541d251613596a57e1d8adca90629":2313,"0a224352ad5a2ad138e416d567e0542a88ae7ff5":2314,"386de8010b60c157ed70403f2c829a6bf37a8432":2315,"44ec65b1e11d5b7ffe2f3e361e27c2758bf18944":2316,"42a8ff87ba5798a8b4df2385c9c902453d04deae":2317,"0cf128390f245b27f39c22ea52869e5404bd624b":2318,"2e856d2c1629f4f065c4b17836b1d4904fa8d117":2319,"cf5ff5a14cd677ff603b55ccf196e2913837008a":2320,"6e861419167d6ada9c621a261b0fc4840f7802b3":2321,"1469acaa7fad002c4e1613a949606b77da21f582":2322,"b029ad420151d76ddbfb2674b26dd0988a488d83":2323,"3fd6bb51f08dbcf855420b489808ffae00ee4c60":2324,"0a32b57594f36971ebb61c5299daf008018cff33":2325,"f28bd182b04bea6f2cfe5d9d2b10363183c9df95":2326,"d0f9b7386b164611936a04743a9ae2a2da06828a":2327,"7ed7af2f9fb88e72d4d0e568c2b6782e18bfd0f5":2328,"44f2d534b162edc5da6f03d73a44c993b7dcdeb3":2329,"e7c1f322a466b807079ed56e569e121a79918258":2330,"061f523b5a744a651eb9bf54ae99714756dcdf38":2331,"555c78c5136f49370ed3c9d60603891431c2bcc6":2332,"4d1362720f2cf782b7f1c3759d09aea7c0e10331":2333,"d666b24255f07a6a94acb430b7d25ffa16fd15ec":2334,"e8bc8d76ae8870306349793094c498ffc605d392":2335,"f5b660ac9775bb4f8ea49322304b965bbf52d2e4":2336,"1c8f45f7860e9d97f8eb5e4dec2f0f58ddb4ee41":2337,"45125e64802b7f6ac758cd2c75582064fbdc78f1":2338,"dc72037e1095ddc5a6edbc6772bafd070b3a5687":2339,"a22790bfed00803826893c983360915f57cb8290":2340,"d04de1fe1a9ccbcd48e96849df646d04c9a91d14":2341,"c63855585302e65c805de8f1a615038ed2479078":2342,"9e757a604c9aa264e5cd5018fa2ad139c52b67f2":2343,"359d4a2869759e7f95958c258e6253abe5bd031d":2344,"04cb86899cb01887f0455dd19b66e9a8ccde1560":2345,"047f6f97d99e3192a1ea33e6ff0c798dcd1a8c63":2346,"c7532f0f0b1c96e2b68940b4953d5e48f38deb17":2347,"83d4a41dec58e6dc72dd0b40161d022d75f056e2":2348,"ed3809c3181ac940ff9c89686180e2b5580ee50e":2349,"53adf3b19c97e88d6db2fe15eab8d5401de6b3c6":2350,"95bfca8828f96128f0eb94ff3b3cbde5ff6a8a0b":2351,"8204dfa186ab3e7a88aaf9482fdaddec833fa18b":2352,"d4477160290a6a3c11ee05f6439e5cb60cfd75d9":2353,"31e51f98fa0a22808481aa029f136dfe97db12fb":2354,"a5be5da2e83485a81153571eff8946974dd7ff5b":2355,"9f7300043b34d8782ba7bca41b4f4b8d4af49397":2356,"b3ee84d361a15a38d89e9b27de59e01ec8f4cf27":2357,"53310ac152bd58c9d9c297084345f6163307436c":2358,"fbe34d4ba5755effdde6389992d5e9dacdc74cbe":2359,"1afc70a3327494f0bdaf18bc96c98ada0a6c287f":2360,"8db737a58302d90b414d572953fe8cdb0dddc452":2361,"17500545a4fc9e44bd8467c295ca8e4791470e76":2362,"25058ddd855b8877ee1078cab022a61677065f86":2363,"4a7991321d9ddd575911359affa2d63b830beab9":2364,"764e1a0fcf7dd10616e86b09cbbb87d8e503393f":2365,"55f93b5532643e38e9b84aaddca477f60d5b65b2":2366,"714567139288954e861dd1c6e2a81b454b53b1ed":2367,"be8e8f7528d03ffc55defde653fb82f08e3068e2":2368,"072bad2ed530f5fba93abec477d2d7ed83cbd400":2369,"0da6e525b7bc24a203cd5af76fb48c6954a38c41":2370,"3b08a1f82c312a68bd889419ab4d3536d9d802ef":2371,"52d10a68cbd428f90e91e3dd91fa5c06acceac5b":2372,"c8cf5d90aa1b8bde03258ea2dec550d1163bd3e8":2373,"250023a68da6959856dc28c36a2caa614dfc6db7":2374,"8404f71d147f888b489dc0c3e297f7c4cd074d93":2375,"fab9a39d9ddf85048bbf1e1f0e99267f24e54cf1":2376,"fd4d32e7338680fbf838a242562bf759695f7330":2377,"10436443fee70b420c8376dbac87a5ba891c5529":2378,"6e6426627e1a6ba7fcc625a2e6805386f9fb1ba7":2379,"4e6525da7e19d3d3980057967b241dbc8c62ace5":2380,"59ec70ce77c0dcbd5c22cf4de7f6ef1d2d3c0954":2381,"1ac3949a93e4bdc38f7720317593cf88b94560a5":2382,"cc3bb60317e17a0ef747fdaecd0b1840d3142feb":2383,"7bea34038dbfeae3de40f462eed7c96aa3df6eb8":2384,"529f801fde4ce90da02eb5424beb8ee78769d797":2385,"b25c040c2c0978814add19fee645470407c7292b":2386,"7597d5011e1b82aed0ae2bdd07e8ef1721069bd8":2387,"4cd41edcd9bf5556e685ca534bfaa34d668f22ca":2388,"608bce502377448ac9d23f4a27e70bd750458603":2389,"e46b251324d5fe7225797124dedc1c02311e53c7":2390,"0e3fece02d574f2bae16b77e8a44c5dd2b4555c6":2391,"cec0745aa26114b2022ca8bd855088140a4d7253":2392,"1d716ec259bcf484ec0bbd3de261fe6f2de39986":2393,"76dfa8ed608dc22eaf42ebfe907b1ee7419a3577":2394,"c8bc4db52ff529780b1f66271f899a7fc02ad606":2395,"a65e166aa7f2c131ff3c21b4e5b40e154912c59e":2396,"762c36b6fba497ed1cee6f135e50ec9b31b0cb6f":2397,"c54fc70f13d877f1e7c02b989f3752113f40874d":2398,"b22aacc68ec9b35b627ea783c167da0c7cb20a88":2399,"b77e629f1ada1f6db1ed8a9a346dedcb95b17848":2400,"ea00c51e24c365b1ac2aa21e0f409bd7f105ad45":2401,"f3807ca17b54f0504ff0041b830ff72d4cc1013c":2402,"64793b3f0d926401631a311559427a09aaafa929":2403,"37759f4d646cec8f859ac15a3e89955b29959404":2404,"063609280eebe237e49022c1ed7f5f4f946233e0":2405,"5fa8f2f485b71dd1aead6e07bc67d3247489f8d3":2406,"9dc2c5b83dfcf9abb68bceccf0c11c0e96688037":2407,"329cf12363b790a8e4c62956528a50e358e09e44":2408,"974a2268bb6315ea2d513341f3ac75018e8c753f":2409,"4bd4fb1aa4e85fbe58d0c94a14740c7e993e07cc":2410,"48d327d0b4d5c87cdf276cd9c7c0aaf63edc9d59":2411,"6a9e4048aa7a2896735f0a54c180cd30c350820b":2412,"bf229e93eb659f52a062b064fbecf93f4a240e8e":2413,"7af6883098689f21eedb8db3bd7d19d24d9596fe":2414,"74f06b1f998bf66378db1d310dd533b0be172928":2415,"5dd51bafef2564ece854f7fe1d54349bc738e528":2416,"5cd4e83bbc1046a6e55669ca7aa633eeb6743d09":2417,"f9d4856289aec52a8671631d5f2841152e178bcc":2418,"0a6493b5a8274c605e34acb1e66b054fa33c6f59":2419,"cd585f26ab6bcf64d4e50cdae15c916f7b486da1":2420,"89cd0677dceb727ecaa9519b91ae23414427a4cd":2421,"b10d5d7f08003059c5d241d4672329089d653dda":2422,"4d1d1eb53edebcc4f26b9fceed5026d46e068798":2423,"6b489d97533a859ad42ebb05c7781d4680a85271":2424,"43d0ed048d2c411acbac03e6023c3204601378cb":2425,"5c8c4bec4606109aef9badfc47e75096c7655d69":2426,"d6edbdd436c5c0ed46545b95a22f8775558c7be5":2427,"791632cf06322cfc502254ed62da63ae5fc9d41f":2428,"680797234cea6997bcdae18a8f4090ded8f4d455":2429,"c1944660f5f41e6246de6afef8029819aab2be0f":2430,"81e8aa00164f17c327b9227e1cea5785704abd7c":2431,"463a6ffdd497525bf24ce75ef743bb13e95ae1dc":2432,"70408d49b172aaa17a3e78daaa0ce21eecde093d":2433,"6aeed46180baea2cd3e83df0d05926360c3f69d9":2434,"c25a92d76b4b07657fddd472c21e73881259164a":2435,"5113cc1bbc7436c6ad0cb3a15a8051c74870c522":2436,"841158fb6acd4f85acaf52c35c32e92ce7712a40":2437,"3b3e701a27cb3069885012f5a19000f633003132":2438,"a13e41f328e63c179e7af133bdc4ceab64676cae":2439,"b2024c531c441e0fb4e30dd49a866f31079011df":2440,"1ce7d5d0d418d5d7b398672be0d4214839375046":2441,"17632e447c38a581b75f0572f17e203ed2aef7f7":2442,"48777a7f5bee5234d7b77eed3d657122fe9b25dc":2443,"f0ea13846d9023abb1702b34461954d96202e20f":2444,"20777bf0c5442ef8585d8b53a6f62510cb87c1d8":2445,"2f732c27280b22aefb45cd0aeac18dfa738a716e":2446,"d1f83dd95a30fe9d7147ca19b4bf31ac80361189":2447,"a3629daa2ce797cc170e12192119c690a9c59a77":2448,"b84b44d86c1eb0fc38cb79ad834acb1880f758bf":2449,"410f3a33753815caf4cf99ab5cf95806747d4327":2450,"b414adb1f331fda4acae7e0afe34a093232e40d3":2451,"bcd0fd00e3e221c8078a60cb0a1cedc729f37c72":2452,"8604da7f06a210aefb09aac2832ee23eae34ab46":2453,"47b6027c37db666973aa1dfe0a31c7ccc3ce6740":2454,"2350d11dacfc56d933f761dc4731768ca075ccac":2455,"c112fdc3987b98e209068c73c4867ba4566c97e7":2456,"36a91e30f7cb3d12408a90cb5d5d73116fd65630":2457,"1336b913d0f199285fbeb744146d9324e6804b4f":2458,"0177aa62da31e89d91e7f15edc4f3f87ce6b58f9":2459,"dc3f16a321f5451f73ceb4b257192169663d941e":2460,"882ede30531dc6364527aed1ef6e5866be1ab7d1":2461,"07d720ec415b4b0e90eaaf24ebef7ddd11332d16":2462,"09ff5c4c44be36b0a781d0ef2d6e742f59dda0c9":2463,"12f982cf6aeb02110ec30d8b4f1063dcd0ddf30f":2464,"b0607b71271b75098176e9f630a831bb4235a7c2":2465,"ebb75c23a1f66eb4ecfd0f990d4eb397fdec24c9":2466,"6997dbe13ea08bc29f91a7953f10f87664124a23":2467,"d9f7cf819c754ec95363080ca6d118b075452aa3":2468,"dae713f0adb67ee00bdfa65fa5170a18766c0003":2469,"857aa0977298997b099d5ac4aa35f74f9560c8c2":2470,"8dc728126e3a721bcc4871c4abc33f44952cf439":2471,"0a7010458a67f19ea064df18d6daae6a39d94a42":2472,"8b7bcc4e8073847c7509d9af784ac576f35ae224":2473,"2b54dd5e8fc452766c88b8c5021d865988ac3cab":2474,"c05354ecc408da0f111a85a605fdaaa27b76f140":2475,"fdade92c20d1d7a797175dc901348de57393ef1a":2476,"fdaadb78d6529f5b00e487bceeacbb865c1d8b69":2477,"731a70ce1328efcc5a6c1c624ed67a259132fc6c":2478,"ac36cb4504409229002a2bf3845b0f81b08a94e4":2479,"44d931c9d58bef1b82af4a8972d797855e11afca":2480,"86a62d0da3454732fe0e762e9716a4cefb2ecf2c":2481,"2d538fe6a6e6991e2dc929954c0bae3e791ff427":2482,"011b136ee057af3554e64e816e6b98113c2cd8ca":2483,"891b0eb9193352c2c8b5ea15f164e74bfb7147cc":2484,"7904a8559284bb66d62fbc3560748bd5ef1822d4":2485,"76aad1a07bb3896198cd98ddf053d53a21ffe790":2486,"0aab25fabfee7fccb69a1017a3f5c0ab66e78837":2487,"645bb1b1ba20ff6e14aae745da00ef922f6df3ed":2488,"78f173c47b88bd4ca8561f0ab6e34706c954f2ba":2489,"615add84639fe78656fb2741b75f4a77a32ad321":2490,"5c57d0d64357c3d22f62b737eded1605bb874f87":2491,"33177880c8ee87b0deb707a08c82103ed99abd44":2492,"f4bf8f8feeaa890d7dbdd651c74cd0662ff9a026":2493,"1e1387f12c8822a2df0d024e938f1b6874c50f25":2494,"bf9b2f8c2ce1d7bc9c1ec692fff7bc52c3b55612":2495,"b7a93d417d5e8a52be4f4bd7f1b64bf938217749":2496,"508b22c436cf9b0837e948dbb407d3aa25f21725":2497,"e1db94c0cb28c36aa568f08d9087e0b3e4fee832":2498,"4de3bb500c4d4c482ee63924c956c404b06960c1":2499,"7ff41d4322585afba38fe885de2c39be7eee262d":2500,"3b2470d296995e3b8508d67c3a918dfb9d348076":2501,"2373771d2ee7a870bd81f010044fab5e8ab55457":2502,"f1309b0417c9faa99cfb1902140b43bc48f13bef":2503,"c0a0c82b70f98e074988382735ae3ab288359ead":2504,"670f947a5cff9bd908a7ef688ef27cdb8b6223f9":2505,"c5fc4b90993e3f9f056287910c98e0e46b21ef8e":2506,"abd77ad439ee626a1423b2c27ecc11aeb509d178":2507,"c5c57d722a03f2d080e635a88966720f15e1aaa6":2508,"469c55f058045f3632da65efbfdde3ef1049e8af":2509,"925107046e1dabdcd5a0a802966e544038858cd6":2510,"c5ff1f2155281ff4e54e312383a849b7d064cfcc":2511,"e14402b1df1229945156dff36b01cab400d120ee":2512,"8033be880e2163d30a4099867f06493562e483b8":2513,"1a169aa3f016139d1de22c867911c2eeccbec651":2514,"cf191792668b27267790ee9895314f6090896092":2515,"2500f148681aa7abb05129a2abe7b5fd9a7b3d9c":2516,"d54fe47fad0a47e8f74a973c2ecbf734bf59ddc8":2517,"82a04c7fdcfe76badf2cc8b477d814d077ee9c10":2518,"24f19608d4dc319377f9eb260da2bbba618d6b23":2519,"b8cdecb5170a232a919df88780f6d2a2e19244aa":2520,"87f225936f4956d9b373d21ce0c16476840b9c9e":2521,"8aeaa5e90a94b26c58b39c1aec7b4f69107d2727":2522,"f4c120d6159b22a1f2d136091f302dfe505de66c":2523,"ec58c05f4ee7245e6f778a1fde1d2a1f8da5d6e9":2524,"32732fbc86a902dc187116807634e83363bab570":2525,"bc8f6943bbca8a03c82c0aac1084b95a80a1f395":2526,"690093effea97757ecb2d104a5499579b272aa4b":2527,"c7c57227ddfbd9a5ed130046b0124ae3061d4417":2528,"56b53dd5dc307c93f58e66ef57251911fa8ef382":2529,"4e502c5e5a8c324502ec00ccacaeebf5e87c4cbd":2530,"2d95ed4b2536f305a29963b111165b0fb2e09f99":2531,"41f30cac90b873042e32446c1339319b5be07fe9":2532,"b2b5d2777e1ba05f8127c28e5f006896ef0fc12c":2533,"7976ca2cbcf127d8daa3e2a32591e8d5e6355e89":2534,"6ff7fdebd37872826227cf9a880e24412e7810b5":2535,"4f7fe371b28251382c9b710baebd914337d9b23c":2536,"a7bb1d527898477118f228df212dd0c56e036cd2":2537,"bc9ddf20bb569b6191b7dc33bc80934e7e73f376":2538,"dee9c002672717fc1e1afecde9fbdd3c26f06078":2539,"9cca7d2733bfa388599a8c2e34a907f91afce011":2540,"d5851dcde0751f7a8fff0ef124d4ee02f77b71af":2541,"73a4ecfae10affc700aa29806c693bedfabf7671":2542,"3d4c4951aacd479241fe07407154db05242bb53d":2543,"b0abe13ed2c7b468a333139301634f6f7c29828f":2544,"8805509f28f33a10f60910a3a15fbc1e38628089":2545,"6f72caf92d6d07216108bc06423b78603255cc7d":2546,"58782c556a361e2cc0818e14c29dc59d16d077f1":2547,"218944fe6a95a97e66a60a2eb2c2c8f2a8f44876":2548,"648fcd906ec17703afaa14fe673f356537a7cef2":2549,"5b55e1ad9a7f038a9048dc9e8358302c0d7b1670":2550,"5cf643aa422251553a68759ace499fd8b4f2cf8d":2551,"095a71e99d2b0a2339662cdf75d0bc23959b1c2f":2552,"dd1a7fa2b394c6d5906c4416460436c1f7736cfb":2553,"84f2f5ee90b0081f09aa8a646d9f7441e9617d89":2554,"9137e4a8c95d8bfef9e15673c3fc4e2bc087d92d":2555,"1cfc63cf8ac7bf68e6758044b0c338987e1c1f50":2556,"5418f64e1e9c32c1e9cf5f3cace283b281f5a6ad":2557,"051f314a99ff29c07071e90eccd56f7983dda32d":2558,"af7b6fecfede35f9119dff3b583c059fd22d4896":2559,"17573d771a3136b67036251b98b5eda7897bc8dc":2560,"455cfe5932e9173b668c5b10a613cc3c112c64b7":2561,"efe74b695d6454a2ef9541253b1bbeab04daf5d7":2562,"fbdcbdf748ed264a4f72d71d55cb076d3de7f065":2563,"0ea6c1e09f5122f8e6d68731ca2e940817e61535":2564,"d4bc8e1585af89d9798558383d0e9ea00c53b238":2565,"788c5e344dada75adba69d20f59c0f7972e25f33":2566,"2ffa84ad4dfb3c840d690fc9a88451681f1b032d":2567,"91b9a92336a5226d61a8313be8a5d9eb8cda04ae":2568,"eb24a86e1b8b539bb6b8d91461a39c6f5eb4acc2":2569,"b999ae3cbd3d3d6cd8053e2ee295a367251ee315":2570,"0012576e2bc8f0e35fdd88426a8c34183ed66ae3":2571,"228d56bd8e08ae28fdf5c0cf4d1227a719953b2e":2572,"23880790515b91d1c9460f422c53e4abeab22ff6":2573,"d3e457303e3156de8aab9627ac8e7d4505932c19":2574,"40788b57c98d32a0128c47fde97dfd5b7c4e388b":2575,"e839a1ca58d7b44a89c3893eaa140b5331b2fc00":2576,"0d8ec2a8d86eaf02572eb0767436e84d05a6665b":2577,"57769489d569ccc035696879d72ed42aeebab678":2578,"59645c6a193da9f0215cc656b2e18bb22ce296c2":2579,"1695003bb99b2908f7bf704808164331e730020c":2580,"793d0a92b99208e3af4e92430eba6d1825a4a6ae":2581,"35a80e16241308b4f476875d0f96282cf697a029":2582,"c98ac6e82c51d2ca5320fe75a23a87d0568ecce6":2583,"84ffa5610b0e44e51c349b9a17e0f69f5900dfff":2584,"abaf8347a5f485ea35f2e764b287e1fcca5ea323":2585,"a835641dee0ba6083501e5f66494ac5eef87013b":2586,"685cae6021ec9dfaadcdf9ff0695d6dd16ff70d6":2587,"93387f272efa5dcb94892dfd67fa3b5621104276":2588,"52975ae407eb8362bb639b08831970bc7d00522d":2589,"f213b096bcac20fb8507a6262a9500dde77544cc":2590,"76e24831a66daf38caa2a2d7249252d89cad34ff":2591,"c7ab2b6aa389a93c2b0be6f17389abd4bbb5e64a":2592,"6dc72b690cae1a1b8a2a3b684051951a9faffa1f":2593,"09acdc8446d9444cdad59a85b74df03b37a91463":2594,"12f6306420cc25546960c880c86b79ce04e7ff7a":2595,"ed90d5648b0744a5331e6c6ec047c0a4966b5073":2596,"26be30912daf9164782badf389b942e86442c98e":2597,"a7bba921c44de205d48a078a7794e29bd7a64b9b":2598,"897f7dedc1f260cca4021699bc872293769c4998":2599,"ab6055d85d0fa496b10bf4151afee980ced6769d":2600,"f6a2ccf6b4a6ca1c34c0ea4b691f5c51b2d295e2":2601,"3d7ce8ac19d3256d12f211afb636bc60f6e0c122":2602,"e2014fb1a3043c180ed645174230d670a9601342":2603,"f5b5edf2a38169f384694eb46330cb98bdae1984":2604,"16d3811d500c5938ebdae4325a0f951818453ccf":2605,"0676163f5241c235bc4fde322f0de4cf9200f932":2606,"97f6a6a7f7baae614bd1f683852998a940c0ab1b":2607,"6e8c85dc84721cd4ee119d0ce6a3220263aec05d":2608,"c898c7ae033a46a10fe0f5b6c59459a6ef4baa08":2609,"d73f9f0f3338fdf4c972d0313808fa6c10fb30ce":2610,"e116cce61b6982a7c411402a9dd23eed67d12abc":2611,"393aa6865b9385704c0e997c5b36594da5b3a334":2612,"6fbad6e230eac6726eaea8f47c5453dc1274e70d":2613,"652335b995a8473e848c45a55fbf1b7a13f64de0":2614,"54f0a5b221f81d1daa680333ed0eb605301850a2":2615,"4d1f8cbfd63ee22205b9bd1a8f2e03bc7f963a1b":2616,"7d6a3b433ffc47c136ecdff0abad5e07e0de25e1":2617,"c413105da7de507499e8da49b5148cf12fb5e6d5":2618,"95964bd95fd7cf40e8b9d88671e45d1544cfe2ab":2619,"fe3b87557704752124b6e4eb60be1a67844b9277":2620,"d51f2c96cbd23077fa93314631c379d21769a3b4":2621,"9f681fa9d609b0f2014f33b6930e55da43a1bd17":2622,"a60beefd1bd2fc7d7975f54147d64a5739fbb120":2623,"4abae7a7289736161c94cf978851c274e3a483e6":2624,"39e63f0aecb4d7b143bae8327a240dce2662a1ab":2625,"dcef87af6655e50c4d978b294f5b584eeb0067ac":2626,"d3ce4347d93ceba31c6127c96a7f85b413f2cda6":2627,"5ecfd4bfe92fe71bb89f286f84d0a814a107f4bd":2628,"5d60fa7ac85e775dd03951ced422ff967e68afc5":2629,"ec86bea132aa34da4d7cafbd05d8ffe60b7f1c97":2630,"41e1d6a6a56b4ed74fd62f3a168d1a9fd1d481e3":2631,"d3e63a319b513b9e7ab02e2da080820d88cabb97":2632,"a8cab84e04c8dcfaa62bd405bec8a937f4ce8535":2633,"41eb2f22d02a6a8a0d7b1c601fa6b1d5deaf398c":2634,"6d163d9fd0fdef82558944f505f6773824bb2bee":2635,"eb4d261e24d14e6b6800d521a5b3c41ece205336":2636,"d55d3ce89a95c6fb43d6ed176457efdc4d8f77b4":2637,"b5a19c103605f56e107da5bf2399dd8109c9c18a":2638,"850487401d0748da3dc15e487f4fc77ce353dda6":2639,"fb2317b63b36271c50c01064ed844efdc56cf2da":2640,"46e6297e3e41b8d3c72d9a10df98e26fb7869cd0":2641,"390fd2a3b8b1bda3b10c3d3745e5fb4b7bbd6388":2642,"5560d27764df5881e0407094193ed1d844df2df1":2643,"f4516c8bdd9cda1b0ed17073a47745281490d78d":2644,"e0b8ab8815f51f8c37a27301a50de0c10d709827":2645,"1f8399bdda73b6ae0f273607ca2e9e295d446b48":2646,"5767628039315e3b01b4fa2a4938709d73cb7a24":2647,"82a231412d8b02fe348587b03104c8d50d545c0a":2648,"aed6a37c1025bbb5e22e382887bf2efc2cec15fb":2649,"5191c81dff1fe7b1dd7be3c61d31728f95dd75ee":2650,"8925e8af0a77ea9dca069f65bdee5881144773ee":2651,"f2de3fd6d218105e98adbadea4f0eb0c59b66645":2652,"87fbbd5dfc109513ffeec5b5f1ce2ed758070aab":2653,"260c39270f8f5845d716e72ff55b805a473458ba":2654,"00c15b7c8bed65efeb8bf7e7a88d916d3e8ce9d2":2655,"228f4aee13b4b17f7424e975b70a08c15e002d56":2656,"a0bf4c55c465011507924f5dad865263085fc201":2657,"87dab2f5cd3e0ceab4562f9f9674182c048e4bbc":2658,"681e67b77581ab6ad83add383a727eabfe4b4690":2659,"d391c5491e19b182f21fd5d98ffd0c42df80a81b":2660,"6a323d3afed9cac0786b5fbbd59d2967cd0acf37":2661,"af6c6a5533b56a618cf4c1b74a1c4d73feb15dd4":2662,"6f3c50460ae348c6e4b9ac2169f818a8fb7fa3c8":2663,"855c654b25b1b876b9775d04230423ce8a65b1c3":2664,"0efbd40bafb48c5a4ddb1d3bc299eb123c30801f":2665,"e64bf9ad6c38069ebc9d3c02c039c1585bd9a34b":2666,"11e7f2a30b87b37999fe3af47f9f4087e35105dd":2667,"570788b1156ccad67ee8aa64a02495729d06df2c":2668,"7f18bef0d26623611f7be7f3178d49cd8a95f5ff":2669,"ba974ace1bff7b202a477b688919f94964e64116":2670,"d6fcda0044a986a9c14e1eb9234d18bbfe42e78c":2671,"27ffe641d65460df14e2fdaf7785c56cfe9f2df3":2672,"5470f9b1325f39f036bfaaa19b78f890fdf466b1":2673,"e97554ed10c6d1f5863ac623dacf7266b9cee0c9":2674,"1ce28eda0bf4a469d564d0f108f165291aa4d716":2675,"9acd081326c6547c4cc30e18d9804ddf2a1b6d75":2676,"3c6c3993818c5bc1c02b3bc444e3e496e2c206f7":2677,"04029518444a005312aa9c7fee50dccc07299a5e":2678,"d62f77fd2160333cd6d780552f6ef209c245aa8c":2679,"24d22b567a6ae2f7f0dc433545b91a2ff680c1d0":2680,"064af4286ec809e9ad7b8f1949c538c97d2ba283":2681,"10b8928e0e585caa984df948868cdc51ab99830e":2682,"e3464bca9dc0c654f0db331d4df366f1d9c6994a":2683,"94879a93b09b4a77aacb60e0ce73eef3ca8adb86":2684,"9336f58fa26de440023de36695628cdd7c8552e3":2685,"bf63b8f1731093e872d8060df10199f3efbe4e46":2686,"b43261362253c1fa511cb19887421fc5e63a3ead":2687,"3fa2a67ffbde9f82fc71d23f7fc5435f52a2533c":2688,"3cdb194c56403882231037151e15c48971e8ca37":2689,"aa5f53101f59340e719477f8a52c8eb3751f5023":2690,"9926c85e1fa101b0268a40de4e0ed919cb0b70b9":2691,"2beedf118187d68f5be5109f4d9a705a137472ae":2692,"37036ff44657c28b1291712579efd29f48cc1acf":2693,"f8319c3cbac44dc72c314c0f5ae5cc60887de956":2694,"95288e916e4fed9ecf4a36d8db7da465484d3c98":2695,"8fefc769f5274be04fa43f843dcbc1794bfc6210":2696,"a3a0d643054258483763b5f0c82e4a1849a3dc62":2697,"7fc551ecc3a8a9796248ba197d183a8773eb2dee":2698,"0d21e7b3b0633520838289d76fdf44501b97460e":2699,"c47a188fae28e9ba3375a53806eee19a27d040a1":2700,"d26e6dd0b4b95b61598b2a66413ed422c94c2c04":2701,"b8dc312b250241b64c6ac396116291d0d8b2ff00":2702,"b9c5232c1d5b08a62ea1f6111ad848fb26343383":2703,"8b7a288e4822a4a9d784afaf16db64fbd80495ac":2704,"9142c42df29f5cd7966ac0101ff0e5ec04fac0ee":2705,"d8e53cf150be0047d6c3a3496204e2a7e47b1be1":2706,"7b50c072f9a72d73a44b9ef8e0081cf5e4e86648":2707,"1db91bee3414b2d5d0bc2dcaacd78437249da823":2708,"318c9eed21071880761af66661f64bf93bc1c136":2709,"ea653021fc78133cb8a3adcf85b5f45b1d94b70a":2710,"c5d777338ae108b5cf04012e8e88d8383b294dac":2711,"db13f13806e6c701ef3b64450b7aaf3a8013c459":2712,"46f753a1840dd893cc7c48577a70ac5d42b77744":2713,"9d17b0d4c82ce3477c014044f6914fdbf6692f69":2714,"92aa4ab36ca9db4fed339e1b40cd2f46ba71c12f":2715,"44b83d3e77787322245d22631d1c4f4ce30c1800":2716,"be6b490fb0e1a65e06c5fb30581bb01b3f7e36f1":2717,"1bf2c7405e33fefe4fe8b63a57957f01718885cf":2718,"05a56bf1ea255ebeb45713ddd1f920ea9b6214dc":2719,"d131ecf3dd61ee766992ad4efcb90c93246d871a":2720,"75037cbd6ea0e81ad47acc59f8689c6e126033d2":2721,"e718576d4fcbadca08f46f6a73cada36b0de31d8":2722,"569fb985ce05c0e011d78da2eb8a3cc596cf1afa":2723,"6297a19160957a2d46f4aadc8cbdd856b9fc9a9e":2724,"88d4740d89478c315822f41fe66e7a1c4a994d38":2725,"80c02907147a36b9e52c4ed3a14cbb4308f34e6d":2726,"96d15ef6b43031d2afa1f253607120b686ab0713":2727,"98525aabe31576eb019f5a1b792799147095eba4":2728,"db2408705567791739853718710555422d29cab1":2729,"2013421859f8f18a841bbea537c2f205ae7f6edf":2730,"e08ce319ca6ef49b68dc66321d92d9265de08abc":2731,"c7ed0707a3221a69ebb89d64270cbaf039c7a201":2732,"85251f756c7dbe54cc57d432def31e78758e4a1e":2733,"42ef2c3d7779616fd9c4cf9d430efbd981f5d0fe":2734,"1aee7c79aa64218809ba3f8423c68b3a55b3036c":2735,"3228e4c1e9e9cbce6f4b1cd9667e2fb676fe74cb":2736,"6bb7f43fa3bb1f1a73ed4d84aeb9c7a916f0bdcb":2737,"4d95ac7339c820dd1f1f07b22282c7e45ffa9753":2738,"6974e4b2c7633f1844df0aecd77e90f68c16fbc4":2739,"9bed566bdb819f607c19b56d79b60c55cbdffb02":2740,"de607bd33e131fa2456b10550a3abed30c530c9b":2741,"db11860b73a385eb076a6a03e97ef631cd74880c":2742,"cd3bf78bca7ec58fefeac8182a6b95af843492c5":2743,"6b7e71a22fa68fc1416a0f4dfa8060bdf7365b02":2744,"1d8c4a9d94b920f3754825836eec48c3f6af3a17":2745,"fd6a5b3f8e5ed7bd4974d22406161de78529140d":2746,"546b52c323b56558e673a94821724e4081524cdb":2747,"b35e30e727a811a8b69decba663d5ad463553e70":2748,"96ae958eb1ed04a70de54468257402a3ba5bff1e":2749,"9195764ad71fd668fd0dc9efe7f7bec67d8f4be3":2750,"5a57a29dbe80d48f9714a5d21a16d6382bf0f6e6":2751,"371ddc71031d78cc2146292aab99d534f418e170":2752,"5540a1a43c2890cd1481bd236966a56f8b03d32b":2753,"743c424c660dff02595d077d308c1ed0723c6a63":2754,"dceb5f6a8f0148e3cd292204487fb5db62c6bcd5":2755,"05bbf90b3af78cbb10626a5a4a8e7fa88c80e6a9":2756,"c42f5829a1aea4c2aafd10583b339f7b0711ab3e":2757,"17e5cd2e36dd4372fb38bce9ef3b2a60894d5905":2772,"150887a13c303665103aed8aa97c604c462e725c":2776,"09685b5b00b3418945dca895193b9d81e2e0cdee":2777,"88b58591aca6b6237442a8c0483cd541f96d41a2":2778,"98f819c3e0c92d54a306cdacadda73cf96d21b52":2779,"0018ca5ebb81ea3b6fd62bcf348710470c642ca2":2780,"70a7c754bf3445a8b783b75ca2a7aa34cdeb080b":2781,"aeb8073c4a540010bb637d50790018041c5041c8":2782,"5819e4be5bd128556b0d735abe6b58173da67079":2783,"2fe34ebdcdee0f21b88daa4098a7918e91abb8fb":2784,"515d9ccd8e6df7bf2ca01e2a55aaad30226399e1":2785,"6422994f9031c70853df1063f6906571fa5e6150":2786,"91e1b9f67b20d4d26c0297704e3216912dd4011b":2787,"425983190a915d64db996e714b7e08991fc37b2f":2788,"0f2bffa11e17603682c99b353a2910e818a78716":2789,"747f455b074751040cc8ac0ede83f3880ccc488b":2790,"ef3bee66d113d49a9d381b408603fcc04cc3b5ad":2791,"e0a661fc4c50628c946a5f7a267be88c4ad161b7":2792,"cab2512a5ec87da12f9b8533661df330af732cb9":2793,"6c0d1a11006168d5852302f3a7fb38943c7e2c7e":2794,"17b4e7450d84a78b23c0baa8b524248d0de08c9a":2795,"026095a3c7932573e1810b8064ec3008ed696601":2796,"7730edcc1226c03a577ea699d2fb29fb11fccf60":2797,"a594545ac8547aba56ce4fc5a32ee253c8a66aa0":2798,"b73118112a8e2b45386cfbf3d81c7253a5cdc93a":2799,"3c2bec8d70092ea8f9ec134bbd07630fc049fa8b":2800,"c47ce4cc8e0708dba27a6fce9863e7c0d3205f5d":2801,"b60d17eccde74db90148cf7e5a74be28fcaa7773":2802,"5335e7d55a99f931f4de3b0c4b6ba52291030c2c":2803,"c1e5f005d79c436d90f474f8bc6448c4555a619f":2804,"4307e448997d4a5ab6f4f0bd1216e7910177fa3f":2805,"89e859fb2b5cf5c30aca3492fdb6e98fa87950a3":2806,"ed7d7954832d14ddc5a5afc037d84f6f584d6d33":2807,"f25e0f2f26e5e03db0ea26cb16ca57e0f4c1bb67":2808,"b9ce637a396f3cb3845105ba1f5553d25b25abef":2814,"98aff2fe110015974dbb787dc353f9760034df71":2815,"2bc58ef330b2d92ba287754282872699c151db4a":2816,"1bf0cd04f43405cf4353d7c5360e53149ecb9f2c":2817,"8545c0a7fa49686919a6fb9f7473ff9ff2bf22e0":2818},"documents":[{"_id":"117","message":"NO_COMMITS","milestone":117},{"_id":"20","message":"NO_COMMITS","milestone":20},{"_id":"63a853d9a329aa67c8cbb41a8950695f27cd8ced","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Mon Jul 03 11:51:48 2023"},"commit":"63a853d9a329aa67c8cbb41a8950695f27cd8ced","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 10 11:47:06 2023"},"message":"Merged: [compile hints magic] Add callback API required for origin trials\n\nBug: v8:13917, chromium:1459545\n(cherry picked from commit 030e1488af4d80c2ec19eb0da84438430e5f8446)\n\nChange-Id: I34c85bd72eef468e18a3595956ef6d6764e27e90\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4669544\nReviewed-by: Lutz Vahl <vahl@chromium.org>\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/branch-heads/11.6@{#12}\nCr-Branched-From: e29c028f391389a7a60ee37097e3ca9e396d6fa4-refs/heads/11.6.189@{#3}\nCr-Branched-From: 95cbef20e2aa556a1ea75431a48b36c4de6b9934-refs/heads/main@{#88340}\n","milestone":116},{"_id":"297b72383b8fd4335196c2861e051984756262b5","author":{"name":"Tobias Tebbi","email":"tebbi@chromium.org","time":"Mon Jun 19 11:36:44 2023"},"commit":"297b72383b8fd4335196c2861e051984756262b5","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jun 23 16:06:06 2023"},"message":"Merged: [compiler] only handle side-effect free interrupts in loop stack checks\n\nBug: chromium:1452137\n(cherry picked from commit f58b1da35ee8ce5c7a4aebe270c9e00c09330f96)\n\nChange-Id: I271b23a863beca2b69a8d9cdd0f0a34fb49338a6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4637131\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nAuto-Submit: Tobias Tebbi <tebbi@chromium.org>\nCommit-Queue: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/branch-heads/11.6@{#6}\nCr-Branched-From: e29c028f391389a7a60ee37097e3ca9e396d6fa4-refs/heads/11.6.189@{#3}\nCr-Branched-From: 95cbef20e2aa556a1ea75431a48b36c4de6b9934-refs/heads/main@{#88340}\n","milestone":116},{"_id":"9c25454c652080e73ad48a0e5478f8031cc99217","author":{"name":"Jake Hughes","email":"jh@jakehughes.uk","time":"Wed Jun 14 17:26:35 2023"},"commit":"9c25454c652080e73ad48a0e5478f8031cc99217","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jun 15 09:39:04 2023"},"message":"[handles] Add DirectHandle methods for Handle symmetry\n\nThis CL prepares DirectHandles, so that they can start being used in\nplace of Handles with the compile-time flags for conservative stack\nscanning and direct locals. The CL should not have any visible effect\non production, if these two flags are not enabled.\n\nIt adds constructors for `DirectHandle` allowing them to be used in place of `Handle`s where necessary.\n\nBug: v8:13270\nChange-Id: Icef7ddf5f3d6d96aced4afdcffecb3a2503b538c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4608338\nReviewed-by: Nikolaos Papaspyrou <nikolaos@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Jake Hughes <jh@jakehughes.uk>\nCr-Commit-Position: refs/heads/main@{#88262}\n","milestone":116},{"_id":"10455f13c54affa3958b9260b15c4b9cef939d42","author":{"name":"Jake Hughes","email":"jh@jakehughes.uk","time":"Tue Jun 13 12:10:34 2023"},"commit":"10455f13c54affa3958b9260b15c4b9cef939d42","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 13 14:36:58 2023"},"message":"[handles] Ensure PersistentContainerValue uses handle indirection\n\nA PersistentContainerValue should contain a persistent handle with a\nhandle indirection. However, with the V8_ENABLE_DIRECT_LOCAL flag\nenabled the implementation of `ClearAndLeak` returns a direct pointer to\nthe heap object. This causes problems later on (such as an additional\npointer dereference) when the persistent value is converted to a Local.\n\nThis fix addresses this by ensuring that ClearAndLeak returns the\npersistent's slot rather than the direct pointer to the value.\n\nBug: v8:13270\nChange-Id: Iaa51c21de80c21c86c650bbef517235397ae6c4b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4608333\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Jake Hughes <jh@jakehughes.uk>\nReviewed-by: Nikolaos Papaspyrou <nikolaos@chromium.org>\nCr-Commit-Position: refs/heads/main@{#88208}\n","milestone":116},{"_id":"ee48926106051afb784d8f39c31aab0d2a04823f","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri Jun 09 12:40:58 2023"},"commit":"ee48926106051afb784d8f39c31aab0d2a04823f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jun 09 13:27:57 2023"},"message":"[sandbox] First step towards sandbox CFI\n\nThis CL implements very basic code pointer sandboxing to ensure that\nindirect control-flow transfers inside the sandbox always land on a\nvalid code entrypoint. This is achieved by setting up a dedicated code\npointer table (CPT) that contains the code entrypoints and then using\nCodePointerHandles (i.e., table indices) to reference these entries from\ninside the sandbox. This is essentially the same mechanism used for the\nexternal pointer table (EPT), except that the CPT doesn't use type tags.\n\nThis CL does not yet implement full memory management for the CPT, which\nwill be done in follow-up CLs. For now, CPT entries are never reclaimed.\nUntil fully implemented, code pointer sandboxing is therefore put behind\na new compile-time flag (v8_code_pointer_sandboxing).\n\nFurther, this initial version of code pointer sandboxing is quite slow\nas it adds one memory access to the JS function call path (the load from\nthe CPT), resulting in a roughly 1% overall regression on Speedometer2.\nFollow-up CLs will attempt to reduce this overhead by \"caching\" the\nhandle in the JSFunction objects so that it doesn't need to be fetched\nfrom the Code object when the sandbox is enabled.\n\nBug: chromium:1395058\nChange-Id: Iad82741ed91c086bf1fe7b6de8759c0455ed8eb3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4513077\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#88144}\n","milestone":116},{"_id":"8545b83fed782b957741ce0b06e686b088adc3ff","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Wed Jun 07 06:56:27 2023"},"commit":"8545b83fed782b957741ce0b06e686b088adc3ff","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jun 07 09:44:17 2023"},"message":"[compile hints] Add compile hints to the streaming API\n\nBug: chromium:1406506\nChange-Id: I26d804f928eb34ea1bf5be191016fa13c7993fec\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4590332\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nAuto-Submit: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/main@{#88105}\n","milestone":116},{"_id":"6832ffec54bed96a105ca5436b4da4138d91fc8c","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Jun 05 15:11:31 2023"},"commit":"6832ffec54bed96a105ca5436b4da4138d91fc8c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 06 06:04:37 2023"},"message":"[api] Simplify USE() cast in GCInfo API\n\nUse static_cast() to work with overloads and (void) cast instead of\nUSE() macro which is not available on the API.\n\nChange-Id: I17cc5bdd8eb74c8058c3b035c93354594b29e4a0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4589669\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Anton Bikineev <bikineev@chromium.org>\nCr-Commit-Position: refs/heads/main@{#88074}\n","milestone":116},{"_id":"0ea52064e75c109dd106782ad2242e09e27b0f63","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Wed May 31 08:50:54 2023"},"commit":"0ea52064e75c109dd106782ad2242e09e27b0f63","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed May 31 09:49:43 2023"},"message":"[tagged-ptr] Introduce Tagged<T>\n\nIntroduce a Tagged<T> wrapper around T, for T in the V8 object hierarchy.\nTagged<T> unambiguously represents a tagged pointer, and gives us a\nhook to change the definition of V8 objects from Torque to C++ structs.\n\nTagged<T> will eventually replace all uses of raw T, however to allow\nincremental adoption, it currently implicitly converts to and from T.\nThis patch changes Handle<T> and ReadOnlyRoots to return Tagged<T>,\nand fixes the consequences of this change that aren't resolved by\nimplicit conversion (especially overloads and `auto`). Functions which\nare only needed temporarily during this transition are annotated with\n`static_assert(kTaggedCanConvertToRawObjects)`, to make them easier to\nfind once we remove the implicit conversions.\n\nDesign doc: https://docs.google.com/document/d/1MQ4kwpIwCtTHg7-jyBmT3bDVNwODmJk2fU_hH3pEjUs/edit#heading=h.djws22xta9wz\n\nChange-Id: I68b025e435488a87aaca7fd879b6ceebf97091a8\nBug: v8:12710\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4476731\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nAuto-Submit: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87953}\n","milestone":116},{"_id":"3cc08e81ef2ee9bbfbb241bfada649b5ca7a5bce","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed May 31 07:14:55 2023"},"commit":"3cc08e81ef2ee9bbfbb241bfada649b5ca7a5bce","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed May 31 07:54:20 2023"},"message":"CfT: Ensure that cppgc_enable_object_names mode always compiles\n\nAdd checks for resolving the necessary trace method, finalizer, and\nname method. The methods are not used and not part of the binary.\nResolving the names ensures that the mode always compiles.\n\nBug: chromium:1446931\nChange-Id: Ibb89e11af4b42d9cf326bfaaab0c6e058d18d57a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4573670\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87943}\n","milestone":116},{"_id":"f481eed2ff09ccdf43360367fd190883df2e79ec","author":{"name":"Liu Yu","email":"liuyu@loongson.cn","time":"Tue May 30 08:26:28 2023"},"commit":"f481eed2ff09ccdf43360367fd190883df2e79ec","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 30 18:49:24 2023"},"message":"[loongarch] Replace __loongarch64 with __loongarch_lp64\n\nBug: chromium:1448745\nChange-Id: I72a8172477352790f6c87517cfc234ee0f0f6031\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4573170\nAuto-Submit: Liu Yu <liuyu@loongson.cn>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87938}\n","milestone":116},{"_id":"2ece7e7ef06bdf0c3231f8f5cd74de9b196ab022","author":{"name":"pthier","email":"pthier@chromium.org","time":"Thu May 25 10:44:44 2023"},"commit":"2ece7e7ef06bdf0c3231f8f5cd74de9b196ab022","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 30 08:35:51 2023"},"message":"Update outdated comment about V8_PRESERVE_MOST\n\nThe comment stated that it is not safe to use V8_PRESERVE_MOST on\nnon-void functions, but that behaviour was fixed in clang 17 [1] and\nwe only enable the attribute on clang version >= 17 [2], so it is\nsafe to use V8_PRESERVE_MOST on non-void functions now.\n\n[1] https://reviews.llvm.org/D143425\n[2] https://crrev.com/c/4272644\n\nBug: v8:13742\nChange-Id: If34d9ca624735bd8ceae525d68bdb923241f79ce\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4565297\nAuto-Submit: Patrick Thier <pthier@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87908}\n","milestone":116},{"_id":"2963e167f637a4fca55aa4bdb2a6c081499dc6e6","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu May 25 08:05:32 2023"},"commit":"2963e167f637a4fca55aa4bdb2a6c081499dc6e6","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu May 25 10:36:54 2023"},"message":"[sandbox] Don't shortcut the EPT offset computation\n\nWhen accessing an entry in the ExternalPointerTable given a\nExternalPointerHandle (an index shifted to the left), we were previously\nsometimes shortcutting the offset computation by doing essentially a\nsingle right shift by (kIndexShift - kPointerSizeLog2). However, this\nwould allow accessing an unaligned entry if the lower bits of the handle\nare set, which is unsafe. Instead, we have to perform both shifts.\n\nBug: v8:10391\nChange-Id: Ia940c9227cc679aa69db8a47071a9c39e0416e40\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4565236\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87856}\n","milestone":116},{"_id":"a49dc69cee627007f82bd9860e88e0404374b0e3","author":{"name":"Thiago Perrotta","email":"tperrotta@chromium.org","time":"Tue May 23 09:44:52 2023"},"commit":"a49dc69cee627007f82bd9860e88e0404374b0e3","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 23 13:52:01 2023"},"message":"cdp: SerializationOptions: document generatePreview override\n\nThis is done for consistency with\nhttps://chromedevtools.github.io/devtools-protocol/tot/Runtime/#type-SerializationOptions\n\nR=sadym@chromium.org\n\nBug: chromium:1420968\nChange-Id: I97b4782af75d975d12549a86df505741e7f6620a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4553345\nAuto-Submit: Thiago Perrotta <tperrotta@chromium.org>\nCommit-Queue: Thiago Perrotta <tperrotta@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87802}\n","milestone":116},{"_id":"ce50641a7fd34ac879dff53e29c371bd318c4f17","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Mon Jul 03 11:51:48 2023"},"commit":"ce50641a7fd34ac879dff53e29c371bd318c4f17","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 17 06:39:08 2023"},"message":"Merged: [compile hints magic] Add callback API required for origin trials\n\nBug: v8:13917, chromium:1459545\n(cherry picked from commit 030e1488af4d80c2ec19eb0da84438430e5f8446)\n\nChange-Id: I673c9d92d1837217aafd5cf2fdd6243355628e69\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4678024\nReviewed-by: Lutz Vahl <vahl@chromium.org>\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/branch-heads/11.5@{#33}\nCr-Branched-From: 0c4044b7336787781646e48b2f98f0c7d1b400a5-refs/heads/11.5.150@{#1}\nCr-Branched-From: b71d3038a7d99c79e1c21239e8ae07da5fc8c90b-refs/heads/main@{#87781}\n","milestone":115},{"_id":"434e9ec835dff9048a148dec4427579c9f13793b","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed May 17 11:04:26 2023"},"commit":"434e9ec835dff9048a148dec4427579c9f13793b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed May 17 12:51:33 2023"},"message":"Make V8_ASSUME \"use\" the input values\n\nNearly all configurations already use the provided value, except for\nMSVC release builds. In order to avoid putting a USE after a V8_ASSUME,\nmake V8_ASSUME an alias for USE in that case.\n\nAlso simplify the definition of existing V8_ASSUME macros, and fix\nformatting to avoid a presubmit warning.\n\nR=mlippautz@chromium.org\n\nChange-Id: I2f3272f09de4f1d56a662d8e9800a5f8ed3b9649\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4543302\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87729}\n","milestone":115},{"_id":"6e68cc754a9b2a00f50c28e2849571a3909b81d1","author":{"name":"Seth Brenith","email":"seth.brenith@microsoft.com","time":"Mon May 08 16:13:50 2023"},"commit":"6e68cc754a9b2a00f50c28e2849571a3909b81d1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 16 14:43:34 2023"},"message":"Make heap snapshots more precise\n\nSometimes I've observed that heap snapshots include objects which should\nno longer be reachable but persist due to conservatively scanned stack\nreferences. The trash can button in devtools can get rid of these\nobjects because it runs the GC with EmbedderStackState::kNoHeapPointers.\nI propose that we follow the same pattern for snapshots: post a\nnon-nestable task to take the snapshot, and prevent conservative stack\nscanning during that task. A slight complication arises because\nsnapshots should also work while paused at a debug breakpoint, so in\nthat case, we must keep the current behavior which takes the snapshot\nimmediately and includes conservative stack scanning.\n\nBug: chromium:1440749\nChange-Id: I6c9a34ca19e2501c970e7be433ddf704c7125422\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4499405\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Seth Brenith <seth.brenith@microsoft.com>\nCr-Commit-Position: refs/heads/main@{#87698}\n","milestone":115},{"_id":"6584b6661b00e4b62ce82912b722a6dc201b7f8b","author":{"name":"Aapo Alasuutari","email":"aapo.alasuutari@gmail.com","time":"Thu May 11 14:14:20 2023"},"commit":"6584b6661b00e4b62ce82912b722a6dc201b7f8b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 16 08:39:43 2023"},"message":"[fastcall] Support 64-bit integer return values, add BigInt as possible representation for 64-bit integers\n\nThis CL adds support for 64-bit integer values as return values and parameters through a `CFunctionInfo::Int64Representation` enum to control how the 64-bit integers are to be represented in JavaScript.\n\nThe default case (`CFunctionInfo::Int64Representation::kNumber`) with is to, as currently, represent 64-bit integers as numbers and accept the consequences: Only safe integers can be passed into fastcalls as parameters, and any fastcall returning a 64-bit integer will lose precision if the value is higher than JS numbers can safely represent. This is to eventually ensure that the default case for 64-bit integer parameters remains as it is now, only supporting JavaScript numbers.\n\nThe other mode, `CFunctionInfo::Int64Representation::kBigInt`, sets fastcalls to always expect 64-bit integer parameters and return as BigInts. The `Int64Representation` enum might later be extended to eg. control how JS numbers are converted to floats.\n\nChange-Id: I120e31d3a2c5b1af3abc6f5ea7cc10089e3b0f67\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4103340\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nCommit-Queue: Nico Hartmann <nicohartmann@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87681}\n","milestone":115},{"_id":"02e64e0d09bea3240135bf0b2d4ef423f66b3a82","author":{"name":"Stephen Roettger","email":"sroettger@google.com","time":"Wed May 10 10:22:42 2023"},"commit":"02e64e0d09bea3240135bf0b2d4ef423f66b3a82","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed May 10 11:29:13 2023"},"message":"[API] Add ThreadIsolatedAllocator to Platform\n\nThe ThreadIsolatedAllocator will be used for in-process isolation to allocate memory with per-thread permission checks (e.g. using pkeys on x64).\nThe implementation type needs to be exposed in the API since the caller needs to change thread permissions before calling Allocate. E.g. for pkeys, v8 needs to know which pkey is used to tag the allocator's memory.\n\nChange-Id: Id9b4f8c5e8940c5c0fc6d1c7f81ffc86bc36a5cb\nBug: v8:13355\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4510275\nCommit-Queue: Stephen Röttger <sroettger@google.com>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87563}\n","milestone":115},{"_id":"26c1fc95c3fb8d4c7589eafc46df73b7446401f3","author":{"name":"Maksim Sadym","email":"sadym@chromium.org","time":"Fri May 05 08:10:08 2023"},"commit":"26c1fc95c3fb8d4c7589eafc46df73b7446401f3","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri May 05 08:59:11 2023"},"message":"Add deep serialization with options\n\n* Add serializaiton options to CDP's \"Runtime.evaluate\" and \"Runtime.callFunctionOn\".\n* Add \"deep serialization\" mode.\n* Respect \"maxDepth\" in deep serialization.\n\nFollow up after https://crrev.com/c/4497354.\nhttps://goo.gle/browser-automation-deepserialization\n\nBug: chromium:1420968\nChange-Id: I06397863f595a6d7af0a21dd2643ac613764014a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4498388\nCommit-Queue: Maksim Sadym <sadym@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87463}\n","milestone":115},{"_id":"ca548e3863f178b1377c0d013dc6c673114488e4","author":{"name":"pthier","email":"pthier@chromium.org","time":"Wed May 03 12:28:00 2023"},"commit":"ca548e3863f178b1377c0d013dc6c673114488e4","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu May 04 08:05:14 2023"},"message":"[api] Remove String::CanMakeExternal()\n\nThe method without arguments is replaced with\nString::CanMakeExternal(String::Encoding), checking if a string can be\nexternalized with a given representation.\n\nMarked as DEPRECATED in M114 (https://crrev.com/c/4388606).\n\nBug: v8:13785\nChange-Id: Iff82836f9154426ce4c69e448720ffd4649128b6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4502769\nCommit-Queue: Patrick Thier <pthier@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87437}\n","milestone":115},{"_id":"4becb939339f1de4744f95b9fcb10bda57cf7e99","author":{"name":"Pan, Tao","email":"tao.pan@intel.com","time":"Thu May 04 01:06:22 2023"},"commit":"4becb939339f1de4744f95b9fcb10bda57cf7e99","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu May 04 02:12:20 2023"},"message":"[runtime] Expand the protector of @@replace to @@matchAll and @@split\n\nThis CL can improve Speedometer2 case AngularJS-TodoMVC by ~0.7%, the\nbelow micor case\n  for (var i = 0; i < 1e7; ++i)\n    \"Hello world\".matchAll(\"world\");\nby ~30% and the below micro case\n  for (var i = 0; i < 1e7; ++i)\n    \"Hello world\".split(\"world\");\nby ~130%.\n\nChange-Id: I0b82d98e8b6ae2fdf2161e191ae59a98ad919ded\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4336160\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Tao Pan <tao.pan@intel.com>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87432}\n","milestone":115},{"_id":"c750b6c85bd1ad1d27f7acc1812165f465515144","author":{"name":"Arthur Sonzogni","email":"arthursonzogni@chromium.org","time":"Fri Apr 28 14:24:58 2023"},"commit":"c750b6c85bd1ad1d27f7acc1812165f465515144","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 02 13:45:17 2023"},"message":"Remove `raw_ptr` from cppgc/visitor.h\n\nThis patch is a no-op. It removes the `raw_ptr` variable.\n\nThis is not a useful patch to do in general, but it makes my life\neasier. Indeed, I am using locally a tweaked version of the `raw_ptr`\nclass (base::raw_ptr). It becomes a macro and it is used to\nautomatically list the location of every dangling pointers in Chrome.\nSomething along the lines of: https://godbolt.org/z/o8adYnc7a\n\nBy applying this patch, I won't have to apply this manually anymore.\n\nBug: chromium:1430482\nChange-Id: Ida6d43212bffe10fe4617aef1339aff663986548\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4488912\nCommit-Queue: Arthur Sonzogni <arthursonzogni@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87379}\n","milestone":115},{"_id":"18a6a6c680b0cf122cab8d51e1e9ffc10f11bd69","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue May 02 11:07:35 2023"},"commit":"18a6a6c680b0cf122cab8d51e1e9ffc10f11bd69","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 02 11:53:32 2023"},"message":"[sandbox] Refactor the ExternalPointerTable\n\nIn the future, we will likely need to support multiple kinds of tables\ncontaining entries of different sizes. To make this possible while still\nreusing common table logic, such as atomic entry allocation, this CL now\nfactors out the common logic into a new ExternalEntityTable class. That\nclass requires the entry type as template parameter and is then\nessentially a wrapper around a Entry*, supporting atomic entry\nallocation and table growing/shrinking. Garbage collection on the other\nhand must be implement by the derived classes.\n\nIn addition, this CL also changes the table implementation to use\nstandard C++ features like std::atomics rather than base::Atomic. For\nexample, the FreelistHead struct now no longer needs to be\ndecoded/encoded from/to a base::Atomic64 for atomic access, and the\nExternalPointerTable entries now consist of a single std::atomic field.\n\nBug: v8:10391\nChange-Id: I9a305dfe7c4bfc4f9d4e2d5702425028d53287e5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4480809\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87375}\n","milestone":115},{"_id":"ab30afd14661123c29ccccc3bcb960e8d6624aa8","author":{"name":"Maksim Sadym","email":"sadym@chromium.org","time":"Tue May 02 08:09:07 2023"},"commit":"ab30afd14661123c29ccccc3bcb960e8d6624aa8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 02 11:03:21 2023"},"message":"Rename \"WebDriver serialization\" to \"Deep serialization\".\n\nRenaming of `V8InspectorClient::serializeToWebDriverValue`, CDP flag `generateWebDriverValue` and CDP result field `webDriverValue` is not done for backwards compatibility.\n\nhttps://goo.gle/browser-automation-deepserialization\n\nBug: chromium:1420968\nChange-Id: I907448e5fb7a876e054700b371d5d600ecdf6eb2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4474552\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCommit-Queue: Maksim Sadym <sadym@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87370}\n","milestone":115},{"_id":"948737431627f283980aa074ffd887de770c78ff","author":{"name":"Maksim Sadym","email":"sadym@chromium.org","time":"Fri Apr 28 08:28:02 2023"},"commit":"948737431627f283980aa074ffd887de770c78ff","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Apr 28 10:39:26 2023"},"message":"Add `weakLocalObjectId` to WebDriver serialization\n\nPreparation for extending serialization [1]. To avoid duplicates and loops during serialization and to implement WebDriver BiDi serialization [2], `weakLocalObjectId` is introduced.\n* `V8SerializationDuplicateTracker` has an instance per serialization, and keeps track of all the non-primitive values were already serialized. In case of a known value is met again, the `weakLocalObjectId` property is set both to the original and to the duplicate serialized value.\n* As long as `EphemeronTable` cannot store the reference to `protocol::DictionaryValue`, the all the serialized values are stored in the vector `m_known_values`. `m_hashTable` contains a map from `v8_value` to the index of corresponding serialized value.\n* As long as values should be serialized recursively and to avoid unnecessary cloning, the value-mirror serialises values into `protocol::DictionaryValue`, and `injected-script` gets required properties form the Dictionary to construct `protocol::Runtime::WebDriverValue`.\n\n[1] https://goo.gle/browser-automation-deepserialization\n[2] https://w3c.github.io/webdriver-bidi/#set-internal-ids-if-needed\n\nBug: chromium:1420968\nChange-Id: I32cfa08b336efad6e135c01fd42cdf47afc41a97\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4433571\nCommit-Queue: Maksim Sadym <sadym@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87336}\n","milestone":115},{"_id":"b8020e1973d7d3a50b17c076cd948f079e59f9e5","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Thu Apr 27 09:11:32 2023"},"commit":"b8020e1973d7d3a50b17c076cd948f079e59f9e5","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Apr 27 09:52:43 2023"},"message":"[api] Fix v8::Object::SetAccessorProperty\n\n... by using JavaScript spec compliant JSReceiver::DefineOwnProperty.\n\nDrive-by:\n- cleanup comments in include/v8-object.h, insert links to\nrespective pages of https://tc39.es/ecma262/ when referencing spec,\n- rename JSObject::DefineAccessor() to\n  JSObject::DefineOwnAccessorIgnoreAttributes().\n\nBug: chromium:1433211\nChange-Id: Ia9edaadd68f1986f18581156ad8f79c438b77744\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4458947\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87302}\n","milestone":115},{"_id":"f1dffadd65c4667a93f4edd7d8dfb74e9b6c8086","author":{"name":"Anton Bikineev","email":"bikineev@chromium.org","time":"Tue Apr 25 10:16:42 2023"},"commit":"f1dffadd65c4667a93f4edd7d8dfb74e9b6c8086","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Apr 25 11:17:15 2023"},"message":"heap: Add EmbedderRootHandler::TryResetRoot\n\nThe function is needed for parallel wrapper reclamation. As opposed to\nResetRoot(), the function is thread-safe and can be called from non-main\nthreads.\n\nThe chromium's implementation of ResetRoot() relies on thread-local\ndata, which makes it hard to be used in parallel.\n\nBug: chromium:1432840\nChange-Id: Ibf6f7427d41867b8d53c787c3a9ded811f6bcada\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4474708\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Anton Bikineev <bikineev@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87262}\n","milestone":115},{"_id":"04521d8d50f8627206cdb2fe78343e01b109d411","author":{"name":"Alan Zhao","email":"ayzhao@google.com","time":"Wed Mar 29 22:27:23 2023"},"commit":"04521d8d50f8627206cdb2fe78343e01b109d411","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Apr 24 19:58:55 2023"},"message":"Explicitly add implicit libc++ includes in v8\n\nSeveral files in v8 refer to libc++ symbols that are currently made\navailable via transitive dependencies. These dependencies however are\nnot part of the standard and will no longer exist if v8 is built using a\nmodularized libc++.\n\nBug: chromium:543704\nChange-Id: I97a28cf63e5eacbaf59d2fe749f6d82005cd4781\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4382394\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nAuto-Submit: Alan Zhao <ayzhao@google.com>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87245}\n","milestone":115},{"_id":"83eb51c6d9945770f551c68217be770827e87c20","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Thu Apr 27 09:11:32 2023"},"commit":"83eb51c6d9945770f551c68217be770827e87c20","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 09 11:39:21 2023"},"message":"Merged: [api] Fix v8::Object::SetAccessorProperty\n\n... by using JavaScript spec compliant JSReceiver::DefineOwnProperty.\n\nDrive-by:\n- cleanup comments in include/v8-object.h, insert links to\nrespective pages of https://tc39.es/ecma262/ when referencing spec,\n- rename JSObject::DefineAccessor() to\n  JSObject::DefineOwnAccessorIgnoreAttributes().\n\nBug: chromium:1433211\n(cherry picked from commit b8020e1973d7d3a50b17c076cd948f079e59f9e5)\n\nChange-Id: Idf273d320e094d1553dee2d198945c4bdbcd65f7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4502804\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/branch-heads/11.3@{#20}\nCr-Branched-From: b0a3a06aa78a9beb4e8485eb502b20b2abe2abbf-refs/heads/11.3.244@{#1}\nCr-Branched-From: 0326cf6343caaa6ea32bb3208e894cb7412e1313-refs/heads/main@{#86647}\n","milestone":113},{"_id":"9029b66b5138933bc017632107e8e8a5bc6e1512","author":{"name":"pthier","email":"pthier@chromium.org","time":"Tue Mar 21 11:43:54 2023"},"commit":"9029b66b5138933bc017632107e8e8a5bc6e1512","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 22 09:38:43 2023"},"message":"[regexp] Remove UseCounter for invalid regexp with/v, but valid with /u\n\nUseCounter was added temporarily to gather usage data of these patterns\nfor the proposal to use /v instead of /u for the pattern attribute\n(https://github.com/whatwg/html/pull/7908).\nThe V8 UseCounter was superseded by a blink one\n(HTMLPatternRegExpUnicodeSetIncompatibilitiesWithUnicodeMode added\nwith https://crrev.com/c/4249120), counting invalid regexp patterns\nthat are used within the html pattern attribute.\n\nBug: v8:11935\nChange-Id: I13f4a22eff8cceb86adbdf496e897b6349c24009\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4355539\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nCommit-Queue: Patrick Thier <pthier@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86623}\n","milestone":113},{"_id":"be6a57a93be48e2bb4c724224e9adf0677394a62","author":{"name":"Dominik Inführ","email":"dinfuehr@chromium.org","time":"Mon Mar 20 13:20:13 2023"},"commit":"be6a57a93be48e2bb4c724224e9adf0677394a62","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Mar 21 08:34:45 2023"},"message":"[api] Deprecate Isolate::IdleNotificationDeadline\n\nRemove all uses of this method in d8 as well.\n\nBug: v8:12968\nChange-Id: Ie65106c6c02498b0d62666137f8ec01ec5a61ce6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4341506\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nAuto-Submit: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86585}\n","milestone":113},{"_id":"57a41c4f3e5ce79741d03b0ec0bdc35378a0145e","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Thu Mar 16 15:24:58 2023"},"commit":"57a41c4f3e5ce79741d03b0ec0bdc35378a0145e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Mar 16 19:52:01 2023"},"message":"[api] ConsoleCallArguments should not inherit from FunctionCallbackInfo\n\nConsoleCallArguments does not get the same input args and thus we\ncannot add validation DCHECKs to FunctionCallbackInfo.\n\nBug: chromium:13825\nChange-Id: Ifdefbf2452d97961ce8864d34773e450278d7206\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4345711\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86513}\n","milestone":113},{"_id":"7c1317266b0e786e68fc5880df281743b7f4721d","author":{"name":"Jakob Linke","email":"jgruber@chromium.org","time":"Wed Mar 15 12:27:15 2023"},"commit":"7c1317266b0e786e68fc5880df281743b7f4721d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 15 13:34:01 2023"},"message":"[api] Deprecate Function::GetUnboundScript\n\n.. as it's unused. Add DCHECKs at all other spots where\nUnboundScripts (= SFIs) can be created that they are not in RO space,\nsince that can only be the case for builtin SFIs, and the API assumes\nnon-RO objects in a few spots in order to call o->GetIsolate().\n\nBug: v8:13789\nChange-Id: I28abdb9ed9ede2b834182948b5edec5d514396e4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4339772\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Jakob Linke <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86450}\n","milestone":113},{"_id":"cb7660d2c8ae5f5a324fd5c2ab729f6ee51ecaa0","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Wed Mar 15 09:06:25 2023"},"commit":"cb7660d2c8ae5f5a324fd5c2ab729f6ee51ecaa0","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 15 10:55:39 2023"},"message":"[compile hints] Add an API for requesting compile hints from the embedder\n\nThis is adding a simple callback for requesting compile hints;\nhandling the data structures for storing the compile hints is done on\nthe embedder's side.\n\nThe API can be used for local and non-local compile hints.\n\nThis CL adds the API only to the non-streaming code path (streaming\nwill be done as a follow up).\n\nBug: chromium:1406506\nChange-Id: I16d8f0386d976bb4efcd813e562824a2979ae9c7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4329293\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86438}\n","milestone":113},{"_id":"b53c30245b2ac85d78f6a46a92de841e3b9fbbc7","author":{"name":"Dominik Inführ","email":"dinfuehr@chromium.org","time":"Tue Mar 14 10:57:22 2023"},"commit":"b53c30245b2ac85d78f6a46a92de841e3b9fbbc7","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Mar 14 13:55:09 2023"},"message":"[heap] Track whether inline allocation is enabled in Heap\n\nThis CL moves the \"inline allocation enabled\" flag into the Heap\nclass. So far this was recorded separately for each LAB but will only\never by enabled or disabled globally at once. This helps to reduce\nIsolateData size and simplifies code a bit.\n\nChange-Id: I0f101c124bc49a5ee02c67cd2e029539357b8c3e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4328270\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86412}\n","milestone":113},{"_id":"c42bf33ee52e26401b372e8bbdf8b09a94c57fa1","author":{"name":"Olivier Flückiger","email":"olivf@chromium.org","time":"Fri Mar 10 12:14:15 2023"},"commit":"c42bf33ee52e26401b372e8bbdf8b09a94c57fa1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Mar 13 11:53:55 2023"},"message":"[static-roots] Expose static roots to the api\n\nExpose some static roots at the API level. This allow us to use static\nroots for equality as well as fast instance type checks across the\nboundary.\n\nDrive-By: Some cleanups in the instance type range checks.\n\nBug: v8:13466\nChange-Id: I628dd9910b07f3495bf0360a2ad977d15f9b594a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4224579\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nAuto-Submit: Olivier Flückiger <olivf@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86370}\n","milestone":113},{"_id":"efc7b911e06b6129555aee93f6c52d10b66599fd","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Thu Mar 09 15:50:01 2023"},"commit":"efc7b911e06b6129555aee93f6c52d10b66599fd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Mar 10 19:18:04 2023"},"message":"Update comment on Platform::NumberOfWorkerThreads()\n\nFollowing https://chromium-review.googlesource.com/c/chromium/src/+/4300453\nNumberOfWorkerThreads() returns the max number of thread any single\nthread group can have (USER_VISIBLE and USER_BLOCKING in different\nthread group is being experimented).\n\nBug: chromium:1418953\nChange-Id: Ic5d193b3663deb18bca14036564a6ac85e5fb2be\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4316367\nReviewed-by: Gabriel Charette <gab@chromium.org>\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86354}\n","milestone":113},{"_id":"a4909649bc9431346c916943e2d899c807d12bb1","author":{"name":"Omer Katz","email":"omerkatz@chromium.org","time":"Thu Mar 09 12:19:40 2023"},"commit":"a4909649bc9431346c916943e2d899c807d12bb1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Mar 09 12:53:59 2023"},"message":"[heap] fix CPPGC_STACK_ALLOCATED_IGNORE for non-clang builds\n\nBranch the macro between clang and non-clang builds as we do for the\nGC_PLUGIN_IGNORE macro [1].\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/wtf/gc_plugin.h\n\nChange-Id: I35370676bc17610befddde771036b563b929daee\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4322199\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nAuto-Submit: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86327}\n","milestone":113},{"_id":"79b7b38cb7ddc3b987a414f9024ad46d8ce7f9c8","author":{"name":"Stefan Zager","email":"szager@chromium.org","time":"Tue Mar 07 21:57:08 2023"},"commit":"79b7b38cb7ddc3b987a414f9024ad46d8ce7f9c8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 08 17:15:39 2023"},"message":"Add CPPGC_STACK_ALLOCATED_IGNORE, and annotate violation in tests.h\n\nThis is a legitimate off-stack use of NoGarbageCollectionScope. The\nIGNORE clause prevents it from being flagged by the chromium clang\nplugin.\n\nChange-Id: Icbcab118988d7e797aa641cd5ab4410487ad6b1b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4316773\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86302}\n","milestone":113},{"_id":"4e88734f59617de77dcbc07b7539ebe3510dfe29","author":{"name":"pthier","email":"pthier@chromium.org","time":"Mon Mar 06 15:57:52 2023"},"commit":"4e88734f59617de77dcbc07b7539ebe3510dfe29","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Mar 06 16:44:28 2023"},"message":"[api] Prepare deprecation of String::CanMakeExternal()\n\nReplace String::CanMakeExternal() with\nString::CanMakeExternal(String::Encoding).\n\nThe reason is that we want to disallow representation changes of strings\nduring externalization in the future. I.e. externalizing a V8 one-byte\nstring with a two-byte string resource will be prohibited.\nThe new variant of String::CanMakeExternal that accepts a string\nencoding as argument will check that no such changes will happen.\n\nBug: v8:13785\nChange-Id: I09ccb306470c77139f05541be1627fb28b2120ec\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4299012\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Patrick Thier <pthier@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86264}\n","milestone":113},{"_id":"09342420230c6f5e2bf2ad824f434061e51d2653","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Mon Mar 06 10:57:34 2023"},"commit":"09342420230c6f5e2bf2ad824f434061e51d2653","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Mar 06 11:40:50 2023"},"message":"[api] Introduce GetAlignedPointerFromEmbedderDataInCreationContext()\n\nv8::Object::GetAlignedPointerFromEmbedderDataInCreationContext() is\nsupposed to be a shortcut for\n  obj->GetCreationContext().GetAlignedPointerFromEmbedderData(index)\nwhich doesn't require creation of handles.\n\nBug: chromium:1420942\nChange-Id: Ic7ed27fb53e592f182c3b7f9174b14240de068ef\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4303422\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86252}\n","milestone":113},{"_id":"29bc884807a41e938a31e0586aa09148e3e6484f","author":{"name":"Russ Hamilton","email":"behamilton@google.com","time":"Tue Feb 28 15:23:11 2023"},"commit":"29bc884807a41e938a31e0586aa09148e3e6484f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Mar 02 17:50:45 2023"},"message":"Allow DeepFreeze of JSApiObjects with a DeepFreezeDelegate\n\nAdds an optional DeepFreezeDelegate parameter to DeepFreeze to handle freezing of embedder-specific types (currently only JSApiObjects are supported).\n\nWe also check for AccessorPairs with uninstantiated getters and setters (which are of type FUNCTION_TEMPLATE_INFO), and fail DeepFreeze if they are present.\n\nChange-Id: If7d738d19658860aadd7209783f538ea8b1d4de3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4232977\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Russ Hamilton <behamilton@google.com>\nCr-Commit-Position: refs/heads/main@{#86214}\n","milestone":113},{"_id":"d76cceec3f12f16ecb31edab31908fcec8efb756","author":{"name":"Nikolaos Papaspyrou","email":"nikolaos@chromium.org","time":"Wed Mar 01 12:14:02 2023"},"commit":"d76cceec3f12f16ecb31edab31908fcec8efb756","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 01 13:16:47 2023"},"message":"[handles] Refactor and fix direct Locals with CSS\n\nThis CL contains a refactoring and some fixes to crrev.com/c/4105022,\nin an attempt to (1) restore the CSS bot, which currently fails a large\nnumber of tests, and (2) facilitate the transition to direct handles by\nbuilding better abstractions around low-level handle operations.\n\nBug: v8:13270\nChange-Id: Ib5dded4499b9d4d6613f998460db175d4ee25c20\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4296134\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Nikolaos Papaspyrou <nikolaos@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86170}\n","milestone":113},{"_id":"f9dee3a51e2d45806aaf5847abf7aaed8d5959a6","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Feb 21 11:45:29 2023"},"commit":"f9dee3a51e2d45806aaf5847abf7aaed8d5959a6","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 01 10:39:32 2023"},"message":"[api][wasm] Fix documentation on WasmStreaming\n\nDocument that neither {Finish} nor {Abort} must be called repeatedly.\nThis lead to errors before, see https://crrev.com/c/4249278.\n\nR=leszeks@chromium.org\n\nChange-Id: I490119d355a44575d1f81a879457bede22223f42\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4272634\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86165}\n","milestone":113},{"_id":"e17bbd604586a791c440a132d1b035b8df634006","author":{"name":"Jakob Linke","email":"jgruber@chromium.org","time":"Mon Feb 27 13:39:13 2023"},"commit":"e17bbd604586a791c440a132d1b035b8df634006","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Feb 28 06:39:18 2023"},"message":"[isolate-data] Tweak root register offsets and bias\n\nIn generated code, IsolateData fields are frequently referenced as\n\n [kRootRegister+<offset>]\n\nOperand encoding usually depends on the offset, and small offsets\nresult in smaller encoded instructions. It thus makes sense to keep\noffsets small for very frequently used fields. Another possible benefit\nis that clustering frequently-accessed fields together may improve\ncache locality behavior.\n\nThis CL moves the LinearAllocationAreas for new- and old space into\nthe efficiently-accessed offset range, and re-enables the\nkRootRegisterBias to maximize the set of offsets we can efficiently\naccess.\n\nDrive-by: Reorganize a few other IsolateData fields.\n\nBug: v8:12203\nChange-Id: Ib8f5ad162c51ed952db820ce59249cf9b0834d4b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4289753\nCommit-Queue: Jakob Linke <jgruber@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86124}\n","milestone":113},{"_id":"6b84a7a996ef4af3fa0baf0fd58b06b5aaadfc5e","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Thu Feb 16 13:37:51 2023"},"commit":"6b84a7a996ef4af3fa0baf0fd58b06b5aaadfc5e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Feb 23 14:21:26 2023"},"message":"[api] Clean up scope\n\nChange-Id: If492d2e140537dc9e7dad01489cd192be3d54ea7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4260727\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86043}\n","milestone":113},{"_id":"c56358be5854af110470acc1c32be1b83694a938","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Thu Apr 27 09:11:32 2023"},"commit":"c56358be5854af110470acc1c32be1b83694a938","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed May 03 10:43:49 2023"},"message":"Merged: [api] Fix v8::Object::SetAccessorProperty\n\n... by using JavaScript spec compliant JSReceiver::DefineOwnProperty.\n\nDrive-by:\n- cleanup comments in include/v8-object.h, insert links to\nrespective pages of https://tc39.es/ecma262/ when referencing spec,\n- rename JSObject::DefineAccessor() to\n  JSObject::DefineOwnAccessorIgnoreAttributes().\n\nBug: chromium:1433211\n(cherry picked from commit b8020e1973d7d3a50b17c076cd948f079e59f9e5)\n\nChange-Id: I4a36838ef8d5c839eda25463786e0d385570234d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4502765\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/branch-heads/11.4@{#8}\nCr-Branched-From: 8a8a1e7086dacc426965d3875914efa66663c431-refs/heads/11.4.183@{#1}\nCr-Branched-From: 5483d8e816e0bbce865cbbc3fa0ab357e6330bab-refs/heads/main@{#87241}\n","milestone":114},{"_id":"4eb6ba4a998ffb9930d1bd929865f7a4b65a2f70","author":{"name":"Paul Irish","email":"paulirish@chromium.org","time":"Sun Apr 23 21:41:01 2023"},"commit":"4eb6ba4a998ffb9930d1bd929865f7a4b65a2f70","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Sun Apr 23 22:35:45 2023"},"message":"[CDP] Improve description of execution context auxData\n\nBug: None\nChange-Id: Id3afaca2fd6127eff10c1f1241715ea1092aaaa2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4457005\nAuto-Submit: Paul Irish <paulirish@chromium.org>\nCommit-Queue: Paul Irish <paulirish@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87227}\n","milestone":114},{"_id":"eabf864ad1f829319ba7fdbe0776999a77632acb","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Wed Apr 19 09:49:10 2023"},"commit":"eabf864ad1f829319ba7fdbe0776999a77632acb","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Apr 19 10:36:48 2023"},"message":"[compile hints magic] Add usage counter\n\nBug: v8:13917\nChange-Id: I4e62f0b639164e5448020846dac0b70400fb660e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4445998\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nAuto-Submit: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87167}\n","milestone":114},{"_id":"bc45e84fe4abaa72c3e7cd37c250b484840ad512","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Tue Apr 18 12:02:59 2023"},"commit":"bc45e84fe4abaa72c3e7cd37c250b484840ad512","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Apr 18 13:21:27 2023"},"message":"[isolate] Move Isolate::handle_scope_data_ to IsolateData\n\n... in order to make it accessible via kRootRegister.\nThis change removes a couple of instructions from the hot paths of\nCallApiCallback/CallApiGetter builtins.\n\nDrive-by:\n- remove unnecessary saving of callee-saved registers on arm64 (these\n  registers are saved/restored by JSEntry builtins).\n\nBug: v8:13825\nChange-Id: Ic0601e8455dc164813d725fc945b108cd87ba169\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4418549\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87149}\n","milestone":114},{"_id":"9020b6d0e475ff7ec6a26ce32118955fc53825a6","author":{"name":"Anton Bikineev","email":"bikineev@chromium.org","time":"Thu Apr 13 11:38:47 2023"},"commit":"9020b6d0e475ff7ec6a26ce32118955fc53825a6","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Apr 13 12:17:11 2023"},"message":"handles: Add no-GC scope around EmbedderRootHandler::ResetRoot()\n\nCurrently, the scope is in ResetRoot() itself. With parallel wrapper\nreclamation having the scope wouldn't be thread-safe, so this CL moves\nit to the V8 side.\n\nThe CL also adds EmbedderRootHandler::TryResetRoot() method that will be\nused from parallel clearing.\n\nBug: chromium:1432840\nChange-Id: Ic67c90600925d7a7d0b0d84a21a5f392280e2481\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4422618\nCommit-Queue: Anton Bikineev <bikineev@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87070}\n","milestone":114},{"_id":"cf13b9b46572a9824d2d632abdd48c56161ace02","author":{"name":"Chengzhong Wu","email":"chengzhong.wcz@alibaba-inc.com","time":"Tue Apr 04 09:41:58 2023"},"commit":"cf13b9b46572a9824d2d632abdd48c56161ace02","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Apr 13 07:14:56 2023"},"message":"[objects] Determine host objects with serializer delegate\n\nEnable custom host objects filter with ValueSerializer::Delegate\nwhen ValueSerializer::Delegate::HasCustomHostObject returns true.\n\nThis allows the embedder to serialize JavaScript implemented host\nobjects.\n\nBug: v8:11927\nChange-Id: I70e7aa70b10dc1053c113d521479cbe746febc7e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4385565\nCommit-Queue: Chengzhong Wu (legendecas) <legendecas@gmail.com>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#87055}\n","milestone":114},{"_id":"1950f83719311be8970e85b78a4acfa3aafbd4d8","author":{"name":"Frank Tang","email":"ftang@chromium.org","time":"Thu Mar 30 00:02:59 2023"},"commit":"1950f83719311be8970e85b78a4acfa3aafbd4d8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Apr 06 19:33:42 2023"},"message":"[intl] Update Intl Locale Info\n\nAdd two flags and two counters\nOne flag to stage/ship the Intl Locale API after\nhttps://github.com/tc39/proposal-intl-locale-info/pull/67\nOne flag to remove the getters obsoleted by the PR67\n\nAdd two counters to measure the usage of these two\n\nBug: v8:13834, v8:13835\nChange-Id: Ic29ffe9b6114d6f5d46224817e7f38bb6147b9e2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4355215\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nCommit-Queue: Frank Tang <ftang@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86988}\n","milestone":114},{"_id":"3fd57b875f365696b6d6e303143887ecfe9ee63f","author":{"name":"Seth Brenith","email":"seth.brenith@microsoft.com","time":"Tue Apr 04 15:36:56 2023"},"commit":"3fd57b875f365696b6d6e303143887ecfe9ee63f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Apr 04 16:56:37 2023"},"message":"Produce consistent IDs for Oilpan objects in heap snapshots\n\nDevtools allows the user to compare a heap snapshot to a previous heap\nsnapshot, to see what ojects were created or deleted between those\nsnapshots. This currently works well for objects in the V8 heap, but not\nobjects in the Oilpan heap, because Oilpan objects do not get consistent\nIDs from one heap snapshot to the next, so devtools incorrectly reports\nthat every Oilpan object was deleted and recreated.\n\nHeapObjectsMap already provides most of the necessary functionality for\nassigning consistent IDs, dealing with moved objects, and clearing up\nentries which are no longer used. This change just makes use of that\nexisting functionality for Oilpan objects too.\n\nBug: chromium:1286500\nChange-Id: Ia6b931dc967c711dd06bf5d4550210e27c0df314\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4278992\nCommit-Queue: Seth Brenith <seth.brenith@microsoft.com>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Anton Bikineev <bikineev@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86923}\n","milestone":114},{"_id":"32a4b2e4cbb22e1441c30b90fcbdb30c4054f098","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Mon Apr 03 09:32:37 2023"},"commit":"32a4b2e4cbb22e1441c30b90fcbdb30c4054f098","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Apr 03 12:51:53 2023"},"message":"[profiler] Optimise TickSample memory layout\n\n- Change StateTag from int to uint16\n- Make sure we don't waste any padding bytes in TickSample\n- For now use full bytes for the bool values in TickSample\n\nChange-Id: I9b1bcc7d1bf72d1001e15784afe4b05367d57589\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4393853\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86869}\n","milestone":114},{"_id":"099fac8935b5f42417231a223f9d8d74ac5d127b","author":{"name":"pthier","email":"pthier@chromium.org","time":"Fri Mar 31 14:24:18 2023"},"commit":"099fac8935b5f42417231a223f9d8d74ac5d127b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Apr 03 08:43:33 2023"},"message":"[api] Deprecate String::CanMakeExternal()\n\nThe method without arguments is replaced with\nString::CanMakeExternal(String::Encoding), checking if a string can be\nexternalized with a given representation.\n\nThe reason is that we want to disallow representation changes of strings\nduring externalization in the future. I.e. externalizing a V8 one-byte\nstring with a two-byte string resource will be prohibited.\nThe new variant of String::CanMakeExternal that accepts a string\nencoding as argument will check that no such changes will happen.\n\nMarked as DEPRECATE_SOON in M113 (https://crrev.com/c/4299012).\n\nBug: v8:13785\nChange-Id: I44731a335d0f87b989587db64d17b5951609739e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4388606\nAuto-Submit: Patrick Thier <pthier@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86852}\n","milestone":114},{"_id":"0d5082c13b82ad2072d4372a6a374afc107fe598","author":{"name":"Nikolaos Papaspyrou","email":"nikolaos@chromium.org","time":"Fri Mar 31 11:59:24 2023"},"commit":"0d5082c13b82ad2072d4372a6a374afc107fe598","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Mar 31 16:50:09 2023"},"message":"[api][heap][handles] Deprecate v8::TracedReference::operator* and ->\n\nv8::TracedReference::operator* and v8::TracedReference::operator->\nwill soon be deprecated in the V8 API, as they return an indirect\npointer to the traced reference's handle slot, which can be used to\naccess a heap object without using a v8::Local. This may lead to a\ncrash if the traced reference is reclaimed or moved by GC, during\nthe lifetime of this pointer.\n\nInstead of using these operators, API users and the V8 implementation\nshould properly convert to a v8::Local, using v8::TracedReference::Get.\n\nBug: v8:13257\nBug: v8:13270\nChange-Id: I748ba37df2fdfb1bbc4d414c6990523bfb9c70a9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4388583\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Nikolaos Papaspyrou <nikolaos@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86845}\n","milestone":114},{"_id":"fc48e3351c676168132c3ae796c916fd2c86a181","author":{"name":"Nikolaos Papaspyrou","email":"nikolaos@chromium.org","time":"Wed Mar 29 15:22:26 2023"},"commit":"fc48e3351c676168132c3ae796c916fd2c86a181","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Mar 30 19:55:22 2023"},"message":"[handles] Prepare deprecation of TracedReference::operator* and ->\n\nThis CL prepares for the deprecation of v8::TracedReference::operator*\nand v8::TracedReference::operator->. Both return an indirect pointer\nto the traced reference's handle slot. By using Utils::OpenHandle on\nthis value, it is possible to create a v8::Local whose handle slot is\nnot allocated in a handle scope. Using this local after the traced\nreference is reclaimed by GC may lead to a crash.\n\nInstead of using these operators, API users and the V8 implementation\nshould properly convert to a v8::Local, using v8::TracedReference::Get.\n\nA static method v8::Object::GetIsolate is added to safely obtain the\nisolate from an object pointed to by a traced reference.\n\nAdditionally, the CL removes the corresponding operators of\nv8::PersistentBase, which were private.\n\nBug: v8:13257\nBug: v8:13270\nChange-Id: I1eb9d59aff19b6060346cfae8136425510f03349\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4377228\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Nikolaos Papaspyrou <nikolaos@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86814}\n","milestone":114},{"_id":"154d1e4ee6d8980e1c254124625d162ef49067b8","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Thu Mar 30 13:02:32 2023"},"commit":"154d1e4ee6d8980e1c254124625d162ef49067b8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Mar 30 15:00:57 2023"},"message":"[api] Always use the-hole as default return\n\nSome code cares about resetting to the hole since it wants the empty\nhandle as return value if it was reset. Other code doesn't care and\nwants to get undefined back. The latter code already has a branch to\nreplace the hole with undefined. Hence we can always reset to the hole.\n\nBug: v8:13825\nChange-Id: I67687855c02d35aa3522dd1a6d7b448fb128dbef\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4315587\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86802}\n","milestone":114},{"_id":"1aadce005740e7100b4c9ba64d178c41a2ef4f91","author":{"name":"Nikolaos Papaspyrou","email":"nikolaos@chromium.org","time":"Wed Mar 29 18:29:33 2023"},"commit":"1aadce005740e7100b4c9ba64d178c41a2ef4f91","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Mar 30 08:32:46 2023"},"message":"[heap][handles] Add flag for direct local handles\n\nThis CL introduces the compile-time flag v8_enable_direct_local. If\nthis flag is set, Local<T> abstract handles contain direct pointers\ninstead of indirect pointers. The new flag implies conservative stack\nscanning (CSS). The CL also places behind the new flag the existing\ncode for direct local handles, which was until now behind the CSS\ncompile-time flag.\n\nBug: v8:13257\nBug: v8:13270\nChange-Id: Ic3f5b404fc2e76a6d3437a471476b338bf097192\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4381732\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Nikolaos Papaspyrou <nikolaos@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86789}\n","milestone":114},{"_id":"4f94782e87a227072295dde051c50634af3eda05","author":{"name":"Seth Brenith","email":"seth.brenith@microsoft.com","time":"Wed Mar 29 15:27:24 2023"},"commit":"4f94782e87a227072295dde051c50634af3eda05","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 29 16:43:19 2023"},"message":"Avoid use after free during gen-static-roots\n\nCurrently, to generate static roots, mksnapshot completes the creation\nof the embedded blob and then iterates the roots table to generate the\nstatic roots file. However, the Isolate has already been deleted by that\ntime, so mksnapshot might work or might fail depending on the behavior\nof the C++ memory allocator. We can easily avoid this problem by waiting\nto dispose the Isolate until after we're done using it.\n\nBug: v8:13466\nChange-Id: Ic3593240bdd3880245f9dd5948b71ac491915766\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4353428\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nCommit-Queue: Seth Brenith <seth.brenith@microsoft.com>\nCr-Commit-Position: refs/heads/main@{#86781}\n","milestone":114},{"_id":"699affae4e1529c13f0b8707fbc585965459bd23","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri Mar 24 22:30:24 2023"},"commit":"699affae4e1529c13f0b8707fbc585965459bd23","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Mar 24 23:51:14 2023"},"message":"Add use counter for import assertion\n\nBug: v8:13856\nChange-Id: Id5ffde64f4e08164c79b2bb2417c9c6db1339a12\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4371208\nReviewed-by: Adam Klein <adamk@chromium.org>\nAuto-Submit: Shu-yu Guo <syg@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86700}\n","milestone":114},{"_id":"3b95056f5b5987ea8153f43169445f51e9a1c113","author":{"name":"Nikolaos Papaspyrou","email":"nikolaos@chromium.org","time":"Thu Mar 23 17:33:53 2023"},"commit":"3b95056f5b5987ea8153f43169445f51e9a1c113","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Mar 24 14:49:55 2023"},"message":"[handles] Refactor classes for abstract handles\n\nThis CL defines two base classes for abstract handles:\n\n- IndirectHandleBase, for abstract handles containing indirect pointers\n- DirectHandleBase, for abstract handles containing direct pointers\n\nThe latter is used to implement Local<T> when conservative stack\nscanning is enabled. The former is used to implement all other classes\nof abstract handles (e.g., Eternal<T>, Persistent<T>, Global<T>,\nTracedReference<T>).\n\nDoc: https://docs.google.com/document/d/1hAm0xBxNper6JMR_uICq_6h8Q1kG8ymQkkZrVTKc2Mo\nBug: v8:13257\nBug: v8:13270\nChange-Id: Ibf94369308831a83397d11a5f5f973d81b4f30e8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4335544\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Nikolaos Papaspyrou <nikolaos@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86690}\n","milestone":114},{"_id":"e4400ca802fc949e7a36c2ec0cf0d7689befaa82","author":{"name":"Philip Pfaffe","email":"pfaffe@chromium.org","time":"Thu Mar 16 09:40:55 2023"},"commit":"e4400ca802fc949e7a36c2ec0cf0d7689befaa82","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Mar 23 11:15:51 2023"},"message":"Report an explicit pause reason when stopping after taking a step.\n\nThis way, DevTools can distinguish pausing after a step from other reasons, which is a necessary stop condition for autostepping. As this is only breaking out a special case out of a catch-all enum we're not considering it a breaking protocol change.\n\nBug: chromium:1418938\nChange-Id: Idd0af9446519fa08c7244f8270d8190e5c5df889\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4290476\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nCommit-Queue: Philip Pfaffe <pfaffe@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86656}\n","milestone":114},{"_id":"4757205b3c2a080780bfd6c04f407aed163bfe42","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Wed Dec 14 00:54:42 2022"},"commit":"4757205b3c2a080780bfd6c04f407aed163bfe42","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Dec 14 01:54:00 2022"},"message":"[rab/gsab,api] Add resizable BackingStore creation\n\nThis CL adds v8::ArrayBuffer::NewResizableBackingStore.\n\nThis API is needed to support Mojo cross-process serialization of\nresizable buffers. See https://chromium-review.googlesource.com/c/chromium/src/+/4086949\n\nBug: chromium:1396361, v8:11111\nChange-Id: I1d3ad367f28015184fd80fd2f05a37a3659d3a66\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4093555\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84826}\n","milestone":110},{"_id":"08e95d81d52dc4411f5891ed7e7847d612ecfec6","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri Dec 09 21:19:00 2022"},"commit":"08e95d81d52dc4411f5891ed7e7847d612ecfec6","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Dec 09 22:45:18 2022"},"message":"[rab/gsab,api] Add v8::BackingStore::MaxByteLength\n\nI originally thought MaxByteLength would only be needed for\nv8::ArrayBuffer and v8::SharedArrayBuffer, but it is also needed on\nv8::BackingStore.\n\nIn particular, blink uses Mojo to serialize ArrayBuffers' contents via\nv8::BackingStore when doing cross-process postMessage.\n\nBug: chromium:1396361, v8:11111\nChange-Id: I86d44829175ad760fb43294d386483a16044fc3b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4090708\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84767}\n","milestone":110},{"_id":"ccddea063b568d768b19865446d1f3812baf060c","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Thu Dec 08 18:07:00 2022"},"commit":"ccddea063b568d768b19865446d1f3812baf060c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Dec 09 16:58:44 2022"},"message":"[api] mark readonly usage of StartupData as `const`\n\nThis doesn’t have much practical effect, since the actual\nbyte contents referred to by `StartupData` are already marked\n`const`, but adding the qualifier communicates more clearly\nto users that V8 does not perform modifications on the object.\n\nPractically speaking, this also allows for cases in which the\nstartup data is included as readonly data in the current executable\nwithout requiring a `const_cast`.\n\nRefs: https://github.com/nodejs/node/pull/45786#discussion_r1043489245\nChange-Id: I53075ebb493c3617e470decb601b803f5294848d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4089203\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84764}\n","milestone":110},{"_id":"068536f1091b0edc5671b68640681b279c8064ff","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Thu Dec 08 15:03:47 2022"},"commit":"068536f1091b0edc5671b68640681b279c8064ff","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Dec 09 12:11:22 2022"},"message":"[wasm] Remove thread timings (CPU time)\n\nOn Mac, we spend around 30% of lazy compile time in {ThreadTicks::Now}.\nOn Linux it's less severe, but still around 10%.\nThat's too much overhead for measurements that only show up in UKM, so\nremove that.\n\nThe unused fields will be removed from the UKM events after the plumbing\non the chromium side has been removed.\n\nR=ahaas@chromium.org, mlippautz@chromium.org\nCC=​ecmziegler@chromium.org\n\nBug: v8:13565\nChange-Id: I2dad88d899482801888940499d2d1761ff075578\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4078966\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84754}\n","milestone":110},{"_id":"f4fb8fc1f7e2760948d2d9b53f6e975a05030c04","author":{"name":"Jaroslav Sevcik","email":"jarin@chromium.org","time":"Thu Dec 08 15:55:38 2022"},"commit":"f4fb8fc1f7e2760948d2d9b53f6e975a05030c04","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Dec 09 12:08:58 2022"},"message":"[inspector] Introduce debugger session stop API\n\nWe introduce V8InspectorSession::stop API to enable safe\ndetach from the session. In particular, after calling 'stop',\nthe session will leave any instrumentation pause it might\nbe in and disarm all its instrumentation breakpoints.\n\nThis is useful when the session disconnect request is registered\non V8 interrupt (so it is unsafe to disconnect at that point),\nand the execution should first get to the message loop\nwhere the disconnect can be handled safely.\n\nBug: chromium:1354043\nChange-Id: I3caab12a21b123229835e8374efadc1f4c9954c2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4085143\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nCommit-Queue: Jaroslav Sevcik <jarin@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84753}\n","milestone":110},{"_id":"90742c6040eddcc591dac0a0dc4565cca698974e","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Wed Dec 07 01:29:09 2022"},"commit":"90742c6040eddcc591dac0a0dc4565cca698974e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Dec 07 21:32:31 2022"},"message":"[api] Add resizable getters to ArrayBuffer APIs\n\nAdds v8::[Shared]ArrayBuffer::MaxByteLength and\nv8::BackingStore::IsResizableByUserJavaScript.\n\nThis is needed for embedders who need to check if a buffer is resizable\nby user JS, like blink, to check for the [AllowResizable] WebIDL\nextended attribute.\n\nBug: v8:11111\nChange-Id: Ie7e03979ef3884123df8a3eeb5c3516c4a6967c2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4082276\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84715}\n","milestone":110},{"_id":"8ef8a016dcde0e50f11cdb940d5a3b19ba68dd9a","author":{"name":"Judith Hemp","email":"hempjudith@google.com","time":"Tue Dec 06 08:48:23 2022"},"commit":"8ef8a016dcde0e50f11cdb940d5a3b19ba68dd9a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Dec 06 09:40:43 2022"},"message":"Add V8StackFrame export\n\nTo be able to retrieve structured stacktrace information like the\nfunctionName of single stack frames outsite of v8, this cl adds a\nV8StackFrame class and a function to retrieve them from V8StacKFrames.\n\nBug: chromium:1393317\nChange-Id: Idae150aeb03f7b65294c4c6a6979c298a569e6d2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4067040\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Judith Hemp <hempjudith@google.com>\nCr-Commit-Position: refs/heads/main@{#84676}\n","milestone":110},{"_id":"b296ab30f7a64fea2d8061bb0e06f77431376c22","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Fri Dec 02 16:39:23 2022"},"commit":"b296ab30f7a64fea2d8061bb0e06f77431376c22","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Dec 05 10:43:25 2022"},"message":"[ptr-compr] Mark base() as V8_CONST\n\n... which is an alias for __attribute__((const)) when it's available.\n\nBug: v8:7703\nChange-Id: Ic585f48bc764ccf0c920ff82ba788cf1e88e0cdd\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4076525\nAuto-Submit: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84633}\n","milestone":110},{"_id":"744570e583a611a7330871c13feb8e2df4d7e6df","author":{"name":"Aapo Alasuutari","email":"aapo.alasuutari@gmail.com","time":"Thu Dec 01 13:30:10 2022"},"commit":"744570e583a611a7330871c13feb8e2df4d7e6df","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Dec 01 14:19:33 2022"},"message":"[fastcall] Support external pointers in fast api calls\n\nBug: chromium:1052746\n\nChange-Id: I3de37ca453b640b7f714e585848ccd068dd9ddbc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3957815\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Samuel Groß <saelo@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84597}\n","milestone":110},{"_id":"224cbd21795445fddbd59a315979f8812e1ae871","author":{"name":"Mikhail Khokhlov","email":"khokhlov@google.com","time":"Thu Dec 01 10:22:28 2022"},"commit":"224cbd21795445fddbd59a315979f8812e1ae871","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Dec 01 11:18:24 2022"},"message":"[Tracing w/SDK] Replace TraceStateObserver with TrackEventSessionObserver\n\nWith v8_use_perfetto = true, tracing sessions are controlled by\nPerfetto, not TraceLog. This can lead to inconsistencies, e.g.\nTraceLog signalling trace start while V8's TrackEvent datasource\nhasn't been initialized yet.\n\nThis CL removes the TraceStateObserver interface and replaces its\nuses with perfetto::TrackEventSessionObserver which correctly tracks\nPerfetto tracing sessions start and end.\n\nSee also crrev.com/c/4066184 for the corresponding Chrome change.\n\nBug: chromium:1006766\nChange-Id: I94b2189c8b28aec8b17ec8fc1246e27c904e4ee9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4062038\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Mikhail Khokhlov <khokhlov@google.com>\nCr-Commit-Position: refs/heads/main@{#84590}\n","milestone":110},{"_id":"bc831f8ba33b79e2eb670faf1f84c4e39aeb0f9f","author":{"name":"Divy Srivastava","email":"dj.srivastava23@gmail.com","time":"Tue Nov 29 16:07:13 2022"},"commit":"bc831f8ba33b79e2eb670faf1f84c4e39aeb0f9f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Nov 29 17:03:45 2022"},"message":"[fastcall] Implement support for onebyte string arguments\n\nThis CL adds one byte string specialization support for fast API call arguments.\nIt introduces a kOneByteString variant to CTypeInfo.\n\nWe see a ~6x improvement in Deno's TextEncoder#encode microbenchmark.\nRendered results: https://divy-v8-patches.deno.dev/\n\nBug: chromium:1052746\nChange-Id: I47c3a9e101cd18ddc6ad58f627db3a34231b60f7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4036884\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84552}\n","milestone":110},{"_id":"8ca9f77d0f7c2d5ec5ef8255b9689f5ac1c547a3","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Nov 29 14:14:58 2022"},"commit":"8ca9f77d0f7c2d5ec5ef8255b9689f5ac1c547a3","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Nov 29 15:46:23 2022"},"message":"[sandbox] Sandboxify JSArrayBuffer::extension external pointer\n\nBug: chromium:1335043\nChange-Id: Id8e6883fc652b144f6380ff09b1c18e777e041c2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3706626\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84544}\n","milestone":110},{"_id":"2301870e757aac6148fd9f7508201d5a8217110c","author":{"name":"Qifan Pan","email":"panq@google.com","time":"Fri Nov 25 10:09:11 2022"},"commit":"2301870e757aac6148fd9f7508201d5a8217110c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Nov 25 15:44:06 2022"},"message":"[turboshaft] Implement SignedMulOverflow64\n\nThis CL implements SignedMulOverflow64 to enable constant folding\nof 64-bit SignedMul in machine optimization reducer.\n\nBug: chromium:1392928, v8:9407\nChange-Id: I3a46198b2e2a0b59ca33f5a333fb8ea3d8f89340\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4055684\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Qifan Pan <panq@google.com>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84495}\n","milestone":110},{"_id":"06aaa9625f8abccb422924d109949a85277c853f","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Nov 17 14:20:53 2022"},"commit":"06aaa9625f8abccb422924d109949a85277c853f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Nov 18 14:29:54 2022"},"message":"Remove support for unsandboxed ExternalPointers\n\nNow that the external pointer sandboxing rollout has completed, the\nmachinery to support unsandboxed external pointers is no longer needed.\n\nBug: v8:10391\nChange-Id: I5cec4b9bfca41a7db670b93d984f3cfc5a2adbfa\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4034166\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84360}\n","milestone":110},{"_id":"aa684004d02589f89cc2ad790f53aebbb81ba99c","author":{"name":"Andrey Kosyakov","email":"caseq@chromium.org","time":"Sat Oct 29 05:23:26 2022"},"commit":"aa684004d02589f89cc2ad790f53aebbb81ba99c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Nov 10 20:23:01 2022"},"message":"DevTools: use a barrier to sync runIfWaitingForDebugger from multiple sessions\n\nThis introduces a barrier that ensures that\n`V8InspectorClient::runIfWaitingForDebugger()` is only invoked once all\nsessions that requested a paused have invoked runIfWaitingForDebugger.\n\nDownstream change: https://chromium-review.googlesource.com/c/chromium/src/+/3977348\n\nBug: chromium:1352175\nChange-Id: I9049c2de6da8e690ad4312cd6cb799619125bb62\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3976353\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Andrey Kosyakov <caseq@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84191}\n","milestone":110},{"_id":"dbc6e5658055cc230db1485926fee77338cc72b8","author":{"name":"Yuki Shiino","email":"yukishiino@chromium.org","time":"Fri Nov 04 09:54:09 2022"},"commit":"dbc6e5658055cc230db1485926fee77338cc72b8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Nov 10 15:50:48 2022"},"message":"api: Expose %MapIteratorPrototype% and %SetIteratorPrototype%\n\nIn order to allow Blink (and potentially other embedders) to\nimplement Web IDL maplike and setlike in a more spec-conformant\nway, exposes %MapIteratorPrototype% and %SetIteratorPrototype%.\n\nBug: chromium:1354546\nChange-Id: Ife97c4d99168779e56ce95fc774692a125bf6ea5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4005924\nCommit-Queue: Yuki Shiino <yukishiino@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84185}\n","milestone":110},{"_id":"bb90b9cfcbca2f3757ed06d34d9f2f8f405deb8b","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Thu Apr 27 09:11:32 2023"},"commit":"bb90b9cfcbca2f3757ed06d34d9f2f8f405deb8b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 09 11:42:27 2023"},"message":"Merged: [api] Fix v8::Object::SetAccessorProperty\n\n... by using JavaScript spec compliant JSReceiver::DefineOwnProperty.\n\nDrive-by:\n- cleanup comments in include/v8-object.h, insert links to\nrespective pages of https://tc39.es/ecma262/ when referencing spec,\n- rename JSObject::DefineAccessor() to\n  JSObject::DefineOwnAccessorIgnoreAttributes().\n\nBug: chromium:1433211\n(cherry picked from commit b8020e1973d7d3a50b17c076cd948f079e59f9e5)\n\nChange-Id: Ia4e0389e99b5a79987f59ca2a11ee7867b0c97e2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4502585\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/branch-heads/11.2@{#47}\nCr-Branched-From: 755511a138609ac5939449a8ac615c15603a4454-refs/heads/11.2.214@{#1}\nCr-Branched-From: e6b1ccefb0f0f1ff8d310578878130dc53d73749-refs/heads/main@{#86014}\n","milestone":112},{"_id":"86640aa589d5dd0196155cf83c0fdc113c348fb1","author":{"name":"Dave Tapuska","email":"dtapuska@chromium.org","time":"Tue Feb 21 22:30:01 2023"},"commit":"86640aa589d5dd0196155cf83c0fdc113c348fb1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Feb 22 15:31:35 2023"},"message":"Make JIT work in iOS simulator\n\nDue to restrictions on device we are not able to execute code\nusing a JIT. However it is possible to enable it in the iOS simulator\nso we can continue gathering performance data.\n\nBug: chromium:1413818, chromium:1411704\nChange-Id: Ie370a280f439d53ba3f31ee40ff53fa87378be1f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4277141\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Dave Tapuska <dtapuska@chromium.org>\nCr-Commit-Position: refs/heads/main@{#86004}\n","milestone":112},{"_id":"ab12885a59d86d43a624ffaf6d56ca0d34e8e8bb","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Feb 21 13:38:08 2023"},"commit":"ab12885a59d86d43a624ffaf6d56ca0d34e8e8bb","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Feb 21 16:02:50 2023"},"message":"Restrict usage of preserve_most to clang 17\n\nBefore https://reviews.llvm.org/D143425, preserve_most was broken for\nmethods/functions with return value(s). This CL thus restricts the use\nof the preserve_most attribute to clang version >= 17, so we can start\nusing preserve_most more widely.\n\nR=leszeks@chromium.org\n\nBug: v8:13742\nChange-Id: I88e3183bf826755ae5b82d9f9955621b66d998d5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4272644\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85962}\n","milestone":112},{"_id":"46bbda242e1df4488fae65b5d682df9fe0f05c6d","author":{"name":"Tobias Tebbi","email":"tebbi@chromium.org","time":"Mon Feb 20 16:56:12 2023"},"commit":"46bbda242e1df4488fae65b5d682df9fe0f05c6d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Feb 21 07:35:20 2023"},"message":"[turboshaft] zero-extend signed div lowering to equality\n\nBug: chromium:1417463\n\nChange-Id: If2db3dec373af6469c5ce8d73ca8192acd98df48\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4272826\nCommit-Queue: Nico Hartmann <nicohartmann@chromium.org>\nAuto-Submit: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85940}\n","milestone":112},{"_id":"f2e6b8d2746d24d78f192a2f99fb4c6fd1aa2ed4","author":{"name":"Jake Hughes","email":"jh@jakehughes.uk","time":"Sun Feb 19 17:11:49 2023"},"commit":"f2e6b8d2746d24d78f192a2f99fb4c6fd1aa2ed4","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Feb 20 12:41:30 2023"},"message":"[handles] Use direct Locals with conservative stack scanning\n\nThis changes `Local` to refer directly to the SMI or on-heap-pointer\nwhen built with V8_ENABLE_CONSERVATIVE_STACK_SCANNING. In order for this\nto work, the MAKE_OPEN_HANDLE and TO_LOCAL bottlenecks have been updated\nto add/remove indirection when switching to/from internal V8 handles.\n\nThis CL lays the groundwork for future bottlenecks (not yet implemented)\nwhere Locals in the API layer can be converted to DirectHandles without\nexpensive indirection checks.\n\nBug: v8:13270\nChange-Id: I6d302828f3f881cb485f1c26e8656a4e7bf1261f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4105022\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Jake Hughes <jh@jakehughes.uk>\nCr-Commit-Position: refs/heads/main@{#85925}\n","milestone":112},{"_id":"2ac01f6c600f577af95d057eab4b35f1714354e2","author":{"name":"Scott Violet","email":"sky@chromium.org","time":"Thu Feb 16 14:26:04 2023"},"commit":"2ac01f6c600f577af95d057eab4b35f1714354e2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Feb 16 15:35:38 2023"},"message":"Updates time functions in v8::Platform\n\nThis adds the following:\n\n1. CurrentClockTimeMilliseconds(), which returns the time in\n   milliseconds (int64_t).\n2. CurrentClockTimeMillisecondsHighResolution, which returns the time\n   with microsecond accuracy (double).\n\nBoth are implemented in terms of the existing CurrentClockTimeMillis.\n\nChrome's implementation of CurrentClockTimeMillis has code to\njitter the results. This code is expensive, and when ms accuracy\nis needed (case 1) only necessary a small fraction of the time.\nAdding CurrentClockTimeMilliseconds allows chrome to optimize this\ncase.\n\n\nBug: chromium:1414615\nChange-Id: Ic47b503511bc633416d77843ce4bd45c76f99cc7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4246257\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Scott Violet <sky@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85869}\n","milestone":112},{"_id":"7b19557f8cb73895bda339c7a98decfb1dc9c5c2","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Wed Feb 08 09:24:56 2023"},"commit":"7b19557f8cb73895bda339c7a98decfb1dc9c5c2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Feb 08 10:29:48 2023"},"message":"[liveedit] Prohibit live editing the top-level function of ES modules\n\nLive editing ES moduls on the top-level is semantically unclear so\nwe straight-up prohibit it for now.\n\nR=bmeurer@chromium.org\n\nFixed: chromium:1413447\nChange-Id: Ib0ca3f7bb999ae70345659dcdb969e70194d29b5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4231551\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85722}\n","milestone":112},{"_id":"2833957c7753f22d56016305dd90987ed2ea7487","author":{"name":"Russ Hamilton","email":"behamilton@google.com","time":"Tue Feb 07 15:10:28 2023"},"commit":"2833957c7753f22d56016305dd90987ed2ea7487","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Feb 07 16:19:05 2023"},"message":"Add Context::DeepFreeze\n\nChange-Id: I1002944931fa7705048457e2cd2c39494923c750\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3691125\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Russ Hamilton <behamilton@google.com>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85710}\n","milestone":112},{"_id":"2e357c4814954c6d83c336655209e14aa53911d4","author":{"name":"Manos Koukoutos","email":"manoskouk@chromium.org","time":"Fri Feb 03 10:45:10 2023"},"commit":"2e357c4814954c6d83c336655209e14aa53911d4","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Feb 03 16:06:12 2023"},"message":"[wasm-gc] Introduce wasm null object\n\nWe introduce a wasm null object, separate from JS null. Its purpose is\nto support trapping null accesses for wasm objects.\nThis will be achieved by allocating a large payload for it (larger than\nany wasm struct) and memory-protecting it (see linked CL). The two null\nobjects get mapped to each other at the wasm-JS boundary.\nSince externref objects live on the JS side of the boundary,\nnull-related instructions in wasm now need an additional type argument\nto handle the correct null object.\n\nBug: v8:7748\nChange-Id: I06da00fcd279cc5376e69ab7858e3782f5b5081e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4200639\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Manos Koukoutos <manoskouk@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85648}\n","milestone":112},{"_id":"81aa89592bf85f39a9ee99ebedaf748437038ddf","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Fri Feb 03 11:55:46 2023"},"commit":"81aa89592bf85f39a9ee99ebedaf748437038ddf","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Feb 03 15:46:34 2023"},"message":"[ptrcomp] Remove the distinction of TaggedAny and TaggedPointer\n\nKnown-pointer decompression used to be distinct from any-tagged-value\ndecompression, since the latter used to detect Smis and decompress them\nwith sign extension. However, we got rid of this distinction when we\nintroduced Smi-corrupting loads (allowing the top 32-bits of\nuncompressed Smis to be undefined), which means that the TaggedPointer\nand TaggedAny decompression is now identical.\n\nWe can remove a bunch of duplicate code by removing this distinction.\n\nChange-Id: Id66671497d63ed885f9e537494c011317dfd4788\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4221398\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nAuto-Submit: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85647}\n","milestone":112},{"_id":"5080c7727af949a6bcf0fb60bde46a105aa2905e","author":{"name":"pthier","email":"pthier@chromium.org","time":"Wed Feb 01 12:43:36 2023"},"commit":"5080c7727af949a6bcf0fb60bde46a105aa2905e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Feb 03 09:49:49 2023"},"message":"[regexp] Add UseCounter for invalid regexp with /v, but valid with /u\n\nSome patterns that were valid with /u are invalid with /v.\nThis CL adds a UseCounter for such usages in /u to get an idea how often\nthey are used in the wild.\nThis is important information w.r.t the proposal to use /v instead of /u\nfor the pattern attribute (http://go/gh/whatwg/html/pull/7908).\n\nChromium CL: https://crrev.com/c/4221395\n\nBug: v8:11935\nChange-Id: Idc023ceba9ce03eee578d6c387ce8a8f37db292f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4212393\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nReviewed-by: Mathias Bynens <mathias@chromium.org>\nCommit-Queue: Patrick Thier <pthier@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85639}\n","milestone":112},{"_id":"e33c3a09b31af5b69286f904a378fcbfb36a726d","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Thu Feb 02 13:38:14 2023"},"commit":"e33c3a09b31af5b69286f904a378fcbfb36a726d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Feb 02 16:37:59 2023"},"message":"Disable the use of preserve_most on arm64 Windows\n\nWe see crashes on arm64 on Windows. Disable the use of preserve_most\nthere, until we figure out (and fix) the root cause.\n\nR=mlippautz@chromium.org\n\nBug: chromium:1409934\nChange-Id: Ic913039d36d158fb5ad368915d95c250d8724a07\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4218354\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85634}\n","milestone":112},{"_id":"8b231d80ca253f82c5a0b1ec032f83384fdebb0c","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Dec 06 13:53:13 2022"},"commit":"8b231d80ca253f82c5a0b1ec032f83384fdebb0c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Feb 01 14:29:41 2023"},"message":"[wasm] Remove deprecated CPU timings in metrics\n\nThe fields were deprecated in https://crrev.com/c/4079227; remove them\nnow.\n\nR=mlippautz@chromium.org\n\nBug: v8:13565\nChange-Id: I02429bd050fde42873fc77de9151337cccb16411\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4083069\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85594}\n","milestone":112},{"_id":"d0b1dac0f9f3c5c1bbf296bd84c8f362d4832a88","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Thu Feb 02 13:38:14 2023"},"commit":"d0b1dac0f9f3c5c1bbf296bd84c8f362d4832a88","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Feb 07 11:53:52 2023"},"message":"Merged: Disable the use of preserve_most on arm64 Windows\n\nWe see crashes on arm64 on Windows. Disable the use of preserve_most\nthere, until we figure out (and fix) the root cause.\n\nR=mlippautz@chromium.org\n\n(cherry picked from commit e33c3a09b31af5b69286f904a378fcbfb36a726d)\nBug: chromium:1409934\n\nChange-Id: I1f3b05dad6b2fa6f6c76a01a21c05f3c690c9fc0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4224502\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/branch-heads/11.1@{#12}\nCr-Branched-From: c77793a2ee5bfa7c5226dd8f622bf331b97a5a25-refs/heads/11.1.277@{#1}\nCr-Branched-From: 95b79bf04ba3f9de87f7bad77bc2d7552e5dc4d7-refs/heads/main@{#85479}\n","milestone":111},{"_id":"0ea9064e39a55d50a6c41e0d80dbaa80c0dad58e","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Tue Jan 24 13:16:41 2023"},"commit":"0ea9064e39a55d50a6c41e0d80dbaa80c0dad58e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jan 24 16:14:23 2023"},"message":"[compile hints] Collect compile hints data in v8\n\nThis adds the APIs for the embedder to\n1) request compile hints collection for a script\n2) retrieve the compile hint data\n\nBug: chromium:1406506\nChange-Id: Ic23430d3cff9fe71faa71f4c7be6635467e14268\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4154427\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85461}\n","milestone":111},{"_id":"b691cca3dec6fc37183fb1dc8c355e24dbd943a2","author":{"name":"Tobias Tebbi","email":"tebbi@chromium.org","time":"Mon Jan 23 15:09:00 2023"},"commit":"b691cca3dec6fc37183fb1dc8c355e24dbd943a2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jan 23 15:55:52 2023"},"message":"[runtime] add protector for String/Number prototype @@replace lookup\n\nThis improves performance of `String.prototype.replace` by avoiding\na runtime call in the case of strings.\n\nChange-Id: Id2339defa660b28ffde3d2e116c0a666ad1bfb1a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4173577\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85437}\n","milestone":111},{"_id":"4724f988aede98a5f9f2c1f60f8956acb71c388a","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Thu Jan 19 15:01:06 2023"},"commit":"4724f988aede98a5f9f2c1f60f8956acb71c388a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jan 23 14:21:36 2023"},"message":"[profiler] Support WasmGC objects in heap snapshots\n\nSince the heap snapshot generator is based on generic objects-visiting\ninfrastructure, it already reported all objects, but it showed WasmGC\nobjects as generic \"system\" objects. This patch adds proper categorization,\nincluding support for named types and fields.\n\nBug: v8:7748\nChange-Id: I1b0997059c9cf0290fe5d6c5402412ba09ecf143\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4181031\nAuto-Submit: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85435}\n","milestone":111},{"_id":"11a63fa8d297aa46ee8ba144a9630b29b7d88fd9","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Tue Jan 17 16:09:49 2023"},"commit":"11a63fa8d297aa46ee8ba144a9630b29b7d88fd9","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jan 17 16:58:54 2023"},"message":"[sandbox] Reduce max size of ExternalPointerTable on Android\n\nBug: v8:13661\nChange-Id: Iec08bc81fc2d42b728a05bbbe51c765d3982427c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4173595\nReviewed-by: Samuel Groß <saelo@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nCr-Commit-Position: refs/heads/main@{#85347}\n","milestone":111},{"_id":"debcabf7b5e639c7dc6df375b0b9550f3b5ad6f2","author":{"name":"Matthias Liedtke","email":"mliedtke@chromium.org","time":"Mon Jan 16 08:53:41 2023"},"commit":"debcabf7b5e639c7dc6df375b0b9550f3b5ad6f2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jan 16 09:49:46 2023"},"message":"[wasm-gc] Add callback for Wasm GC origin trial\n\nThe callback can be used to enable / disable Wasm GC from Chrome or\nother users. For more simplicity and as many users of Wasm GC also use\nstringrefs, enabling it via the callback will also stringrefs.\n\nBug: v8:7748\nChange-Id: I474034eabe438f0ce9759c1d34dda12a99aa491e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4165090\nAuto-Submit: Matthias Liedtke <mliedtke@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Matthias Liedtke <mliedtke@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85306}\n","milestone":111},{"_id":"1ef43e7ba9cc876f8a3080b4816d46cad9e30dd2","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Thu Jan 12 10:50:00 2023"},"commit":"1ef43e7ba9cc876f8a3080b4816d46cad9e30dd2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jan 12 12:31:10 2023"},"message":"[sandbox] Increase max size of ExternalPointerTable\n\nBug: v8:13640\nChange-Id: I017a067d775c71977054b772ead8853e4df0cd51\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4159852\nReviewed-by: Samuel Groß <saelo@chromium.org>\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85249}\n","milestone":111},{"_id":"7777e0321df5745ba5d4741d148ad6ec87d105ff","author":{"name":"Dominik Inführ","email":"dinfuehr@chromium.org","time":"Thu Jan 12 08:25:48 2023"},"commit":"7777e0321df5745ba5d4741d148ad6ec87d105ff","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jan 12 09:14:01 2023"},"message":"[api] Deprecate memory savings mode\n\nThis mode was used for an experiment and isn't used anymore.\nIsolateInBackgroundNotification() can be used to achieve the same\nmemory savings mode.\n\nBug: v8:13653\nChange-Id: I4bc0b0bd7ceac43f22e16b234b9482af9fe03152\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4156054\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85239}\n","milestone":111},{"_id":"8fe57bf6415748d35567db47a338458374be7bb6","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon Jan 09 13:55:59 2023"},"commit":"8fe57bf6415748d35567db47a338458374be7bb6","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jan 09 14:33:52 2023"},"message":"[x64] Make {Assembler::GrowBuffer} preserve most registers\n\nThis makes many callers of {GrowBuffer} a lot slimmer, by avoiding the\nneed to push and pop all values in otherwise caller-saved registers.\nE.g. {emit_mov(Register, Operand)} was measured to be ~2x faster (from\n2.3% of Liftoff compilation time to 1.2%).\n\nR=bikineev@chromium.org\nCC=dlehmann@chromium.org\n\nBug: v8:13565\nChange-Id: I681747a491548adf1374187cd9f37520c153ef1a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4127230\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Anton Bikineev <bikineev@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85147}\n","milestone":111},{"_id":"ca3a939da83b87453d8c59d8acced5ac6452ef50","author":{"name":"Vladimir Nechaev","email":"nechaev@chromium.org","time":"Wed Jan 04 18:14:42 2023"},"commit":"ca3a939da83b87453d8c59d8acced5ac6452ef50","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jan 05 09:27:47 2023"},"message":"[inspector] Provide more details about destroyed context\n\nRuntime.executionContextCreated provides many details in\nExecutionContextDescription structure while\nRuntime.executionContextDestroyed provides only executionContextId. This\ninformation is insufficient for the clients that use uniqueContextId.\n\nBug: v8:12896\nChange-Id: I31df0ed618dc1c8b55c7eba8f96eeaef2d4de6c8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3657439\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nAuto-Submit: Vladimir Nechaev <nechaev@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85110}\n","milestone":111},{"_id":"a8a1805e126d45ea635f332df26f786c67787419","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Jan 02 14:12:15 2023"},"commit":"a8a1805e126d45ea635f332df26f786c67787419","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jan 02 15:17:40 2023"},"message":"[api, heap, handles] Remove deprecated EmbedderHeapTracer\n\nThis removes EmbedderHeapTracer from V8's API. Going forward\nv8::TracedReference is only supported with using CppHeap (Oilpan).\n\nBug: v8:13207\nChange-Id: I4e0efa94890ed147293b5df69fd7e0edad45abb5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4111546\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85061}\n","milestone":111},{"_id":"28cb67cdec1777bebf44e4b921d81a3ff31cd78c","author":{"name":"Vladimir Nechaev","email":"nechaev@chromium.org","time":"Wed Dec 28 10:03:56 2022"},"commit":"28cb67cdec1777bebf44e4b921d81a3ff31cd78c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Dec 28 10:45:28 2022"},"message":"Runtime.callFunctionOn supports uniqueContextId\n\nBug: v8:13620\nChange-Id: I802deb3325a5c8ac9e7e378d60be591af66e6fee\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4126215\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Vladimir Nechaev <nechaev@chromium.org>\nCr-Commit-Position: refs/heads/main@{#85027}\n","milestone":111},{"_id":"f6d85958e08c0f4fd4083b740ce4059e8cf48064","author":{"name":"Olivier Flückiger","email":"olivf@chromium.org","time":"Wed Dec 14 16:09:10 2022"},"commit":"f6d85958e08c0f4fd4083b740ce4059e8cf48064","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Dec 21 12:33:34 2022"},"message":"[static-roots] Use operator== in HeapObject::Is##Type\n\nReplace SafeEquals with normal equals operator in `IsUndefined` and\nfriends. This will allow us to have more efficient checks with static\nroots, since pointers do not need to be decompressed.\n\nAfter this change calling Is##Type on CodeObjects is no longer possible.\nThis is ensured by dchecks in operator==. The change might reveal more\ncallers that need to be fixed.\n\nBug: v8:13466\nChange-Id: I3353d10aebb7a192a77281c44e4159f0da336297\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4106849\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nAuto-Submit: Olivier Flückiger <olivf@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84974}\n","milestone":111},{"_id":"e29e64e7293238020d165efd420034709dcb0c67","author":{"name":"Anton Bikineev","email":"bikineev@chromium.org","time":"Fri Dec 16 09:30:03 2022"},"commit":"e29e64e7293238020d165efd420034709dcb0c67","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Dec 16 10:15:12 2022"},"message":"unified-young-gen: Filter custom weak callbacks\n\nOilpan young generation currently remembers all weak callbacks to be\nprocessed on each GC. This is needed to support UntracedMembers in the\nold space. If the old object with UntracedMember (e.g.\nActiveScriptWrappableManager) holds a pointer to a young object, the\ncustom weak callback must be reexecuted on each minor GC, because the\ncustom callback is responsible for clearing UntracedMembers.\n\nThis is not necessary for weak containers. They hold WeakMembers, for\nwhich we issue the regular write barrier. The CL distinguishes between\ncallbacks for weak containers and for custom objects. This aims to\nspeeds up weak processing, which currently may take >10ms.\n\nBug: v8:13475\nChange-Id: I6964a6835dc84febddbefb5e2952d57f108d1232\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4080470\nCommit-Queue: Anton Bikineev <bikineev@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84895}\n","milestone":111},{"_id":"4b451843fd29b9f7a434e081c88ca30f6690599a","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Dec 06 13:52:18 2022"},"commit":"4b451843fd29b9f7a434e081c88ca30f6690599a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Dec 15 14:25:48 2022"},"message":"[wasm] Deprecate CPU timings in metrics\n\nWe do not collect them any more since https://crrev.com/c/4078966\n(landed in v11.0), so deprecate the fields now for v11.1.\n\nR=mlippautz@chromium.org\n\nBug: v8:13565\nChange-Id: I6b454cd6591c6489043002226f3c4fd19fdeb7e5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4079227\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84871}\n","milestone":111},{"_id":"97924c16ff70552497da834a6e81017865e50c27","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Wed Nov 09 06:40:29 2022"},"commit":"97924c16ff70552497da834a6e81017865e50c27","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Nov 09 07:44:28 2022"},"message":"[inspector] Allow to break only on caught exceptions.\n\nThis introduces a new \"caught\" case for Debugger.setPauseOnExceptions,\nwhich instructs the V8 Debugger to only break on exceptions that are\npredicted as caught. Previously it wasn't possible to express this with\nChrome DevTools Protocol.\n\nBug: chromium:1324920, chromium:1346231\nChange-Id: I507cfb6058148b2e238b8f66e9720ab68cb81575\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4013330\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Kim-Anh Tran <kimanh@chromium.org>\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84137}\n","milestone":109},{"_id":"b5485fd81f49f4e887a11db5bdf1953154a5c16b","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Nov 08 17:32:17 2022"},"commit":"b5485fd81f49f4e887a11db5bdf1953154a5c16b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Nov 08 18:40:37 2022"},"message":"[handles] TracedHandles: Rely on AllocateAtLeast()\n\nUse AllocateAtLeast() to create a TracedNodeBlock. In todays Blink\nthis increases capacity from 256 to 284, reducing memory and\npreserving the fast path longer.\n\nLimit capacity to '1' for ASAN builds to flush out UAFs.\n\nBug: v8:13372\nChange-Id: Iaa0ca940b59ed58015fcb768b851e6054ac7e152\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3999730\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84131}\n","milestone":109},{"_id":"6eb8316e7aaf83ed35185e97acb9320acecbb741","author":{"name":"Dominik Inführ","email":"dinfuehr@chromium.org","time":"Fri Oct 28 13:43:46 2022"},"commit":"6eb8316e7aaf83ed35185e97acb9320acecbb741","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Nov 02 08:26:30 2022"},"message":"[execution] Report first old space page as CrashKey\n\nMaps are now in old space, so start to report the first page in old\nspace now.\n\nBug: v8:12578\nChange-Id: Icf08c9074558a2d47bb9f1f8df72cec9668d2b4e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3986087\nAuto-Submit: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#84002}\n","milestone":109},{"_id":"9df5ef70ff18977b157028fc55ced5af4bcee535","author":{"name":"Andreu Botella","email":"andreu@andreubotella.com","time":"Thu Oct 27 00:15:59 2022"},"commit":"9df5ef70ff18977b157028fc55ced5af4bcee535","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Oct 27 20:04:25 2022"},"message":"Add an `v8::ArrayBuffer::WasDetached` method to the C++ API\n\nV8's C++ API does not give a way to tell whether an ArrayBuffer has\nbeen detached from the `v8::ArrayBuffer` class. In fact, as far as can\nbe told from the C++ API without running JS code, detached\nArrayBuffers behave the same as zero-sized ArrayBuffers and there is\nno way to observe the difference. However, this difference can be\nobserved in JS because constructing a TypedArray from a detached\nArrayBuffer will throw.\n\nThis change adds a `WasDetached` method to the `v8::ArrayBuffer` class\nto give embedders access to this information without having to run JS\ncode.\n\nBug: v8:13159\nChange-Id: I2bb1e380cee1cecd31f6d48ec3d9f28c03a8a673\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3810345\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83963}\n","milestone":109},{"_id":"b6969920f490dab27c51379c98918d514cb004fa","author":{"name":"Dave Tapuska","email":"dtapuska@chromium.org","time":"Tue Oct 25 18:06:07 2022"},"commit":"b6969920f490dab27c51379c98918d514cb004fa","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Oct 26 16:40:21 2022"},"message":"[execution] Add ability to set the microtask queue for the context.\n\nIt is important that the Context's microtask queue matches what the\nembedder thinks it is. Android WebView has some interop functionality\nwhere the Agent changes but the context must not be cleared. Ensuring the microtask queue for the context matches the Agent by adding a\nsetter that the embedder can call.\n\nBUG=chromium:961186\n\nChange-Id: Id99644fbfc84b8a1676162261444c02d07b238a1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3976350\nCommit-Queue: Dave Tapuska <dtapuska@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83937}\n","milestone":109},{"_id":"91ffb88d4ed2208590d717be1c4a92cfc70a14c8","author":{"name":"Zequan Wu","email":"zequanwu@google.com","time":"Wed Oct 19 23:18:33 2022"},"commit":"91ffb88d4ed2208590d717be1c4a92cfc70a14c8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Oct 25 23:02:10 2022"},"message":"Mark Data constructor deleted.\n\nBecause Data's ctor is not defined, debug info optimization will\ngenerate empty debug info for it. Adding standalone_debug attribute for\nit to have complete debug info for this class.\n\nBug: \nChange-Id: I0ca023518b1f5142a63686ba5a41007ac067c1f2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3963719\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Zequan Wu <zequanwu@google.com>\nAuto-Submit: Zequan Wu <zequanwu@google.com>\nCr-Commit-Position: refs/heads/main@{#83915}\n","milestone":109},{"_id":"69ad9552b28299558b52eb002daf949b8f9e8bbc","author":{"name":"Juan José Arboleda","email":"soyjuanarbol@gmail.com","time":"Thu Oct 13 23:16:03 2022"},"commit":"69ad9552b28299558b52eb002daf949b8f9e8bbc","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Oct 25 10:49:04 2022"},"message":"[profiler] add `Serialize` to `v8::CpuProfile`\n\nSupport JSON serialization in `v8::CpuProfile`\n\nBug: v8:13291\nChange-Id: I638cf2c1f7acba9c5b8a2932d84c9882d968c90d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3905128\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83901}\n","milestone":109},{"_id":"c23bc72c834ce6b3e51a13abefbcc4eec4d7d65c","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Oct 21 13:31:46 2022"},"commit":"c23bc72c834ce6b3e51a13abefbcc4eec4d7d65c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Oct 24 10:04:08 2022"},"message":"[handles] Split off traced handles from regular global handles\n\nv8::TracedReference and their underlying traced handles are not\nactually phantom references but have been historically represented as\nsuch. This patch splits off their backing implementaton into\n`TracedHandles`.\n\nAs a drive-by, re-organize the free list to rely on indices instead of\npointers, saving a full word for each node. In additon, the setup also\nallows for freeing fully empty node blocks after GCs.\n\nAllocation/free of nodes is also organized in a way that avoids\njumping between handles/blocks/nodes for accounting purposes.\n\nRemoving CRTP in GlobalHandle internals is left for a follow up.\n\nBug: v8:13372\nChange-Id: Ib55aa9ba71202d5918b486c161fe6f747d31c719\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3966952\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83872}\n","milestone":109},{"_id":"724e7ce1744be2141fcf4fbd8afec922bf33d850","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Fri Oct 21 11:57:05 2022"},"commit":"724e7ce1744be2141fcf4fbd8afec922bf33d850","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Oct 21 12:55:18 2022"},"message":"[arraybuffers, api] Implement [[ArrayBufferDetachKey]] support\n\nBug: chromium:1344595\nChange-Id: Ic1075361b92c776789ce2fbf1e105dea174f3a2f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3925936\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83847}\n","milestone":109},{"_id":"b2892b5f24b7b97ad930356a9376b8a9b2a1d360","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Fri Oct 21 09:15:59 2022"},"commit":"b2892b5f24b7b97ad930356a9376b8a9b2a1d360","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Oct 21 12:14:52 2022"},"message":"[inspector] Add [[WeakRefTarget]] internal property.\n\nThis adds a new [[WeakRefTarget]] internal property to\n`Runtime.getProperties` results for `JSWeakRef` results\n(also included in the preview), which will be used by\nDevTools to show the target of the weak reference without\nhaving to explicitly call `deref()` on them. As part of\nthis we also have (temporary) strong references to the\ntarget, slightly changing behavior, but that's consistent\nwith how DevTools deals with `JSWeakMap` and `JSWeakSet`.\n\nBug: chromium:1267690\nChange-Id: I2a9ef9261996fcdee20fbd0fc728d11208c82459\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3970598\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83844}\n","milestone":109},{"_id":"e144483823e93bb5eb2d4848ff5b39f4907a7dcc","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Wed Oct 19 22:00:35 2022"},"commit":"e144483823e93bb5eb2d4848ff5b39f4907a7dcc","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Oct 20 16:32:42 2022"},"message":"[api] Add documentation for v8::Platform::GetPageAllocator\n\nChange-Id: I5760687fa9e8a7512d3946704f51f321ffa3676b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3963718\nCommit-Queue: Adam Klein <adamk@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83827}\n","milestone":109},{"_id":"2f0384871fcb4a92aefb4024f05c520a9610a6b0","author":{"name":"Dave Tapuska","email":"dtapuska@chromium.org","time":"Thu Oct 13 14:59:47 2022"},"commit":"2f0384871fcb4a92aefb4024f05c520a9610a6b0","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Oct 19 14:56:37 2022"},"message":"[execution] Pass microtask queue from Context to MicrotasksScope\n\nWith a unique microtask queue possibly per context we need to pass\nthe microtask queue for the MicrotasksScope otherwise the default one\nfor the isolate will be used.\n\nBUG=chromium:961186\n\nChange-Id: Ib085f08e20185c69760aeea335d673d9c4c72999\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3950216\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Dave Tapuska <dtapuska@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83803}\n","milestone":109},{"_id":"6dc05091212a6b1c482d64f7d150c803889c0fc8","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Oct 13 12:58:58 2022"},"commit":"6dc05091212a6b1c482d64f7d150c803889c0fc8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Oct 14 09:29:13 2022"},"message":"[api] Advance EmedderHeapTracer deprecation\n\nBug: v8:13207\nChange-Id: Id4e7a1576c6381c346f1020aaa1110199e1dcaad\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3952676\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83704}\n","milestone":109},{"_id":"35e58232e681a4a7c055088a8ab1cc35321bdddc","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Wed Sep 14 11:54:05 2022"},"commit":"35e58232e681a4a7c055088a8ab1cc35321bdddc","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Sep 14 16:36:29 2022"},"message":"[inspector] Add use counter for async stack tagging API\n\nWe count the calls to `createTask` to track adoption.\n\nChromium CL: https://crrev.com/c/3894138\n\nR=kimanh@chromium.org\n\nBug: chromium:1334585\nChange-Id: I091f738e5b0dfdbb5843cda09eed7d3f906ea681\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3892783\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83199}\n","milestone":107},{"_id":"7e4ee6862e122379703ce40c63e85e66a73b85c1","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed Sep 14 11:51:05 2022"},"commit":"7e4ee6862e122379703ce40c63e85e66a73b85c1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Sep 14 13:57:23 2022"},"message":"[sandbox] Introduce ExternalPointerTable::Freelist\n\nThis struct represents the freelist of an ExternalPointerTable and\ncontains both the size and the head of the freelist. It is encoded and\nstored as a single Atomic64 field (freelist_) inside the\nExternalPointerTable class. This ensures that the freelist head and size\nare always synchronized.\n\nPreviously, the freelist size was encoded in freelist entries in the top\nbits. This only works as long as the maximum table size is relatively\nsmall however, as it requires both the freelist size and the index of\nthe next entry on the list to fit into 24 bits. To allow for bigger\nmaximum table sizes in the future, this CL moves the freelist size\ndirectly into the table as part of the freelist_ field.\n\nBug: v8:10391\nChange-Id: Id09c9b28d09d79b704ac47e6566029cfb209ecd1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3891256\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83193}\n","milestone":107},{"_id":"e1dbe835d7b24ea4aa52a23e9376bb10d1a8a82b","author":{"name":"Hao Xu","email":"hao.a.xu@intel.com","time":"Tue Sep 13 13:40:05 2022"},"commit":"e1dbe835d7b24ea4aa52a23e9376bb10d1a8a82b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Sep 13 09:25:25 2022"},"message":"[csa][codegen] Optimize IsStrong/IsWeakOrCleared\n\nThe way to determine whether a MaybeObject is a strong or weak\nreference to the heap object is to check its lowest two bits.\nHowever, if the MaybeObject is known to not be a smi, that is, the\nlowest bit is known to be 1, we can check one bit instead. This\nallows Turbofan to select better instructions:\n\nx64:\n\n  Before:\n    movl r9,r11\n    andl r9,0x3\n    cmpb r9l,0x1\n\n  After:\n    testb r11,0x2\n\narm64:\n\n  Before:\n    and w8, w7, #0x3\n    cmp w8, #0x1 (1)\n    b.ne #+0x320\n\n  After:\n    tbnz w7, #1, #+0x320\n\nChange-Id: I03623183406ad7d920c96a752651e0116a22832e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3861310\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nCommit-Queue: Hao A Xu <hao.a.xu@intel.com>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83153}\n","milestone":107},{"_id":"a26ca5ed147dde47f02d70c5b38d8befc1c93cb3","author":{"name":"Liu Yu","email":"liuyu@loongson.cn","time":"Thu Sep 08 11:39:11 2022"},"commit":"a26ca5ed147dde47f02d70c5b38d8befc1c93cb3","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Sep 13 07:54:54 2022"},"message":"[mips32] Delete mips32 from v8\n\nBug: v8:13206\nChange-Id: Ifb5daeff2a1e91fd098bc5abe9f81339575636bf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3837160\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nAuto-Submit: Liu Yu <liuyu@loongson.cn>\nCommit-Queue: Liu Yu <liuyu@loongson.cn>\nCr-Commit-Position: refs/heads/main@{#83148}\n","milestone":107},{"_id":"49c59678301fafcd7f70221cdd7936253a229093","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed Sep 07 14:05:27 2022"},"commit":"49c59678301fafcd7f70221cdd7936253a229093","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Sep 08 15:25:30 2022"},"message":"[sandbox] Fold V8_SANDBOXED_EXTERNAL_POINTERS into V8_ENABLE_SANDBOX\n\nNow that all external pointers have been sandboxed,\nV8_SANDBOXED_EXTERNAL_POINTERS is no longer needed. This change also\nshrinks external pointer slots to 32 bits when the sandbox is enabled.\n\nBug: v8:10391\nChange-Id: Iccbef27ac107b988cb23fe9ef66da6fe0bae087a\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3869269\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Manos Koukoutos <manoskouk@chromium.org>\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83083}\n","milestone":107},{"_id":"87ce9fce749c8f1fa41dee2bd9499391dca76d49","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Tue Sep 06 20:50:55 2022"},"commit":"87ce9fce749c8f1fa41dee2bd9499391dca76d49","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Sep 07 23:41:26 2022"},"message":"[shared-struct] Rework shared value serializer API again\n\nThis CL fixes redesigns the current API, which does not correctly\nmanage lifetimes of the shared object conveyors.\n\nSee design doc at\nhttps://docs.google.com/document/d/1TV6agY9dafVJFvdPrUAGbEvos8wL2WDnsmf84n3OJVU/edit?usp=sharing\n\nThis CL also removes the incorrect behavior of serializing all shared\nstrings by sharing instead of copying. Shared strings may be sent to\nanother process, which should still work.\n\nBug: v8:12547\nChange-Id: I7413abd2d871fd3d52c9b433445cfa1d03e4a732\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3868713\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83044}\n","milestone":107},{"_id":"5d4567279e30e1e74588c022861b1d8dfc354a4e","author":{"name":"Patrick Thier","email":"pthier@chromium.org","time":"Tue Sep 06 16:35:25 2022"},"commit":"5d4567279e30e1e74588c022861b1d8dfc354a4e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Sep 06 17:51:56 2022"},"message":"[regexp] Add v-Flag for Unicode Sets\n\n- Add v-flag and corresponding prototype getters.\n- Update RegExp builtins fuzzer to handle two-byte flags.\n- Update test262 status.\n\nBug: v8:11935\nChange-Id: If649ebfacf1f933f3ae5c770c2240470a8b460ee\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3868952\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nCommit-Queue: Patrick Thier <pthier@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83003}\n","milestone":107},{"_id":"d00c040547f22858c1ab724e9db1933c00daccec","author":{"name":"Patrick Thier","email":"pthier@chromium.org","time":"Mon Sep 05 07:36:57 2022"},"commit":"d00c040547f22858c1ab724e9db1933c00daccec","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Sep 05 10:14:12 2022"},"message":"[strings] Support shared external strings\n\nWith this CL shared strings can be externalized and external strings can\nbe shared.\nThe StringForwardingTable is used to delay the real transition to the\nnext full GC. On the API side strings marked for externalization will\nlook like externalized strings.\n\nBug: v8:12957\nChange-Id: I53b6509129bc5679c06bdf99421bdb41ea5d9082\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3849643\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Patrick Thier <pthier@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82966}\n","milestone":107},{"_id":"e7bf81100af1cdfd84994ec7d3071a29cbef5257","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri Sep 02 09:23:12 2022"},"commit":"e7bf81100af1cdfd84994ec7d3071a29cbef5257","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Sep 05 07:32:39 2022"},"message":"[sandbox] Sandboxify ExternalString external pointers\n\nBug: v8:10391\nChange-Id: I0f737e5adf6e4fd24f93436fa5680ff20c1536da\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3757901\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82958}\n","milestone":107},{"_id":"ba14e4d0626a1dfb2f9c239f3d70b10714f29cca","author":{"name":"Jaroslav Sevcik","email":"jarin@chromium.org","time":"Wed Aug 31 14:48:56 2022"},"commit":"ba14e4d0626a1dfb2f9c239f3d70b10714f29cca","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Sep 01 05:22:16 2022"},"message":"[inspector] Introduce instrumentation pause distinction\n\nIntroduce an inspector client interface method for running an\n\"instrumentation pause\" (when an instrumentation breakpoint is hit).\nThis allows the client to run a more restrictive version of message\npumping on instrumentation breakpoint hits.\n\nIf not overriden, the instrumentation pause message loop handler will\nrun the normal message loop. Such an implementation preserves the\nbehavior for existing clients.\n\nBug: chromium:1354043\nChange-Id: Id33bb10503d73b59b24e63fd9d24631611f68dee\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3863256\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Jaroslav Sevcik <jarin@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82881}\n","milestone":107},{"_id":"d855d7f7b18905748772d10a4a569366e240e120","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Wed Aug 31 01:46:38 2022"},"commit":"d855d7f7b18905748772d10a4a569366e240e120","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Aug 31 15:27:55 2022"},"message":"[shared-struct] Rework ValueSerializer::Delegate::SupportsSharedValues\n\nThis CL has two changes:\n\n1. Remove ValueDeserializer::Delegate::SupportsSharedValues. Only\n   ValueSerializer::Delegate needs to report whether it supports\n   serializing shared values. The ValueDeserializer::Delegate should\n   DCHECK if it gets a shared object tag but it doesn't support it.\n   This better mirrors what happens with SharedArrayBuffer transfers\n   currently.\n\n2. When attempting to serialize a shared object (shared struct, shared\n   array, Atomics.Mutex, or Atomics.Condition) when\n   !SupportsSharedValues(), throw instead of assert. This is for better\n   ergonomics.\n\nBug: v8:12547\nChange-Id: I2bb66830393526578016813c4e3488859dd07073\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3866302\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nAuto-Submit: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82870}\n","milestone":107},{"_id":"a27a527b7573977439fd07dca1f07c874535d90f","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri Aug 26 14:29:59 2022"},"commit":"a27a527b7573977439fd07dca1f07c874535d90f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Aug 31 12:42:38 2022"},"message":"[sandbox] Sandboxify Foreign external pointers\n\nBug: v8:10391\nChange-Id: I567f94800119a9afd3f684134a6f4885026f813e\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3859347\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82866}\n","milestone":107},{"_id":"6229eee3657284cb6ad9b457d477925ad60bb743","author":{"name":"snek","email":"snek@chromium.org","time":"Mon Aug 22 05:53:25 2022"},"commit":"6229eee3657284cb6ad9b457d477925ad60bb743","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 30 19:35:14 2022"},"message":"[fastcall] fix options.data representation\n\nThe representation of `options.data` was previously refactored to\n`v8::Value` when removing `v8::ApiObject`, but this is invalid for a\nnumber of reasons (SMIs, v8::Value being a ZST, etc). To fix this, it\nhas been changed to `Local<Value>`, which also matches the\nrepresentation used for other fastcall parameters.\n\nBug: chromium:1052746\nChange-Id: Ia4450bf3d908d4e1b7a85d6bd7ab45ea5f5f08f4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3844662\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nCommit-Queue: snek <snek@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82843}\n","milestone":107},{"_id":"d843cda7690404d574db25f6eb0ed390e090b598","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Aug 29 14:03:22 2022"},"commit":"d843cda7690404d574db25f6eb0ed390e090b598","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 30 14:24:54 2022"},"message":"[sandbox] Move ExternalPointerTable entry logic into new Entry class\n\nThis CL introduces a new ExternalPointerTable::Entry class and moves all\nlow-level logic related to entry management into this class.\n\nBug: v8:10391\nChange-Id: Ib7eb05da1d277cb665503e98b3f074520e572bad\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3829485\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82825}\n","milestone":107},{"_id":"752408926404509f37a6ea8fa33f5ae2e8045d66","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Mon Aug 29 18:13:50 2022"},"commit":"752408926404509f37a6ea8fa33f5ae2e8045d66","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 29 19:44:47 2022"},"message":"[shared-struct] Use PersistentHandles to convey shared values\n\nShared values need to be kept alive while being conveyed across threads (i.e. by\npostMessage). Currently they are meant to be conveyed through the\nserializer/deserializer by the embedder via API. This both clunky and\nthe embedder has no good choice for what to do, because the most natural\nchoice is v8::Global and it is not designed to be threadsafe.\n\nThis CL removes the API and transparently handles conveying shared\nvalues by using a wrapper around PersistentHandles called\nSharedValueConveyors. Any isolate can own the conveyor provided it\noutlives the receipt of the message by the receiving isolate. For\nsimpler lifetime management, the shared isolate currently owns all\nconveyors.\n\nBug: v8:12547\nChange-Id: I8f71b2faa0f8a1973f8b97ffccf4f5ad230f4e16\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3857453\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82795}\n","milestone":107},{"_id":"a94048877ddd3732b1ceacf797319af366a80c30","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Aug 29 10:54:02 2022"},"commit":"a94048877ddd3732b1ceacf797319af366a80c30","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 29 13:12:36 2022"},"message":"[sandbox] Unsandboxify CodeEntryPoint\n\nFor code pointers, the sandbox will require a custom, lightweight CFI\nmechanism (likely based on the external pointer table). Simply turning\nall code pointers into ExternalPointers is not sufficient.\nThis CL therefore turns code pointers back into raw pointers for now so\nthat they don't block the external pointer table rollout.\n\nBug: v8:10391\nChange-Id: Ib2ba246be546bbf19fcd0f4ae20f4e9a2cf2e099\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3859348\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82775}\n","milestone":107},{"_id":"51acc286e03705b85eaf373057ce0f87e8377dfb","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed Aug 24 15:46:34 2022"},"commit":"51acc286e03705b85eaf373057ce0f87e8377dfb","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 29 10:43:55 2022"},"message":"[wasm][API] Remove deprecated API\n\nThe API was deprecated in v10.6 (https://crrev.com/c/3789510).\nRemove now, in v10.7.\n\nR=mlippautz@chromium.org\n\nBug: v8:12899\nChange-Id: I21d79cdd357315daf9684d9cdd6c1f1be088ad6b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3852490\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82768}\n","milestone":107},{"_id":"5c152a0f7b53ad24c4e103daad3cbfa94d51c29d","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri Aug 26 13:53:04 2022"},"commit":"5c152a0f7b53ad24c4e103daad3cbfa94d51c29d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 29 09:53:35 2022"},"message":"[sandbox] Remove a number of native allocations from WasmInstanceObject\n\nThose are not safe in combination with the sandbox as they are stored as\nraw pointers. Instead of turning them into ExternalPointers (which use\nthe ExternalPointerTable indirection), this CL simply turns them into\non-heap ByteArrays which is cheaper and should be unproblematic\nsecurity-wise as their contents can be corrupted without causing memory\ncorruption outside the sandbox address space (just incorrect behaviour\nand/or further memory corruption *inside* the sandbox, which is fine).\n\nBug: chromium:1335046\nChange-Id: Id2b901a58b7d6c91dd7596fca553d7c76cbc61ec\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3845636\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82765}\n","milestone":107},{"_id":"31e17fe62d59968f6f89f5c33eaf8fa75d375b77","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri Aug 26 22:07:04 2022"},"commit":"31e17fe62d59968f6f89f5c33eaf8fa75d375b77","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Aug 26 23:41:57 2022"},"message":"[shared-struct, api] Support shared isolates in API\n\nCurrently the ability to create shared isolates is partially exposed to\nAPI. Instead of fully exposing it, this CL makes shared isolate and\nshared heap handling transparent to the embedder.\n\nIf a flag that requires the shared heap is true (currently\n--shared-string-table and --harmony-struct), the first isolate created\nin the process will create and attach to a process-wide shared isolate.\nSubsequent isolates will attach to that shared isolate. When that first isolate is deleted, the shared isolate is also deleted.\n\nBug: v8:12547\nChange-Id: Idaf2947bc354066c44f2d10243e10162b1b7e4d6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3848825\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nOwners-Override: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82756}\n","milestone":107},{"_id":"2dd434f4db0e22935dd5422ed47fade3113e84be","author":{"name":"Tom Anderson","email":"thomasanderson@chromium.org","time":"Tue Aug 23 22:36:30 2022"},"commit":"2dd434f4db0e22935dd5422ed47fade3113e84be","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Aug 25 09:19:28 2022"},"message":"Fix build with -Wextra-semi\n\nBug: chromium:1355871\nChange-Id: I7c465e7ce326c62cbc8ad92e2547eea78d23fe0b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3852443\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nAuto-Submit: Thomas Anderson <thomasanderson@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82716}\n","milestone":107},{"_id":"4c8c8cacdfe11095b75f2496759cc9a89436e06d","author":{"name":"Jakob Linke","email":"jgruber@chromium.org","time":"Wed Aug 24 10:02:15 2022"},"commit":"4c8c8cacdfe11095b75f2496759cc9a89436e06d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Aug 24 10:51:30 2022"},"message":"[compiler] Add a use counter for Turbofan OSR compiles\n\n.. to track how often OSR is used in the real world.\n\nChromium CL: crrev.com/c/3853648\n\nBug: v8:13228\nChange-Id: I9aee2eefb8a7b479e6ade403f46bfd7eac9ac5cd\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3852388\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Jakob Linke <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82685}\n","milestone":107},{"_id":"bf5e3a8a0edfb78c975da04c0f79eb92215255e3","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Aug 23 13:57:03 2022"},"commit":"bf5e3a8a0edfb78c975da04c0f79eb92215255e3","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Aug 24 09:03:00 2022"},"message":"[api, heap] Deprecate v8::EmbedderHeapTracer\n\nUsers should rely on CppHeap which is the only supported way of using\nv8::TracedReference in going forward.\n\nBug: v8:13207\nChange-Id: Idd03f458167c74b06f285bb568e5c77ad46003fe\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3849037\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82681}\n","milestone":107},{"_id":"4be9de90ac89585cbf79d452bba766f485a17941","author":{"name":"ishell@chromium.org","email":"ishell@chromium.org","time":"Tue Aug 23 10:54:34 2022"},"commit":"4be9de90ac89585cbf79d452bba766f485a17941","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 23 15:26:09 2022"},"message":"[api] Add v8::CrashKeyId::kCodeRangeBaseAddress\n\n... when the code range is created. This key should be more helpful\nthan the existing kCodeSpaceFirstPageAddress crash key, especially\nfor the cases when snapshot does not contain Code objects and thus\nthe code space is not created during Isolate initialization.\n\nThe mid-term plan is to remove the latter in favour of the former\nsince the default configuration does not imply creation of the code\nspace.\n\nBug: v8:11880\nChange-Id: Icdea38723c7ed73605c2df6589ec01193571d55c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3849038\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82667}\n","milestone":107},{"_id":"134ca75cd3233b3b54d41ec08ac363836d78b19e","author":{"name":"ishell@chromium.org","email":"ishell@chromium.org","time":"Mon Aug 22 11:33:15 2022"},"commit":"134ca75cd3233b3b54d41ec08ac363836d78b19e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 22 18:01:48 2022"},"message":"[runtime] Merge redirected and non-redirected callback fields\n\nNamely:\n - AccessorInfo::getter and AccessorInfo::js_getter,\n - CallHandlerInfo::callback and CallHandlerInfo::js_callback.\n\nThe redirected/non-redirected callback distinction is required only\nfor simulated builds but we wasted memory also for all native builds.\n\nNow we store these fields in \"redirected\" form which allows us to call\nthem directly from builtins or generated code. In case it's necessary\nto call a callback from C++ code the C function address is read from\nthe redirection. This additional indirection makes the callback calls\nfrom C++ code in simulated builds slower but saves memory for native\nbuilds.\n\nThis CL should recover a part of memory regression caused by inlining\nForeign fields into AccessorInfo and CallHandlerInfo.\n\nBug: v8:12949, chromium:1336105, chromium:1335930\nChange-Id: I38470ed21ee23b281247c11a9531542c7e4acca1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3835686\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82631}\n","milestone":107},{"_id":"24cf9bd945d8cc08eaa7b3b2b3ccca800709449a","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Jul 22 07:19:41 2022"},"commit":"24cf9bd945d8cc08eaa7b3b2b3ccca800709449a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 22 15:58:58 2022"},"message":"[API] Deprecate second OnCriticalMemoryPressure\n\nMove forward with the deprecation.\n\nR=mlippautz@chromium.org\n\nBug: chromium:634547\nChange-Id: I46227ee119923d7f6ac364769718e5bca90686e7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3780531\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82627}\n","milestone":107},{"_id":"e1f585ed94d799555793a4150281ce2baf22a666","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Aug 16 12:47:06 2022"},"commit":"e1f585ed94d799555793a4150281ce2baf22a666","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 22 13:08:38 2022"},"message":"[sandbox] Sandboxify EmbedderDataSlots\n\nBug: v8:10391\nChange-Id: If85a308a6f6ed1b17d86f87b4911c82d2327ea72\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3757341\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82623}\n","milestone":107},{"_id":"5e07ef10e06c69a72cf515abfa11ecb9556e114f","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Jul 18 08:31:20 2022"},"commit":"5e07ef10e06c69a72cf515abfa11ecb9556e114f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Aug 19 09:06:37 2022"},"message":"[sandbox] Remove V8::InitializeSandbox\n\nThe function is no longer used in Chromium or V8 and can therefore be\ndeleted. This CL also simplifies V8::GetSandboxSizeInBytes, which now no\nlonger needs to be able to deal with an uninitialized sandbox.\n\nBug: v8:10391\nChange-Id: I22d6b0e03de1fd2ba3d38c4e476fca44068b62f9\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3769690\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82583}\n","milestone":107},{"_id":"f4c70bc5e89b70ca4b040a3b89326733daffb3a5","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Thu Apr 27 09:11:32 2023"},"commit":"f4c70bc5e89b70ca4b040a3b89326733daffb3a5","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jun 01 12:52:24 2023"},"message":"[M108-LTS][api] Fix v8::Object::SetAccessorProperty\n\n... by using JavaScript spec compliant JSReceiver::DefineOwnProperty.\n\nDrive-by:\n- cleanup comments in include/v8-object.h, insert links to\nrespective pages of https://tc39.es/ecma262/ when referencing spec,\n- rename JSObject::DefineAccessor() to\n  JSObject::DefineOwnAccessorIgnoreAttributes().\n\n(cherry picked from commit b8020e1973d7d3a50b17c076cd948f079e59f9e5)\n\nBug: chromium:1433211\nChange-Id: Ia9edaadd68f1986f18581156ad8f79c438b77744\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4458947\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Original-Commit-Position: refs/heads/main@{#87302}\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4573392\nCommit-Queue: Roger Felipe Zanoni da Silva <rzanoni@google.com>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/branch-heads/10.8@{#62}\nCr-Branched-From: f1bc03fd6b4c201abd9f0fd9d51fb989150f97b9-refs/heads/10.8.168@{#1}\nCr-Branched-From: 237de893e1c0a0628a57d0f5797483d3add7f005-refs/heads/main@{#83672}\n","milestone":108},{"_id":"e9775165b6fe77c4a94cf7802865ed40996197aa","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Oct 11 10:53:04 2022"},"commit":"e9775165b6fe77c4a94cf7802865ed40996197aa","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Oct 11 13:43:43 2022"},"message":"[sandbox] Introduce BoundedSize\n\nA BoundedSize is just a regular size_t when the sandbox is disabled.\nHowever, when the sandbox is enabled, a BoundedLength is guaranteed to\nbe in the range [0, kMaxSafeBufferSizeForSandbox]. This is (currently)\nachieved by storing the length shifted to the left, then right-shifting\nit when loading it. This guarantees that the top bits are zero.\n\nBoundedSizes are used to ensure safe access to variable-sized buffers,\nin particular ArrayBuffers and their views, located inside the sandbox.\nIf a full size_t is used to represent their size, it may allow an\nattacker to \"reach out of\" the sandbox address space by setting the\nlength to a very large value. A BoundedSize prevents this.\n\nBug: chromium:1360375\nChange-Id: I0579693db528af96c41eeaa64bd3ed71266aacd9\nCq-Include-Trybots: luci.v8.try.triggered:v8_linux64_no_sandbox_dbg_ng_triggered\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3876823\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83631}\n","milestone":108},{"_id":"283791d250fe8cce64e1d973116faf92ddd304e4","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Fri Oct 07 12:40:05 2022"},"commit":"283791d250fe8cce64e1d973116faf92ddd304e4","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Oct 10 11:50:16 2022"},"message":"[inspector] Remove Type Profiler\n\nSee https://docs.google.com/document/d/1dJHFRXKE4NUchvYweuyzsolXDEWACr-jJZEPyC6f9EQ/edit?usp=sharing\n\nChange-Id: Ie5b30db30d55ba701a336d8a59dbff7771276e96\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3936281\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83593}\n","milestone":108},{"_id":"c3dffe6e2bdab79bb5bfb94be9fcc6a16adf6cf5","author":{"name":"legendecas","email":"legendecas@gmail.com","time":"Wed Oct 05 03:00:18 2022"},"commit":"c3dffe6e2bdab79bb5bfb94be9fcc6a16adf6cf5","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Oct 05 08:13:48 2022"},"message":"[api] Expose parsed module source map urls\n\nSource map urls can be parsed from the magic comments. Expose them with\npublic apis on the UnboundModuleScript, similar to the UnboundScript.\n\nChange-Id: Ia5dfdc8ff25f825c9fa7d241d0d79ba20028586b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3917379\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Chengzhong Wu (legendecas) <legendecas@gmail.com>\nCr-Commit-Position: refs/heads/main@{#83527}\n","milestone":108},{"_id":"39f0b4ad8a45d921bafa2bd331cce579152cdd1c","author":{"name":"Frank Tang","email":"ftang@chromium.org","time":"Fri Sep 30 00:13:45 2022"},"commit":"39f0b4ad8a45d921bafa2bd331cce579152cdd1c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Oct 04 03:18:37 2022"},"message":"[intl] Implement DurationFormat\n\nSpec Text: https://tc39.es/proposal-intl-duration-format\nSpec Repo: https://github.com/tc39/proposal-intl-duration-format\nDesign Doc:\nhttps://docs.google.com/document/d/1UMwkeeiqVyVNhNW8CS1vwN9g2cIH0AryaU16DT-vGg0/edit#\n\n\nBug: v8:11660\nChange-Id: Icd14e0ee4d386a5d84ccd624fc2a8bb707cc7870\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3833436\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nCommit-Queue: Frank Tang <ftang@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83503}\n","milestone":108},{"_id":"4e23f53cdf2014db83155ed06d0de1195733010c","author":{"name":"Camillo","email":"cbruni@chromium.org","time":"Thu Sep 22 08:39:10 2022"},"commit":"4e23f53cdf2014db83155ed06d0de1195733010c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Sep 22 09:47:56 2022"},"message":"[api] Implement v8::Context::HasTemplateLiteralObject\n\nV8-side implementation for trusted types fromLiteral.\n\nCreate a separate JSArray root map for template literal objects to\nclearly identify untampered template literals belonging to a given\ncontext.\n\nGiven that template literals are frozen arrays with a 'raw' property,\nwe don't expect additional polymorphism.\n\nDrive-by-fix:\nAvoid ValidateElements call in NewJSArrayWithElements.\n\nBug: chromium:1271149\nChange-Id: I327b0fd99a2db3b57d35efa9293ddf2f14e555ea\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3572044\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nAuto-Submit: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83383}\n","milestone":108},{"_id":"56816d76c121c8dd5b406dc6019350eee05f4abd","author":{"name":"Liu Yu","email":"liuyu@loongson.cn","time":"Wed Sep 14 03:34:16 2022"},"commit":"56816d76c121c8dd5b406dc6019350eee05f4abd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Sep 22 02:08:22 2022"},"message":"[loong64] Supplement a LoongArch support in include/v8config.h\n\nChange-Id: I658c1b781163bcd3ca39bfceb74aef9d255247b8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3894795\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Liu Yu <liuyu@loongson.cn>\nCr-Commit-Position: refs/heads/main@{#83374}\n","milestone":108},{"_id":"8b870395361633a134a257c604470378d06335ed","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Thu Sep 15 14:57:53 2022"},"commit":"8b870395361633a134a257c604470378d06335ed","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Sep 16 10:34:13 2022"},"message":"[API] Remove second OnCriticalMemoryPressure\n\nRemove the deprecated OnCriticalMemoryPressure method with receives an\ninformative parameter.\n\nR=mlippautz@chromium.org\n\nBug: chromium:634547\nChange-Id: I932c3b5030291294dd340362f0b20d374e3067c0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3780533\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83254}\n","milestone":108},{"_id":"d7fcbba80e35e845a85e900cf4e3c479e3b69790","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed Sep 14 14:15:08 2022"},"commit":"d7fcbba80e35e845a85e900cf4e3c479e3b69790","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Sep 14 19:35:38 2022"},"message":"[sandbox] Increase ExternalPointerTable maximum capacity to 512MB\n\nBug: v8:10391\nChange-Id: I383e11bdccf6fcaf13f29d25e1404545067d313e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3891249\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#83203}\n","milestone":108},{"_id":"3d59a3c2c16405eea59263300c5591c3283a2a0e","author":{"name":"Seth Brenith","email":"seth.brenith@microsoft.com","time":"Thu Sep 08 16:27:54 2022"},"commit":"3d59a3c2c16405eea59263300c5591c3283a2a0e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Sep 14 17:39:12 2022"},"message":"Add option to report discarded allocations in sampling heap profiler\n\nA couple of customers have asked about using devtools to get information\nabout temporary allocations, with the goal of reducing GC time and/or\npeak memory usage. Currently, the sampling heap profiler reports only\nobjects which are still alive at the end of the profiling session. In\nthis change, I propose adding configuration options when starting the\nsampling heap profiler so that it can optionally include information\nabout objects which were discarded by the GC before the end of the\nprofiling session. A user could run the sampling heap profiler in\nseveral different modes depending on their goals:\n\n1. To find memory leaks or determine which functions contribute most to\n   steady-state memory consumption, the current default mode is best.\n2. To find functions which cause large temporary memory spikes or large\n   GC pauses, the user can request data about both live objects and\n   those collected by major GC.\n3. To tune for minimal GC activity in latency-sensitive applications\n   like real-time audio processing, the user can request data about\n   every allocation, including objects collected by major or minor GC.\n4. I'm not sure why anybody would want data about objects collected by\n   minor GC and not objects collected by major GC, but it's also a valid\n   flags combination.\n\nChange-Id: If55d5965a1de04fed3ae640a02ca369723f64fdf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3868522\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCommit-Queue: Seth Brenith <seth.brenith@microsoft.com>\nCr-Commit-Position: refs/heads/main@{#83202}\n","milestone":108},{"_id":"6b42df84b459c2904fc76cd73ee893e3c6d3f8e4","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Jul 26 10:41:28 2022"},"commit":"6b42df84b459c2904fc76cd73ee893e3c6d3f8e4","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jul 27 07:53:37 2022"},"message":"Merged: [API] Allow copying of structs with deprecated fields\n\nThe implicit copy constructor triggers a deprecation warning if the\nstruct contains a deprecated field. We can fix this by explicitly\ndeclaring the copy and move constructors and assignment operators\nwith the deprecation warning disabled.\n\nThis CL also adds a test to check that we can indeed call the\nconstructors and assignment operators, which did not work before.\n\nR=​leszeks@chromium.org\n(cherry picked from commit 6e72b810c5c0e943fc0651ed9b03fe978e1a971e)\n\nBug: v8:13092\nChange-Id: I27cd7cfbb7d22e4c904f9817e53bcbc609a82316\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3788098\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/branch-heads/10.5@{#2}\nCr-Branched-From: 51c4d6c6fb319292c4a622c959e66921a33547a3-refs/heads/10.5.218@{#1}\nCr-Branched-From: c6415306341f13f9fb234b9a3aaf623a035fb882-refs/heads/main@{#81851}\n","milestone":105},{"_id":"bc0ca547b9e6976dff5d1d00d5e3120b697e96bc","author":{"name":"Philip Pfaffe","email":"pfaffe@chromium.org","time":"Tue Jul 19 13:08:47 2022"},"commit":"bc0ca547b9e6976dff5d1d00d5e3120b697e96bc","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jul 19 13:20:36 2022"},"message":"Add a wasm disassembly API to cdp\n\nThic CL adds a CDP API skeleton that will be used to disassemble WASM\nmodules using V8's new disassembler.\n\nBug: v8:12917, chromium:1325626\nChange-Id: I4ca81aca923e9716653cd90367e5fad319483aae\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3721381\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Philip Pfaffe <pfaffe@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81809}\n","milestone":105},{"_id":"6b2dc157d44722df58e679310d09122af995071f","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Thu Jul 14 14:59:44 2022"},"commit":"6b2dc157d44722df58e679310d09122af995071f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 18 13:24:53 2022"},"message":"[wasm] Assume positive stack offsets\n\nThe stack offsets of cache slots are always positive, but the compiler\ndoes not know that. The lack of this knowledge makes division by the\nsystem pointer size significantly more expensive.\n\nOne solution would be to rewrite the division to be an actual right\nshift. Another solution is to teach the compiler that offsets are\npositive. This CL does the latter.\n\nThis reduces the overall Liftoff compile time of the reproducer in the\nlinked issue by nearly 25%.\n\nR=jkummerow@chromium.org, cbruni@chromium.org\n\nBug: v8:13063\nChange-Id: Ib55b35d407e9909c792ae095a6767aaa03faebdc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3760453\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81778}\n","milestone":105},{"_id":"f3737bbb12351042cf81198202ba07288b99f597","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Jul 14 15:47:12 2022"},"commit":"f3737bbb12351042cf81198202ba07288b99f597","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jul 15 09:29:32 2022"},"message":"[sandbox] Initialize sandbox during V8::Initialize\n\nAs sandboxed pointers are now default-enabled when the sandbox is\nenabled, it is no longer possible to deactivate the sandbox at runtime.\nThis CL therefore removes all the logic that was required to support a\nsandbox that could be disabled at runtime, moves the initialization of\nthe sandbox into V8::Initialize, and deprecates V8::InitializeSandbox.\n\nThis change also makes the sandbox initialization deterministic if\nFLAG_random_seed is supplied.\n\nBug: v8:10391\nChange-Id: Ibd49f7c251b7c58c642f18a551ecc2c391740970\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3762583\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81746}\n","milestone":105},{"_id":"00704f5a03d9db02c14c4f4c35188effc46e82ab","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Fri Jul 15 07:54:16 2022"},"commit":"00704f5a03d9db02c14c4f4c35188effc46e82ab","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jul 15 09:03:11 2022"},"message":"[api] Add more efficient API for accesssing ArrayBuffer raw data\n\nRaw data access is already possible via GetBackingStore()->GetData().\nThis API exposes a more efficient way for accessing\nJSArrayBuffer::backing_store (which, despite the confusing name, is no\nthe BackingStore but its raw data pointer).\n\nBug: v8:10343\nChange-Id: I695cea91e2c3de75ce6c86bac6e413ce6617958b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3764341\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81745}\n","milestone":105},{"_id":"df2fc0725e5456159e42e1aaab71ccca8464f2c5","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Jul 12 12:03:49 2022"},"commit":"df2fc0725e5456159e42e1aaab71ccca8464f2c5","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jul 14 13:21:04 2022"},"message":"[sandbox] Always use a constant sandbox size\n\nAs sandboxed pointers assume a constant sandbox size (they are\nessentially n-bit offsets), it is no longer useful to be able to create\nsmaller sandboxes. This CL simplifies the sandbox initialization logic\naccordingly and adds CHECKS to ensure a fixed-size sandbox is created.\n\nBug: v8:10391\nChange-Id: I6541ab769001e60c0256d3a719f926128a0a20b0\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3647684\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81720}\n","milestone":105},{"_id":"543b54da6607d7016adaabe2fdac2bef844fc0c4","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Jul 12 09:45:24 2022"},"commit":"543b54da6607d7016adaabe2fdac2bef844fc0c4","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jul 13 21:04:14 2022"},"message":"[sandbox] Sandboxify Foreign external pointer\n\nBug: v8:10391\nChange-Id: I4c5c209454db316fe86f379f6b2e6dfc7ba7754e\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3757340\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81703}\n","milestone":105},{"_id":"192d8c172a354cf1421fbf813838b3b7af5a82ef","author":{"name":"Milad Fa","email":"mfarazma@redhat.com","time":"Tue Jul 12 13:13:47 2022"},"commit":"192d8c172a354cf1421fbf813838b3b7af5a82ef","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jul 12 15:14:19 2022"},"message":"Fix target and endianness detection on PPC/s390\n\nThis patch fixes machine detection on nodejs where the build\npipeline may not use gn and as a result certain macros\nwill not get set.\n\nMore details can be found in this comment:\nhttps://github.com/nodejs/node-v8/issues/223#issuecomment-1180505313\n\nChange-Id: I0cbfc736b28bc130acbdc2cf2e27bbf687be463c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3757944\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Milad Farazmand <mfarazma@redhat.com>\nCr-Commit-Position: refs/heads/main@{#81667}\n","milestone":105},{"_id":"126d4779256509a492671bba8bdc440916a9f89a","author":{"name":"Maksim Sadym","email":"sadym@chromium.org","time":"Mon Jul 11 12:14:46 2022"},"commit":"126d4779256509a492671bba8bdc440916a9f89a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 11 17:19:43 2022"},"message":"Fix Date BiDi format\n\n1. Add `toISOString` to `v8::Date`.\n2. Switch serialization to `ISOString`.\n\nBug: v8:13043\nChange-Id: I8a852f4a4a46bb3b8e5d52ef3cdffde7a408b403\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3749203\nAuto-Submit: Maksim Sadym <sadym@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81647}\n","milestone":105},{"_id":"8a59678b8335ae8c3fa237317aa8ae6cb281efa2","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Jul 11 12:21:59 2022"},"commit":"8a59678b8335ae8c3fa237317aa8ae6cb281efa2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 11 13:34:54 2022"},"message":"[sandbox] Prepare ExternalPointerTable rollout\n\nThis CL does the following:\n- It enables (i.e. allocates and initializes) the per-Isolate\n  ExternalPointerTable when the sandbox is enabled.\n- It refactors the list of external pointer tags to mark them as\n  \"sandboxed\" or \"unsandboxed\". An unsandboxed external pointer has a\n  null tag.\n- It changes V8_SANDBOXED_EXTERNAL_POINTERS to now essentially just\n  enable sandboxing for all available tags.\n- It modifies all low-level external pointer accessors to perform the\n  ExternalPointerLookup only if the tag is non-zero and otherwise treat\n  the slot as containing a raw pointer.\n\nThis now allows rolling out external pointer sandboxing incrementally\n(separately for each external pointer type), which will in turn allow\nfor more precise performance measurements of the impact of the sandbox.\n\nNote: when an external pointer tag is now marked as sandboxed (and\nV8_SANDBOXED_EXTERNAL_POINTERS is not enabled), the underlying slots are\nstill 64-bits in size. This simplifies the implementation as we would\notherwise need to deal with variably-sized external pointer slots. Local\nbenchmarking suggests that the benefits from 32-bit external pointer\nslots are insignificant on typical benchmarks, so this should be ok.\n\nDrive-by: rename kExternalPointerSize to kExternalPointerSlotSize to\nmake it more clear what it refers to (the on-heap storage size). Also\ndelete CodeStubAssembler::InitializeExternalPointerField as it is not\ncurrently used and the implementation is fairly inefficient.\n\nBug: v8:10391\nChange-Id: I7c38729c7e9048d737a1a8ced84749f5b1f7feab\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3736447\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81636}\n","milestone":105},{"_id":"9318e064bfc230106b243837cb3be4c0cede2470","author":{"name":"Paul Semel","email":"paulsemel@chromium.org","time":"Wed Jul 06 08:38:24 2022"},"commit":"9318e064bfc230106b243837cb3be4c0cede2470","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jul 07 08:38:31 2022"},"message":"[wasm][csp] Add support for `SetErrorMessageForWasmCodeGeneration`\n\nThis adds support for a better error message when wasm code generation\nis not allowed. Chrome will use this new API here: https://chromium-review.googlesource.com/c/chromium/src/+/3738183.\n\nBug: chromium:1255058\nChange-Id: I8c9639c4fd08d1dff0a5a2fc6a8360f40a7e140e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3740721\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Paul Semel <paulsemel@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81573}\n","milestone":105},{"_id":"d89d185fad8e7015989f9f5032100398156dbc17","author":{"name":"snek","email":"snek@chromium.org","time":"Mon Jul 04 17:57:14 2022"},"commit":"d89d185fad8e7015989f9f5032100398156dbc17","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jul 05 16:24:01 2022"},"message":"[fastcall] expose wasm memory to cfunction\n\nLoad current Memory start/size off of the wasm instance when entering\nfast calls, so they can use that info for whatever they need to do.\nFast calls from JS set the memory to null, and the memory does not\nneed to be piped from wasm to slow callbacks as wasm always calls\nthe fast function.\n\nChange-Id: Ibfa33cdd7dba85300f95cbdacc9a56b3f7181663\nBug: chromium:1052746\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3719005\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: snek <snek@chromium.org>\nReviewed-by: Manos Koukoutos <manoskouk@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81538}\n","milestone":105},{"_id":"84e078c6cfdf330d1d3bb909d810a262138445cb","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Mon Jul 04 13:10:18 2022"},"commit":"84e078c6cfdf330d1d3bb909d810a262138445cb","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 04 14:34:10 2022"},"message":"[fastcall] Support EnforceRange annotation\n\nThis CL implements checks in case EnforceRange is requested for a\ngiven parameter by using TryTruncate* operators. It implements 2 such\ntruncations on x64 and arm64 - TryTruncateFloat64ToInt32 and\nTryTruncateFloat64ToUint32.\n\nBug: chromium:1052746\nChange-Id: I32f34d9dc1265af568cc576663620a8f7f8245f6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3721618\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81512}\n","milestone":105},{"_id":"5e55121e3a4b6ca17039ab69ff43edc08b187b89","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Mon Jun 20 15:54:34 2022"},"commit":"5e55121e3a4b6ca17039ab69ff43edc08b187b89","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 28 18:17:37 2022"},"message":"[wasm] Remove WasmModuleObjectBulderStreaming\n\nThe class is dead code, and has not been used for years. I tried to\ndeprecate the class first, but this caused build errors on GCC [1].\nThat's why this CL just deletes the class. Deleting the class is okay\nbecause this class was part of the original implementation of streaming\ncompilation. There is only a single embedder who uses streaming\ncompilation, which is Chrome, and Chrome switched to the new API\nalready years ago. If there were other embedders that use this class,\nthen this embedder would already have no working implementation of\nstreaming compilation for years.\n\nR=adamk@chromium.org\n\nBug: v8:12926\nChange-Id: I3342167245822cf8ee52d9632cba236fb1b0646c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3714236\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81421}\n","milestone":105},{"_id":"80575e2816036567c2c8a52ea11f236f946ea940","author":{"name":"Seth Brenith","email":"seth.brenith@microsoft.com","time":"Tue Jun 28 15:18:05 2022"},"commit":"80575e2816036567c2c8a52ea11f236f946ea940","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 28 16:18:20 2022"},"message":"Allow embedder to provide source text during code cache deserialization\n\nThis change is only to get the API in place; the newly added functions\ndon't yet do anything.\n\nBug: v8:12808\nChange-Id: Ic6a697d4f62c2b61761b2545dae6fcdf37653bbf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3681880\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Seth Brenith <seth.brenith@microsoft.com>\nCr-Commit-Position: refs/heads/main@{#81418}\n","milestone":105},{"_id":"8ca93205cc1c3b8f9e4c1b01e25e2cbfc0182701","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Jun 27 12:00:24 2022"},"commit":"8ca93205cc1c3b8f9e4c1b01e25e2cbfc0182701","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jun 27 13:45:20 2022"},"message":"[sandbox] Turn ExternalPointerTag into a template parameter\n\nThe ExternalPointerTags are assumed to be compile-time constants in most\ncases, so turning them into template parameters enforces that. As\ndecisions such as whether to use the per-isolate or the shared external\npointer table are encoded into the tag values, forcing those to be\ncompile-time constants guarantees that the compiler will be able to\ninline the correct logic when accessing an external pointer.\n\nWith this, there are now two (high-level) ways of accessing external pointer fields from C++: the Read/WriteExternalPointerField methods\nwhich require the ExternalPointerTag to be a template parameter, and the\nExternalPointerSlot class which takes the tag as an argument. The latter\nis for example used for snapshot deserialization and by the garbage\ncollector (more generally, by the ObjectVisitor::VisitExternalPointer\nmethod), where the tag is not a compile-time constant.\n\nFinally, this CL also introduces a new ExternalPointerHandle type which\nrepresents the (opaque) on-heap representation of a reference to an\nentry in an ExternalPointerTable when sandboxing is enabled. Making this\nits own type makes the code a bit more readable.\n\nBug: v8:10391\nChange-Id: I867b8ce41d15d485f1dc66786f233c710c56afcb\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3720641\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81402}\n","milestone":105},{"_id":"ece27af6932790856a96472a67081e7c5036faaf","author":{"name":"Patrick Thier","email":"pthier@chromium.org","time":"Mon Jun 27 12:15:33 2022"},"commit":"ece27af6932790856a96472a67081e7c5036faaf","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jun 27 13:05:00 2022"},"message":"[sandbox] Split ExternalPointerTag definitions for shared/non-shared\n\n- Change definition to macro-style to be able to assert that masks/tags\n  are correct.\n- Split definition of shared/non-shared tags.\n- Use bit 62 (for now) to indicate tags are shared.\n\nBug: v8:10391\nChange-Id: Ia3ad6294cf5e6fd0c4dc2a328f976f295da762f5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3726009\nReviewed-by: Samuel Groß <saelo@chromium.org>\nCommit-Queue: Patrick Thier <pthier@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81400}\n","milestone":105},{"_id":"28b5d299845f6ca289647241badd08844b51bb7c","author":{"name":"Anton Bikineev","email":"bikineev@chromium.org","time":"Mon Jun 27 11:37:04 2022"},"commit":"28b5d299845f6ca289647241badd08844b51bb7c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jun 27 12:26:21 2022"},"message":"Move host/target detection macros to API\n\nSince v8config.h already defines the related logic for OS detection, it\nshould be fine to move arch detection also there. The CL also makes\nOilpan use one of those macros to avoid discrepancy between the compiler\nand custom macros (the discrepancy occurs for host tools, e.g. mksnapshot).\n\nBug: chromium:1336222\nChange-Id: Ibe7d9116d27c3e816f4778fd4c149d8142d0f7a9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3726208\nCommit-Queue: Anton Bikineev <bikineev@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81397}\n","milestone":105},{"_id":"8933f9fe8e532142331db41a00f39e5d03eea309","author":{"name":"Patrick Thier","email":"pthier@chromium.org","time":"Fri Jun 24 08:14:34 2022"},"commit":"8933f9fe8e532142331db41a00f39e5d03eea309","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jun 27 08:56:57 2022"},"message":"[sandbox] Store waiter queue node of JS Atomic.Mutex in shared table\n\nThe waiter queue node of JS Atomics.Mutex is now stored in the shared\nexternal pointer table.\n\nBug: v8:12547\nChange-Id: I2f4ce1c705d5e710b49872942702f60edf6c4043\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3721696\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Patrick Thier <pthier@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81380}\n","milestone":105},{"_id":"6b4850484f1364731b2a8c7c1169ce5027f315a5","author":{"name":"Patrick Thier","email":"pthier@chromium.org","time":"Tue Jun 21 15:13:01 2022"},"commit":"6b4850484f1364731b2a8c7c1169ce5027f315a5","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jun 23 11:30:39 2022"},"message":"[sandbox] Add shared external pointer table for strings\n\nTo be able to share external strings, we need to share the external\npointer table in sandbox builds.\nTo avoid branches at runtime all pointers for external strings are\nstored in the shared external pointer table.\n\nBug: v8:12957\nChange-Id: Iaa6be7839a2f5e50f80fd58c5b33fb9c6af61057\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3695263\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nCommit-Queue: Patrick Thier <pthier@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81324}\n","milestone":105},{"_id":"0d94a5144c5c2ef1b0fcc8d54c348b63c47a20cf","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Jun 20 18:50:10 2022"},"commit":"0d94a5144c5c2ef1b0fcc8d54c348b63c47a20cf","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 21 10:51:05 2022"},"message":"[sandbox] Implement ReadExternalPointerField in v8-internal.h\n\nPreviously it was implemented in api.cc, therefore requiring an additional\nfunction call when accessing external pointer fields from embedder code with\nthe sandbox enabled. Now ReadExternalPointerField can be inlined.\n\nBug: v8:10391\nChange-Id: Ia8cb2df148ac96f979fd3e22989b0ff6177abcec\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3714245\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nAuto-Submit: Samuel Groß <saelo@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81271}\n","milestone":105},{"_id":"8487e66d755569d004d9b6a8e73d842e868a69a4","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed Jun 15 16:11:08 2022"},"commit":"8487e66d755569d004d9b6a8e73d842e868a69a4","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jun 20 09:25:03 2022"},"message":"[runtime] Inline Foreign fields into AccessorInfo\n\n... to avoid additional indirection on every access.\n\nDrive-by: given that AccessorInfo class now has a custom body visitor\nit's no longer necessary to encode flags field as Smi.\n\nBug: v8:12949\nChange-Id: I30eabee3cbc5ded2bf3f050dfe22208713a764bf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3701590\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81237}\n","milestone":105},{"_id":"f789c6a02058022b69eba665d8a92f2495e8ab72","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed Jun 15 10:26:40 2022"},"commit":"f789c6a02058022b69eba665d8a92f2495e8ab72","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jun 15 11:14:43 2022"},"message":"[sandbox] Use correct define when testing for Android\n\nIt should be V8_TARGET_OS_ANDROID instead of V8_OS_ANDROID.\n\nBug: chromium:1218005\nChange-Id: I4b92977c5d8b70ca5023e30a966508965ea9f0fe\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3706618\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81175}\n","milestone":105},{"_id":"be41754f9f790ee541e03099d653d01b20afbfd9","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Wed Jun 08 06:25:51 2022"},"commit":"be41754f9f790ee541e03099d653d01b20afbfd9","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jun 15 06:40:52 2022"},"message":"[wasm] Deprecate WasmModuleObjectBuilderSteraming\n\nThis class is just dead code.\n\nBug: v8:12926\nChange-Id: Ic780c0b1bf5b1e517aa919b820fad4ec083d9ef7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3689581\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81169}\n","milestone":105},{"_id":"ed6be498130b3827acafa7f6c47ecbda9db5db85","author":{"name":"Camillo","email":"cbruni@chromium.org","time":"Tue Jun 07 17:51:13 2022"},"commit":"ed6be498130b3827acafa7f6c47ecbda9db5db85","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 14 16:11:21 2022"},"message":"[logging] Use short \"JS:\" prefix for function log events\n\n\"Function:\" and \"LazyCompile:\" are confusing by now and use up too\nmuch space.# Enter a description of the change.\n\nThis also changes the function names visible when using linux-perf\n\nChange-Id: Ib2d4b7df39068c27b5b06db578fc550d2973ebb4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3693705\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81161}\n","milestone":105},{"_id":"7e0294dcfaecbcfd3a7370654de32cde8de0cbfc","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Fri Jun 10 10:17:42 2022"},"commit":"7e0294dcfaecbcfd3a7370654de32cde8de0cbfc","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 14 11:41:22 2022"},"message":"[wasm][api] Introduce API to let the embedder resolve wasm promises\n\nAsynchronous WebAssembly compilation returns the compilation result\nthrough resolving a result promise. So far the result promise was\nresolved through V8-internal APIs. This caused problems, because\nresolving promises requires correct handling of microtasks, and\nmicrotasks are controlled by the embedder, and not by V8.\n\nThis CL adds an API to allow the embedder to resolve the result\npromise itself, and handle microtasks as necessary.\n\nThe use of the new API is available in a full CL, without API dance:\nhttps://chromium-review.googlesource.com/c/v8/v8/+/3694975\n\nR=cbruni@chromium.org\n\nBug: v8:12953\nChange-Id: Ie9a56041f2d3e0c46664f1938e995f1e2c22f981\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3695584\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81141}\n","milestone":105},{"_id":"dac61556497c6268db0f2960e67e26116300b314","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Tue Jun 14 05:16:27 2022"},"commit":"dac61556497c6268db0f2960e67e26116300b314","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 14 09:29:31 2022"},"message":"[inspector] Allow Debugger.setScriptSource to edit top-most function\n\nThis CL adds a new boolean flag on the Debugger.setScriptSource CDP\nmethod that gets piped all the way through to the live-edit mechanism.\nThe new flag enables live-editing of the top-most function while\npaused.\n\nThe CL adds a couple of tests that cover the new core use cases for\nthis flag.\n\nR=jarin@chromium.org\n\nBug: chromium:1334484\nChange-Id: I12fec591b2b6550d89748714620e629548e1b9c1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3695354\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81127}\n","milestone":105},{"_id":"61a6fd84e19f897c5b4f444f66d5e7162ed475e0","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon Jun 13 07:09:26 2022"},"commit":"61a6fd84e19f897c5b4f444f66d5e7162ed475e0","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jun 13 08:13:00 2022"},"message":"[wasm] Rename \"OnModuleCompiled\" and related callbacks\n\nAlready after enabling Liftoff, the name did not match the semantics any\nmore. The callback was called after top-tier finished, not after initial\ncompilation of the module finished.\nWith dynamic tiering, the name is even less fitting.\n\nThis CL renames the \"OnModuleCompiled\" callback in the API to\n\"MoreFunctionsCanBeSerialized\", which makes it more obvious what the\nAPI should be used for. It also internally renames all related typedefs\nand methods accordingly.\n\nOne call of the callback in the streaming decoder was already wrong\nbefore this CL and is being removed.\n\nR=jkummerow@chromium.org, cbruni@chromium.org\n\nBug: v8:12899\nChange-Id: I95c0fc9e32442383e47e4370e31277cc065bf0fe\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3687689\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81093}\n","milestone":105},{"_id":"6723438813475898c20f98a1cc2701f78f433a69","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue May 17 14:31:33 2022"},"commit":"6723438813475898c20f98a1cc2701f78f433a69","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jun 13 07:58:36 2022"},"message":"[API] Deprecate LegacyOOMErrorCallback\n\nDeprecate the LegacyOOMErrorCallback in the 10.5 branch. Embedders are\nexpected to switch to OOMErrorCallback.\nThe deprecated LegacyOOMErrorCallback will then be removed in the 10.6\nbranch.\n\nR=mlippautz@chromium.org\n\nBug: chromium:1323177\nChange-Id: I83001bec760848ef39f0638ed5c5c9eaa7cdb6eb\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3646014\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81092}\n","milestone":105},{"_id":"7445a4fd2ab9ea65cb2b89ed9ecc814d0ab1da80","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Fri Jun 10 16:37:17 2022"},"commit":"7445a4fd2ab9ea65cb2b89ed9ecc814d0ab1da80","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jun 10 18:26:57 2022"},"message":"[runtime] Inline Foreign fields into CallHandlerInfo\n\n... to avoid additional indirection on every access.\n\nBug: v8:12949\nChange-Id: I16840ac0517e86f1f70252153112ca3475527416\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3693707\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81083}\n","milestone":105},{"_id":"dd6d96c8cd560c1b17e32005ee0218bd8917f9bb","author":{"name":"Joyee Cheung","email":"joyee@igalia.com","time":"Fri Jun 10 15:00:40 2022"},"commit":"dd6d96c8cd560c1b17e32005ee0218bd8917f9bb","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jun 10 16:46:57 2022"},"message":"[api] add v8::Module::GetStalledTopLevelAwaitMessage()\n\nAdds Module::GetStalledTopLevelAwaitMessage() API which searches for\nmodules that have no pending async dependencies but have not yet\nresolved. An embedder may call this API when they are about to exit\nto check if TLA evaluation has stalled and provide a better error\nmessage.\n\nChange-Id: I3b88802f70cc84c973551f13d73ef3e3d06f4027\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2341765\nCommit-Queue: Joyee Cheung <joyee@igalia.com>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81080}\n","milestone":105},{"_id":"6a0889817d9761a4cae55b5a6c53b3941bfdcdd2","author":{"name":"Camillo","email":"cbruni@chromium.org","time":"Thu Jun 09 16:24:52 2022"},"commit":"6a0889817d9761a4cae55b5a6c53b3941bfdcdd2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jun 09 18:42:25 2022"},"message":"[api] Make CanHaveInternalField inlineable\n\nDrive-by-fix: Reduce one branch in the type compairison since\nJS_OBJECT_TYPE and JS_FIRST_API_INSTANCE_TYPE are adjacent.\n\nBug: v8:11476\nChange-Id: I621ef2df4da2858cb1652276f800ccedba4e3015\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3695562\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81051}\n","milestone":105},{"_id":"4cf204da0a7c59f476bc2ea6622d897f660e22d0","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Jun 09 13:41:10 2022"},"commit":"4cf204da0a7c59f476bc2ea6622d897f660e22d0","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jun 09 15:39:03 2022"},"message":"[api] Remove deprecated global handle APIs\n\nBug: v8:12819\nChange-Id: I9150a8a8ffa38b0628eee0f399d403af6363c04d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3695587\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81042}\n","milestone":105},{"_id":"31850be1c265468cf6b1f5739ec816be41ee0d2b","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Wed Jun 08 07:59:46 2022"},"commit":"31850be1c265468cf6b1f5739ec816be41ee0d2b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jun 09 12:18:32 2022"},"message":"[inspector] Introduce status result for Debugger.setScriptSource\n\nThis CL introduces a new `status` enum returned by setScriptSource.\nWe'll use the information in the DevTools frontend to show more\nmeaningful error messages as well as disambiguate compilation errors\nfrom failed live edits.\n\nDrive-by: Deprecate the sync and async stack traces in the result.\nCurrently `setScriptSource` is guaranteed to stay paused so there\nis no need to send along the same information from the\npreceeding `Debugger.paused` event.\nIn the future we will restart the top-most frame once we allow\nthe top-most frame to be edited. In that case the inspector\nfires Debugger.resumed + Debugger.paused events following the\nlive edit also making the info returned here superfluous.\n\nR=jarin@chromium.org\n\nBug: chromium:1334484\nChange-Id: I4226491caed72013a00927273c523213d797a766\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3691850\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81031}\n","milestone":105},{"_id":"50683aa68d3649ac27c6931fe4a95cfb24325805","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Jun 09 07:45:35 2022"},"commit":"50683aa68d3649ac27c6931fe4a95cfb24325805","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jun 09 08:44:13 2022"},"message":"[api] Deprecate PersistentValueVector\n\nUsers can just use std::vector<Global<T>>.\n\nBug: v8:12915\nChange-Id: I59fc8458e336df0dfaa3524f1197d4423482530e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3695578\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81023}\n","milestone":105},{"_id":"c51a81e705d2e407052c6c281214d9d7e209cbab","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Wed Jun 08 13:10:13 2022"},"commit":"c51a81e705d2e407052c6c281214d9d7e209cbab","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jun 08 14:15:12 2022"},"message":"[api] Deprecate CopyablePersistentTraits\n\nAnyone using CopyablePersistentTraits should be using v8::Global, so\ndeprecate it and fix the uses in V8.\n\nBug: v8:12915\nChange-Id: I25e6f2a03e070db9e9af9bbd9ea8cbc0f838c5ac\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3669254\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nAuto-Submit: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81001}\n","milestone":105},{"_id":"a63575a3f952ec1d4e6f948492de20f2121352a9","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Fri Jun 10 10:17:42 2022"},"commit":"a63575a3f952ec1d4e6f948492de20f2121352a9","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 21 21:58:19 2022"},"message":"Merged:[wasm][api] Introduce API to let the embedder resolve wasm promises\n\nAsynchronous WebAssembly compilation returns the compilation result\nthrough resolving a result promise. So far the result promise was\nresolved through V8-internal APIs. This caused problems, because\nresolving promises requires correct handling of microtasks, and\nmicrotasks are controlled by the embedder, and not by V8.\n\nThis CL adds an API to allow the embedder to resolve the result\npromise itself, and handle microtasks as necessary.\n\nThe use of the new API is available in a full CL, without API dance:\nhttps://chromium-review.googlesource.com/c/v8/v8/+/3694975\n\nR=​cbruni@chromium.org\n\n(cherry picked from commit 7e0294dcfaecbcfd3a7370654de32cde8de0cbfc)\n\nBug: v8:12953\nChange-Id: Ie9a56041f2d3e0c46664f1938e995f1e2c22f981\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3695584\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Original-Commit-Position: refs/heads/main@{#81141}\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3716483\nCr-Commit-Position: refs/branch-heads/10.4@{#15}\nCr-Branched-From: b1413ed7c71ababe05d590de4b5c4ed97b68693e-refs/heads/10.4.132@{#1}\nCr-Branched-From: 9d0a09368569234a1d1094975e2e92591922cd08-refs/heads/main@{#80972}\n","milestone":104},{"_id":"e50d19cb1190735eaf42351b69bb2c3bd5f8b1b7","author":{"name":"Dominik Inführ","email":"dinfuehr@chromium.org","time":"Fri Jun 03 07:28:58 2022"},"commit":"e50d19cb1190735eaf42351b69bb2c3bd5f8b1b7","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 07 07:57:05 2022"},"message":"[heap] Remove write barrier builtin for incremental marking\n\nhttps://crrev.com/c/3471854 already disabled the RecordWrite builtin\nspecifically for incremental marking. Since this didn't regress performance as expected, we can now remove those versions of the\nbuiltin.\n\nThis will simplify the barrier implementation a bit, but is also\nrequired for the shared heap write barrier. Unlike the generational barrier, the shared heap barrier can't be elided for map values.\n\nBug: v8:11708\nChange-Id: I44bc6ee79006a5be8c1b593dee7fc30c3b9cfa85\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3683341\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80966}\n","milestone":104},{"_id":"ca7e0c669bb2c9a1fd65c8afa0bc2f06f064a417","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed May 25 11:28:16 2022"},"commit":"ca7e0c669bb2c9a1fd65c8afa0bc2f06f064a417","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 31 16:20:58 2022"},"message":"[wasm] Remove sampling on top tier finished\n\nRemove code size and compilation time sampling for the \"top tier\nfinished\" event. With dynamic tiering, this event will never be reached.\n\nR=ahaas@chromium.org\n\nBug: v8:12899\nChange-Id: I1b0d053e31fe8cd1f8ba3b23bfff4c5879569b45\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3647691\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80867}\n","milestone":104},{"_id":"d5d3ecaeeac7d9e04af81648a5822e82a7432155","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed May 25 11:27:57 2022"},"commit":"d5d3ecaeeac7d9e04af81648a5822e82a7432155","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 31 16:12:37 2022"},"message":"[API] Avoid macro list for defining API methods\n\nThe macro list makes it difficult to impossible to deprecate individual\nmethods (like the one receiving a {WasmModuleTieredUp} struct).\nHence avoid the macro list and instead call the macro explicitly for\neach definition.\n\nR=cbruni@chromium.org\n\nBug: v8:12899\nChange-Id: I4139de7721c4a1450920c5be312e91e7478e6fa7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3667076\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80865}\n","milestone":104},{"_id":"5cabf1b800fb3e5f51f5d8a100098bdee2be1a9b","author":{"name":"Clark DuVall","email":"cduvall@google.com","time":"Fri May 27 15:37:28 2022"},"commit":"5cabf1b800fb3e5f51f5d8a100098bdee2be1a9b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 30 16:59:57 2022"},"message":"Allow BackgroundStreamingCompileTask to eager compile scripts\n\nBug: chromium:1328448\nChange-Id: If0c3d02070071b5bb25df5bca51cf8c4cfc424d3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3673420\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Clark DuVall <cduvall@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80827}\n","milestone":104},{"_id":"ea9a1f1cbe3dc642c10c08de5f10240653025779","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri May 27 18:41:10 2022"},"commit":"ea9a1f1cbe3dc642c10c08de5f10240653025779","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Sat May 28 01:04:34 2022"},"message":"[shared-struct] Add Atomics.Mutex\n\nThis CL adds a moving GC-safe, JS-exposed mutex behind the\n--harmony-struct flag. It uses a ParkingLot-inspired algorithm and\neach mutex manages its own waiter queue.\n\nFor more details, please see the design doc: https://docs.google.com/document/d/1QHkmiTF770GKxtoP-VQ1eKF42MpedLUeqiQPfCqus0Y/edit?usp=sharing\n\nBug: v8:12547\nCq-Include-Trybots: luci.v8.try:v8_linux64_tsan_rel_ng\nChange-Id: Ic58f8750d2e14ecd573173d17d5235a136bedef9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3595460\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80789}\n","milestone":104},{"_id":"c90cdd167fb45641584c51d5bcf7561a136d2dfd","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Thu May 19 14:37:43 2022"},"commit":"c90cdd167fb45641584c51d5bcf7561a136d2dfd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed May 25 11:38:44 2022"},"message":"[api] Add more comments about interceptor callbacks\n\nWhen a callback does not intercept the request\n1) it should not call info.GetReturnValue().Set(),\n2) it must not produce side effects.\n\nBug: v8:12873, chromium:1310062\nChange-Id: If02994f24f1a68eb96c1af7cdd6dd7109f0617c4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3652786\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80742}\n","milestone":104},{"_id":"4d6ddf1b5fcb98ac38fc7fc6739e642a54c49eea","author":{"name":"Stephen Roettger","email":"sroettger@google.com","time":"Thu May 19 10:09:33 2022"},"commit":"4d6ddf1b5fcb98ac38fc7fc6739e642a54c49eea","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu May 19 14:15:54 2022"},"message":"Remove deprecated AccessorSignatures\n\nBug: chromium:1310790\nChange-Id: I739161f47fc1fc32d832f106d5ef6b7df4aed213\nFixed: chromium:1310790\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3654096\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Stephen Röttger <sroettger@google.com>\nCr-Commit-Position: refs/heads/main@{#80639}\n","milestone":104},{"_id":"d812c9a977934d7e5404fdd6fc16bc376e7984e5","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu May 19 09:35:10 2022"},"commit":"d812c9a977934d7e5404fdd6fc16bc376e7984e5","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu May 19 11:35:23 2022"},"message":"[sandbox] Shrink sandbox on Android to 128GB\n\nThe majority of 64-bit Android devices appear to be using a 40-bit\naddress space, i.e. 512GB for userspace. Allocating a 256GB sandbox\n(plus 2x 32GB guard regions) may take too much of the address space and\ncause the creation of other address space reservations (e.g. the cppgc\ncaged heap), which are created per worker, to fail later on.\n\nIn general, we should try to limit the sandbox size to less than 1/4 of\nthe address space, so this CL shinks the sandbox on Android to 128GB.\n\nBug: chromium:1327131\nChange-Id: Ib48b45506ad6a7a5e15b95115c7642bf62a68fa1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3652783\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80636}\n","milestone":104},{"_id":"6a977bd1fda752aba07cb78494ada0b29a3d1f57","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed May 18 13:19:59 2022"},"commit":"6a977bd1fda752aba07cb78494ada0b29a3d1f57","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu May 19 09:59:43 2022"},"message":"[wasm] Deprecate \"dynamic tiering enabled\" callback\n\nDynamic tiering is now enabled by default, and the origin trial is\nexpired, so the callback can be removed.\nThe callback was already never called, because the flag value is always\nchecked first.\n\nR=ahaas@chromium.org, mlippautz@chromium.org\n\nBug: v8:12281\nChange-Id: I58eaa210c86024128328a13ba07bb8fc1b437841\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3644951\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80633}\n","milestone":104},{"_id":"7eacc4d552272dbce2973de9ee1ebdcd61d8f757","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon May 16 09:54:42 2022"},"commit":"7eacc4d552272dbce2973de9ee1ebdcd61d8f757","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed May 18 10:33:28 2022"},"message":"[API] Enforce that ShouldYield == true is respected\n\nThere is a DCHECK in the gin platform that {ShouldYield} is not called\nagain after it already returned {true}.\nThis CL adds a similar DCHECK to the default platform to catch bugs\nearlier (in d8).\n\nR=ahaas@chromium.org, mlippautz@chromium.org\n\nBug: chromium:1277962\nChange-Id: I4dc9d880cf6d36e3e497c5324aaf44889fe7fcee\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3644801\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80611}\n","milestone":104},{"_id":"b33179ae4d3cdafd1c465efba89168aa06418f83","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon May 16 12:02:27 2022"},"commit":"b33179ae4d3cdafd1c465efba89168aa06418f83","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 16 16:43:07 2022"},"message":"[API] Pass OOMDetails to OOMErrorCallback\n\nThis adds a new struct \"OOMDetails\" which is passed to the\nOOMErrorCallback. It currently holds the \"is_heap_oom\" bool that was\nalso passed before, plus an optional \"detail\" string.\nThe struct can later be extended without having to change the signature\nof the OOMErrorCallback. Removing fields will have to follow the\nstandard deprecation rules, but this is also easily possible without the\nhassle for this initial change.\n\nWe modify the deprecated OOMErrorCallback definition and un-deprecate it,\nwhich can be seen as removing a deprecated API and adding a new one in\none CL.\n\nR=mlippautz@chromium.org, jkummerow@chromium.org\n\nBug: chromium:1323177\nChange-Id: Ic4c2cb5856906ebd664626fe463d8e96cb99b0a5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3647827\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80565}\n","milestone":104},{"_id":"b15aa56c820f70aec19993ba7d63a1ba24293afd","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon May 16 08:25:58 2022"},"commit":"b15aa56c820f70aec19993ba7d63a1ba24293afd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 16 09:50:36 2022"},"message":"[sandbox] Clean up sandbox API\n\nThis CL removes some deprecated sandbox APIs and introduces new ones, in\nparticular IsSandboxInitialized and GetSandboxReservationSizeInBytes. In\nadditon, this CL also adds comments to the various public methods of the\nSandbox class.\n\nBug: v8:10391\nChange-Id: If5c3081a0b9f7f192966150a0d2716099357363a\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3647362\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80544}\n","milestone":104},{"_id":"008c4888897b2afa8381fb325fad1ada04769739","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri May 13 16:17:30 2022"},"commit":"008c4888897b2afa8381fb325fad1ada04769739","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Sun May 15 19:45:15 2022"},"message":"[api] Advance deprecations around global handles\n\nForward deprecations of methods that are not supported anymore.\n\nBug: v8:12819\nChange-Id: I304ff159fa7e3936b5b12a5e43bb2a580576dd4e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3644792\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80535}\n","milestone":104},{"_id":"6f5f5662cc87ec5fc56af90018a633e840da4168","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri May 13 11:10:04 2022"},"commit":"6f5f5662cc87ec5fc56af90018a633e840da4168","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri May 13 16:23:23 2022"},"message":"[sandbox] Turn V8_SANDBOX into V8_ENABLE_SANDBOX\n\nThis is more consistent with similar features, for example\nV8_ENABLE_WEBASSEMBLY or V8_ENABLE_MAGLEV.\n\nDrive-by: remove V8_SANDBOX_IS_AVAILABLE as it's no longer needed.\n\nBug: v8:10391\nChange-Id: I8658c5b0c331a4c73892737083b2c2f9b8f84056\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3647355\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nAuto-Submit: Samuel Groß <saelo@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80530}\n","milestone":104},{"_id":"8278cb5015e5664f101f40bb0805244e500ad4cd","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Wed May 11 06:44:06 2022"},"commit":"8278cb5015e5664f101f40bb0805244e500ad4cd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu May 12 14:24:58 2022"},"message":"[inspector] Re-enable Debugger#restartFrame\n\nDoc: https://bit.ly/revive-restart-frame\n\nThis CL \"undeprecates\" Debugger#restartFrame and adds a new optional\n\"mode\" parameter for back-wards compatibility. Moreover, the return\nvalues are all deprecated. They were never actually used in the\nDevTools frontend and the same information is available from the\nDebugger#paused event that fires once execution stops at the\nbeginning of the restarted function.\n\nThe CL also re-baselines all the restart-frame inspector tests that\nnow run successfully.\n\nR=bmeurer@chromium.org, kimanh@chromium.org\n\nBug: chromium:1303521\nChange-Id: I34bddeb1f2f4ff3dee58dd82e779c111495566f3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3616505\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80491}\n","milestone":104},{"_id":"485f2ecd8a924f7d5d91ce887773f42ff8ee1d30","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Aug 18 11:49:40 2022"},"commit":"485f2ecd8a924f7d5d91ce887773f42ff8ee1d30","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Aug 18 14:42:04 2022"},"message":"[sandbox] Disable external pointer sandboxing for 10.6\n\nFor shipping builds, it does not make sense to use the current\nintermediate state where some external pointers are sandboxed but not\nall of them, for example as this still requires all external pointer\nfields to be 64-bits large (instead of 32). This CL therefore sets all\nexternal pointers to \"unsandboxed\".\n\nBug: v8:10391\nChange-Id: I9cc4dd573f675cf9e5e815a03b8b3320dbe90b22\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3838170\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Lutz Vahl <vahl@chromium.org>\nCr-Commit-Position: refs/branch-heads/10.6@{#2}\nCr-Branched-From: 41bc7435693fbce8ef86753cd9239e30550a3e2d-refs/heads/10.6.194@{#1}\nCr-Branched-From: d5f29b929ce7746409201d77f44048f3e9529b40-refs/heads/main@{#82548}\n","milestone":106},{"_id":"6ec7be21e68a72509c7fc4de19708283bb3a814e","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed Aug 17 09:18:08 2022"},"commit":"6ec7be21e68a72509c7fc4de19708283bb3a814e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Aug 17 12:30:39 2022"},"message":"[sandbox] Sandboxify WasmExportedFunctionData::sig\n\nThis CL changes the WasmExportedFunctionData class to store a direct\nExternalPointer to the wasm::FunctionSig instead of referencing it\nthrough a Foreign. This in turn makes it possible to use a unique\npointer tag for that external pointer when the sandbox is enabled.\n\nDrive-by: move WasmInternalFunction::call_target external pointer to the\nend of the object, in line with other external pointer fields.\n\nBug: v8:10391, v8:12949\nChange-Id: Ic3ff622a075c9eaa2f8d8835803437466290c928\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3829086\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82523}\n","milestone":106},{"_id":"f1033c43b7c58e6a0d2439f91028ae8fd58669d1","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Aug 16 10:06:49 2022"},"commit":"f1033c43b7c58e6a0d2439f91028ae8fd58669d1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 16 20:03:47 2022"},"message":"[sandbox] Sandboxify WasmTypeInfo\n\nThis CL changes the WasmTypeInfo class to have a direct ExternalPointer\nto the native type structure instead of using a Foreign. This in turn\nmakes it possible to use a unique pointer tag for that external pointer\nwhen the sandbox is enabled.\n\nBug: v8:10391, v8:12949\nChange-Id: Ifee4d2103cabfa6a7299d0d09e06d387034e5f8f\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3829085\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82504}\n","milestone":106},{"_id":"76d7448925720510dde106da724370bce87d49fa","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri Aug 12 20:08:47 2022"},"commit":"76d7448925720510dde106da724370bce87d49fa","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 16 10:46:27 2022"},"message":"[sandbox] Implement external pointer table compaction\n\nThe external pointer table is already to some degree self-compacting: as\nthe freelist is sorted in ascending order, free entries at the start of\nthe table should quickly fill up. However, any live entry at the end of\nthe table makes it impossible to shrink the table, thereby causing\nhigher memory consumption. To solve this, this CL implements a simple\ntable compaction algorithm, used when the freelist has become\nsufficiently large (currently >= 10% of the table capacity):\n - The goal of the algorithm is to shrink the table by freelist_size/2\n   entries at the end of compaction (during sweeping).\n - At the start of the marking phase, the compaction area is computed as\n   roughly [capacity - freelist_size/2, capacity).\n - When an entry is marked as alive that lies inside the compaction\n   area, a new \"relocation entry\" is allocated for it from the freelist\n   and the address of the handle for that entry is stored in that entry.\n   If there are no more free entries before the compaction area,\n   compaction is aborted. This is expected to happen rarely and is\n   logged into a histogram.\n - During sweeping, all relocation entries are \"resolved\": the content\n   of the old entry is copied into the new entry and the handle is\n   updated to point to the new entry.\n - Finally, the table is shrunk and the last initial_freelist_size/2\n   entries are decommitted.\n\nSee also the comments in the ExternalPointerTable class for more details.\n\nBug: v8:10391\nChange-Id: I28d475c3596590e860421f0a054e2ad4dbebd487\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3794645\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82484}\n","milestone":106},{"_id":"65034fdf545d2f937dd05f1aa535c39ba21ccac5","author":{"name":"Camillo","email":"cbruni@chromium.org","time":"Wed Aug 10 08:15:44 2022"},"commit":"65034fdf545d2f937dd05f1aa535c39ba21ccac5","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 16 08:11:57 2022"},"message":"[api] Advance API deprecation\n\nRemove the following deprecated functions:\ninclude/v8-inspector.h:364 v10.3  Use version with client_is_trusted argument\ninclude/v8-locker.h:130    v10.3  This method will be removed.\ninclude/v8-message.h:90    v10.3  Use GetHostDefinedOptions\ninclude/v8-script.h:51     v10.0  Use HostDefinedOptions\ninclude/v8-script.h:671    v10.0  Use CompileFunction\n\nOutput generated by tools/release/list_deprecated.py.\n\nRemove CompileFunctionInContext for chrome and only implement it if\nV8_SCRIPTORMODULE_LEGACY_LIFETIME is defined.\n\nChange-Id: I33dd3665220f484e277e66f340e17ed2c3b49916\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3702449\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Victor Gomes <victorgomes@chromium.org>\nAuto-Submit: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82476}\n","milestone":106},{"_id":"0195a5c9a966599f60eacf650cfe0fe99a5db933","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri Aug 05 17:57:02 2022"},"commit":"0195a5c9a966599f60eacf650cfe0fe99a5db933","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Aug 05 22:38:29 2022"},"message":"[sandbox] Refactor and sandboxify WasmContinuationObject::jmpbuf\n\nThis CL refactors WasmContinuationObject to have a direct\nExternalPointer to the jmpbuf structure instead of using a Foreign.\nThis in turn makes it possible to use a unique pointer tag for that\nexternal pointer when the sandbox is enabled.\n\nBug: v8:10391, v8:12949\nChange-Id: I25528bd8aaffb32dd617440d3ccb77d319894a38\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3805061\nReviewed-by: Thibaud Michaud <thibaudm@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82238}\n","milestone":106},{"_id":"c04716065626d3ea66032580d095eeb2e0df0e90","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Aug 02 12:54:43 2022"},"commit":"c04716065626d3ea66032580d095eeb2e0df0e90","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 02 16:32:03 2022"},"message":"[sandbox] Sandboxify CallHandlerInfo external pointers\n\nBug: v8:10391\nChange-Id: I7f1b69b1fe41507e4eb72a35b4c143a970cc2f74\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3788205\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82149}\n","milestone":106},{"_id":"d15d49b09dc7aef9edcc4cf6a0cb2b77a0db203f","author":{"name":"Nico Weber","email":"thakis@chromium.org","time":"Sat Jul 30 00:07:40 2022"},"commit":"d15d49b09dc7aef9edcc4cf6a0cb2b77a0db203f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 01 15:09:04 2022"},"message":"Make bitfields only as wide as necessary for enums\n\nclang now complains when a BitField for an enum is too wide.\nWe could suppress this, but it seems kind of useful from an\nuninformed distance, so I made a few bitfields smaller instead.\n\n(For AddressingMode, since its size is target-dependent, I added\nan explicit underlying type to the enum instead, which suppresses\nthe diag on a per-enum basis.)\n\nThis is without any understanding of the code I'm touching.\nEspecially the change in v8-internal.h feels a bit risky to me.\n\nBug: chromium:1348574\nChange-Id: I73395de593045036b72dadf4e3147b5f7e13c958\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3794708\nCommit-Queue: Nico Weber <thakis@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nAuto-Submit: Nico Weber <thakis@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82109}\n","milestone":106},{"_id":"5b41233f3afaf351e3804043ca32a7f5dd1cdb01","author":{"name":"Yoshisato Yanagisawa","email":"yyanagisawa@chromium.org","time":"Wed Jul 27 00:08:04 2022"},"commit":"5b41233f3afaf351e3804043ca32a7f5dd1cdb01","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 01 01:36:02 2022"},"message":"Implement Function::Experimental_IsNopFunction.\n\nThe function returns true if the function does not do anything like:\n() => {}.\n\nChange-Id: I049d7956c443b5d2bb8017a48547376f13acd0a2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3778969\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Yoshisato Yanagisawa <yyanagisawa@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82093}\n","milestone":106},{"_id":"dff6d86419eb8268c567ed0b7cb9da72cdce52ac","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Thu Jul 21 13:16:28 2022"},"commit":"dff6d86419eb8268c567ed0b7cb9da72cdce52ac","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jul 29 07:59:52 2022"},"message":"[include] Make Platform::CreateJob abstract\n\nEmbedders must override the method, because returning a nullptr will\nmake V8 crash. Hence the method should be abstract.\n\nBug: v8:12425\nChange-Id: I79e1759acd2a5f41424145637ee1fbd161889ec1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3779694\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82058}\n","milestone":106},{"_id":"491de34bcc84e33468c7b299027b1f6b59ec2d15","author":{"name":"Lu Yahan","email":"yahan@iscas.ac.cn","time":"Thu Jul 28 02:44:27 2022"},"commit":"491de34bcc84e33468c7b299027b1f6b59ec2d15","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jul 29 00:59:06 2022"},"message":"[riscv32] Add RISCV32 backend\n\nThis very large changeset adds support for RISCV32.\n\nBug: v8:13025\nChange-Id: Ieacc857131e6620f0fcfd7daa88a0f8d77056aa9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3736732\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCommit-Queue: Yahan Lu <yahan@iscas.ac.cn>\nReviewed-by: ji qiu <qiuji@iscas.ac.cn>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82053}\n","milestone":106},{"_id":"2916cf59277f39bcb90be6784c7d6bfb9b0e8d99","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed Jul 27 15:22:09 2022"},"commit":"2916cf59277f39bcb90be6784c7d6bfb9b0e8d99","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jul 28 12:51:54 2022"},"message":"[API] Remove legacy OOM callback\n\nThis is deprecated since 10.5 and replaced by the new callback which\nreceives more OOM details.\n\nR=mlippautz@chromium.org\n\nBug: chromium:1323177\nChange-Id: I9385da33c3d9227144ebc47d6dddae702701ff82\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3789509\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82033}\n","milestone":106},{"_id":"6c64338c7819edcb0f9bb95fbd633844a5f943e9","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed Jul 27 15:38:12 2022"},"commit":"6c64338c7819edcb0f9bb95fbd633844a5f943e9","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jul 28 10:46:24 2022"},"message":"[API][wasm] Advance deprecation after dynamic tiering launch\n\nAdvance the deprecation of structs, classes, and methods which do not\nmake sense any more after dynamic tiering.\n\nThey were marked V8_DEPRECATE_SOON in 10.5.\n\nR=mlippautz@chromium.org\n\nBug: v8:12899\nChange-Id: I12b21f7d968a161b285b558d6e2437b0d03ef696\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3789510\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#82023}\n","milestone":106},{"_id":"362306ea177eb9addd7aa7c2a169177195b59dbe","author":{"name":"Fanchen Kong","email":"fanchen.kong@intel.com","time":"Wed Jul 27 00:25:30 2022"},"commit":"362306ea177eb9addd7aa7c2a169177195b59dbe","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jul 27 13:02:17 2022"},"message":"Fix vtunejit issues\n\nThis change fixes two issues with VTune JIT Profiling API.\n\n1. Update way of setting flag \"--no-compact-code-space\" to avoid changing flags after initialization v8.\n2. Fix a crash from visiting uninitialized ptr.\n\nChange-Id: I4878ffd554ce53630db961fe09b49e081b0091bf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3787321\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Fanchen Kong <fanchen.kong@intel.com>\nCr-Commit-Position: refs/heads/main@{#82003}\n","milestone":106},{"_id":"7586dc7910e66f2a2d45721f685980535f961645","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed Jul 27 11:00:47 2022"},"commit":"7586dc7910e66f2a2d45721f685980535f961645","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jul 27 12:22:48 2022"},"message":"[sandbox] Sandboxify AccessorInfo external pointers\n\nBug: v8:10391\nChange-Id: I18745b415962e08fada5c0b9466a0d7e66a84a12\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3757339\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81999}\n","milestone":106},{"_id":"2679a36ea9fb9fd7107fa589dbbba1d5656c6bc1","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Tue Jul 26 19:35:32 2022"},"commit":"2679a36ea9fb9fd7107fa589dbbba1d5656c6bc1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jul 26 21:10:47 2022"},"message":"[sandbox] Make external ptr table usable under pointer compression\n\nThis CL moves the external pointer table out of V8_ENABLE_SANDBOX and\ninto V8_COMPRESS_POINTERS. The external pointer table is also useful\neven when not sandboxing external pointers to ease alignment\nrequirements under pointer compression.\n\nIt is onerous for the allocator to support non-tagged-size alignment.\nUnder pointer compression, tagged is 4 bytes while system pointers are\n8 bytes. Because external pointer table indices are 4-bytes, fields that\nrequire natural alignment (e.g. the state field in JSAtomicsMutex) when\nthe system pointer size is 8-bytes can use an indirection via the\npointer table to ease the alignment restriction back to 4-bytes under\npointer compression.\n\nBug: v8:10391\nChange-Id: Iac1200e40c987128cd6a227cd279ba4dac0e5c56\nCq-Include-Trybots: luci.v8.try:v8_linux64_pointer_compression_rel_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3783076\nReviewed-by: Samuel Groß <saelo@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81977}\n","milestone":106},{"_id":"42af5dcd821c6d19b4fa99375cc06ca190439609","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Jul 26 08:35:13 2022"},"commit":"42af5dcd821c6d19b4fa99375cc06ca190439609","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jul 26 15:23:27 2022"},"message":"[sandbox] Sandboxify NativeContext::microtask_queue external pointer\n\nBug: v8:10391\nChange-Id: I4e7d4937ac4c6332da3c63c9e8c15e75fa951f2f\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3757343\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81973}\n","milestone":106},{"_id":"1078ab76665a268ca41d152f38f44a46f25281cc","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon Jul 25 15:52:27 2022"},"commit":"1078ab76665a268ca41d152f38f44a46f25281cc","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jul 26 12:02:38 2022"},"message":"Remove workaround for C++14\n\nC++17 was fully enabled [1] a few days after the last try to remove the\nworkaround [2]. Let's try again now.\n\n[1] https://crrev.com/c/3316556\n[2] https://crrev.com/c/3306429\n\nR=leszeks@chromium.org\n\nChange-Id: I63696b69d8d47deead03b86822ad04fbe065d7d3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3785144\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81963}\n","milestone":106},{"_id":"6e72b810c5c0e943fc0651ed9b03fe978e1a971e","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Jul 26 10:41:28 2022"},"commit":"6e72b810c5c0e943fc0651ed9b03fe978e1a971e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jul 26 11:47:25 2022"},"message":"[API] Allow copying of structs with deprecated fields\n\nThe implicit copy constructor triggers a deprecation warning if the\nstruct contains a deprecated field. We can fix this by explicitly\ndeclaring the copy and move constructors and assignment operators\nwith the deprecation warning disabled.\n\nThis CL also adds a test to check that we can indeed call the\nconstructors and assignment operators, which did not work before.\n\nR=leszeks@chromium.org\n\nBug: v8:13092\nChange-Id: Ia63ff9375de13fc6e5b5a8d59d827a742c99fb39\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3785145\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81962}\n","milestone":106},{"_id":"2eb73988a37a60520a0f8e0b1109edbcc0b91415","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Jul 25 15:49:39 2022"},"commit":"2eb73988a37a60520a0f8e0b1109edbcc0b91415","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jul 26 09:47:23 2022"},"message":"[sandbox] Refactor and sandboxify WasmInternalFunction::call_target\n\nThis CL refactors WasmInternalFunction to no longer inherit from Foreign\nbut instead contain a (sandboxed) ExternalPointer field for the call target.\n\nBug: v8:10391\nChange-Id: Iaaf25e635a275d7570e09699be3c8dec6108d4b3\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3782675\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81957}\n","milestone":106},{"_id":"efac35f3b8ef0572e1e0dfdfca74e8b40a797ffd","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Jul 25 10:17:00 2022"},"commit":"efac35f3b8ef0572e1e0dfdfca74e8b40a797ffd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 25 13:15:46 2022"},"message":"[sandbox] Sandboxify JSExternalObject external pointer\n\nBug: v8:10391\nChange-Id: I6075a8fe3c201f9221149e0c54edf4fb191088da\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3757342\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81924}\n","milestone":106},{"_id":"588fa294ef954bd98ce3092f70978106adf780d8","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Jul 22 07:18:00 2022"},"commit":"588fa294ef954bd98ce3092f70978106adf780d8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 25 12:59:56 2022"},"message":"[API] Prepare deprecation of second OnCriticalMemoryPressure\n\nThe new method is not implemented in Chrome or Node, and the issue has\nno activity since 2018, so let's rip out the incomplete new API.\n\nDrive-by: Sprinke a few V8_LIKELY and V8_UNLIKELY.\n\nR=mlippautz@chromium.org\n\nBug: chromium:634547\nChange-Id: I0dabad520d459277d7196fa69c1bbceaf4d53596\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3780528\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81923}\n","milestone":106},{"_id":"e0b5a83f53ba9b860d72a4ab62e888e2c56b1e7a","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Jul 25 09:07:30 2022"},"commit":"e0b5a83f53ba9b860d72a4ab62e888e2c56b1e7a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 25 10:09:26 2022"},"message":"[sandbox] Switch to 8-bit external pointer type tags\n\nDue to top-byte ignore (TBI) in Arm64, only bits [48, 56) can be used\nfor type tags as otherwise type-check failures may go unnoticed if they\nonly leave bits in the top byte set. This CL therefore switches the\nexternal pointer tagging scheme to use 8-bit tags.\n\nBug: v8:10391\nChange-Id: Ia1f379ebc1bbda4117785d2dc119bc8dfa358711\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3776688\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81913}\n","milestone":106},{"_id":"18751c5b4669ec5c754786419790e24207953a75","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Jul 22 08:54:44 2022"},"commit":"18751c5b4669ec5c754786419790e24207953a75","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 25 08:59:56 2022"},"message":"[include] Make Platform::GetPageAllocator abstract\n\nAll embedders override this method now, so it can be abstract.\n\nR=mlippautz@chromium.org\n\nBug: v8:12425\nChange-Id: I4db5d74341c9519222592a88d247bc2aa2be03a9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3780538\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81910}\n","milestone":106},{"_id":"0998bbe6fb6b41b746ae334f97f60d20d2fee573","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Thu Jul 21 13:09:00 2022"},"commit":"0998bbe6fb6b41b746ae334f97f60d20d2fee573","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Sat Jul 23 08:31:13 2022"},"message":"Implement V8_ASSUME via __builtin_unreachable for GCC\n\nProvide a V8_ASSUME implementation for GCC which has the same effect as\nusing __builtin_assume on clang.\n\nR=cbruni@chromium.org\n\nChange-Id: Ia6ab56995d9ecac1015eab8bacc7e3115da7004f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3779691\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81901}\n","milestone":106},{"_id":"d180d40d28d253abb5ed79a3f47fd2c150713694","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Thu Jul 21 19:11:45 2022"},"commit":"d180d40d28d253abb5ed79a3f47fd2c150713694","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jul 22 10:08:32 2022"},"message":"[wasm][devtools] Fix reported function body offsets\n\nThe DevTools frontend doesn't want the Wasm module's understanding of\nfunction body offsets (i.e. including locals), but the ranges of\noffsets where breakpoints can be set (i.e. only where instructions are).\nThis patch adjusts the reported offsets accordingly.\nA consequence is that we have to report full (start,end) pairs for each\nfunction, instead of being able to dedupe end1==start2 etc.\n\nBug: v8:12917\nChange-Id: I0c7d2d96435cdac2c4553647b7bcc8783bc1798b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3780526\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Philip Pfaffe <pfaffe@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81887}\n","milestone":106},{"_id":"376813dfeb129907f0b892ee5c7350e8a554b3ea","author":{"name":"Divy Srivastava","email":"dj.srivastava23@gmail.com","time":"Wed Jul 20 14:41:08 2022"},"commit":"376813dfeb129907f0b892ee5c7350e8a554b3ea","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jul 22 09:05:41 2022"},"message":"[fastcall] Implement support for Uint8Array arguments\n\nThis CL adds Uint8Array as supported arguments for fast API calls.\nIt introduces a kUint8 variant to CTypeInfo for use with TypedArrays\nonly.\n\nBug: v8:13080\nChange-Id: Ie65206078a18acabaafa9c95793f400b8e95373d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3767098\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#81886}\n","milestone":106},{"_id":"44c02e18f6e2467566532b520002a22e7efbdabb","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Mar 15 14:36:07 2022"},"commit":"44c02e18f6e2467566532b520002a22e7efbdabb","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 16 12:57:38 2022"},"message":"[wasm] Fix some WASM comments and outputs\n\nIn text, we should use the properly capitalized \"Wasm\" instead of\n\"WASM\". In particular for frame output, other frames typically use\nCamelCase (like \"JsToWasmFrame\", \"ExitFrame\", \"InternalFrame\"), so Wasm\nshould do the same.\nThe \"0xa\" comment in some assemblers is also outdated, the current tag\nwe emit for StackFrame::WASM is 0x8 (0x4 shifted by one).\n\nR=jkummerow@chromium.org\n\nBug: v8:12425\nChange-Id: Ic3e00c401b219c28b5424c82efb0f1a9df51690f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3525195\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79498}\n","milestone":101},{"_id":"d16de30137d6066111d3ef95f61454a6f1b76333","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Mar 15 16:06:24 2022"},"commit":"d16de30137d6066111d3ef95f61454a6f1b76333","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 16 11:07:30 2022"},"message":"Add ObjectSerializer::VisitExternalPointer\n\nThis method now handles external pointers in HeapObjects during\nserialization by encoding the representation of the external pointer\n(sandboxed, raw), the origin (internal, api) and potentially the\nexternal pointer tag. It is currently only used to handle\nJSExternalObjects but could, in the future, be extended to handle all\nexternal pointers that need special handling during\nserialization/deserialization.\n\nBug: v8:12700\nChange-Id: Ib0747d765ddc632e4ca4ee94521616d0271be0bc\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3521904\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79496}\n","milestone":101},{"_id":"5a968b08b368ea0cac045268adfbf5a2f477e486","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Mar 10 18:44:52 2022"},"commit":"5a968b08b368ea0cac045268adfbf5a2f477e486","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Mar 14 10:50:58 2022"},"message":"Refactor ExternalObjects\n\nInstead of implementing ExternalObjects as plain JSObjects with a single\nEmbedderDataSlot pointing to a Foreign containing the actual raw\npointer, this CL now creates a new JSExternalObject type that directly\ncontains the external pointer.\n\nAs a side-effect of this refactoring, nullptr values are now no longer\nvalid for ExternalObjects.\n\nChange-Id: Ic8ff334681c966e823ca70f34dd1efaaa21a0789\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3513234\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79459}\n","milestone":101},{"_id":"924cc893848e11db45eb1a3661fac05c5933c994","author":{"name":"Nikolaos Papaspyrou","email":"nikolaos@chromium.org","time":"Tue Mar 08 17:05:58 2022"},"commit":"924cc893848e11db45eb1a3661fac05c5933c994","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Mar 08 18:27:13 2022"},"message":"heap: Migrate full GC cycle UMA metrics\n\nReport full GC statistics to the Recorder API. These will be used by\nBlink to populate UMA histograms. Existing UMA reporting in V8 remains\nas is for now and will be removed in a followup.\n\nWith this CL, most full GC statistics are reported as part of\nV8.GC.Cycle.*.Full.*. Also V8.GCMarkCompactReason is migrated to\nV8.GC.Cycle.Reason.Full.\n\nThis CL goes together with:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/3353448\n\nBug: chromium:1154636\nChange-Id: I199be75e75144a59e5f56a6872268d0ecad3a885\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3356195\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Nikolaos Papaspyrou <nikolaos@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79408}\n","milestone":101},{"_id":"1e9f07757625bea3a636dfb3cdbd2e156955a1cf","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Mar 07 17:14:48 2022"},"commit":"1e9f07757625bea3a636dfb3cdbd2e156955a1cf","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Mar 07 20:43:02 2022"},"message":"heap,api: Deprecate resurrecting finalizers\n\nResurrecting finalizers cause all sorts of problems, from performance\npenalties when used to hard-to-debug memory leaks.\n\nThere's no more usage left in Blink as well as V8 internally, so\ndeprecate resurrecting finalizers.\n\nBug: v8:12672\nChange-Id: I998373d6468bbd3bd581a41dec8904de80561f43\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3507991\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79394}\n","milestone":101},{"_id":"426233a1186fb3705a4a0c4928ba3a296c1487cd","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Mon Mar 07 17:04:25 2022"},"commit":"426233a1186fb3705a4a0c4928ba3a296c1487cd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Mar 07 17:56:32 2022"},"message":"[counter] Add use counts for f.arguments and .caller\n\nChange-Id: I29b48de9e0f6d6db5fba50d4a081656d869d9892\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3506309\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nAuto-Submit: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79389}\n","milestone":101},{"_id":"f43f8a0bb5a236bc758151eb4a903f7b41390d28","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Mar 07 16:01:11 2022"},"commit":"f43f8a0bb5a236bc758151eb4a903f7b41390d28","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Mar 07 16:53:23 2022"},"message":"[base] Don't return bool from VirtualAddressSpace::Free* routines\n\nInstead of returning a boolean success/failure value, the Free* methods\nof the VirtualAddressSpace API now terminate the process on failure, as\nthis implies a bug in the caller. This is simpler than CHECKing for\nsuccess in all callers and also provides more details about the possible\ncause of the failure.\n\nBug: v8:12656\nChange-Id: I5b469ae2c564068cff74e60b7e98f6a4776a239d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3506992\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79388}\n","milestone":101},{"_id":"418b5fc2ce22d1578293b670afeea534b65c7789","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri Feb 18 14:25:52 2022"},"commit":"418b5fc2ce22d1578293b670afeea534b65c7789","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Feb 22 13:40:35 2022"},"message":"[sandbox] Store external pointers in EmbedderDataSlots in shifted form\n\nSimilar to other external pointers, the indices into the external\npointer table are stored shifted to the left to guarantee an upper\nbound.\n\nBug: v8:10391\nChange-Id: I079dc1568f49ae349c326a8e83fc32c93bdb35cf\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3455152\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79209}\n","milestone":101},{"_id":"df696e72b1fd0fc6c9210e7cf52d759612e81a62","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Feb 17 14:36:01 2022"},"commit":"df696e72b1fd0fc6c9210e7cf52d759612e81a62","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Feb 22 13:25:45 2022"},"message":"api: Forward deprecations around EmbedderHeapTracer\n\n- TracedGlobal is now fully deprecated\n- Removed GarbageCollectionForTesting\n\nBug: v8:12603\nChange-Id: Iaaea924888d60f936c34461654d78d74792919f0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3471557\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79207}\n","milestone":101},{"_id":"38db63b2b8b83a7400d68994cf1b6847000518be","author":{"name":"Corentin Pescheloche","email":"cpescheloche@fb.com","time":"Fri Feb 04 21:38:28 2022"},"commit":"38db63b2b8b83a7400d68994cf1b6847000518be","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Feb 21 11:58:33 2022"},"message":"[profiler] opt-in tracing setting\n\nCpuProfiler includes logic tracing that is only relevant in\nthe context of TracingCpuProfiler.\nAdds a setting to disable tracing for SamplingCpuProfiler.\n\nChange-Id: Idcac03dd3f368b5fcd48a532d5cfe60966a64003\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3433219\nAuto-Submit: Corentin Pescheloche <cpescheloche@fb.com>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79190}\n","milestone":101},{"_id":"a1faaf06a496cb85e4b26eefd20fd35265388923","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Feb 17 10:40:49 2022"},"commit":"a1faaf06a496cb85e4b26eefd20fd35265388923","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Feb 18 10:24:59 2022"},"message":"Split V8_OS_MACOSX into V8_OS_DARWIN and V8_OS_MACOS\n\nPreviously, V8_OS_MACOSX was, somewhat confusingly, also used for iOS.\nWith this CL, V8_OS_DARWIN will be set on both macOS and iOS,\nV8_OS_MACOS only on macOS, and V8_OS_IOS only on iOS.\n\nThis CL also renames V8_TARGET_OS_MACOSX to V8_TARGET_OS_MACOS and\nrenames platform-xnu.cc to platform-darwin.cc.\n\nChange-Id: I4bcafc7c337586662114144f6c7ccf47d978da1f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3468577\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79167}\n","milestone":101},{"_id":"eeab7016a7e9a4dc1664269c962fe127bb7d33e9","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed May 25 09:02:54 2022"},"commit":"eeab7016a7e9a4dc1664269c962fe127bb7d33e9","committer":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed May 25 09:09:46 2022"},"message":"Merged: [sandbox] Shrink sandbox on Android to 128GB\n\nRevision: d812c9a977934d7e5404fdd6fc16bc376e7984e5\n\nBUG=chromium:1327131\n\nChange-Id: I38da3c8b6744bc5bc6d016a2de1404d3df9b0dde\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3666619\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/branch-heads/10.3@{#8}\nCr-Branched-From: 1a8f4cab47232e7861928945eeee1c40fe7f7c08-refs/heads/10.3.174@{#1}\nCr-Branched-From: 8fbefa47971832fc5afaffb913ae9689f0cc9f9e-refs/heads/main@{#80471}\n","milestone":103},{"_id":"09f39ae00d1261c20e2f9ec0dfa2e853ee0c9a1a","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue May 10 14:41:04 2022"},"commit":"09f39ae00d1261c20e2f9ec0dfa2e853ee0c9a1a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 10 16:43:25 2022"},"message":"Inspector protocol: Add optional parameter to expose internals\n\nDeprecate the existing parameter to treat global objects as roots as\nthis is implied by exposing internals.\n\nBug: chromium:1321620\nChange-Id: I73a8124d63f87599dee7080980844c418eb3b5e4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3637797\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80456}\n","milestone":103},{"_id":"e57f4bb3fced34521d08ea8ce5a0806747a47fb2","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri May 06 15:50:26 2022"},"commit":"e57f4bb3fced34521d08ea8ce5a0806747a47fb2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 10 15:36:15 2022"},"message":"[API] Deprecate OOMErrorCallback\n\nDeprecate the OOMErrorCallback such that we can add a new parameter for\nOOM details.\n\nR=mlippautz@chromium.org\n\nBug: chromium:1323177\nChange-Id: I72c931ad0d1b75cda46e8815387098acbe091c68\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3632106\nReviewed-by: Lutz Vahl <vahl@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80453}\n","milestone":103},{"_id":"fee2336535714a2ee4018f02bcf7e258b1bd8ed8","author":{"name":"henrika","email":"henrika@chromium.org","time":"Mon May 09 12:40:45 2022"},"commit":"fee2336535714a2ee4018f02bcf7e258b1bd8ed8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 09 14:29:24 2022"},"message":"[api] Adds script column number to code-creation events in CodeEventLogger\n\nBug: v8:11043\nChange-Id: I8cbdd8a5f68bdadbe7fc44414c6d46cdd57e6802\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3627512\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Henrik Andreasson <henrika@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80429}\n","milestone":103},{"_id":"44c748474260f6b4c93f43870b6b474230bc6fcd","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri May 06 15:20:59 2022"},"commit":"44c748474260f6b4c93f43870b6b474230bc6fcd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 09 12:32:51 2022"},"message":"[API] Add LegacyOOMErrorCallback\n\nThis adds a typedef for LegacyOOMErrorCallback, which is identical to\nOOMErrorCallback. Embedders will need to switch to\nLegacyOOMErrorCallback so that we can change the definition of\nOOMErrorCallback (see https://crbug.com/1323177).\n\nR=mlippautz@chromium.org\n\nBug: chromium:1323177\nChange-Id: I92312a577ca49e0174f2bb6b914cc11c3a0b0fc1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3632305\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80424}\n","milestone":103},{"_id":"08348dba4e1aa572dc52f7589f11a27a3f733af7","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri May 06 07:23:16 2022"},"commit":"08348dba4e1aa572dc52f7589f11a27a3f733af7","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri May 06 08:10:40 2022"},"message":"[api] Rework heap snapshot exposing internals\n\n- Repurpose flag `treat_global_objects_as_roots` when taking a heap\n  snapshot for toggling whether internals should be exposed (to\n  `hide_internals`).\n- Use the toggle in creating heap snapshots for exposing class names\n  as object names for C++ objects that have not explicitly been given a\n  name.\n\nChange-Id: I77d71babfdfe53269964fe81ed985037a431c28b\nBug: chromium:1321620\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3623740\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80391}\n","milestone":103},{"_id":"c42e620355453fc0510b06e089ca7d92598bd54f","author":{"name":"Danil Somsikov","email":"dsv@chromium.org","time":"Tue May 03 11:11:33 2022"},"commit":"c42e620355453fc0510b06e089ca7d92598bd54f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 03 12:38:17 2022"},"message":"Distinguish untrusted clients in v8 inspector and disable Profiler, HeapProfiler and Schema CDP domains for them.\n\nBug: chromium:1313437\nChange-Id: I7544c64acb4bc368392ba5f6a87ed62176828304\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3616517\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCommit-Queue: Danil Somsikov <dsv@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80340}\n","milestone":103},{"_id":"46224e75f3a42fb7ab1291c63d642e69dcdb4ac9","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Thu Apr 28 13:09:34 2022"},"commit":"46224e75f3a42fb7ab1291c63d642e69dcdb4ac9","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 03 12:16:28 2022"},"message":"[api] Advance API deprecation for V8 version v10.2\n\nPreviously marked V8_DEPRECATED_SOON that are now V8_DEPRECATED:\n\nFile                                    Version  Date        Commit\ninclude/v8-initialization.h:208            v9.9  2021-12-15  277fdd1d\ninclude/v8-initialization.h:226            v9.9  2021-12-15  277fdd1d\ninclude/v8-initialization.h:236            v9.9  2021-12-15  277fdd1d\ninclude/v8-initialization.h:250            v9.9  2021-12-15  277fdd1d\ninclude/v8-locker.h:130                   v10.0  2022-01-20  116ca00f\ninclude/v8-message.h:90                    v9.8  2021-11-09  2b3df06b\n\n\nPreviously marked V8_DEPRECATED that are now removed:\n\nFile                                    Version  Date        Commit\ninclude/v8-fast-api-calls.h:886            v9.8  2021-11-11  b295d0b0\ninclude/v8-fast-api-calls.h:893            v9.8  2021-11-11  b295d0b0\ninclude/v8-fast-api-calls.h:902            v9.8  2021-11-11  b295d0b0\ninclude/v8-initialization.h:186           v10.0  2022-01-26  36707481\ninclude/v8-isolate.h:639                  v10.0  2022-01-26  36707481\ninclude/v8-locker.h:132                    v9.8  2021-11-11  b295d0b0\ninclude/v8-object.h:597                    v9.9  2022-01-18  0a61fa51\ninclude/v8-object.h:609                    v9.8  2021-11-11  b295d0b0\ninclude/v8-script.h:50                    v10.0  2022-01-26  36707481\ninclude/v8-script.h:653                   v10.0  2022-01-18  9cf4f131\n\n\nOutput generated by ./tools/release/list_deprecated.py\n\nBug: v8:11165, chromium:1166077\nChange-Id: Ie0d435f7a10f362ed714bdc30ad899ee9c485cb4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3571804\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nAuto-Submit: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80337}\n","milestone":103},{"_id":"f2ff0d50651dfa435250646c3358891f01570836","author":{"name":"jameslahm","email":"wangao.james@bytedance.com","time":"Tue May 03 01:38:45 2022"},"commit":"f2ff0d50651dfa435250646c3358891f01570836","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 03 10:03:24 2022"},"message":"[api] Fix MaybeLocal::ToLocal documentation when it's empty\n\nThis CL changes MaybeLocal::ToLocal documentation to assign |out|\nwith nullptr when the MaybeLocal is empty to be consistent with\nthe behavior.\n\nBug: v8:12845\nChange-Id: I8145d6604c51b79f137b686b3e9b4f328534e0a8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3616432\nCommit-Queue: 王澳 <wangao.james@bytedance.com>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80329}\n","milestone":103},{"_id":"35fc0c17c951d310b53042eb5749cba2597f54aa","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Thu Apr 28 13:18:48 2022"},"commit":"35fc0c17c951d310b53042eb5749cba2597f54aa","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 03 08:30:07 2022"},"message":"[snapshot][api] Expose the snapshot checksum as crash key\n\nDue to the consistent overhead of snapshot checksum verification\nwe ideally want to avoid it all-together. However there are still enough\ndevices out there that suffer from corrupted snapshots that might\ncause hard to debug heap corruptions.\n\nThis CL exposes the calculated (dummy value for now) and the expected\nsnapshot checksum as a crash key, so it can be easily consulted during\ninvestigation.\n\nNote: The calculated crash key contains 0x0 for now as a dummy value. We\nwill come up with a strategy later-on to limit the overhead of\ncalculating the checksum.\n\nBug: v8:12195\nChange-Id: I6da6d74c035cb6f9b0edae212a36e6c41c048a5b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3605813\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80325}\n","milestone":103},{"_id":"5e1f856d18f7ad82ead1cb0ff7862bee1743d40d","author":{"name":"Rob Paveza","email":"rob.paveza@microsoft.com","time":"Mon May 02 18:26:25 2022"},"commit":"5e1f856d18f7ad82ead1cb0ff7862bee1743d40d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 03 00:57:46 2022"},"message":"Add support for source hashing in stack traces.\n\nThis change adds support for computing SHA-256 hashes in the stack\noutput of errors by adding a function to the prototype of the\n`CallSite` object, passed to `Error.prepareStackTrace`. Additionally,\nit updates the `hash` property from `Debugger.scriptParsed` and\n`Debugger.scriptFailedToParse` to be SHA-256 instead of the\nproprietary hash it is today.\n\nIt is intended to be an advancement in indexing source maps to\nsupport improved tooling, especially for post-hoc or in-production\ndiagnostics scenarios.\n\nThe explainer can be found here:\nhttps://docs.google.com/document/d/13hNeeLC2Ve_FVieNndZUUUP15x2O4ltvjnGWwOsMlrU/edit?usp=sharing\n\nChange-Id: Ifbbed4b22c8256e74e6d79974d2dd1e444143eda\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3229957\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nAuto-Submit: Robert Paveza <Rob.Paveza@microsoft.com>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80320}\n","milestone":103},{"_id":"c674a1f60876fb8836cd23a79debfe9048a058ab","author":{"name":"Maksim Sadym","email":"sadym@chromium.org","time":"Fri Apr 29 09:20:23 2022"},"commit":"c674a1f60876fb8836cd23a79debfe9048a058ab","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 02 09:54:03 2022"},"message":"Follow-up after https://crrev.com/c/3472077\n\n1. Use `StringBuffer` instead of `StringView` in `WebDriverValue`.\n2. Add some `DCHECK`s.\n3. Reserve vector size.\n4. Respect properties with `undefined` values.\n5. Minor clean-ups.\n\nChange-Id: Ic109acb1e3adf2d950767173c17a9203e3c816dc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3596173\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nAuto-Submit: Maksim Sadym <sadym@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80296}\n","milestone":103},{"_id":"2655d3d18d05a8710e37ac3c803644306e26a9a8","author":{"name":"Anton Bikineev","email":"bikineev@chromium.org","time":"Thu Apr 28 18:31:24 2022"},"commit":"2655d3d18d05a8710e37ac3c803644306e26a9a8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Sat Apr 30 21:47:24 2022"},"message":"api: Allow v8::Maybe<MovableType>.\n\nChange-Id: I29bcdf3302f37568e8c8925e70a01ba342c17925\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3606229\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Anton Bikineev <bikineev@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80288}\n","milestone":103},{"_id":"759e841a05a5def99a631d57144daec44a80e188","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Wed Apr 27 18:52:38 2022"},"commit":"759e841a05a5def99a631d57144daec44a80e188","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Apr 28 12:51:08 2022"},"message":"[api] Rename isolate variables\n\n* Prefix all isolate variables with i_ for i::Isolate and\n  v8_ for v8::Isolate\n* Change _DO_NOT_USE macro suffix to _INTERNAL\n\nChange-Id: I005efbe0192cf202741448c63a4263e6a4b1fa1b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3610429\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Anton Bikineev <bikineev@chromium.org>\nReviewed-by: Jakob Linke <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80252}\n","milestone":103},{"_id":"18159ba6104ad2def0296f4d22700c92ba061926","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed Apr 27 11:39:51 2022"},"commit":"18159ba6104ad2def0296f4d22700c92ba061926","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Apr 28 08:12:20 2022"},"message":"[base] Abort on unexpected failures in OS::SetPermissions\n\nIt is expected that changing page permissions can fail due to the system\nrunning out of memory. However, any other failure is unexpected and\nlikely indicates a bug in the caller, such as changing the permissions\nof an invalid memory region. To allow distinguishing between these\nunexpected failures and expected OOM failures, this CL adds CHECKs into\nthe low-level memory management routines to abort when an unexpected\nfailure occurs.\n\nSimilar logic could later be added to other low-level memory management\nroutines that can legitimately fail due to OOM as well.\n\nBug: chromium:1320126\nChange-Id: I3de6f4b2aed8962c91770b81382df34384584501\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3610445\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80245}\n","milestone":103},{"_id":"3e2d5bfafa46276db1010d352ffd72bdbff37264","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Tue Apr 26 13:01:46 2022"},"commit":"3e2d5bfafa46276db1010d352ffd72bdbff37264","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Apr 26 16:17:43 2022"},"message":"[rwx][mac] Extend PageAllocator API with RecommitPages()\n\nIt's necessary to support fast W^X permission switching on MacOS on\nARM64 (\"Apple M1\"/Apple Silicon) where permission modification of RWX\npages to anything else is prohibited.\n\nOn all the other architectures/platforms RecommitPages() is equivalent\nto SetPermissions().\n\nThe new API will be used in a follow-up CLs.\n\nBug: v8:12797\nChange-Id: Id0d8b8c42c81b80cd8fa6b47c227680d7d1f9b10\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3606231\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Samuel Groß <saelo@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80190}\n","milestone":103},{"_id":"ee72b7a11f66c1a6da02bc4f64586ca0f6f9ce4c","author":{"name":"Seth Brenith","email":"seth.brenith@microsoft.com","time":"Fri Apr 15 19:53:32 2022"},"commit":"ee72b7a11f66c1a6da02bc4f64586ca0f6f9ce4c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Apr 22 16:19:26 2022"},"message":"Categorize object shape info in heap snapshots\n\nOne of the biggest categories in heap snapshots is named “(system)”,\nwhich gives developers no indication of why all that memory is used or\nwhat they might do to reduce it. In this change, I propose that we\ncreate a new category for Maps, DescriptorArrays, and related objects,\nand call this new category “(object shape)” in the devtools. I think\nthat this category name would be more meaningful, while still grouping\nthose objects together so that they mostly stay out of the way.\n\nBug: v8:12769\nDoc: https://docs.google.com/document/d/1a-6V_2LIJuRcsppwh6E18g8OSnC9j6gN4ao2gq--BiU\nChange-Id: I282a7b87c34ca6ed371ff32f3c7332d794ae42ca\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3587974\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Seth Brenith <seth.brenith@microsoft.com>\nCr-Commit-Position: refs/heads/main@{#80123}\n","milestone":103},{"_id":"015632a0a8574cc276193368438c2a0529739377","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Apr 22 14:14:49 2022"},"commit":"015632a0a8574cc276193368438c2a0529739377","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Apr 22 15:14:46 2022"},"message":"[handles] Simplify global handle state machine\n\nRemove PENDING state as handles were always immediately transitioned\ninto FREE or NEAR_DEATH state.\n\nBug: v8:12672\nChange-Id: I9a9d40b573e862282d41d7a4a3f9c8c8ed21b9e4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3599473\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80119}\n","milestone":103},{"_id":"91badec697cb6e93d88b74534cd40f92e64fb945","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Apr 21 12:12:55 2022"},"commit":"91badec697cb6e93d88b74534cd40f92e64fb945","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Apr 21 12:55:15 2022"},"message":"[api] Deprecate unused GlobalHandles APIs that peek into internals\n\nWhen moving forward and optimizing internals, these APIs cannot be\ntrusted anymore as their semantics are tangled to the current\nimplementation.\n\nBug: v8:12819\nChange-Id: I0e3370724307a420ee42fed8070b55542be9400d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3599475\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80082}\n","milestone":103},{"_id":"2ae2aa92b10e95357f044f6014b1cc22d0e1b946","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Apr 20 20:33:55 2022"},"commit":"2ae2aa92b10e95357f044f6014b1cc22d0e1b946","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Apr 21 07:05:25 2022"},"message":"[api] Remove APIs for resurrecting finalizers\n\nRemoves support for specifying weak handles with finalizers that allow\nfor object resurrection.\n\nThis CL removes the public facing APIs. Internal support will be\nremoved in a follow up.\n\nBug: v8:12672\nChange-Id: Ia6ea269093aaa128caadb7508aca2e5a1254923c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3596174\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80070}\n","milestone":103},{"_id":"ec41a70e38def3dbfb05473be5d40fb81fcc8dc2","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Wed Apr 20 11:55:39 2022"},"commit":"ec41a70e38def3dbfb05473be5d40fb81fcc8dc2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Apr 20 12:40:34 2022"},"message":"[inspector] Add 'canBeRestarted' flag to CallFrames when debugger pauses\n\nDoc: https://bit.ly/revive-restart-frame\nContext: https://crrev.com/c/3582395 (whole feature)\n\nThis CL adds a new optional flag `canBeRestarted` to every call frame\nin Debugger.paused events. As the name suggests, the flag indicates\nwhether we can restart a particular frame through Debugger.restartFrame\nonce implemented.\n\nWe are not able to safely restart all frames:\n  * We don't support WASM frames\n  * We don't support frames where resumable functions (async fns,\n    generators) and embedder C++ frames are between the top-most\n    frame and the to-be-restarted frame.\n\nNote that from a CDP perspective the flag doesn't actually guarantee\na successful restart. CDP clients can issue\nCDP commands between the Debugger.paused event and before a user\ndecides to restart a frame, which can potentially mess\nwith the stack.\n\nThe `canBeRestarted` flag tests are folded into the\nDebugger.restartFrame tests. As the feature is not yet fully\nimplemented we short-circuit most of the tests for now and only\nrun them up until the first Debugger.restartFrame call fails\n(except \"fails-for-resumables.js\").\nThis means the tests exercise the `canBeRestarted` flag, but not\nthe restarting functionality itself.\n\nR=bmeurer@chromium.org, kimanh@chromium.org\n\nBug: chromium:1303521\nChange-Id: I01ab46dc3557ab8383960969fbe03e00604cc5e2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3596160\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#80046}\n","milestone":103},{"_id":"a913a75b8c1fd761d90cbd1c59fde9df9a299616","author":{"name":"Maksim Sadym","email":"sadym@chromium.org","time":"Mon Apr 11 14:53:00 2022"},"commit":"a913a75b8c1fd761d90cbd1c59fde9df9a299616","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Apr 11 15:51:54 2022"},"message":"Add `WebDriverBiDi` serialization to CDP\n\n1. Added `generateWebDriverValue` flag to `Runtime.evaluate` and `Runtime.callFunctionOn`.\n2. Added `webDriverValue` field to `RemoteObject`, and set it in case of the `generateWebDriverValue` flag was set.\n3. Added virtual method `bidiSerialize` to allow embedder-implemented serialization (like in https://crrev.com/c/3472491).\n4. Implemented V8 serialization in a separate class `V8WebDriverSerializer`.\n5. Hardcode `max_depth=1`.\n6. Added tests.\n\nNot implemented yet:\n1. `objectId`.\n2. Test of embedder-implemented serialization.\n\nTested automatically by:\n```\npython3 tools/run-tests.py --outdir out/foo inspector/runtime/add-web-driver-value\n```\n\nNaming to be discussed. Suggestions are very welcome.\n\nDesign doc: http://go/bidi-serialization\n\nChange-Id: Ib35ed8ff58e40b3304423cc2139050136d844e2c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3472077\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Maksim Sadym <sadym@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79922}\n","milestone":102},{"_id":"cce601bae6fa8728475699ba886f6894eb023bfe","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Apr 08 11:40:34 2022"},"commit":"cce601bae6fa8728475699ba886f6894eb023bfe","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Apr 08 13:08:05 2022"},"message":"[heap] Split off changes for concurrently processing TracedReference\n\nTrivial changes from https://crrev.com/c/3571887.\n\nBug: v8:12600\nChange-Id: I0a6f36d32f72a6c3817a4390645ccf5a690c5580\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3579161\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79885}\n","milestone":102},{"_id":"ca51ae3ac8b468509603633adb6ee3b3be9306ec","author":{"name":"Corentin Pescheloche","email":"cpescheloche@fb.com","time":"Tue Apr 05 22:45:41 2022"},"commit":"ca51ae3ac8b468509603633adb6ee3b3be9306ec","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Apr 06 19:29:14 2022"},"message":"[api][profiler] Get StartProfiling, StopProfiling to accept integer ID rather than string\n\nThis CL adds support for interacting with CpuProfile with their integer\nid.\nA String ID is problematic because it forces an allocation when stopping\nor cancelling a Profiler which can happen during a GC when this\nis not allowed.\n\nChange-Id: I9a8e754bd67214be0bbc5ca051bcadf52bf71a68\nBug: chromium:1297283\nCo-Authored-By: Nicolas Dubus <nicodubus@fb.com>\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3522896\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nAuto-Submit: Corentin Pescheloche <cpescheloche@fb.com>\nCommit-Queue: Corentin Pescheloche <cpescheloche@fb.com>\nCr-Commit-Position: refs/heads/main@{#79835}\n","milestone":102},{"_id":"9238afb0c0ee52c9111a7e9f2f055137628771ad","author":{"name":"Kevin Babbitt","email":"kbabbitt@microsoft.com","time":"Thu Mar 31 03:49:46 2022"},"commit":"9238afb0c0ee52c9111a7e9f2f055137628771ad","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Apr 06 17:27:33 2022"},"message":"Allow embedder to set global OOM handler\n\nEmbedders can currently specify a callback for OOM errors during\nIsolate initialization. However, there are cases where an OOM error can\nbe thrown in a context where we don't have access to an Isolate, for\nexample on a task posted to a worker thread. This CL introduces an\ninitialization API to allow the embedder to specify a process-wide OOM\ncallback.\n\nBug: chromium:614440\nChange-Id: I326753d80767679f677e85104d9edeef92e19086\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3561916\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Kevin Babbitt <kbabbitt@microsoft.com>\nCr-Commit-Position: refs/heads/main@{#79832}\n","milestone":102},{"_id":"cff2b5000a1aa417a9c4499bcfa3ffda4542f4f1","author":{"name":"Stephen Roettger","email":"sroettger@google.com","time":"Wed Apr 06 07:41:15 2022"},"commit":"cff2b5000a1aa417a9c4499bcfa3ffda4542f4f1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Apr 06 09:43:37 2022"},"message":"Deprecate signature checks in Set{Accessor,NativeDataProperty}\n\nChange from V8_DEPRECATE_SOON to V8_DEPRECATED. It turned out that we\ndon't have to make changes in chrome code, so we can go to deprecated\nright away.\n\nBug: chromium:1310790\nChange-Id: I1bd529536d3a0098f11f13b3e44fe3dbc80eed04\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3571897\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Stephen Röttger <sroettger@google.com>\nCr-Commit-Position: refs/heads/main@{#79811}\n","milestone":102},{"_id":"1ff685d8b1a13794abaca3adf36cfd9838b1f6fc","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Mon Apr 04 09:42:00 2022"},"commit":"1ff685d8b1a13794abaca3adf36cfd9838b1f6fc","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Apr 04 10:26:36 2022"},"message":"[deoptimizer] Remove soft deopts\n\n.. since they are the same as eager deopts (% an unused counter).\n\nFixed: v8:12765\nChange-Id: I2be6210e476ead4ac6629a49259f28321e965867\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3565717\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Jakob Linke <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79729}\n","milestone":102},{"_id":"a8beac553b0a1639bc9790c2d6f82caf6b2e150f","author":{"name":"Stephen Roettger","email":"sroettger@google.com","time":"Wed Mar 30 12:39:57 2022"},"commit":"a8beac553b0a1639bc9790c2d6f82caf6b2e150f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Mar 31 12:11:21 2022"},"message":"Deprecate some signature checks\n\nDeprecate signature checks in\n* Template::SetNativeDataProperty\n* ObjectTemplate::SetAccessor\nThese are not used in Chrome and require some complicated check in the IC code, which we want to remove.\n\nChange-Id: I413fafc8658e922fd590e7fe200600a624f019a6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3557253\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Stephen Röttger <sroettger@google.com>\nCr-Commit-Position: refs/heads/main@{#79689}\n","milestone":102},{"_id":"56cfdd68c731c53d016326b890b56b5c30098998","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Wed Mar 30 08:23:36 2022"},"commit":"56cfdd68c731c53d016326b890b56b5c30098998","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 30 11:58:10 2022"},"message":"[inspector] Add custom error dispatch machinery for debug evaluate.\n\nThis introduces a `V8InspectorClient::dispatchError()` callback that\nembedders can use to dispatch errors from scripts injected by DevTools\n(via debug evaluate). The idea here being that while these errors are\ntechnically caught by the inspector logic, the DevTools UX presents them\njust like other uncaught errors, with the exception that they don't\ntrigger error handlers installed by the page. The latter can be quite\nconfusing to developers, and surprising when for example testing these\nerror handlers from DevTools. So this adds the foundations on the V8\nside to enable triggering error handlers for these technically caught,\nbut morally uncaught, exceptions.\n\nOn the Chromium side https://crrev.com/c/3560458 will implement and\nuse the hook. And that CL also adds a web tests to check the behavior.\n\nBug: chromium:1295750\nChange-Id: I945c8a9e9b4ec5705fc7f1891dcda185b04c8310\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3557234\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79673}\n","milestone":102},{"_id":"7ff07f6ec53f24d455b3880c5b5995ede6604b60","author":{"name":"Nikolaos Papaspyrou","email":"nikolaos@chromium.org","time":"Wed Mar 23 17:33:29 2022"},"commit":"7ff07f6ec53f24d455b3880c5b5995ede6604b60","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Mar 24 10:05:16 2022"},"message":"heap: Add incremental mark/sweep step events\n\nReport fine-grain incremental mark/sweep statistics to the Recorder API.\nThese will be used by Blink to populate UMA histograms such as\nV8.GC.Event.MainThread.Full.Incremental.(Mark|Sweep).\n\nBug: chromium:1154636\nChange-Id: I1cbdcb2ffa49bd01d04a2e1d43921cebf956ac84\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3545070\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Nikolaos Papaspyrou <nikolaos@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79596}\n","milestone":102},{"_id":"f6386018d472665e36d662c8b159d95325999d69","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Mar 23 09:24:36 2022"},"commit":"f6386018d472665e36d662c8b159d95325999d69","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 23 21:04:51 2022"},"message":"[api] Remove TracedGlobal<>\n\nRemove deprecated TracedGlobal<>, greatly simplifying handling of\ntraced references in general.\n\nAlso saves a word per v8::TracedReference as there's no need to keep a\npossible callback around.\n\nBug: v8:12603\nChange-Id: Ice35d7906775b912d02e97a27a722b3e1cec28d9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3532251\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79589}\n","milestone":102},{"_id":"ffae028b37991566c080c5528463f7d16017668c","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Mar 17 12:58:16 2022"},"commit":"ffae028b37991566c080c5528463f7d16017668c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Mar 23 15:54:22 2022"},"message":"Forward deprecation for resurrecting finalizer\n\nBug: v8:12672\nChange-Id: Ib4f53086436e028b4ea32fbc960f57e91709d184\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3532256\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79581}\n","milestone":102},{"_id":"b2978927d8a96ebc814cccbc5a9f1c35910ee621","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Mon Mar 21 10:56:46 2022"},"commit":"b2978927d8a96ebc814cccbc5a9f1c35910ee621","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Mar 21 13:01:16 2022"},"message":"Remove dynamic map checks and custom deoptimization kinds\n\nThis CL removes:\n\n- Dynamic map checks aka minimorphic property loads (TF support,\n  builtins).\n- \"Bailout\" deopts (= drop to the interpreter once, but don't\n  throw out optimized code).\n- \"EagerWithResume\" deopts (= part of dynamic map check\n  functionality, we call a builtin for the deopt check and deopt\n  or resume based on the result).\n\nFixed: v8:12552\nChange-Id: I492cf1667e0f54586690b2f72a65ea804224b840\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3401585\nAuto-Submit: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79544}\n","milestone":102},{"_id":"ccc689011280419901e6ee42cae39980c0e96030","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed Feb 16 15:34:41 2022"},"commit":"ccc689011280419901e6ee42cae39980c0e96030","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Feb 16 17:11:16 2022"},"message":"[base] Fix iOS build after AllocateSharedPages introduction\n\nThe new shared memory API should only be used on macOS, but\nplatform-macos.cc was also included on iOS, causing build failures. This\nCL splits platform-macos.cc into platform-xnu.cc (common code for macOS\nand iOS) and platform-macos.cc (the macOS specific parts)\n\nBug: chromium:1218005\nChange-Id: Iab332865ffd8990ddd246bb9c08802909464d7e6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3468895\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79131}\n","milestone":100},{"_id":"a76e7b4b3838f355fed5e4185a818a9bb9e3bbef","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed Feb 16 09:52:58 2022"},"commit":"a76e7b4b3838f355fed5e4185a818a9bb9e3bbef","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Feb 16 11:35:23 2022"},"message":"[base] Add VirtualAddressSpace::AllocateSharedPages\n\nThis API allows allocating shared memory mappings inside a virtual\naddress space from a platform-specific handle to a shared memory object.\nThis will make it possible to allocate shared memory inside the sandbox,\nfor example as backing memory for ArrayBuffers.\n\nBug: chromium:1218005\nChange-Id: I4f1f50baec50734e846496cff78046e4fffe75c5\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3383777\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79123}\n","milestone":100},{"_id":"6e06d756b754ac37058f8b7583db438641b4119b","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Feb 15 10:19:44 2022"},"commit":"6e06d756b754ac37058f8b7583db438641b4119b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Feb 16 09:48:29 2022"},"message":"[sandbox] Disallow executable pages inside the sandbox\n\nThese should not be allowed inside the sandbox as they could be\ncorrupted by an attacker, thus posing a security risk. Furthermore,\nexecutable pages require MAP_JIT on macOS, which causes fork() to become\nexcessively slow, in turn causing tests to time out.\nDue to this, the sandbox now requires the external code space.\n\nIn addition, this CL adds a max_page_permissions member to the\nVirtualAddressSpace API to make it possible to verify the maximum\npermissions of a subspace.\n\nBug: v8:10391\nChange-Id: Ib9562ecff6f018696bfa25143113d8583d1ec6cd\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3460406\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79119}\n","milestone":100},{"_id":"0bca3b45630495fe8b7b73f1844f8f1daf0080bb","author":{"name":"Harshil Jain","email":"twitharshil@gmail.com","time":"Fri Feb 04 08:15:03 2022"},"commit":"0bca3b45630495fe8b7b73f1844f8f1daf0080bb","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Feb 14 14:36:38 2022"},"message":"[message] Remove deprecated PrintCurrentStackTrace function which take a FILE*\n\nChange-Id: I598b3e7b0ad349c504d8729eb288d19b14319253\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3439336\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nAuto-Submit: Harshil Jain <twitharshil@gmail.com>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79074}\n","milestone":100},{"_id":"e08f7ae5580c28790b6cab5da216f10370e8cf3d","author":{"name":"Kevin Babbitt","email":"kbabbitt@microsoft.com","time":"Tue Feb 08 06:39:34 2022"},"commit":"e08f7ae5580c28790b6cab5da216f10370e8cf3d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Feb 11 17:54:03 2022"},"message":"Allow setting fatal error callbacks during Isolate initialization\n\nThis will enable proper reporting of OOM errors during snapshot\ndeserialization, for example https://crbug.com/614440#c27.\n\nBug: chromium:614440\nChange-Id: I226fb763d2630d0b21f7552070ed1a4cc222f69b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3445203\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Kevin Babbitt <kbabbitt@microsoft.com>\nCr-Commit-Position: refs/heads/main@{#79055}\n","milestone":100},{"_id":"05643c76f587793d1ebd185cd8435067a78d6c21","author":{"name":"Alex Turner","email":"alexmt@chromium.org","time":"Mon Feb 07 23:50:56 2022"},"commit":"05643c76f587793d1ebd185cd8435067a78d6c21","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Feb 08 16:41:31 2022"},"message":"Make empty V8DebuggerId ctor public\n\nThis will allow users to create invalid V8DebuggerIds, e.g. to handle\nerror cases.\n\nBug: v8:12528\nChange-Id: I6efbea934d444b520fc43531b910f4f80c718630\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3445742\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Alex Turner <alexmt@chromium.org>\nCr-Commit-Position: refs/heads/main@{#79000}\n","milestone":100},{"_id":"e3ca1f1a734a7ca31f139a128cfdd1bb743c9001","author":{"name":"Alex Turner","email":"alexmt@chromium.org","time":"Thu Feb 03 22:16:45 2022"},"commit":"e3ca1f1a734a7ca31f139a128cfdd1bb743c9001","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Feb 04 18:23:05 2022"},"message":"Add V8Inspector::uniqueDebuggerId method\n\nThis method returns the unique debugger ID for a v8::Context (i.e. the\nV8DebuggerID), serialized to a pair of int64_ts.\n\nBug: v8:12528\nChange-Id: Ib2cdda73447f8233f9afb773fed4a634d4618aef\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3369124\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Alex Turner <alexmt@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78958}\n","milestone":100},{"_id":"d3038386e88d296438abb351e46e3b18f2ebbc84","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Feb 04 14:05:20 2022"},"commit":"d3038386e88d296438abb351e46e3b18f2ebbc84","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Feb 04 15:38:17 2022"},"message":"api: Deprecate v8::TracedGlobal\n\nReplacement is v8::TracedReference in combination with v8::Global if a\ncallback is really needed.\n\nBug: v8:12603\nChange-Id: Iae48fee2e6588a594d430c5f3a71ff0b3e67e5b2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3439873\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78950}\n","milestone":100},{"_id":"e7f7c4bbdaae03622dbdc90a37fddd6d95e6bda3","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri Jan 28 10:21:09 2022"},"commit":"e7f7c4bbdaae03622dbdc90a37fddd6d95e6bda3","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jan 31 15:25:27 2022"},"message":"[sandbox] Store external pointer table indices shifted to the left\n\nThis guarantees that they are smaller than the maximum external pointer\ntable index when shifted to the right on load.\n\nBug: v8:10391\nChange-Id: I601f37fbb9640ee4b5215958afcc474c5e0eb9af\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3359631\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78873}\n","milestone":100},{"_id":"36707481ffa24d0ea398c647fa247f45298c4a17","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Wed Jan 26 16:40:44 2022"},"commit":"36707481ffa24d0ea398c647fa247f45298c4a17","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jan 27 14:03:56 2022"},"message":"[api] Advance API deprecation for methods last changed in v9.8\n\nPart I: V8_DEPRECATED_SOON => V8_DEPRECATED\n\nBug: v8:11165\nChange-Id: I1f7191436ea03d341a0adcb29c8e0c811a12c51d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3417434\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78812}\n","milestone":100},{"_id":"9cf4f1319d022b658cc8ab88ba117c39e9b2034b","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Jan 18 08:32:59 2022"},"commit":"9cf4f1319d022b658cc8ab88ba117c39e9b2034b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jan 26 17:30:21 2022"},"message":"[api] Advance API deprecation for methods last changed in v9.7\n\nBug: v8:11165\nChange-Id: I6d21b5ace124b6a47df983d5e3370d241f58f056\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3395880\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78785}\n","milestone":100},{"_id":"10a777ee7e8f535823872f51e9f9049e9ac01096","author":{"name":"legendecas","email":"legendecas@gmail.com","time":"Tue Jan 18 15:59:17 2022"},"commit":"10a777ee7e8f535823872f51e9f9049e9ac01096","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jan 25 18:10:57 2022"},"message":"[ShadowRealm] Part 1 - Skeleton\n\n1. Expose all the functions to empty builtins.\n2. Wire up the basic structure of ShadowRealm and internal slots.\n\nBug: v8:11989\nChange-Id: If7545fe18a74b2bd4b70a1a25776e41f03aaff89\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3195532\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Chengzhong Wu <legendecas@gmail.com>\nCr-Commit-Position: refs/heads/main@{#78757}\n","milestone":100},{"_id":"df3ebe5dcca41b88ae7801f816e1c97f272a0d77","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Jan 25 10:47:51 2022"},"commit":"df3ebe5dcca41b88ae7801f816e1c97f272a0d77","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jan 25 12:03:28 2022"},"message":"[sandbox] Shrink ExternalPointer_t to 32 bits\n\nWhen sandboxed external pointers are enabled, external pointers now only\nrequire 32 bits of storage space in a HeapObject. This CL does not shrink\nthe size of EmbedderDataSlots, which will happen in a follow-up CL.\n\nBug: v8:10391\nChange-Id: I3cf8b68c3b985cf806a45183717f50462a88c281\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3359629\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78754}\n","milestone":100},{"_id":"40db472a323b578944a7ead54137717f60dfc237","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Jan 21 08:39:06 2022"},"commit":"40db472a323b578944a7ead54137717f60dfc237","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jan 21 11:36:48 2022"},"message":"api: Remove deprecated write barrier API\n\nBug: v8:12356\nChange-Id: Ib9e99c8b05e24a8983c5ff3d36ca534a262738a0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3404774\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78717}\n","milestone":100},{"_id":"116ca00f206578800c05c6f864205386bf73ddf9","author":{"name":"Dominik Inführ","email":"dinfuehr@chromium.org","time":"Thu Jan 20 17:02:58 2022"},"commit":"116ca00f206578800c05c6f864205386bf73ddf9","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jan 20 19:08:49 2022"},"message":"[execution] Move v8::Locker::WasEverUsed() flag into Isolate\n\nSo far this flag was process-global, so if one isolate used v8::Locker\nall isolates were forced to use v8::Locker. With the shared isolate\nnow being a thing that routinely gets migrated between different\nthreads, all users of the shared isolate would be forced to use\nv8::Locker. So we now store that flag on the isolate such that using\nv8::Locker for the shared isolate does not affect other isolates.\n\nDeprecate v8::Locker::WasEverUsed() at the same time.\n\nBug: v8:11708\nChange-Id: I60531f084cc1b1b113620c46f5bed20511f52c26\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3401595\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78712}\n","milestone":100},{"_id":"4a3e41c5ca0b4a7b8c7a2956789f35e4ee7fde7d","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Jan 20 16:01:41 2022"},"commit":"4a3e41c5ca0b4a7b8c7a2956789f35e4ee7fde7d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jan 20 17:39:49 2022"},"message":"[sandbox] Implement GC for the external pointer table\n\nThe external pointer table is now managed by the GC, which marks entries\nthat are alive during major GC, then sweeps the table afterwards to free\nall dead entries and build a free list from them. For now, only major GCs\nare supported, Scavenger GCs do not interact with the external pointer table.\n\nIn more detail, garbage collection of the external pointer table works\nas follows:\n\n1. The external pointer table now reserves a large region of virtual\n   address space for its backing buffer and is then never reallocated,\n   only grown in place until the maximum size is reached.\n2. When the GC's marking visitor marks a HeapObject with an external\n   pointer as alive, it also marks the corresponding external pointer\n   table entry as alive. This can happen on a background thread.\n3. For that, it uses the MSB of each entry in the table to indicate\n   whether the entry has been marked or not. This works because the MSB\n   is always cleared during the AND-based type check performed when\n   accessing an external pointer.\n4. After marking, the external pointer table is swept while the mutator\n   is stopped. This builds an inline, singly-linked freelist of all\n   newly-dead and previously-free entries.\n5. When allocating an entry from the table, the first entry on the\n   freelist is used. If the freelist is empty, the table grows,\n   populating the freelist with the new entries.\n6. Every newly-allocated entry is marked as alive, and every store to an\n   existing entry also automatically marks that entry as alive (by also\n   setting the MSB). This simplifies the design of the table GC with\n   regards to concurrency (See ExternalPointerTable::Mark).\n\nBug: v8:10391\nChange-Id: I8877fdf5576af3761bde65298951bb09e601bd14\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3359625\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78708}\n","milestone":100},{"_id":"2eb253764fc1de6842c4f7c9d4de03bf74bab2d1","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Wed Jan 19 10:41:08 2022"},"commit":"2eb253764fc1de6842c4f7c9d4de03bf74bab2d1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jan 19 12:45:39 2022"},"message":"[rab/gsab] Re-enable serializing flags with ValueSerializer\n\nAlso:\n- Refactor the ValueSerializer tests using raw data, so that we test all\nvalid versions for each test (not only one hard-coded one)\n- Mark some tests as backwards compatibility tests, to make it less\nlikely that somebody updates them not realizing they are backwards\ncompatibility tests.\n\nBug: v8:11111, v8:12532\nChange-Id: I670849de07742c8d442249ef4f013781e4ee9255\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3386802\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78681}\n","milestone":99},{"_id":"1f53cbf1974e2114a11a9dd5c4d1d9e8c4fe9379","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Mon Jan 17 07:14:14 2022"},"commit":"1f53cbf1974e2114a11a9dd5c4d1d9e8c4fe9379","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jan 19 09:38:31 2022"},"message":"[inspector] Add Runtime#getExceptionDetails CDP method\n\nCDP has a \"ExceptionDetails\" structure that is attached to various\nCDP commands, e.g. \"Runtime#exceptionThrown\" or \"Runtime#evaluate\".\nThe stack trace in the \"ExceptionDetails\" structure is used in\nvarious places in DevTools. The information in the \"ExceptionDetails\"\nstructure is extracted from a v8::Message object. Message objects\nare normally created at the exception throw site and may augment\nthe error with manually inspecting the stack (both to capture a fresh\nstack trace in some cases, as well as to calculate location info).\n\nThe problem is that in some cases we want to get an \"ExceptionDetails\"\nstructure after the fact, e.g. when logging a JS \"Error\" object in\na catch block. To help in this case, this CL introduces a new\nCDP method \"Runtime#getExceptionDetails\" that behaves exactly as\nadvertised: It provides a populated \"ExceptionDetails\" structure\nfrom a JS Error object.\n\nR=bmeurer@chromium.org\n\nDoc: https://bit.ly/runtime-get-exception-details\nBug: chromium:1278650\nChange-Id: I084be10c1d852d3b7cac8d88e7f820e867be4722\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3337258\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78676}\n","milestone":99},{"_id":"0a61fa5184b480ee6d6c74c27bdbc2e198842f60","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Jan 18 08:39:21 2022"},"commit":"0a61fa5184b480ee6d6c74c27bdbc2e198842f60","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jan 18 10:33:01 2022"},"message":"[api] Deprecate Local<v8::Context> v8::Object::CreationContext()\n\nBug: v8:11165\nChange-Id: I7c00d2dc87b232b24c4760922936580347358778\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3395881\nAuto-Submit: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78663}\n","milestone":99},{"_id":"44a8a7d685f25c35da9872da7475e58e00923e28","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Wed Jan 12 11:43:40 2022"},"commit":"44a8a7d685f25c35da9872da7475e58e00923e28","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jan 17 11:34:28 2022"},"message":"Introduce v8::StackTrace::CurrentScriptNameOrSourceURL\n\nThis CL introduces a dedicated API to retrieve the current (w.r.t. the\nJS stack) script name or sourceURL. Currently, API clients will\ncollect multiple stack traces in increasing sizes to accomplish the\nsame goal. The new method walks the JS stack in the same way as the\nstack trace collection mechanic but doesn't create/allocate stack info\nor callsite objects along the way.\n\nR=bmeurer@chromium.org, yangguo@chromium.org\n\nDoc: https://bit.ly/v8-current-script-name\nBug: chromium:1286677\nChange-Id: Id53e4f04bf17349d34f3d581bc712b1f4aa055db\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3382818\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78645}\n","milestone":99},{"_id":"3cb4039cd1c1d6a5e06056e7688e41bc7427867f","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri Jan 14 01:56:25 2022"},"commit":"3cb4039cd1c1d6a5e06056e7688e41bc7427867f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jan 14 02:59:51 2022"},"message":"[string] Support shared strings in Value{Serializer,Deserializer}\n\nWhen FLAG_shared_string_table is true, postMessaging strings will share\ninstead of copy.\n\nNote that not all operations on shared strings are supported, and shared\nstrings may be slower than non-shared strings for some operations.\n\nBug: v8:12007\nChange-Id: I3462128e15410d2568868143571571b3025722c1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3277250\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78614}\n","milestone":99},{"_id":"87cf0bdddf10b0d896c2120ebcccf49687eff491","author":{"name":"Lei Zhang","email":"thestig@chromium.org","time":"Thu Dec 23 17:42:51 2021"},"commit":"87cf0bdddf10b0d896c2120ebcccf49687eff491","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jan 13 20:56:45 2022"},"message":"Remove many superfluous STL includes in headers.\n\nUse grep to check for obviously unneeded includes. e.g. headers that\ninclude <vector> but does not contain \"std::vector\".\n\nChange-Id: I43a9e9f01e072fd495918d28ca4cdad5cfa0294c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3354400\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Lei Zhang <thestig@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78613}\n","milestone":99},{"_id":"638993ae223651fead586e172c5486864aa4712a","author":{"name":"Nikolaos Papaspyrou","email":"nikolaos@chromium.org","time":"Thu Jan 13 18:16:22 2022"},"commit":"638993ae223651fead586e172c5486864aa4712a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jan 13 19:29:06 2022"},"message":"heap: Add total wall time for UMA events\n\nThe total wall time for GC reported to Blink is explicitly included in\nUMA events. For the C++ managed heap, it is equal to the sum of the four\nphases (mark, sweep, compact, weak). For the JS heap, it will be greater\nthan or equal to that sum in general.\n\nBug: chromium:1154636\nChange-Id: Id710702b8e9d8db5c8d1eb4917deb6b760a77306\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3386596\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Nikolaos Papaspyrou <nikolaos@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78611}\n","milestone":99},{"_id":"e784cbd12b383c349f4ed516bf7a7bfad6343468","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Thu Jan 13 13:06:59 2022"},"commit":"e784cbd12b383c349f4ed516bf7a7bfad6343468","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jan 13 13:57:06 2022"},"message":"Add comment to startup snapshot\n\nR=leszeks@chromium.org\n\nChange-Id: I8e5930d9ed946ae12cad98b3456055aefcef7d18\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3386593\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nAuto-Submit: Yang Guo <yangguo@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78601}\n","milestone":99},{"_id":"747cdba92b376db8b3fe3c6803dda99dfc3394d0","author":{"name":"Corentin Pescheloche","email":"cpescheloche@fb.com","time":"Thu Jan 06 12:28:35 2022"},"commit":"747cdba92b376db8b3fe3c6803dda99dfc3394d0","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jan 10 17:43:47 2022"},"message":"Shift EmbedderState values next to each other\n\nFor consistency with the other enums values, avoid gaps between\nEmbedderState values.\n\nBug: chromium:1263871\nChange-Id: I22c58700f292b007ced7c12db219f578f82d77d1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3370081\nAuto-Submit: Corentin Pescheloche <cpescheloche@fb.com>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78549}\n","milestone":99},{"_id":"406d65d3bc57f6eca7e1617833a2bd71b4806567","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Jan 04 14:12:02 2022"},"commit":"406d65d3bc57f6eca7e1617833a2bd71b4806567","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jan 04 15:50:08 2022"},"message":"[base] Add VirtualAddressSpace::AllocateGuardRegion\n\nPreviously, guard regions were created by allocating pages with\nPROT_NONE and relying on an allocation hint. This could fail however,\nfor example on Fuchsia (where it would allocate a VMO to back the guard\nregion) and possibly on Windows (where a placeholder mapping was\nreplaced by a \"real\" mapping).\n\nIntroducing an explicit VirtualAddressSpace::AllocateGuardRegion routine\nnow makes this operation more efficient and effectively guarantees that\nit cannot fail if used correctly: in a regular subspace, there is no\nneed to allocate anything when creating guard regions since the address\nspace reservation backing the subspace is guaranteed to be inaccessible\nwhen no pages are allocated in it.\n\nBug: chromium:1218005\nChange-Id: I6945f17616b6b8dad47241af96d4cb1f660e8858\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3366237\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78480}\n","milestone":99},{"_id":"ed7b66400e1c2d4acb9b8f7e1487e83fca16209b","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Wed Dec 29 10:50:01 2021"},"commit":"ed7b66400e1c2d4acb9b8f7e1487e83fca16209b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Dec 30 06:21:21 2021"},"message":"[inspector] Introduce v8::StackFrame::GetLocation() API.\n\nThis introduces a new `GetLocation()` method for `v8::StackFrame`s,\nwhich returns both line and column number at the same time (using the\nexisting `v8::Location` class). Since `v8::StackFrame` instances store\nonly the source position (per https://bit.ly/v8-stack-frame), we\ncurrently need to look up the source position in the Script's line table\ntwice, once when we request the line number, and another time when we\nrequest the column number.\n\nWith `GetLocation()` we perform only a single lookup in the Script's\nline table and return both line and column number at the same time. This\ncuts roughly 8% of the average execution time from the `standalone.js`\nbenchmark mentioned in crbug.com/1280519.\n\nBug: chromium:1280519, chromium:1278650, chromium:1069425\nBug: chromium:1077657, chromium:1283162\nDoc: https://bit.ly/v8-cheaper-inspector-stack-traces\nChange-Id: Ia3a0502990b6230363112a358b59875283399404\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3359628\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78452}\n","milestone":99},{"_id":"e608acf40addd844ad9df776a2e5b4ec7d207b5d","author":{"name":"Nikolaos Papaspyrou","email":"nikolaos@chromium.org","time":"Mon Dec 13 16:25:42 2021"},"commit":"e608acf40addd844ad9df776a2e5b4ec7d207b5d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Dec 20 16:57:02 2021"},"message":"heap: Migrate young GC cycle UMA metrics\n\nReport young generation GC statistics to the Recorder API.\nThese will be used by Blink to populate UMA histograms.\nExisting UMA reporting in V8 remains as is for now and will be removed\nin a followup.\n\nWith this CL, minor mark-compaction statistics are reported as part\nof V8.GC.Cycle.*.Young. Also V8.GCScavengeReason is migrated to\nV8.GC.Cycle.Reason.Young.\n\nThis CL goes together with:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/3320388\n\nBug: chromium:1154636\nChange-Id: Ia1030c80d4bc75ac6e176ed60f838929ddb9b20f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3320430\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Nikolaos Papaspyrou <nikolaos@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78416}\n","milestone":99},{"_id":"890b1866f12c4ee55a5cf97bea17342af5f19dac","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Thu Dec 16 10:49:52 2021"},"commit":"890b1866f12c4ee55a5cf97bea17342af5f19dac","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Dec 16 12:58:38 2021"},"message":"[inspector] Mark `Debugger.CallFrame.url` as deprecated.\n\nThis is the first step towards moving away from sending `url` with every\ncall frame when emitting the `Debugger.paused` event.\n\nBug: chromium:1270316, chromium:1271078\nChange-Id: I2f57f21e15bf908ffb53f5c7b5862d3efa329c86\nDoc: https://bit.ly/devtools-debugger-callframe-url\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3344946\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78392}\n","milestone":99},{"_id":"277fdd1de7110a889f6fd4c2da2ddfdf2f28416f","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Wed Dec 15 13:39:15 2021"},"commit":"277fdd1de7110a889f6fd4c2da2ddfdf2f28416f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Dec 15 17:09:36 2021"},"message":"V8 Sandbox rebranding\n\nThis CL renames a number of things related to the V8 sandbox.\nMainly, what used to be under V8_HEAP_SANDBOX is now under\nV8_SANDBOXED_EXTERNAL_POINTERS, while the previous V8 VirtualMemoryCage\nis now simply the V8 Sandbox:\n\nV8_VIRTUAL_MEMORY_CAGE => V8_SANDBOX\nV8_HEAP_SANDBOX => V8_SANDBOXED_EXTERNAL_POINTERS\nV8_CAGED_POINTERS => V8_SANDBOXED_POINTERS\nV8VirtualMemoryCage => Sandbox\nCagedPointer => SandboxedPointer\nfake cage => partially reserved sandbox\nsrc/security => src/sandbox\n\nThis naming scheme should simplify things: the sandbox is now the large\nregion of virtual address space inside which V8 mainly operates and\nwhich should be considered untrusted. Mechanisms like sandboxed pointers\nare then used to attempt to prevent escapes from the sandbox (i.e.\ncorruption of memory outside of it). Furthermore, the new naming scheme\navoids the confusion with the various other \"cages\" in V8, in\nparticular, the VirtualMemoryCage class, by dropping that name entirely.\n\nFuture sandbox features are developed under their own V8_SANDBOX_X flag,\nand will, once final, be merged into V8_SANDBOX. Current future features\nare sandboxed external pointers (using the external pointer table), and\nsandboxed pointers (pointers guaranteed to point into the sandbox, e.g.\nbecause they are encoded as offsets). This CL then also introduces a new\nbuild flag, v8_enable_sandbox_future, which enables all future features.\n\nBug: v8:10391\nChange-Id: I5174ea8f5ab40fb96a04af10853da735ad775c96\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3322981\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78384}\n","milestone":99},{"_id":"79a9d2eb34774163c5b2596418bf50196dc5df4a","author":{"name":"Corentin Pescheloche","email":"cpescheloche@fb.com","time":"Tue Dec 14 11:01:36 2021"},"commit":"79a9d2eb34774163c5b2596418bf50196dc5df4a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Dec 14 11:54:09 2021"},"message":"Fix destructor for EmbedderStateScope\n\nEmbedderState is forward declared in public header for\nEmbedderStateScope. Default std::unique_ptr's destructor needs a fully\ndefined class. Defining default destructor in implementation file fixes\nthis.\n\nBug: chromium:1263871\nChange-Id: I8ccc58f56a758927dc5d7a39387188185e7d3827\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3338697\nAuto-Submit: Corentin Pescheloche <cpescheloche@fb.com>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78363}\n","milestone":99},{"_id":"ce02d2f45250f01db43b3cf0e8a1e6df580dc860","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Wed Dec 08 16:03:44 2021"},"commit":"ce02d2f45250f01db43b3cf0e8a1e6df580dc860","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Dec 09 11:38:04 2021"},"message":"[api] Add LongTaskStats::v8_execute_us\n\nThe execute_us is now tied to the --slow-histograms flag.\nThis currently enabled on a small population as a persistent finch study\nwhich should give us enough coverage for now.\n\nDrive-by-fixes:\n- Rename counter: execute_precise() to execute()\n- Avoid Leave/Enter overhead in NestedTimedHistogramScope if the\n  histogram is not enabled\n- Only stop timers in debug mode for NestedTimedHistogramScope\n\nBug: chromium:1275056\nChange-Id: Id6a492bdd68edb5194cb191c7083829a9f90283f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3320431\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78318}\n","milestone":99},{"_id":"272cf914f0c5d5d8124d262f95359587d5248e50","author":{"name":"JianxiaoLuIntel","email":"jianxiao.lu@intel.com","time":"Wed Dec 08 00:51:59 2021"},"commit":"272cf914f0c5d5d8124d262f95359587d5248e50","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Dec 08 10:18:16 2021"},"message":"[heap] trace heap layout before and after gc\n\nChange-Id: Ic79f5829ae47cb4217d424aa6582f4686751ff1a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3299279\nAuto-Submit: Jianxiao Lu <jianxiao.lu@intel.com>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78287}\n","milestone":98},{"_id":"6e2078d659080a79eb217a174c4eb77c9d0902e6","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Sat Dec 04 00:06:11 2021"},"commit":"6e2078d659080a79eb217a174c4eb77c9d0902e6","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Dec 06 16:35:15 2021"},"message":"[string] Extend StringShape to query the shared bit\n\nRename StringShape::full_representation_tag to\nStringShape::representation_and_encoding_tag, since the full\nrepresentation tag now includes the shared bit.\n\nThere are no users of the new method in this CL; this is split out to\nmake subsequent shared string CLs smaller.\n\nBug: v8:12007\nChange-Id: Ic4ac0241fd9846241e85b4a094dfee6d201ba42b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3313428\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Patrick Thier <pthier@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78253}\n","milestone":98},{"_id":"2d087f237eadd78f5545548675642f013fdfe675","author":{"name":"Corentin Pescheloche","email":"cpescheloche@fb.com","time":"Fri Dec 03 20:48:09 2021"},"commit":"2d087f237eadd78f5545548675642f013fdfe675","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Dec 06 15:29:06 2021"},"message":"[profiler] Surface VM & Embedder State\n\nAdd APIs to surface VMState and new EmbedderState to CpuProfile samples.\n\nEmbedderState:\n* An EmbedderState is defined as a value uint8_t and a v8::context used\nfor filtering.\n* EmbedderStates are stack allocated by the embedder, construction and\ndestruction set/unset the state to the isolate thread local top.\n* A v8::context is used to filter states that are added to a CpuProfile,\nif the CpuProfile do not have a ContextFilter set or if contexts do not\nmatch, state defaults to Empty.\n\n* v8:StateTag is already propagated all the way to a Sample, simply add\nan API to surface it.\n\nVMState: \nChange-Id: I7eed08907360b99b0ad20ddcff59c95c7076c85e\nBug: chromium:1263871\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3188072\nAuto-Submit: Corentin Pescheloche <cpescheloche@fb.com>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78250}\n","milestone":98},{"_id":"a7cb30b0e976e1a2444d772c0db2048304359053","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri Dec 03 14:50:58 2021"},"commit":"a7cb30b0e976e1a2444d772c0db2048304359053","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Sat Dec 04 21:42:04 2021"},"message":"Introduce VirtualAddressSpace interface\n\nThis interface is meant to eventually replace the existing\nv8::PageAllocator interface. Beyond general refactoring of the\nPageAllocator APIs, the new interface now supports the concept of\n(contiguous) address space reservations, which previously had to be\nimplemented through page allocations. These reservations now make better\nuse of provided OS primitives on Fuchsia (VMARs) and Windows\n(placeholder mappings) and can be used to back many of the cages and\nvirtual memory regions that V8 creates.\n\nThe new interface is not yet stable and may change at any time without\ndeprecating the old version first.\n\nBug: chromium:1218005\nChange-Id: I295253c42e04cf311393c5dab9f8c06bd7451ce3\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3301475\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78235}\n","milestone":98},{"_id":"42ed4928cdd5d26e8808d23665bfb3164ee407f8","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Dec 02 09:45:48 2021"},"commit":"42ed4928cdd5d26e8808d23665bfb3164ee407f8","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Dec 02 17:07:15 2021"},"message":"Use CagedPointers for ArrayBuffer backing stores\n\nThis CL turns references to ArrayBuffer backing stores from\nJSArrayBuffers, JSTypedArrays, and JSDataViews into CagedPointers\nwhen those are enabled.\n\nCagedPointers cannot generally represent nullptr, as NULL usually lies\noutside the cage. As such, nullptr backing stores are replaced with a\nspecial empty backing store value, which, in the current implementation,\npoints to the end of the cage, right in front of the trailing guard\nregions. Due to this, it is no longer correct to compare a backing store\npointer against nullptr.\n\nBug: chromium:1218005\nChange-Id: I4a6c7a82aabb4debcb6bb2babe4035ba2da8e79f\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3244419\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78218}\n","milestone":98},{"_id":"138605e6313309911bc0dc3c5df25c32c43d6dfd","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Tue Nov 30 22:19:53 2021"},"commit":"138605e6313309911bc0dc3c5df25c32c43d6dfd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Dec 01 11:14:39 2021"},"message":"Fix MSVC C++17 build config\n\nMSVC doesn't define __cplusplus appropriately, so use _MSVC_LANG instead.\n\nBug: chromium:1274247\nChange-Id: I40ef9f42f4e55b3410f89ff23c228f1b1201c4ef\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3308423\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nAuto-Submit: Adam Klein <adamk@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78180}\n","milestone":98},{"_id":"38f97cae6bc93330b8ad916a3faefb8ec35352e1","author":{"name":"Anton Bikineev","email":"bikineev@chromium.org","time":"Tue Nov 30 11:20:16 2021"},"commit":"38f97cae6bc93330b8ad916a3faefb8ec35352e1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Dec 01 10:37:49 2021"},"message":"platform: Provide hooks for disabling allocation quarantining\n\nSome performance sensitive paths in V8 (compilation/json parsing) or\npaths with high allocation/freeing throughput can suffer from not being\nable to reuse recently freed allocations. These paths can also\nsignificantly increase the working set and cause large number of page\nfaults. For such paths (at least as an initial measure) we are planning\nto disable allocation quarantining.\n\nThe CL provides a way for the embedder to hook in *Scan functions that\ndisable/enable quarantining. It also disables *Scan for json parsing and\ncompilation jobs.\n\nBug: chromium:1249550\nChange-Id: I0274f66010435f3d4d091fe70fabcd20f46dc0d2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3306389\nAuto-Submit: Anton Bikineev <bikineev@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Anton Bikineev <bikineev@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78178}\n","milestone":98},{"_id":"44166c60910121cd0f6086699e3fee101a6e0a0c","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Nov 30 13:38:10 2021"},"commit":"44166c60910121cd0f6086699e3fee101a6e0a0c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Nov 30 14:30:38 2021"},"message":"[api] V8::Initialize cleanup\n\n- V8::Deprecate ShutdownPlatform in favor of V8::DisposePlatform\n- Rename i::V8::TearDown to i::V8::Dispose\n- Clean up i::V8::Initialize\n- Remove needless V8::Initialize() calls in cctests\n- Remove CcTest::DisableAutomaticDispose()\n- Add checks to Isolate::Allocate and Isolate::Dispose that there is\n  and active platform\n\nChange-Id: Iac84f9ade9d1781e9e8b8c88ea8fe74013f51c4a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3306482\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Manos Koukoutos <manoskouk@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78162}\n","milestone":98},{"_id":"f4e02f266b64f07ffda57e66936402a309bb6968","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Tue Nov 30 12:09:00 2021"},"commit":"f4e02f266b64f07ffda57e66936402a309bb6968","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Nov 30 13:01:31 2021"},"message":"[turbofan] Remove defn of constexpr vars for C++17\n\nIt's deprecated in C++17 and not needed (it was needed for static const,\nbut not for constexpr). It's needed in C++14, but can trigger\ndeprecation errors in C++17, so include it conditionally on __cplusplus.\n\nBug: chromium:1274247\nChange-Id: I92524f377bb92ac2aa008f15830920786a1c1432\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3308795\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nAuto-Submit: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78157}\n","milestone":98},{"_id":"25cd6f26b4fbbcaae0c09f850bee0e5df5b981ad","author":{"name":"legendecas","email":"legendecas@gmail.com","time":"Tue Nov 30 06:58:29 2021"},"commit":"25cd6f26b4fbbcaae0c09f850bee0e5df5b981ad","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Nov 30 10:39:28 2021"},"message":"[api] Inline ScriptOrigin methods as declaration\n\nThese methods were declared as inlined functions but the implementation\nwere moved to api.cc.\n\nChange-Id: I49071aca9c94e52930c362e85206dbda402ab29b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3308375\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78148}\n","milestone":98},{"_id":"d915b902547e72f30b0f3a7c635decd0679c6173","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Tue Nov 23 15:37:11 2021"},"commit":"d915b902547e72f30b0f3a7c635decd0679c6173","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Nov 24 07:33:54 2021"},"message":"[inspector] Remove unused `V8StackTrace::buildInspectorObject()`.\n\nThis is an unused overload, which doesn't add any value to keep around.\n\nBug: none\nChange-Id: I6e004e28f6ec8d4c8de87a1e86d331a624694659\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3297896\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78052}\n","milestone":98},{"_id":"b1a6f769830ddc49405d61b547b54d30767bc06d","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Tue Nov 23 15:19:45 2021"},"commit":"b1a6f769830ddc49405d61b547b54d30767bc06d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Nov 24 07:24:14 2021"},"message":"[inspector] Remove deprecated `V8StackTrace::topScriptIdAsInteger()`.\n\nBug: none\nChange-Id: I54e95555826c21e2625f43701ceb99a06c049a9a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3297895\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78051}\n","milestone":98},{"_id":"b0c6dd86bd563672dba6256f482dc5e145f094ae","author":{"name":"Hiroshige Hayashizaki","email":"hiroshige@chromium.org","time":"Tue Nov 23 13:32:18 2021"},"commit":"b0c6dd86bd563672dba6256f482dc5e145f094ae","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Nov 23 16:05:34 2021"},"message":"Allow compiled module invalidation at WasmStreaming::Finish()\n\nThis CL adds `can_use_compiled_module` parameter to\nWasmStreaming::Finish() that is used by Chromium\nhttps://chromium-review.googlesource.com/c/chromium/src/+/3282643\nto invalidate compiled module bytes after SetCompiledModuleBytes().\n\nBug: chromium:1260939\nChange-Id: Iebf0e8615c27c8622721777c664b06a53fb9ee91\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3297548\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Hiroshige Hayashizaki <hiroshige@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78044}\n","milestone":98},{"_id":"d315657ef5850541c0245142e792ca05b1c6dccc","author":{"name":"Omer Katz","email":"omerkatz@chromium.org","time":"Mon Nov 22 11:49:55 2021"},"commit":"d315657ef5850541c0245142e792ca05b1c6dccc","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Nov 22 23:15:28 2021"},"message":"heap: Mark EmbedderHeapTracer::GarbageCollectionForTesting as deprecated\n\nBug: v8:12407\nChange-Id: Iedf6154796423267fdb32125a408e580bb3c205b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3295349\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78030}\n","milestone":98},{"_id":"084de665de85453475e1c7ad02b9972270cf53fb","author":{"name":"Omer Katz","email":"omerkatz@chromium.org","time":"Mon Nov 22 11:44:33 2021"},"commit":"084de665de85453475e1c7ad02b9972270cf53fb","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Nov 22 12:32:48 2021"},"message":"heap: Introduce Isolate::RequestGarbageCollectionForTesting with stack state\n\nOnce CppHeap moves away from EmbedderHeapTracer, it can no longer be\nreturned by Isolate::GetEmbedderHeapTracer. Blink currently uses\nGetEmbedderHeapTracer to trigger GCs. This CL introduces a variant of\nIsolate::RequestGarbageCollectionForTesting to replace that.\n\nBug: v8:12407\nChange-Id: I099989f55291a0daab7d2051072dedddef58dd40\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3293413\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78015}\n","milestone":98},{"_id":"835ff2bcf5d834a9cc3921323f28606add61182b","author":{"name":"Ng Zhi An","email":"zhin@chromium.org","time":"Fri Nov 19 19:51:43 2021"},"commit":"835ff2bcf5d834a9cc3921323f28606add61182b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Nov 19 22:25:15 2021"},"message":"[wasm][api] Add WasmModuleObject::Compile api function\n\nThis is a partial revert of https://crrev.com/c/2033171 to bring back\nWasmModuleObject::Compile, that compiles Wasm bytes into a Wasm module.\n\nAlso adding a simple test to make sure the compile works.\n\nThere are some users, e.g. Cloudflare, Halide, see bug for more details.\n\nBug: v8:10461\nChange-Id: I199abea108311025decad793d2232a08bba05d38\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3292088\nCommit-Queue: Zhi An Ng <zhin@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/main@{#78003}\n","milestone":98},{"_id":"b295d0b0afe25286bcabbe74f6ebd0597dd1deac","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Thu Nov 11 16:24:50 2021"},"commit":"b295d0b0afe25286bcabbe74f6ebd0597dd1deac","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Nov 15 10:47:23 2021"},"message":"[api] Advance API deprecation for APIs last marked in v9.6\n\nBug: v8:11165\nChange-Id: I4b5160245d032f3b57167344b03553e5c0374ca2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3275564\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77895}\n","milestone":98},{"_id":"7126db2f51cb61481776e943a0827dea9073fd18","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Thu Nov 11 13:54:38 2021"},"commit":"7126db2f51cb61481776e943a0827dea9073fd18","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Nov 11 15:21:42 2021"},"message":"[api] Remove deprecated TraceObject::ArgValue::as_bool\n\nBug: v8:11165\nChange-Id: Iff70b6fcf1a68f330750afb5fb94787673de3bbb\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3275565\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77847}\n","milestone":98},{"_id":"821c2c17d24d2b804f5ba5feb2b61d2af1dda1b6","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Wed Nov 10 22:42:10 2021"},"commit":"821c2c17d24d2b804f5ba5feb2b61d2af1dda1b6","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Nov 10 23:55:47 2021"},"message":"[string] Add a is_shared bit to strings and String::Share\n\nThe is_shared bit bumps the number of reserved bits for Strings'\nInstanceType from 6 to 7. This has the side effect of shuffling the\nInstanceType enum values.\n\nThere are no users of this bit yet. This is steps 1-2 from the following\ndesign doc [1], in preparation for sharing internalized and\nin-place-internalizable strings.\n\n[1] https://docs.google.com/document/d/1c5i8f2EfKIQygGZ23hNiGxouvRISjUMnJjNsOodj6z0/edit?usp=sharing\n\nBug: v8:12007\nChange-Id: Idf11a6035305f0375b4f824ffd32a64f6b5b043b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3266017\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77831}\n","milestone":98},{"_id":"2b3df06b3141f0ae4703eacda96fda599d8d013f","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Nov 09 13:07:09 2021"},"commit":"2b3df06b3141f0ae4703eacda96fda599d8d013f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Nov 09 14:00:13 2021"},"message":"[api] Change host-defined options to v8::Data\n\nIn the future we will allow arbitrary objects as host-defined options.\nTo prepare the embedders for the upcoming changes we migrate the API\nto use v8::Data where possible.\n\nInternally we still use i::FixedArray with primitive values until the\nmigration to context-stored host-defined options is completed.\n\nNote: This CL also introduces a temporary cast and inheritance\nbetween Data and PrimitiveArray which will be removed again.\n\nBug: chromium:1244145\nChange-Id: I852d0d827708d32b6f3a6d03457234a006e2fd77\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3264285\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77795}\n","milestone":98},{"_id":"ee41a8a88652750a61ced0ed3be63fd2b2071096","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Nov 05 10:12:03 2021"},"commit":"ee41a8a88652750a61ced0ed3be63fd2b2071096","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Nov 08 18:06:24 2021"},"message":"api: Mark explicit write barrier methods as soon deprecated\n\nExplicit write barriers for internal fields are deprecated as they are\nautomatically emitted by V8.\n\nDepends on:\n  https://crrev.com/c/3263924\n\nBug: v8:12356\nChange-Id: I171ba5b42a6570ce52e2e2ea1b7c1029d5a8a3a7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3263888\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77772}\n","milestone":98},{"_id":"3a858a91faa5c0910769fe5072726b041923a6ab","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Thu Nov 04 13:01:05 2021"},"commit":"3a858a91faa5c0910769fe5072726b041923a6ab","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Nov 08 07:52:46 2021"},"message":"[base] Extend SmallVector for use with Zone storage\n\nThis CL adds an Allocator to SmallVector to control how dynamic\nstorage is managed. The default value uses the plain old C++\nstd::allocator<T>, i.e. acts like malloc/free.\n\nFor use with zone memory, one can pass a ZoneAllocator as follows:\n\n  // Allocates in zone memory.\n  base::SmallVector<int, kInitialSize, ZoneAllocator<int>>\n    xs(ZoneAllocator<int>(zone));\n\nNote: this is a follow-up to crrev.com/c/3240823.\n\nDrive-by: hide the internal `reset` function. It doesn't free the\ndynamic backing store; that's a surprise and should not be exposed to\nexternal use.\n\nChange-Id: I1f92f184924541e2269493fb52c30f2fdec032be\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3257711\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77755}\n","milestone":98},{"_id":"b9ddcbc86f76fb393e9343162348e976ae6d3a33","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Fri Nov 05 18:39:30 2021"},"commit":"b9ddcbc86f76fb393e9343162348e976ae6d3a33","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Nov 05 19:28:59 2021"},"message":"[fastcall] Enable float support on arm64 simulator\n\nThis CL adds support for handling calls to C functions with arbitrary\nsignatures on the arm64 simulator. It adds infrastructure for\nencoding the signature data from CallDescriptor and FunctionInfo\nclasses into a compact representation, stored in the simulator and\ncalled EncodedCSignature.\n\nDesign doc:\nhttps://docs.google.com/document/d/1ZxOF3GSyNmtU0C0YJvrsydPJj35W_tTJZymeXwfDxoI/edit\n\nThis CL is a follow up on the native support added in\nhttps://chromium-review.googlesource.com/c/v8/v8/+/3182232\nand is partially based on the previous attempt:\nhttps://chromium-review.googlesource.com/c/v8/v8/+/2343072\n\nBug: chromium:1052746\nChange-Id: I0991b47bd644b2fc2244c5eb923b085261f04765\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3060486\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77744}\n","milestone":98},{"_id":"f0e5e3b282f6fb24af0c2f6832a45c71e39e2fc2","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Fri Nov 05 13:53:39 2021"},"commit":"f0e5e3b282f6fb24af0c2f6832a45c71e39e2fc2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Nov 05 14:35:43 2021"},"message":"[api] Introduce new HostImportModuleDynamicallyCallback\n\nThe new callback does no longer use ScriptOrModule but rather gets the\nhost-defined options and the referrer name as separate arguments.\n\nThis brings us one step closer to deprecate ScriptOrModule and putting\nthe host-defined options in the script context.\n\n- Add v8::Data::IsFixedArray and cast helpers\n- Deprecate HostImportModuleDynamicallyWithImportAssertionsCallback soon\n- Add Script::Run entry point that explicitly takes host-defined\n  options (unused yet)\n\nBug: chromium:1244145\nChange-Id: I08bc92cfb3b79d840e766fb71b8d91d301f4399c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3263893\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77733}\n","milestone":98},{"_id":"a5700ffd5dd6ba0ffa4beef296cb362809de4723","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Nov 05 10:14:13 2021"},"commit":"a5700ffd5dd6ba0ffa4beef296cb362809de4723","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Nov 05 10:58:28 2021"},"message":"api: Advance deprecations for write barriers\n\nBug: v8:12165\nChange-Id: I47b92d71ef76e71b6bfbcc883e70f5b31bceedcb\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3263889\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77727}\n","milestone":98},{"_id":"0bf11af7e4a5c42454af697054f10c7fccf43714","author":{"name":"Corentin Pescheloche","email":"cpescheloche@fb.com","time":"Mon Nov 01 20:30:38 2021"},"commit":"0bf11af7e4a5c42454af697054f10c7fccf43714","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Nov 04 11:01:09 2021"},"message":"[api][profiler] Surface CpuProfiler memory in HeapCodeStatistics\n\nThe goal of the PR is to add to telemetry a metric estimating the space\noccupied by the codemap retained by a CpuProfiler and its underlying\nCodeObserver.\n\nThis change is motivated by the addition of kEagerLogger to CpuProfiler\nwhich when enabled let a CpuProfiler build a CodeMap without an active\nsession. This metric will help us understand better the space consumed\nby a profiler in that scenario and will also help detect memory leaks.\n\nBug: chromium:1241491\nChange-Id: Iadb1ed52b4c1ac70bc554942b4fa795cdf1212f3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3224567\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nAuto-Submit: Corentin Pescheloche <cpescheloche@fb.com>\nCr-Commit-Position: refs/heads/main@{#77703}\n","milestone":98},{"_id":"04a58fedd57dbf9d96b3ed3351ddef1eea1d1578","author":{"name":"Hiroshige Hayashizaki","email":"hiroshige@chromium.org","time":"Tue Nov 23 13:32:18 2021"},"commit":"04a58fedd57dbf9d96b3ed3351ddef1eea1d1578","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Dec 01 14:25:11 2021"},"message":"Merged: Allow compiled module invalidation at WasmStreaming::Finish()\n\nThis CL adds `can_use_compiled_module` parameter to\nWasmStreaming::Finish() that is used by Chromium\nhttps://chromium-review.googlesource.com/c/chromium/src/+/3282643\nto invalidate compiled module bytes after SetCompiledModuleBytes().\n\n(cherry picked from commit b0c6dd86bd563672dba6256f482dc5e145f094ae)\n\nBug: chromium:1260939\nChange-Id: I28554ed79ed56349fa38517ed03785e0c8146b4d\nNo-Try: true\nNo-Presubmit: true\nNo-Tree-Checks: true\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3306788\nCommit-Queue: Hiroshige Hayashizaki <hiroshige@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/branch-heads/9.6@{#36}\nCr-Branched-From: 0b7bda016178bf438f09b3c93da572ae3663a1f7-refs/heads/9.6.180@{#1}\nCr-Branched-From: 41a5a247d9430b953e38631e88d17790306f7a4c-refs/heads/main@{#77244}\n","milestone":96},{"_id":"d78d8b7d1c4a39bd61947eaf14cade01f486f0f9","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Sep 28 10:18:48 2021"},"commit":"d78d8b7d1c4a39bd61947eaf14cade01f486f0f9","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Oct 06 07:54:37 2021"},"message":"[api] Rename v8::Locker::IsActive to v8::Locker::WasEverUsed\n\nIsActive is misleading as the current implementation forces to use\nv8::Locker for all Isolate access once any Locker has been used in\nthe same process.\n\nBug: chromium:1240851\nChange-Id: Ieb2cfa352313b6f2cbec1bafdbc94a3fc718f3d6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3190093\nReviewed-by: Dan Elphick <delphick@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77243}\n","milestone":96},{"_id":"0461ccba27eaf48ac9b5ad0e2fda9061f8f0fbed","author":{"name":"Yuki Shiino","email":"yukishiino@chromium.org","time":"Wed Sep 29 15:11:58 2021"},"commit":"0461ccba27eaf48ac9b5ad0e2fda9061f8f0fbed","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Oct 01 16:39:47 2021"},"message":"api: Expose initial_array_prototype to public\n\nThere is a demand of access to %Array.prototype% in Blink in\norder to implement Web IDL observable array type.\n\nBug: chromium:1201744\nChange-Id: I31ca5cd746f3a2eab8bd291741408a1dea17c122\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3194025\nAuto-Submit: Yuki Shiino <yukishiino@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77200}\n","milestone":96},{"_id":"582f8021d4ad1f870c5968c67df75aff633aea09","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Thu Sep 30 12:52:49 2021"},"commit":"582f8021d4ad1f870c5968c67df75aff633aea09","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Oct 01 09:19:56 2021"},"message":"[fastcall] Enhance FastApiTypedArray with aligned data getter\n\nThis CL adds a getStorageIfAligned method to obtaining a typed pointer\nto the underlying TypedArray data, if the pointer to it is properly\naligned.\n\nBug: chromium:1052746\nChange-Id: Ie8cb3438135b0da060e2b42ec71bba0e72ae4f5e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3195875\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77184}\n","milestone":96},{"_id":"6247f98df58cd686a02e8f418144542bb7e37db9","author":{"name":"Austin Eng","email":"enga@chromium.org","time":"Wed Sep 29 15:42:36 2021"},"commit":"6247f98df58cd686a02e8f418144542bb7e37db9","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Sep 30 15:05:17 2021"},"message":"[fastcall] Match template arguments to TryCopyAndConvertArrayToCppBuffer\n\nBug: chromium:1052746\nChange-Id: I368ef855f711ca09c1a34b2be6e9bf72e6a7310c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3193873\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Austin Eng <enga@chromium.org>\nAuto-Submit: Austin Eng <enga@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77174}\n","milestone":96},{"_id":"88c43927a9e8db2d8aaf09257f3dd037276e6b94","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Thu Sep 23 10:39:20 2021"},"commit":"88c43927a9e8db2d8aaf09257f3dd037276e6b94","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Sep 23 13:15:10 2021"},"message":"[include] Add TryCatch and Extension to v8-forward.h\n\nBug: v8:11965\nChange-Id: Ifa8946b28aad681bf3a13861db8f02d8e1a51730\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3178960\nAuto-Submit: Dan Elphick <delphick@chromium.org>\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77014}\n","milestone":96},{"_id":"e262e1cb4a0f9ab0051eb981a01dc1e66c0b4125","author":{"name":"Anton Bikineev","email":"bikineev@chromium.org","time":"Tue Sep 21 18:51:40 2021"},"commit":"e262e1cb4a0f9ab0051eb981a01dc1e66c0b4125","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Sep 23 12:45:52 2021"},"message":"[zone] Provide a way to configure allocator for zone backings\n\nThe CL provides a way for the embedder to hook in a special malloc-like\nallocator that will be used for zone allocations.\n\nAn alternative approach would be to use weak functions with branches,\nchecking whether the functions were available at link-time. Those\nbranches could be optimized away with LTOs, so they would essentially\nbe free. However, the weak function approach is not portable (e.g.\nthere is no easy way to emulate it with msvc). The approach can be\nrevisited if indirect call turns out to be expensive (e.g. on hardware\nwith weak branch target predictors).\n\nThe CL is a prerequisite for running PCScan in the renderer process.\n\nBug: chromium:1249550\nChange-Id: I221dcb2486c13e8e6e6761839ba391978319bde4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3172760\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Anton Bikineev <bikineev@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77012}\n","milestone":96},{"_id":"ab836859d964d03ec43de9e7d0096c4ebf6ab64c","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Wed Sep 22 09:03:54 2021"},"commit":"ab836859d964d03ec43de9e7d0096c4ebf6ab64c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Sep 23 05:13:43 2021"},"message":"[api] Remove deprecated HostImportModuleDynamicallyCallback\n\nDeprecation happend in v9.4\n\nBug: v8:11165\nChange-Id: I7a28a9c50c25dbaad91cf254b9153154065108b9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3173678\nAuto-Submit: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77002}\n","milestone":96},{"_id":"2e9c972b2ac94e4ce881a93228f089b4d2bca9df","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Sep 21 14:42:02 2021"},"commit":"2e9c972b2ac94e4ce881a93228f089b4d2bca9df","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Sep 21 17:13:59 2021"},"message":"Expose the size of the virtual memory cage\n\nThis CL exposes the size of the virtual memory cage to the embedder\nthrough V8::GetVirtualMemoryCageSizeInBytes(). This will for example be\nuseful to collect metrics about the cage reservation, such as how\nfrequently it fails, in the future. While collecting these metrics\ndirectly in V8 would also be possible, it would require access to an\nIsolate, which is not yet available when the cage is initialized. As\nsuch, it is easier to enable the embedder to collect these metrics.\n\nBug: chromium:1218005\nChange-Id: Ie9c9ca7d1cd158ec024be6ab2418f50083b06d6e\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3172762\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76969}\n","milestone":96},{"_id":"40a21f03f2eab3b1491b5ec66989a5984758e947","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Sep 14 13:19:43 2021"},"commit":"40a21f03f2eab3b1491b5ec66989a5984758e947","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Sep 21 09:28:18 2021"},"message":"[iwyu] Reduce includes of <ostream> header\n\nUse <iosfwd> where possible, in particular in public headers\n(include/v8-*.h).\n\nR=cbruni@chromium.org\n\nBug: v8:11879\nChange-Id: I9d6095e6385229763d667f5064a794d67952b2b0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3160517\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76956}\n","milestone":96},{"_id":"95ca07c895045570cb2121bfdcd04fe60440ce6b","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Mon Sep 20 15:14:23 2021"},"commit":"95ca07c895045570cb2121bfdcd04fe60440ce6b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Sep 20 19:21:21 2021"},"message":"Reduce the size of the virtual memory cage if necessary\n\nAt least for the initial rollout, we will gracefully handle cage\nreservation failures by shrinking the size of the cage until the\nreservation succeeds or the size drops below the mimimum cage size. This\nwill allow collecting statistics on how often cage reservation failures\noccur in practice for different cage sizes, which will in turn influence\nthe decision on how to handle them in the future.\n\nBug: chromium:1218005\nChange-Id: Ica58951ba51ac01bc2c387b34dfc8d9051ed4d75\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3168347\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76948}\n","milestone":96},{"_id":"06af754cea8006e0a802655250c129dc8e9cdce0","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Mon Sep 20 13:29:46 2021"},"commit":"06af754cea8006e0a802655250c129dc8e9cdce0","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Sep 20 19:18:27 2021"},"message":"[isolate-data] Split builtin tables into tiers\n\n.. for more efficient access to builtins from generated code.\n\nRoot-relative accesses tend to be faster and produce more compact\ncode when the root-relative offset is small. IsolateData contains\na few large tables (roots, external references, builtins), resulting\nin very large offsets in general.\n\nThis CL starts by splitting the builtin table into tiers: tier 0\nis a minimal set of perf-critical builtins that should be cheap to\naccess. The offset to tier 0 builtins is guaranteed to be small.\n\nThe full builtin table also remains in IsolateData for occasions in\nwhich we need to lookup builtins by index.\n\nIn future work, we can also split external references and roots into\ntiers.\n\nOn x64, this reduces deopt exit sizes from 7 to 4 bytes and from 12\nto 9 bytes (dynamic map checks / EagerWithResume deopts).\n\nBug: v8:12203,v8:8661\nChange-Id: I5a9ed22b0e00682aca1abcf15892ae1458dbdd70\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3162142\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76947}\n","milestone":96},{"_id":"b3d9ba8156396fb6fbac38bccac0b404f9146e25","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Sep 16 13:56:38 2021"},"commit":"b3d9ba8156396fb6fbac38bccac0b404f9146e25","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Sep 17 09:38:35 2021"},"message":"Simplify the V8VirtualMemoryCage implementation\n\nInstead of explicitely splitting the cage into two separate regions, we\nnow just create a single BoundedPageAllocator to manage the entire\naddress range of the cage, then allocate the first 4GB for the pointer\ncompression cage.\n\nBug: chromium:1218005\nChange-Id: I02c53ca8b6dda9074ae6caccc74c32bd6271d4d2\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3162044\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76900}\n","milestone":96},{"_id":"6ff9c6869e5e3f4522c6d6742a046cfb79893545","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Sat Sep 11 09:26:54 2021"},"commit":"6ff9c6869e5e3f4522c6d6742a046cfb79893545","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Sep 16 18:52:28 2021"},"message":"[fastcall] Refactor TryCopyAndConvertArrayToCppBuffer\n\nRefactor TryCopyAndConvertArrayToCppBuffer to avoid using a CTypeInfo*\npointer as template argument. Use instead a uint32 encoded value\nsufficient to reconstruct the CTypeInfo.\n\nBug: v8:11739\nChange-Id: I74052e59b3fa5ebed00cdb938504ba1947d959d7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3138832\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76887}\n","milestone":96},{"_id":"d407af0de1c32e78ea7468d3797c458e3edbc846","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Wed Sep 15 15:21:51 2021"},"commit":"d407af0de1c32e78ea7468d3797c458e3edbc846","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Sep 16 10:59:01 2021"},"message":"[include] Fix include guard to v8-forward.h\n\nChange include guard to INCLUDE_V8_FORWARD_H_ from\nINCLUDE_V8_LOCAL_HANDLES_H_.\n\nBug: v8:11965\nChange-Id: I7a1a2fb3b5441b8f9cd733f89d19ccd5869c2287\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3162051\nAuto-Submit: Dan Elphick <delphick@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76866}\n","milestone":96},{"_id":"4a02c06b5318f5aaac2929c8c552c59eba30d0ee","author":{"name":"Darshan Sen","email":"raisinten@gmail.com","time":"Mon Sep 13 04:20:04 2021"},"commit":"4a02c06b5318f5aaac2929c8c552c59eba30d0ee","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Sep 13 10:18:13 2021"},"message":"[message] Print to a std::ostream from PrintCurrentStackTrace()\n\nSigned-off-by: Darshan Sen <raisinten@gmail.com>\nChange-Id: I51650e87261c817d6a58a34d56920b6fb8c1e281\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3112985\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76788}\n","milestone":96},{"_id":"2149ccd59ed4717fc3ae048dee8bfdb695c65dd9","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Mon Sep 06 15:21:38 2021"},"commit":"2149ccd59ed4717fc3ae048dee8bfdb695c65dd9","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Sep 07 12:58:30 2021"},"message":"[include] Remove v8-script.h include from v8-inspector.h\n\nRemoves include now that chrome is not transitively including the header\nvia v8-inspector.h.\n\nBug: v8:11965\nChange-Id: Ice039f54f2b97e6fba8765c5220d3145c10ba073\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3141585\nAuto-Submit: Dan Elphick <delphick@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76693}\n","milestone":95},{"_id":"e84ac8bc3b3864a844a22544c17bc259723a245d","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Aug 24 19:12:19 2021"},"commit":"e84ac8bc3b3864a844a22544c17bc259723a245d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Aug 25 09:52:38 2021"},"message":"[sandbox] Disallow ArrayBuffers outside the VM Cage\n\nIn a follow-up CL, the backing stores will, when the sandbox is enabled,\nbe referenced from V8 objects through offsets rather than raw pointers.\nFor that to work, all backing stores must be located inside the virtual\nmemory cage. This CL prepares for that.\n\nBug: chromium:1218005\nChange-Id: Ibb989626ed7094bd4f02ca15464539f4e2bda90f\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3114136\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76486}\n","milestone":95},{"_id":"f733008ed60fd9ebcd330ae7f3b7012795b4363b","author":{"name":"Liviu Rau","email":"liviurau@chromium.org","time":"Tue Aug 24 14:20:06 2021"},"commit":"f733008ed60fd9ebcd330ae7f3b7012795b4363b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 24 15:05:13 2021"},"message":"Make autoroll account owner of auto-updated file\n\nRelanding https://crrev.com/c/3071212\n\nBug: v8:12049\nChange-Id: If7bb3f9f6d9da05eee3d3e8ec355bc9d4e987ea3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3116251\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCommit-Queue: Liviu Rau <liviurau@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76464}\n","milestone":95},{"_id":"d1b27019d3bf86360ea838c317f8505fac6d3a7e","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Fri Aug 20 14:54:26 2021"},"commit":"d1b27019d3bf86360ea838c317f8505fac6d3a7e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 23 09:35:06 2021"},"message":"[include] Split out v8.h\n\nThis moves every single class/function out of include/v8.h into a\nseparate header in include/, which v8.h then includes so that\nexternally nothing appears to have changed.\n\nEvery include of v8.h from inside v8 has been changed to a more\nfine-grained include.\n\nPreviously inline functions defined at the bottom of v8.h would call\nprivate non-inline functions in the V8 class. Since that class is now\nin v8-initialization.h and is rarely included (as that would create\ndependency cycles), this is not possible and so those methods have been\nmoved out of the V8 class into the namespace v8::api_internal.\n\nNone of the previous files in include/ now #include v8.h, which means\nif embedders were relying on this transitive dependency then it will\ngive compile failures.\n\nv8-inspector.h does depend on v8-scripts.h for the time being to ensure\nthat Chrome continue to compile but that change will be reverted once\nthose transitive #includes in chrome are changed to include it directly.\n\nFull design:\nhttps://docs.google.com/document/d/1rTD--I8hCAr-Rho1WTumZzFKaDpEp0IJ8ejZtk4nJdA/edit?usp=sharing\n\nBug: v8:11965\nChange-Id: I53b84b29581632710edc80eb11f819c2097a2877\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3097448\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76424}\n","milestone":95},{"_id":"e7f4c2a15a8da67421e06dc1d7b2f199c4680130","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Aug 17 08:15:29 2021"},"commit":"e7f4c2a15a8da67421e06dc1d7b2f199c4680130","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Aug 18 09:42:39 2021"},"message":"[api] Make JSStackComparableAddress private\n\nThis is an internal property that should not be used publicly.\nThe following methods are going to be deprecated:\n- v8::TryCatch::JSStackComparableAddress\n- v8::BackupIncumbentScope::JSStackComparableAddress\n\nChange-Id: Iaecfdece4660eaf1aef88121ff0f0c501c0ced5b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3097451\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76363}\n","milestone":95},{"_id":"ffa4cda65ca38e57cae9c35b3c0db6f97b063870","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Tue Aug 17 11:35:45 2021"},"commit":"ffa4cda65ca38e57cae9c35b3c0db6f97b063870","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Aug 18 07:34:19 2021"},"message":"[inspector] Add nonIndexedPropertiesOnly to Runtime.getProperties.\n\nThis introduces a new, optional `nonIndexedPropertiesOnly` flag to the\n`Runtime.getProperties` inspector request, which tells the inspector to\nonly report properties whose name is not an (typed) array index. This is\nto support retrieving all properties except for the indexed ones when\nthe DevTools front-end decides to use the array bucketing mechanism.\nPreviously the DevTools front-end had some quite complicated logic in\nplace to simulate this via injected JavaScript, but that logic didn't\npick up internal properties and was also interfering with the inherited\naccessor mechanism. With this new flag, it's straight-forward to\nimplement the correct behavior in the DevTools front-end.\n\nThe corresponding devtools-frontend CL is https://crrev.com/c/3099011.\n\nBefore: https://imgur.com/hMX6vaV.png\nAfter: https://imgur.com/MGgiuJQ.png\nBug: chromium:1199701\nChange-Id: Iacbe9756ed8a2e6982efaebe1e7c606d37c05379\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3099686\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Philip Pfaffe <pfaffe@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/main@{#76360}\n","milestone":95},{"_id":"f5634b56b583e149f79aad46312aed5552a8e3af","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Aug 17 13:42:11 2021"},"commit":"f5634b56b583e149f79aad46312aed5552a8e3af","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 17 17:24:05 2021"},"message":"[sandbox] Don't use external pointer table for ArrayBuffers\n\nArrayBuffer backing stores will instead use the virtual memory cage and\nbe referenced through offsets rather than pointers when the sandbox is\nenabled. This will be implemented in an independent CL.\n\nBug: v8:10391\nChange-Id: Icc9781003e53c76dbbf4c84ee165151e4182da4b\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3086458\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76348}\n","milestone":95},{"_id":"9d14f87da379f4cbffdd1ead0b0cee7cbbca3c6b","author":{"name":"Daniel Bevenius","email":"daniel.bevenius@gmail.com","time":"Thu Jul 16 10:37:59 2020"},"commit":"9d14f87da379f4cbffdd1ead0b0cee7cbbca3c6b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 16 14:05:22 2021"},"message":"[v8] use GetDataFromSnapshotOnce in AddData doc\n\nThis commit updates the comment for the AddData methods which currently\nrefer to GetDataFromSnapshot, and changes them to\nGetDataFromSnapshotOnce instead.\n\nChange-Id: Id09d187eccf645338e2c75b8b692c15a904c8357\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2301929\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76310}\n","milestone":95},{"_id":"816e9fa3b995830c8d4d64a38ca381b30e2b2828","author":{"name":"Yu Yin","email":"xwafish@gmail.com","time":"Wed Aug 11 11:54:59 2021"},"commit":"816e9fa3b995830c8d4d64a38ca381b30e2b2828","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 16 13:05:19 2021"},"message":"[LOONG64] Add LoongArch64 backend\n\nBug: v8:12008\nChange-Id: I2e1d918a1370dae1e15919fbf02d69cbe48f63bf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3089095\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76308}\n","milestone":95},{"_id":"a3b2c4ec810d7fa52490ea78bac979035659b2df","author":{"name":"Ng Zhi An","email":"zhin@chromium.org","time":"Thu Aug 12 17:16:26 2021"},"commit":"a3b2c4ec810d7fa52490ea78bac979035659b2df","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Aug 12 22:46:53 2021"},"message":"[wasm][diagnostics] Support WasmCode in gdb JIT integration\n\n- Add new enum WASM_CODE to JitCodeEvent::CodeType\n- Use AddressRegion instead of AddressRange (remove the latter)\n- Change CodeDescription constructor to take an AddressRegion,\n  both JIT_CODE and WASM_CODE use this\n- Add a simple mjsunit test that sets --gdbjit to check that\n  we don't crash.\n- Add a api test for adding WASM_CODE\n\nBug: v8:11908\nChange-Id: I6e87fadc2df67978144d78caf9800c3982bc3705\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3067754\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Zhi An Ng <zhin@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76271}\n","milestone":95},{"_id":"8581adaee602aa31f7480f26a008914c56174fde","author":{"name":"Samuel Groß","email":"saelo@google.com","time":"Wed Aug 11 14:18:28 2021"},"commit":"8581adaee602aa31f7480f26a008914c56174fde","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Aug 11 16:13:42 2021"},"message":"Introduce v8_enable_virtual_memory_cage\n\nWhen this is enabled, v8 reserves a large region of virtual address\nspace during initialization, at the start of which it will place its 4GB\npointer compression cage. The remainder of the cage is used to store\nArrayBuffer backing stores and WASM memory buffers. This will later\nallow referencing these buffers from inside V8 through offsets from the\ncage base rather than through raw pointers.\n\nBug: chromium:1218005\nChange-Id: I300094b07f64985217104b14c320cc019f8438af\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3010195\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Samuel Groß <saelo@google.com>\nCr-Commit-Position: refs/heads/master@{#76234}\n","milestone":95},{"_id":"417dee4d1b0f967e3cac360a0b012decbc9f6908","author":{"name":"Hiroshige Hayashizaki","email":"hiroshige@chromium.org","time":"Tue Nov 23 13:32:18 2021"},"commit":"417dee4d1b0f967e3cac360a0b012decbc9f6908","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Dec 01 14:24:09 2021"},"message":"Merged: Allow compiled module invalidation at WasmStreaming::Finish()\n\nThis CL adds `can_use_compiled_module` parameter to\nWasmStreaming::Finish() that is used by Chromium\nhttps://chromium-review.googlesource.com/c/chromium/src/+/3282643\nto invalidate compiled module bytes after SetCompiledModuleBytes().\n\n(cherry picked from commit b0c6dd86bd563672dba6256f482dc5e145f094ae)\n\nBug: chromium:1260939\nChange-Id: I462df0e25fbc693f7e7114e6bcfe2a01dc60beba\nNo-Try: true\nNo-Presubmit: true\nNo-Tree-Checks: true\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3306787\nCommit-Queue: Hiroshige Hayashizaki <hiroshige@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/branch-heads/9.7@{#28}\nCr-Branched-From: 49162da459e2ca1f078389a84f0bbfcc7fed7a2b-refs/heads/9.7.106@{#1}\nCr-Branched-From: a7e9b8f0a4637caad6fcf27be999b97f49b6ac3d-refs/heads/main@{#77674}\n","milestone":97},{"_id":"36cff05fea5f63af76ce5f85721b41f64088bb45","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Nov 02 17:14:59 2021"},"commit":"36cff05fea5f63af76ce5f85721b41f64088bb45","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Nov 02 22:11:29 2021"},"message":"TracedReference: Fix MSVC compile errors\n\n- Fix definition and declaration of noexcept methods not matching\n- Disable test using deprecated APIs. Only having clang coverage is\n  okay here.\n\nChange-Id: I412d0b0087b2858fb72b0365b94b82ebc13462de\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3256693\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77665}\n","milestone":97},{"_id":"6fbb9eb495a08723d97a3fd73c3c1256fb9b1bd2","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Nov 02 12:49:24 2021"},"commit":"6fbb9eb495a08723d97a3fd73c3c1256fb9b1bd2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Nov 02 14:16:02 2021"},"message":"api: Mark TracedReference move ops as noexcept\n\nBug: v8:12165\nChange-Id: If1e30400363229048a47ea91d6ec86d2df35d8aa\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3257545\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77655}\n","milestone":97},{"_id":"afd1554963d2bcb5de8adaf3a5bda10a8223bb07","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Fri Oct 29 12:51:58 2021"},"commit":"afd1554963d2bcb5de8adaf3a5bda10a8223bb07","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Oct 29 13:36:07 2021"},"message":"Introduce CagedPointer\n\nA CagedPointer is guaranteed to point into the Virtual Memory Cage and\nwill for example be used for ArrayBuffer backing stores when the heap\nsandbox is enabled. In the current implementation, CagedPointers are\nstored as offsets from the cage base, shifted to the left. Because the\ncage base address is usually available in a register, accessing a\nCagedPointer is very efficient, requiring only an additional shift and\nadd operation.\n\nBug: chromium:1218005\nChange-Id: Ifc8c088e3862400672051a8c52840514dee2911f\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3123417\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77614}\n","milestone":97},{"_id":"8e364522463bc76268c814a5a72098550574443e","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Fri Oct 29 08:59:38 2021"},"commit":"8e364522463bc76268c814a5a72098550574443e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Oct 29 11:32:27 2021"},"message":"[api] Add v8::Isolate::IsCurrent() method\n\nAdd a helper method for isolate == v8::Isolate::TryGetCurrent();\n\nBug: v8:12346\nChange-Id: Ibbd1ce1865b0092c8dbcfad5a3bad99fb5858980\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3251173\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nCommit-Queue: Victor Gomes <victorgomes@chromium.org>\nAuto-Submit: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77609}\n","milestone":97},{"_id":"e5a509049ebd519c5e519d677e7b3d65bce05bdf","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Oct 28 11:06:00 2021"},"commit":"e5a509049ebd519c5e519d677e7b3d65bce05bdf","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Oct 28 12:00:32 2021"},"message":"api: Provide write barrier in TracedReferenceBase\n\nTracedReferenceBase use (traced) global handles to implement the\nreferencs. Provide a write barrier in the corresponding handle\nmethods. Doing so\n- avoids bugs by having embedders taking care of write barrier\n  management.\n- speeds up the barrier as it is better integrated in the handle\n  methods.\n\nDrive-by: We don't need write barriers on initializating stores.\n\nBug: v8:12165\nChange-Id: Ie49cc3783aeed576fd46c957c473c61362fefbf2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3247039\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77593}\n","milestone":97},{"_id":"dff140dd25eeec96132e4b303c9962d04190869e","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Thu Oct 21 12:46:55 2021"},"commit":"dff140dd25eeec96132e4b303c9962d04190869e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Oct 27 10:12:23 2021"},"message":"[fastcall] Expose CTypeInfoBuilder publicly\n\nThis CL exposes the helper class publicly to facilitate sequences\nimplementation, as discussed in\nhttps://chromium-review.googlesource.com/c/chromium/src/+/3111815.\n\nBug: chromium:1052746\nChange-Id: I3f3c24412c022014fc15b563201a63ee0691f6bc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3236549\nAuto-Submit: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77568}\n","milestone":97},{"_id":"78387ca75dc95e39118805fa72e52aea12a37a66","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Oct 26 13:36:11 2021"},"commit":"78387ca75dc95e39118805fa72e52aea12a37a66","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Oct 27 07:19:51 2021"},"message":"[api] Deprecate v8::ScriptCompiler::CompileFunctionInContext\n\n- Introduce v8::ScriptCompiler::CompileFunction\n- Deprecate v8::ScriptCompiler::CompileFunctionInContext\n- Add v8::Function::GetUnboundScript\n- Add v8::Script::GetResourceName\n\nThe ScriptOrModule out-parameter is only used by NodeJS since we don't\nallow arbitrary objects has host-defined options and they need a way to\nkeep the options alive.\n\nThis CL deprecates the out-parameter and adds helper methods to\naddress the most common use-cases.\n\nThe final fix still requires more fundamental changes on how host-defined\noptions are handled.\n\nBug: chromium:1244145\nChange-Id: Id29de53521ad626c41391b8300146ee37a1b8a51\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3245117\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nAuto-Submit: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77564}\n","milestone":97},{"_id":"91475f958a044bf756314e43a4601b4f09abfe4b","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Oct 26 13:46:01 2021"},"commit":"91475f958a044bf756314e43a4601b4f09abfe4b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Oct 27 07:18:13 2021"},"message":"[api] Add v8::Object::GetCreationContextChecked\n\nUsing v8::Object::GetCreationContext().ToLocalChecked() causes needless\nbinary size regression on android due to the additional call after\nmigrating to the non-deprecated GetCreationContext API.\n\nBug: chromium:1166077, v8:11451, v8:11165\nChange-Id: Ic5e2aada4d47392c5d61b419c19b5bcdbf869f0b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3244411\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77563}\n","milestone":97},{"_id":"8678fc629d38800401ae1c510d6439b666a5131f","author":{"name":"Kim-Anh Tran","email":"kimanh@chromium.org","time":"Tue Oct 26 08:57:35 2021"},"commit":"8678fc629d38800401ae1c510d6439b666a5131f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Oct 26 13:26:21 2021"},"message":"[heap-snapshot] Declaring progress counter as uint32_t (instead of int)\n\nA test was overflowing on the progress counter when using int as type.\nThis CL is fixing the progress counter to use uint32_t, and re-enables\nthe test.\n\nWhy uint32_t instead of size_t?\nIn the referenced bug, the progress_counter_ (but not the\nprogress_total_) triggered an overflow; and since these two counters\nshould be relatively similar (the total count is an estimate, and can\nbe less than the actual progress count), we do not expect the\ncount to increase much more than we can already encode with int.\n\n\nBug: chromium:1246860\nChange-Id: I9769884ef60d352b3787c2223e528ddf33b0b23e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3245116\nCommit-Queue: Kim-Anh Tran <kimanh@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77551}\n","milestone":97},{"_id":"1e0567fb6013ddd90395aa97051f0ec6fe6f33b1","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Oct 26 12:10:55 2021"},"commit":"1e0567fb6013ddd90395aa97051f0ec6fe6f33b1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Oct 26 13:04:31 2021"},"message":"[api] Advance deprecation for deprecated apis <= v9.5\n\nAs per output of ./tools/release/list_deprecated.py\n\nBug: v8:11165\nChange-Id: Ib5ae6fd1ec7209cc89d436d337b97a4c82391da3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3245118\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77550}\n","milestone":97},{"_id":"e53e9c108f51d7d6d88caf97e16e6cbb1ee6355a","author":{"name":"Omer Katz","email":"omerkatz@chromium.org","time":"Mon Oct 25 20:23:34 2021"},"commit":"e53e9c108f51d7d6d88caf97e16e6cbb1ee6355a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Oct 26 07:53:52 2021"},"message":"heap: Add default values to UMA metrics struct\n\nSome fields didn't have default values, which made it impossible to\ncheck whether or not all fields are initialized.\n\nBug: chromium:1056170\nChange-Id: I8c6f89e64661420460bfc351473a47a623ef6399\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3243462\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77535}\n","milestone":97},{"_id":"7efcab88db75376811e5b140c4302feb3c06922a","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Oct 14 11:38:35 2021"},"commit":"7efcab88db75376811e5b140c4302feb3c06922a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Oct 14 12:30:59 2021"},"message":"Make PageAllocator::DecommitPages mandatory\n\nBesides the virtual memory cage, the DecommitPages API is also now\nrequired for Cppgc with crrev/c/3211583.\n\nA working implementation of this API is availabe in src/base/platform\nfor all supported platforms and is used by the DefaultPlatform.\n\nBug: chromium:1218005\nChange-Id: I29765993ed54bb52de71998ae8c6295637ee4072\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3211584\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77396}\n","milestone":97},{"_id":"571eca5ced91f43dacb16c731cce555cabab478a","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Oct 14 09:17:32 2021"},"commit":"571eca5ced91f43dacb16c731cce555cabab478a","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Oct 14 10:01:57 2021"},"message":"Implement DetermineAddressSpaceLimit() on x64\n\nThis function tries to determine the number of virtual address bits\navailable on the current CPU and with that the maximum size of the\nuserspace address space. On x64, it can be implemented through CPUID.\n\nThe result of this function is now used in two ways: first, it limits\nthe maximum size of the virtual memory cage, currently to a quarter of\nthe address space. Second, it influences the placement of fake cages,\nwhich are attempted to be placed into the lower half of the address\nspace so that they are followed by large amounts of (hopefully) unused\nbut addressable virtual memory in which pages can be allocated.\n\nBug: chromium:1218005\nChange-Id: I0edc5d241d899f16dbc47492fa1534b6aaa4aa13\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3220348\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77393}\n","milestone":97},{"_id":"af1d043c21512eab93ea973148972ce87149fdad","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Thu Oct 14 08:33:38 2021"},"commit":"af1d043c21512eab93ea973148972ce87149fdad","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Oct 14 09:47:49 2021"},"message":"Add V8::IsUsingSecureVirtualMemoryCage API\n\nV8 can fall back to creating a virtual memory cage that does not have\nthe desired security properties but at least allows V8 to run when\ncaging is enabled. This API allows the embedder to determine which kind\nof cage is being used, for example for metrics collection.\n\nBug: chromium:1218005\nChange-Id: I6988d0a4fce8aeb1361b30fce8c9c2f68f3b92f9\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3220343\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77392}\n","milestone":97},{"_id":"1ea76c1397c830a540c996f17c8c474f4e4c881d","author":{"name":"Samuel Groß","email":"saelo@chromium.org","time":"Tue Oct 12 17:14:52 2021"},"commit":"1ea76c1397c830a540c996f17c8c474f4e4c881d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Oct 12 18:24:15 2021"},"message":"Implement a fake virtual memory cage mechanism\n\nOn operating systems where reserving virtual address space is expensive,\nnotably Windows pre 8.1, it is not possible to create a proper virtual\nmemory cage. In order to still be able to reference caged objects\nthrough offsets from the cage base on these systems, this CL introduces\na fake cage mechanism. When the fake cage is used, most of the virtual\nmemory for the cage is not actually reserved. Instead, the cage's page\nallocator simply relies on hints to the OS to obtain pages inside the\ncage. This does, however, not provide the same security benefits as a\nreal cage as unrelated allocations might end up inside the cage.\n\nBug: chromium:1218005\nChange-Id: Ie5314be23966ed0042a017917b63595481b5e7e3\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng,v8_linux_arm64_sim_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3217200\nCommit-Queue: Samuel Groß <saelo@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77367}\n","milestone":97},{"_id":"f19ee5e09391824a2143c3e4c28b766758665b12","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Mon Oct 11 11:55:30 2021"},"commit":"f19ee5e09391824a2143c3e4c28b766758665b12","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Oct 12 10:25:37 2021"},"message":"[api] Deprecate Set/ResetToBookmark\n\nUsed to be needed for streaming but we don't use it anymore.\n\nChange-Id: I0947155bec38a6b329452e42204f07170a72c155\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3217195\nAuto-Submit: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77339}\n","milestone":97},{"_id":"98d7bbb43528752b80e030b78ad84fcac7f30bfe","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri Oct 08 20:53:51 2021"},"commit":"98d7bbb43528752b80e030b78ad84fcac7f30bfe","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Oct 08 22:40:28 2021"},"message":"[strings] Add --shared-string-table and support in d8\n\nThis CL reorders the initialization scheme for shared and client\nIsolates such that clients attach to the shared Isolate before\nsetting up the Heap. This is to support sharing the string table.\n\nBug: v8:12007\nChange-Id: Icb0e40cc5ed84d516c8073a70d0f769f517044c9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3039264\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77307}\n","milestone":97},{"_id":"5578195db3c1f66afcca53ec7c66845f7572f7ba","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Wed Oct 06 11:18:10 2021"},"commit":"5578195db3c1f66afcca53ec7c66845f7572f7ba","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Oct 06 12:12:54 2021"},"message":"[wasm] Load --wasm_dynamic_tiering from the context\n\nWebAssembly dynamic tiering should be tested with an origin trial. For\nthe origin trial the feature flag value has to be loaded from blink.\nThis CL stores the value of the --wasm-dynamic-tiering flag in the\ncompilation state, from where it gets passed forward to all uses of the\nflag. The flag value gets loaded from blink when a new NativeModule is\ncreated.\n\nR=clemensb@chromium.org\n\nBug: v8:12281\nChange-Id: Ia26355a665b7dfcdb47144863c1bec296774abb2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3204963\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/main@{#77256}\n","milestone":97},{"_id":"52a491070ab286dfd36891796b7c24ab1de50017","author":{"name":"Liviu Rau","email":"liviurau@chromium.org","time":"Tue Oct 05 12:46:58 2021"},"commit":"52a491070ab286dfd36891796b7c24ab1de50017","committer":{"name":"Liviu Rau","email":"liviurau@chromium.org","time":"Tue Oct 05 12:49:04 2021"},"message":"Make roller owner of touched files\n\nBug: v8:12276\nChange-Id: Id64e274151011edeaf092cba5bc5487118b3339a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3205891\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nOwners-Override: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/branch-heads/9.4@{#42}\nCr-Branched-From: 3b51863bc25492549a8bf96ff67ce481b1a3337b-refs/heads/9.4.146@{#1}\nCr-Branched-From: 2890419fc8fb9bdb507fdd801d76fa7dd9f022b5-refs/heads/master@{#76233}\n","milestone":94},{"_id":"3c4c6011ed2778f9bdc54b5151c2dd3f8bd2e8e2","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Wed Aug 11 08:07:15 2021"},"commit":"3c4c6011ed2778f9bdc54b5151c2dd3f8bd2e8e2","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Aug 11 10:48:19 2021"},"message":"[fastcall] Remove redundant offsetof comparison\n\nThis fixes a compilation error on GCC.\n\nBug: v8:12072\nChange-Id: Ief14968ba15776ad5f72b85b93c9158996833453\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3086475\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nAuto-Submit: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76227}\n","milestone":94},{"_id":"8e945ced4d120b82db508e9a5ae89df4d6b79254","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Aug 10 14:06:40 2021"},"commit":"8e945ced4d120b82db508e9a5ae89df4d6b79254","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 10 21:54:32 2021"},"message":"[api] Advance deprecation\n\nMarking V8_DEPRECATE_SOON from versions <= v9.1 as V8_DEPRECATED.\n\nDrive-by-fix:\n- list_deprecated.py handles non-committed deprecations\n\nBug: v8:11165\nChange-Id: I432e401d9d8d131d423c6a58ff9694abce87cef7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3085275\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76213}\n","milestone":94},{"_id":"22f326b8af3baafa5968003d61403175bc10d6dd","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Tue Aug 10 14:03:58 2021"},"commit":"22f326b8af3baafa5968003d61403175bc10d6dd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 10 15:56:30 2021"},"message":"[fastcall] Add 8-byte element types support for TypedArrays\n\nThis CL adds back the 8-byte element types and extends the fast API\nby hiding the unaligned memory reads performed for them.\n\nBug: chromium:1052746\nChange-Id: Ide49ce6bd2c77b9d2d544ca2df47b5f95c93eaa9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3056988\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76207}\n","milestone":94},{"_id":"eb41cd5837f133bccae6aa1ae3f9c22ad8a319fe","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Aug 10 11:50:17 2021"},"commit":"eb41cd5837f133bccae6aa1ae3f9c22ad8a319fe","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 10 13:07:40 2021"},"message":"Move pthread_jit_write_protect support to build_config.h\n\nThis cannot be defined in v8config.h because target architecture\ndetection is not done in that file.\nThis CL moves the logic to set V8_HAS_PTHREAD_JIT_WRITE_PROTECT to\nsrc/base/build_config.h, which also defines the V8_TARGET_ARCH* macros.\n\nR=jkummerow@chromium.org, mlippautz@chromium.org\n\nBug: chromium:1238029\nChange-Id: I2a688dad32b83df1d26bf23b15bf4485d78c8cc6\nCq-Include-Trybots: luci.v8.try:v8_mac_arm64_rel_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3085271\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76198}\n","milestone":94},{"_id":"390456678a8261827cd9a1b5f0c4dc8e4328af07","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Aug 10 09:05:48 2021"},"commit":"390456678a8261827cd9a1b5f0c4dc8e4328af07","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 10 10:39:19 2021"},"message":"[api] Remove deprecated APIs\n\nThe following API methods are removed:\n- v8::Module::SetSyntheticModuleExport(...)\n- v8::StreamedSource::StreamedSource(...)\n- v8::ConsueCodeCacheTask::StartStreamingScript(...)\n- v8::Isolate::CreateParams::supported_import_assertions\n- v8::Isolate::MeasureMemory(...)\n- v8::Isolate::SetModifyCodeGenerationFromStringsCallback(...)\n- v8::V8::TryHandleSignal(...)\n- v8::V8::SetIsCrossOriginIsolated(...)\n\nBug: v8:11165\nChange-Id: I3d232b375825de6b6469a5589c398835158b8850\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3084364\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76194}\n","milestone":94},{"_id":"0f56f71b10b1ef6aea0d91dee1163c2b9491499c","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Mon Aug 09 08:58:01 2021"},"commit":"0f56f71b10b1ef6aea0d91dee1163c2b9491499c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Aug 10 06:48:59 2021"},"message":"[inspector] Remove unused formatAccessorsAsProperties().\n\nFollowing up on https://crrev.com/c/3067319 (V8 call site) and\nhttps://crrev.com/c/3080920 (Blink override), we can now safely remove\nthe formatAccessorsAsProperties() predicate in the inspector API. V8 now\nconsistently applies the logic to all \"inherited\", native accessor\nproperties (which means both Blink IDL attributes and V8 builtins).\n\nBug: chromium:1076820, chromium:1199247\nChange-Id: I156ee43eb87ffd7b1ba69900fe11283f37241dda\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3080568\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76187}\n","milestone":94},{"_id":"7df6678c32255ec5a1b1470f1e5a7e56b3b192fa","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Mon Aug 09 07:44:18 2021"},"commit":"7df6678c32255ec5a1b1470f1e5a7e56b3b192fa","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 09 11:01:15 2021"},"message":"[api] Implement signature checks using instance types\n\nRather than depending on slow signature checks, receiver type checks are\nperformed using fast numeric instance type checks.\n\nThis CL adds a instance type range for embedders to assign values and\nuses these to perform type checks.\n\nBug: v8:11476\nChange-Id: Ie8236ae47ca0ba93ae76a7e690b81aa0a2b0f3e2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2883623\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Sathya Gunasekaran  <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76162}\n","milestone":94},{"_id":"f888f48e4c65e3ccfd9fd831c71c1832b957c945","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Fri Aug 06 13:53:48 2021"},"commit":"f888f48e4c65e3ccfd9fd831c71c1832b957c945","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 09 08:55:41 2021"},"message":"[api] Add API for off-thread code cache deserialization\n\nTo consume a code cache off-thread\n\n  1. The embedder creates a CachedData object wrapping the data blob.\n  2. The embedder calls ScriptCompiler::StartConsumingCodeCache with the\n     CachedData, and receives a ScriptCompiler::CodeCacheConsumeTask\n     which takes ownership of the CachedData.\n  3. The embedder calls ScriptCompiler::CodeCacheConsumeTask::Run\n     on a different thread.\n  4. Once this completes, the embedded passes the completed task as an\n     optional argument into Source constructor, and calls Compile as\n     before.\n\nThis is roughly similar to how streaming compilation works, with the\nQoL improvement that Source owns the CodeCacheConsumeTask and therefore\nwe can reuse the same Compile method and do the off-thread finalization\nbehind the scenes inside Compile.\n\nOn the v8::internal side, ScriptCompiler::CodeCacheConsumeTask wraps a\nv8::internal::BackgroundDeserializeTask, which has a Run and a Finish\nmethod. The Run creates a LocalIsolate (again, similar to\nBackgroundCompileTask), calls some helpers on CodeSerializer, and stores\nthe pre-finalization result in a OffThreadDeserializeData structure.\nThis stores Persistent Handles to the off-thread initialized SFI and\na vector of Scripts needing fixing up, and it owns the PersistentHandles\nobject which owns those Handles. Finally, the Finish method consumes\nthis OffThreadDeserializeData structure, fixes up Scripts, moves the\nSFI Handle into the caller HandleScope, and that's it.\n\nSince we don't yet have the source at off-thread deserialization time,\nthe various code cache sanity checks are done without the source hash\nwhen deserializing, and the Finish method re-does them now that the\nsource is available.\n\nBug: chromium:1075999\nChange-Id: If1faf35ba3ef840fa4e735581d0b29c96c1d5fc8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3067322\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76155}\n","milestone":94},{"_id":"639e856310875bdfc77a02c2b38503f73a9f199e","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Aug 06 14:12:30 2021"},"commit":"639e856310875bdfc77a02c2b38503f73a9f199e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Aug 06 17:30:47 2021"},"message":"[wasm] Disable MAP_JIT functionality on iOS\n\npthread_jit_write_protect* functions are only available on arm64 Mac,\nnot on iOS (which also sets V8_{TARGET_,}OS_MACOSX).\nThis CL refactors the logic to detect whether pthread_jit_write_protect\nand MAP_JIT are available and defines a global preprocessor macro which\ncan subsequently be used instead of the existing complex condition.\n\nR=jkummerow@chromium.org, mlippautz@chromium.org\n\nChange-Id: I63894f42df35406d6eee90a4ce5070c2fde7b566\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3077154\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nAuto-Submit: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76143}\n","milestone":94},{"_id":"09249d123ed681114234ab8c713146893c33b4c3","author":{"name":"Liviu Rau","email":"liviurau@chromium.org","time":"Thu Aug 05 13:15:54 2021"},"commit":"09249d123ed681114234ab8c713146893c33b4c3","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Aug 06 10:29:15 2021"},"message":"Make autoroll account owner of auto-updated files\n\nBug: v8:12049\nChange-Id: Iff1d09a17c3e0bbcd7b62baae7766d3745d0b084\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3071212\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCommit-Queue: Liviu Rau <liviurau@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76129}\n","milestone":94},{"_id":"caf6582a42488d03e1a2dfb56ce8581b5945e1d0","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Mon Aug 02 13:39:11 2021"},"commit":"caf6582a42488d03e1a2dfb56ce8581b5945e1d0","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 02 14:57:09 2021"},"message":"[logging] Platform logging improvements\n\n- Add V8_OS_STRING and V8_TARGET_OS_STRING define\n- Add v8-platform logging event\n- Add shared-library-end event for faster v8.log processing\n\nChange-Id: Id25a9e704620dbb70042e51a1fb6ed77ca7256bb\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3067219\nReviewed-by: Patrick Thier <pthier@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76040}\n","milestone":94},{"_id":"e4dcbab5e18702229c5d29cc6f4faba85ae035e1","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Fri Jul 30 15:46:06 2021"},"commit":"e4dcbab5e18702229c5d29cc6f4faba85ae035e1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Aug 02 12:01:46 2021"},"message":"[api][fastcall] Small TryCopyAndConvertArrayToCppBuffer fixes\n\n- Add V8_WARN_UNUSED_RESULT to TryCopyAndConvertArrayToCppBuffer\n  methods\n- Remove --force-slow-path implications in\n  Object::IterationHasObservableEffects\n\nBug: v8:11739\nChange-Id: I20dcac1c460c6ee116ff372806cdf8764a99d9f1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3063504\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76037}\n","milestone":94},{"_id":"530fd795a9ebae01f0dd182d98431c957a4f315d","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Fri Jul 23 18:29:30 2021"},"commit":"530fd795a9ebae01f0dd182d98431c957a4f315d","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jul 30 10:52:12 2021"},"message":"[fastcall] Type-specialize CopyAndConvertArrayToCppBuffer\n\nRename CopyAndConvertArrayToCppBuffer as\nTryCopyAndConvertArrayToCppBuffer and implement type specialization for\nint32_t and double in order to speed up V8 bindings with sequences.\n\nThis API is used by Blink code, for example see\nhttps://chromium-review.googlesource.com/c/chromium/src/+/3027405.\n\nBug: v8:11739\nChange-Id: I026a7f5e7833fb1afcc2ea9c296b66c7f733cbb1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3036407\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#76016}\n","milestone":94},{"_id":"63811e8680ca4657f1952a1eebe790b829913006","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Fri Jul 23 07:41:29 2021"},"commit":"63811e8680ca4657f1952a1eebe790b829913006","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jul 23 08:41:03 2021"},"message":"[inspector] Add `executionContextId` to `Runtime.inspectRequested`.\n\nThis properly threads through the `executionContextId` to the request\nreported to the DevTools front-end, similarly to how we already report\nthe `executionContextId` as part of `Runtime.bindingCalled`.\n\nBug: chromium:1231521\nChange-Id: I0a003041aedd8ec661d1b07cdddbcd1f2866a99f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3046187\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75875}\n","milestone":94},{"_id":"84d5b027a71b10b385b82d6aac46217f8ec1b413","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Fri Jul 16 10:10:20 2021"},"commit":"84d5b027a71b10b385b82d6aac46217f8ec1b413","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jul 16 12:30:22 2021"},"message":"[fastcall] Implement support for TypedArray arguments\n\nThis CL adds TypedArrays as supported arguments for fast API calls.\nIt implements \"exact type\" matching, i.e. if Float32Array is expected\nand e.g. Int32Array is passed instead, the generated code bails to the\nslow callback.\n\nBug: chromium:1052746, chromium:1018624\nChange-Id: I01d4e681d2b367cbb57b06effcb591c090a23295\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2999094\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75756}\n","milestone":94},{"_id":"19e693a35736422155db09562bb6105b10bf8285","author":{"name":"Liviu Rau","email":"liviurau@chromium.org","time":"Tue Oct 05 12:39:50 2021"},"commit":"19e693a35736422155db09562bb6105b10bf8285","committer":{"name":"Liviu Rau","email":"liviurau@chromium.org","time":"Tue Oct 05 12:48:01 2021"},"message":"Make roller owner of touched files\n\nBug: v8:12276\nChange-Id: Icfd54d07d2705063d115969964d3ff51ceeab677\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3204969\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nOwners-Override: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/branch-heads/9.3@{#40}\nCr-Branched-From: 7744dce208a555494e4a33e24fadc71ea20b3895-refs/heads/9.3.345@{#1}\nCr-Branched-From: 4b6b4cabf3b6a20cdfda72b369df49f3311c4344-refs/heads/master@{#75728}\n","milestone":93},{"_id":"905aafab8b56e005caf26ecd9689395a7b87c007","author":{"name":"Emanuel Ziegler","email":"ecmziegler@chromium.org","time":"Tue Jul 13 12:24:01 2021"},"commit":"905aafab8b56e005caf26ecd9689395a7b87c007","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jul 14 08:01:41 2021"},"message":"[wasm] Add CPU time metrics (reland)\n\nThis is a reland of dcdaf42fa8e66e442d0eb974dcf5f2dd000d72d4. It adds\nCPU time metrics to the WasmModuleDecoded (except for streaming),\nWasmModuleCompiled and WasmModuleTieredUp events. This can later be used\nto provide this information as UKMs or UMAs.\n\nBug: v8:11611\nChange-Id: I813fc8de36d1445c6a887abf496ec10e1a803815\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2953296\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Emanuel Ziegler <ecmziegler@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75715}\n","milestone":93},{"_id":"0f9e9e2010c7fcb0efbec1b7760d76811565b9aa","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Mon Jul 12 23:20:10 2021"},"commit":"0f9e9e2010c7fcb0efbec1b7760d76811565b9aa","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jul 13 15:12:56 2021"},"message":"[fastcall] Swap the template arguments in CopyAndConvertArrayToCppBuffer\n\nFor CopyAndConvertArrayToCppBuffer<T, type_info>(src, dst, length),\ntype `T` can be deducible from `dst`, but `type_info` cannot be\ndeducible so it's better to rewrite it as\nCopyAndConvertArrayToCppBuffer<type_info, T>(src, dst, length).\n\nBug: v8:11739\nChange-Id: Ic3a28671cf7576672dad2f21bf6acf87807c3b48\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3023006\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#75709}\n","milestone":93},{"_id":"2690d46507027ffa5ae55efb4f5669b99cf14b6e","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Thu Jul 08 00:48:40 2021"},"commit":"2690d46507027ffa5ae55efb4f5669b99cf14b6e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Jul 09 18:30:01 2021"},"message":"[fastcall] Resolve CFunction overloads based on type checks at runtime\n\nThis CL implements the resolution of function overloads based on\nrun-time checks of the type of arguments passed to the JS function.\nFor the moment, the only supported overload resolution is between\nJSArrays and TypedArrays.\n\nBug: v8:11739\nChange-Id: Iabb79149f021037470a3adf071d1cccb6f00acd1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2987599\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#75664}\n","milestone":93},{"_id":"f5fa0694688c9f5a95f1bbb1359a0d6c88d6d121","author":{"name":"Jesper van den Ende","email":"jespertheend@gmail.com","time":"Tue Jul 06 21:26:10 2021"},"commit":"f5fa0694688c9f5a95f1bbb1359a0d6c88d6d121","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jul 07 08:48:00 2021"},"message":"Promises: Add is_silent flag and ignore rejects when it is set\n\nThis allows for marking promises as silent. Setting this flag prevents\nthe debugger from pausing when the promise rejects.\n\nBug: chromium:1132506\nChange-Id: I260e52faa45ebedd9e8d84e092bd0260e828a902\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3001354\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75595}\n","milestone":93},{"_id":"32328edd548c9183a70ebf46decc2e25afc2f590","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Mon Jul 05 11:32:01 2021"},"commit":"32328edd548c9183a70ebf46decc2e25afc2f590","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jul 05 12:53:07 2021"},"message":"[inspector] Add `throwOnSideEffect` to `Runtime.callFunctionOn`.\n\nIn order to implement eager (side effect free) evaluation of arbitrary\naccessor properties correctly, we need the ability to call getters while\nguaranteeing that we don't trigger side effects. This is accomplished by\nadding a `throwOnSideEffect` flag to the `Runtime.callFunctionOn` API,\nsimilar to what's already available with the `Runtime.evaluate` and the\n`Debugger.evaluateOnCallFrame` APIs.\n\nBug: chromium:1076820, chromium:1119900, chromium:1222114\nChange-Id: If2d6c51376669cbc71a9dd3c79403d24d62aee43\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3001360\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75556}\n","milestone":93},{"_id":"50296372eac9984ca2172bd180bfa83ecaa9f1bd","author":{"name":"Lei Zhang","email":"thestig@chromium.org","time":"Thu Jun 24 04:27:37 2021"},"commit":"50296372eac9984ca2172bd180bfa83ecaa9f1bd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jun 24 07:23:53 2021"},"message":"Add noexcept to cppgc::BasicPersistent's move assignment operator.\n\nChange-Id: I9dbca09523644934eefb14fdb60f360b28417fa2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2983712\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Lei Zhang <thestig@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75347}\n","milestone":93},{"_id":"d0aebc06e020afd44e35fe3b398ddb6fb7711759","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Wed Jun 23 13:08:06 2021"},"commit":"d0aebc06e020afd44e35fe3b398ddb6fb7711759","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jun 23 14:01:40 2021"},"message":"[fastcall] Support JSArray as arguments\n\nThis CL adds support in TurboFan for passing JSArrays as arguments to\nfast API callbacks. It also extends the v8::Array class with a\nCopyAndConvertArrayToCppBuffer method to allow the embedder to perform\nquick conversions of their JSArrays to a C++ buffer. The CL also adds\ntests in d8. Design doc:\nhttps://docs.google.com/document/d/1BNKKZNgrGYafx8kqSfNEQqQYY5n4A6mGufss_Vz-h-4/edit#heading=h.c0kgf82jnlpp\n\nBug: chromium:1052746, chromium:715122\nChange-Id: If47ac60d9ebe6462bbf3adff002e2da8e14e8fc8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2940900\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75333}\n","milestone":93},{"_id":"e8c5de213737baaa35deac9b6bc44e1f7e6ace23","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Jun 23 11:29:25 2021"},"commit":"e8c5de213737baaa35deac9b6bc44e1f7e6ace23","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jun 23 12:32:48 2021"},"message":"api: Make sure TracedReference never is a zap value\n\nWhen checks are enabled, ensure that the global handle zap value never\nleaks into user code as it indicates that the garbage collector failed\nto keep alive an object.\n\nBug: chromium:1056170\nChange-Id: I4836fe49cd6e443d689068af10276ed99b46eb10\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2972729\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75330}\n","milestone":93},{"_id":"60dfa4de6b43a1824fd7dc32017a317cf63af728","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Thu Jun 17 06:41:11 2021"},"commit":"60dfa4de6b43a1824fd7dc32017a317cf63af728","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Jun 17 08:25:21 2021"},"message":"Use vanilla context for exception meta data\n\nBug: chromium:1213393, chromium:1218340\nChange-Id: Icde33c97d39a3504ca2ab8290ec2f0b0d923060d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2953194\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75201}\n","milestone":93},{"_id":"227e90188b9d26a366f048c72fbc65ff08375a21","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed Jun 16 12:35:34 2021"},"commit":"227e90188b9d26a366f048c72fbc65ff08375a21","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jun 16 13:53:17 2021"},"message":"[ext-code-space] Add CodeDataContainer::code field and friends\n\n... behind the v8_enable_external_code_space build flag.\n\nThis is a first CL in a row of CLs that will make CodeDataContainer\nthe only type of objects that could contain references to Code objects\n(besides the Code objects embedded into the generated code).\nEventually these changes will allow us to move Code space out of the V8\nheap cage.\n\nThis CL adds |code| field to ensure that CodeDataContainer keeps the\nrespective Code object alive and |code_entry_point| field that contains\ncached value of the code().InstructionStart().\n\nBug: v8:11880\nChange-Id: Ie7ce75667d8da306797d203691b429671bc4530d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2964093\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75179}\n","milestone":93},{"_id":"5f82dbbe534635a8b1e93f27e8fd7e68c0eaf291","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Wed Jun 09 10:06:08 2021"},"commit":"5f82dbbe534635a8b1e93f27e8fd7e68c0eaf291","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon Jun 14 13:30:26 2021"},"message":"[API] Allow embedders to assign instance types\n\nConstructors define instance types for their instances while accessors\ndefine a range of permissable instance types for receiver checks.\\\n\nBug: v8:11476\nChange-Id: I48b5326ec0a4e847283c2fa5c8f1705302727453\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2821430\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Sathya Gunasekaran  <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75131}\n","milestone":93},{"_id":"0b95f282f726490f89a38d7bea00b5598d33acfb","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Wed Jun 09 10:46:02 2021"},"commit":"0b95f282f726490f89a38d7bea00b5598d33acfb","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jun 09 12:14:28 2021"},"message":"Introduce Isolate::ClearCachesForTesting API method\n\nThis CL adds a new method intended for tests or lab settings to\ncleanup V8 caches. The synchronous nature of the method greatly reduces\nflakiness of blink leak detection in many cases.\n\nBug: chromium:1217831\nChange-Id: I107eddc8b88d91aa7e69430ecfc135fe39538a5c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2948666\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75041}\n","milestone":93},{"_id":"87e0d0a4d3c5678f39f7e411288c441f8f238627","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Fri May 21 10:09:08 2021"},"commit":"87e0d0a4d3c5678f39f7e411288c441f8f238627","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 08 13:10:21 2021"},"message":"Remove ulan@ from OWNERS\n\nChange-Id: I4a30e0f01e35eb0824f5abeec62d55d62970b59f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2910781\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCommit-Queue: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75016}\n","milestone":93},{"_id":"ca05c5a2e53b3c3b4e3cba410cac5c99c134bb5f","author":{"name":"Daniel Bevenius","email":"daniel.bevenius@gmail.com","time":"Tue May 25 09:39:45 2021"},"commit":"ca05c5a2e53b3c3b4e3cba410cac5c99c134bb5f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 08 08:11:17 2021"},"message":"Add TryGetCurrent() method to v8::Isolate\n\nThis commit adds a TryGetCurrent() method to the v8::Isolate class.\n\nThe motivation for adding this method this is that in Node.js we've run\ninto situations where we need to check if there is a current\nIsolate and we are using GetCurrent() for this. The issue is that for a\ndebug build of Node.js, the debug check in GetCurrent() will cause a\nfailure.\n\nThe suggestion in this changeset is to allow getting the current\nIsolate, or null if one does not exist, without any checks.\n\nChange-Id: I01676e4bcdbe86da0496f5df1982d14eb1c9ebf8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2910630\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#75004}\n","milestone":93},{"_id":"cda92a6150f6a97bfb6e5ee3eee364b198d44ca5","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Wed Jun 02 08:36:06 2021"},"commit":"cda92a6150f6a97bfb6e5ee3eee364b198d44ca5","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed Jun 02 09:33:58 2021"},"message":"Add exception metadata handling to V8 inspector\n\nThis interface allows associating meta information to\nexceptions. This meta information can be used by debugging\ntools, like DevTools, to learn about e.g. a network request\nor a DevTools issue that is associated with the exception.\nTo do so the inspector client (i.e. embedder) has to provide\nthe data.\n\nBug: chromium:1213393\nChange-Id: Ia86221f4f04b21024d592bafb2f74886ead8a6a8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2928496\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Philip Pfaffe <pfaffe@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74909}\n","milestone":93},{"_id":"22a32f11f7a39e4a73105608a51ebab0ad97960f","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Mon May 31 21:03:43 2021"},"commit":"22a32f11f7a39e4a73105608a51ebab0ad97960f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue Jun 01 09:46:46 2021"},"message":"[api] Support PropertyAttribute in v8::Template::Set\n\nBug: v8:11195\nChange-Id: I100a19087dffc35e3935b75ed00c6c1a4e887d50\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2928506\nReviewed-by: Patrick Thier <pthier@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74874}\n","milestone":93},{"_id":"7261bf01d7a244afee69eb342dcced303dd73072","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Mon May 31 09:34:01 2021"},"commit":"7261bf01d7a244afee69eb342dcced303dd73072","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 31 12:18:16 2021"},"message":"[fastcall] Extend the fast API interface with sequences\n\nThis CL enhances the interface of the fast C API with constants and\nstructs necessary for supporting JSArrays, TypedArrays and ArrayBuffers.\nIt also adds checks for incompatible combinations of argument type/flags.\n\nBug: chromium:1052746\nChange-Id: I032167d0739d33f8151f78574c89d565cb9bd821\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2903147\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74857}\n","milestone":93},{"_id":"3e12e60a27cd166e024bce2793d330f63713ab2e","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Thu May 20 18:26:07 2021"},"commit":"3e12e60a27cd166e024bce2793d330f63713ab2e","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu May 27 21:30:55 2021"},"message":"[fastcall] Resolve CFunction overloads based on arity\n\nTo support Fast API calls with overloads, implement compile-time\nfunction resolution based on the number of arguments passed to the JS\nfunction.\n\nBug: v8:11739\nChange-Id: I96839dc0b6fc540eff94573ac9e77f678908fc3a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2901249\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#74837}\n","milestone":93},{"_id":"87132919a42f0ddedee557145ee3d8336a8320c7","author":{"name":"Daniel Abraham","email":"daab@google.com","time":"Tue Apr 27 04:04:21 2021"},"commit":"87132919a42f0ddedee557145ee3d8336a8320c7","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu May 27 09:42:43 2021"},"message":"Fix various typos in PDL comments + 1 event param.\n\nBased on an analysis of auto-generated code, based on\nbrowser_protocol.pdl and js_protocol.pdl:\n\nhttps://goreportcard.com/report/github.com/daabr/chrome-vision#misspell\n\nBug: chromium:1213460\nChange-Id: Ib96b2d2700d0bf1ac90e88accd0bc15eccbb9d7b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2848874\nReviewed-by: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74810}\n","milestone":93},{"_id":"55cbb2ce3be503d9096688b72d5af0e40a9e598b","author":{"name":"Ross McIlroy","email":"rmcilroy@chromium.org","time":"Wed May 19 15:13:43 2021"},"commit":"55cbb2ce3be503d9096688b72d5af0e40a9e598b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri May 21 12:38:18 2021"},"message":"Remove one-shot function optimizations.\n\nThey have been disabled for some time and are superseeded by lazy\nfeedback vector allocation.\n\nChange-Id: Iafc3989b0c1f866ce7d6295d9b13ccaa5ef1c115\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2905609\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Mythri Alle <mythria@chromium.org>\nCommit-Queue: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74711}\n","milestone":93},{"_id":"ad4eab00e7ec96730eb2c1b6ddcef14ba2e4becd","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Fri May 14 23:14:14 2021"},"commit":"ad4eab00e7ec96730eb2c1b6ddcef14ba2e4becd","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Tue May 18 16:49:27 2021"},"message":"[fastcall] Store multiple CFunction overloads in FunctionTemplateInfo\n\nIn order to support Fast API calls with overloads, store a FixedArray\nof c-function addresses and a FixedArray of the corresponding\nFunctionInfo*. For now keep using only the first function in the array.\n\nBug: v8:11739\nChange-Id: If23381aa9d04c5cd830043951da9c53836a36328\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2876592\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#74643}\n","milestone":92},{"_id":"47db786ca620b4adbe5137af937dbfc1726f506f","author":{"name":"Antonio Sartori","email":"antoniosartori@google.com","time":"Mon May 17 11:22:12 2021"},"commit":"47db786ca620b4adbe5137af937dbfc1726f506f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 17 12:30:55 2021"},"message":"[api] Deprecate v8::SetIsCrossOriginIsolated\n\nThe method changes a global flag, depending upon which v8 attaches or\nnot the SharedArrayBuffer constructor to global objects. Chrome ended\nup calling it when some contexts had already been created, leading to\ninconsistencies. (Also) because of that, we decided to change the\nmechanism for enabling cross-origin isolation (cf.\nhttps://crrev.com/c/2880215). I believe it is better not to expose\nthis method.\n\nBug: chromium:923807\nChange-Id: I269cb1c5406f999a395bbb7657574c0f73b4ae99\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2900224\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Antonio Sartori <antoniosartori@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74600}\n","milestone":92},{"_id":"fc49e77f26263401b6354f1b8dcc502cc69f32fa","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed May 12 13:17:13 2021"},"commit":"fc49e77f26263401b6354f1b8dcc502cc69f32fa","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed May 12 19:20:23 2021"},"message":"api,heap: Avoid dropping global handles when stack state is overridden\n\nThis CL only affects non-production code. In non-production code, test\nrunners may invoke tasks (base::RunLoop()) with an interesting stack.\nV8 assumes that it can clear certain data structures when running from\na non-nested task due to not having any interesting stack on top.\nDuring testing this can lead to UAF on stack as data structures are\nprematurely cleared.\n\nWith cppgc this failure can be fixed as the information on whether\ntest runners invoke tasks with a non-trivial stack is actually\npresent.\n\nExample failure: https://logs.chromium.org/logs/chromium/buildbucket/cr-buildbucket.appspot.com/8847453411432681120/+/steps/webkit_unit_tests__with_patch__on_Ubuntu-18.04/0/logs/Flaky_failure:_WebSocketStreamTest.ConnectWithFailedHandshake__status_CRASH_SUCCESS_/0\n\nChange-Id: Ib9f6fb2d8a1aa43d0b973afeb2d0a740c769e784\nBug: chromium:1056170\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2891574\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74539}\n","milestone":92},{"_id":"57afcaf4f50b4bdb1f483fd50c2555bdaab88d23","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Wed May 12 08:54:52 2021"},"commit":"57afcaf4f50b4bdb1f483fd50c2555bdaab88d23","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed May 12 09:55:37 2021"},"message":"[fastcall] Allow receiver to be passed as Object\n\nThis CL enhances the fast C API in a way to allow passing the receiver\nto the fast callback as Local<Object> instead of Local<Value>. It also\nfixes documentation comments.\n\nBug: chromium:1052746\nChange-Id: I424aa83023c2e6633b9df08ee040bf170db32b3d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2887510\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74519}\n","milestone":92},{"_id":"499f169be3e99fc597e11836f0203d1ff7a6717b","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Thu May 06 11:54:46 2021"},"commit":"499f169be3e99fc597e11836f0203d1ff7a6717b","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 10 18:48:31 2021"},"message":"Remove support for non-c++14 compliant constexpr\n\nAfter updating our bots to use GCC 7.4, we do not need to support\nincomplete C++14 support any more. In particular, we can assume\ncomplete c++14 constexpr support now.\n\nThis CL removes the V8_HAS_CXX14_CONSTEXPR and CONSTEXPR_DCHECK macros.\nThe CONSTEXPR_DCHECKs are replaced by DCHECK and friend, or\nSTATIC_ASSERT where possible.\n\nR=jgruber@chromium.org, leszeks@chromium.org, mlippautz@chromium.org\n\nBug: v8:9686, v8:11384\nChange-Id: I3a8769a0f54da7eb2cacc37ee23e5c97092e3051\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2876847\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Mythri Alle <mythria@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74486}\n","milestone":92},{"_id":"a7980d43e030ba4bdb36813d4bc99f85982bf4ee","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Fri May 07 01:03:20 2021"},"commit":"a7980d43e030ba4bdb36813d4bc99f85982bf4ee","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 10 17:07:20 2021"},"message":"[fastcall] Add vector of CFunction overloads to FunctionTemplate\n\nAs a first step to support Fast API calls with overloads, adds a\nnew FunctionTemplate constructor that accepts a vector of CFunction*.\n\nBug: v8:11739\nChange-Id: I112b1746768f52df52c893a4f1fb799b6bd90856\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2860838\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#74481}\n","milestone":92},{"_id":"6328961158c151e548a6ef74c5558d2fc5bbc4c5","author":{"name":"Samuel Groß","email":"saelo@google.com","time":"Mon May 10 10:08:01 2021"},"commit":"6328961158c151e548a6ef74c5558d2fc5bbc4c5","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Mon May 10 11:21:13 2021"},"message":"[sandbox][x64] Switch to AND-based type checks\n\nThis change turns the previously used XOR-based type checks for external\npointers into AND-based type checks. With those, the type tag is ORed\ninto the top bits of an external pointer when it is written, and the\ntype check performed on every load is done by ANDing the value with the\ninverted tag. This will later allow type checking and masking off the GC\nmarking bits of external pointers in a single operation.\n\nBug: v8:10391\nChange-Id: I89f2b22588b3f7467c79c7916c11f25cd9bcc82d\nCq-Include-Trybots: luci.v8.try:v8_linux64_heap_sandbox_dbg_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2850639\nCommit-Queue: Samuel Groß <saelo@google.com>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74464}\n","milestone":92},{"_id":"22f124cec03d518f50f6885fc35aadcd7a9b0ed1","author":{"name":"arthursonzogni","email":"arthursonzogni@chromium.org","time":"Fri May 07 11:12:11 2021"},"commit":"22f124cec03d518f50f6885fc35aadcd7a9b0ed1","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri May 07 14:07:48 2021"},"message":"(reland) [api] Add API callback setter for the SAB origin trial\n\nThis reland patch:\nhttps://chromium-review.googlesource.com/c/v8/v8/+/2867473\n(See patchset 1)\n\nThe problem was blink injecting interceptor into the window object. It\nobserves \"observation\" and \"mutations\" on this object. When it happens\nto the initial empty document, the IPC DidAccessInitialDocument() is\nsent and modify the state of the browser process. Causing two tests to\nfail.\n\nThe diff (See patchset 1..2) includes:\n1. Use JSObject::HasRealNamedProperty instead of JsObject::HasProperty.\n   This skips the interceptor and do not walk the prototype chain.\n2. Invert JSObject::HasRealNamedProperty() with\n   IsSharedArrayBufferConstructorEnabled(), just in case. This avoid\n   observing the object when not needed.\n\nOriginal patch description:\n---\nThis change makes it possible to enable SharedArrayBuffer per Context,\ncontrolling whether it should be enabled or not with a callback. The\nprevious implementation of the reverse origin trial for\nSharedArrayBuffer was broken, since the feature could only be enabled\nglobally per process, and only if the feature flag is set early enough\nin the v8 initialization. This does not play well with how origin\ntrials work.\n\nThe implementation is similar to the callbacks that already exist for\nthe origin trials for WebAssembly simd and exceptions.\n\nSharedArrayBuffer is still controlled by the flag\nharmony_sharedarraybuffer. If that flag is disabled, then\nSharedArrayBuffer is disabled unconditionally. On top of that, this CL\nintroduces a new flag for enabling SharedArrayBuffer per context. If\nthat flag is set, a callback is used to determine whether\nSharedArrayBuffer should be enabled.\n\nNote that this only controls whether the SharedArrayBuffer constructor\nshould be exposed on the global object or not. It is always possible\nto construct a SharedArrayBuffer using\n\n  new WebAssembly.Memory({\n    shared:true, initial:0, maximum:0 }).buffer.constructor;\n\nThere are few things which I do not like of this approach, but I did\nnot have better ideas:\n\n1. The complex logic of dobule flag + callback. However, this seemed\nthe best way to me to not break embedders which rely on that flag\nbeing enabled by default.\n\n2. The fact that what actually matters is just whether the callback\nreturns `true` once. It would be good to check that the callback gives\na consistent return value, or to provide a better API that cannot be\nmissunderstood.\n\nBug: chromium:923807,chromium:1071424,chromium:1138860\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2867473\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Antonio Sartori <antoniosartori@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74378}\n\n---\n\nBug: chromium:923807,chromium:1071424,chromium:1138860,chromium:1206187\nChange-Id: Ibc6b4f8c0e0827178b7f0cbe4b942444bbbe6216\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2880215\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Lutz Vahl <vahl@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nAuto-Submit: Arthur Sonzogni <arthursonzogni@chromium.org>\nCommit-Queue: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74441}\n","milestone":92},{"_id":"51fe55719c128ec07285afb233cab4b7db172b06","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Thu May 06 13:21:01 2021"},"commit":"51fe55719c128ec07285afb233cab4b7db172b06","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu May 06 14:30:26 2021"},"message":"[inspector] Consistently pass around script ID as integer.\n\nWithin the inspector we should be consistent about passing the script ID\nalways as integer, and only convert to String16 when actually needed.\nThat (a) saves memory (and some runtime overhead) when stashing away\ncall frames, for example in case of async stack traces, and (b) reduces\nconfusion which representation to chose.\n\nBug: chromium:1162229\nChange-Id: I9591931da0a307779372f36aba6e155ec22bbe3d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2876856\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74410}\n","milestone":92},{"_id":"bc1eb7b478140d113ac0a695e5ab968ea5c19e9c","author":{"name":"Antonio Sartori","email":"antoniosartori@google.com","time":"Wed May 05 09:16:18 2021"},"commit":"bc1eb7b478140d113ac0a695e5ab968ea5c19e9c","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Wed May 05 10:40:47 2021"},"message":"[api] Add API callback setter for the SAB origin trial\n\nThis change makes it possible to enable SharedArrayBuffer per Context,\ncontrolling whether it should be enabled or not with a callback. The\nprevious implementation of the reverse origin trial for\nSharedArrayBuffer was broken, since the feature could only be enabled\nglobally per process, and only if the feature flag is set early enough\nin the v8 initialization. This does not play well with how origin\ntrials work.\n\nThe implementation is similar to the callbacks that already exist for\nthe origin trials for WebAssembly simd and exceptions.\n\nSharedArrayBuffer is still controlled by the flag\nharmony_sharedarraybuffer. If that flag is disabled, then\nSharedArrayBuffer is disabled unconditionally. On top of that, this CL\nintroduces a new flag for enabling SharedArrayBuffer per context. If\nthat flag is set, a callback is used to determine whether\nSharedArrayBuffer should be enabled.\n\n\nNote that this only controls whether the SharedArrayBuffer constructor\nshould be exposed on the global object or not. It is always possible\nto construct a SharedArrayBuffer using\n\n  new WebAssembly.Memory({\n    shared:true, initial:0, maximum:0 }).buffer.constructor;\n\n\nThere are few things which I do not like of this approach, but I did\nnot have better ideas:\n\n1. The complex logic of dobule flag + callback. However, this seemed\nthe best way to me to not break embedders which rely on that flag\nbeing enabled by default.\n\n2. The fact that what actually matters is just whether the callback\nreturns `true` once. It would be good to check that the callback gives\na consistent return value, or to provide a better API that cannot be\nmissunderstood.\n\n\nBug: chromium:923807,chromium:1071424,chromium:1138860\nChange-Id: Ibe3776fad4d3bff5dda9066967e4b20328014266\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2867473\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Antonio Sartori <antoniosartori@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74378}\n","milestone":92},{"_id":"7d5e5f6c62c3f38acee12dc4114c022441e7d36f","author":{"name":"Alex Rudenko","email":"alexrudenko@chromium.org","time":"Thu Apr 29 13:16:15 2021"},"commit":"7d5e5f6c62c3f38acee12dc4114c022441e7d36f","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Fri Apr 30 06:12:33 2021"},"message":"Implement V8InspectorSession::initializeCommandLineAPIScope\n\nIn https://crrev.com/c/2842128, a concern was raised that using\n`V8InspectorSession::createCommandLineAPI` directly would not cache the command line\nAPI definitions and V8 could expose a higher level API for this use\ncase. This CL exposes `InjectedScript::ContextScope` via V8InspectorSession.\nIf this approach is approved, V8InspectorSession::createCommandLineAPI\ncould be removed.\n\nExample usage: https://crrev.com/c/2858964\n\nBug: chromium:1200705\nChange-Id: Ib9fcadcb9bbd75c08f0122b0e4ee61e2874c4f8a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2857640\nCommit-Queue: Alex Rudenko <alexrudenko@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74289}\n","milestone":92},{"_id":"93f85699e22df958618206dbf94a790cf0bad8c4","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Wed Apr 28 09:46:12 2021"},"commit":"93f85699e22df958618206dbf94a790cf0bad8c4","committer":{"name":"V8 LUCI CQ","email":"v8-scoped@luci-project-accounts.iam.gserviceaccount.com","time":"Thu Apr 29 13:08:14 2021"},"message":"[debugger] Remove \"Restart frame\" feature.\n\nThe \"Restart frame\" feature was implemented as part of LiveEdit and\nprimarily used to support LiveEdit of active functions, but that was\npreviously disabled as part of https://crrev.com/c/2846892 because it's\ntoo brittle and causes crashes when using seemingly unrelated features.\nThe \"Restart frame\" feature was also available as a context menu item\nseparately in the DevTools front-end, but that was also already removed\nas part of https://crrev.com/c/2854681 earlier. So all uses are gone\nnow.\n\nThis change works by marking Debugger.restartFrame as deprecated and\nhaving it respond with a ServerError all the time. It thus allows us to\nremove a whole bunch of machinery that was essentially just put in\nvarious places to support the restart_fp_ magic. In particular the\ndebugger no longer needs any machine specific builtins now.\n\nBug: chromium:1195927\nChange-Id: I1153ba6b00e979620af57dd9f58aa1c035ec4484\nFixed: chromium:1203606\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2854750\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74276}\n","milestone":92},{"_id":"3b2552de14991d49be0c0482040b93ca47383e42","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Apr 27 18:18:23 2021"},"commit":"3b2552de14991d49be0c0482040b93ca47383e42","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 28 20:20:31 2021"},"message":"Limit [[nodiscard]] to clang\n\nGCC 7.4 has problems with combining [[nodiscard]] with\n__attribute__((visibility(\"\"))). Disable as there's enough compilation\ncoverage for clang to find issues.\n\nBug: v8:11707\nChange-Id: I9e61463c4d11dbc3b03d458e2810206fb93de108\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2854737\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Santiago Aboy Solanes <solanes@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74262}\n","milestone":92},{"_id":"0b5ec843cc9b883cfe9b295fdb812f3393f5453f","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Wed Apr 28 18:06:17 2021"},"commit":"0b5ec843cc9b883cfe9b295fdb812f3393f5453f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 28 19:17:00 2021"},"message":"[ptr-cage] Factor CodeRange out of MemoryAllocator and share along with ptr cage\n\nThis CL factors out a CodeRange class out of MemoryAllocator.\n\nWhen V8_COMPRESS_POINTERS_IN_SHARED_CAGE is defined, there is a single\nCodeRange shared by all Isolates in the process. This also turns short\nbuiltins back for both configurations of pointer compression. When\nsharing a cage, there is a single copy of the re-embedded builtins.\n\nSince a shared pointer cage is still experimental, to avoid API churn\nthis CodeRange's size is not configurable and is always the maximal size\ndepending on the underlying platform.\n\nChange-Id: Ie94f52746f2c5450247a999cc6071e3914d4cf0c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2819206\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74261}\n","milestone":92},{"_id":"d057c823136361fb787ed57c1d7189a62c1eb109","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Tue Apr 27 17:32:35 2021"},"commit":"d057c823136361fb787ed57c1d7189a62c1eb109","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 28 07:51:20 2021"},"message":"[api] Update v8::Module::Evaluate comment for TLA\n\nWith top-level await enabled by default, the behavior of\nv8::Module::Evaluate is changed to always return a Promise, and should\nbe documented.\n\nNo-try: true\nChange-Id: I8bf41a18d8d98befecd62d6423ab37fdbaac3aad\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2854874\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nAuto-Submit: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74238}\n","milestone":92},{"_id":"10c137a2d82ca5df40c5fd6843875be95eae76fb","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Tue Apr 27 08:57:37 2021"},"commit":"10c137a2d82ca5df40c5fd6843875be95eae76fb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 27 11:12:32 2021"},"message":"[fastcall] Migrate IsLeafTemplateForApiObject to Local<Value>\n\nThis CL makes the object passed as argument to IsLeafTemplateForApiObject\nbe received as a handle instead of a raw C++ pointer. From the codegen\npoint of view, the memory representation is the same, so this doesn't\nchange its semantics.\n\nBug: chromium:1052746\nChange-Id: Ibc116aa4d577ba95f30d1014f15f34ef3fbb1a35\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2851884\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74220}\n","milestone":92},{"_id":"0115a7e0f7544bc73831e2a63b4b7edd329bd087","author":{"name":"Alex Rudenko","email":"alexrudenko@chromium.org","time":"Thu Apr 22 06:10:34 2021"},"commit":"0115a7e0f7544bc73831e2a63b4b7edd329bd087","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Apr 23 09:22:18 2021"},"message":"Deprecate executionContextId in Runtime.addBinding\n\n`exectionContextId` parameter in Runtime.addBinding is not working\ncorrectly and does not have a practical use case. Therefore,\ndeprecating it in favour of the `executionContextName` parameter that\nbetter serves the purpose of exposing bindings to isolated worlds. We\nexpect most users to be able to migrate to `executionContextName`.\n\nBug: chromium:1169639\nChange-Id: Ic37cefa6a62501c7e903923f1f9c0da7e51326c8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2844652\nReviewed-by: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Alex Rudenko <alexrudenko@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74137}\n","milestone":92},{"_id":"0aacfb2a6ecbeda1d1d97ca113afd8253a1b9670","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Thu Apr 15 08:41:48 2021"},"commit":"0aacfb2a6ecbeda1d1d97ca113afd8253a1b9670","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 21 22:00:30 2021"},"message":"[cpu-profiler] Reintroduce support for context filtering\n\nAs we can still intend to run the web-exposed profiler outside of an\norigin-isolated environment, add support back for filtering by\nv8::Context.\n\nThis reverts commit 05af36810076ace617805a2343bc5e6bcd2006d0.\n\nBug: chromium:956688\nChange-Id: Idd98bea3213b5963f689a04de6c3743073efc587\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2785806\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Andrew Comminos <acomminos@fb.com>\nCr-Commit-Position: refs/heads/master@{#74112}\n","milestone":92},{"_id":"1527c4878a08e9cf1f83eace6a934a36b48b66d2","author":{"name":"Alex Rudenko","email":"alexrudenko@chromium.org","time":"Mon Apr 19 13:23:21 2021"},"commit":"1527c4878a08e9cf1f83eace6a934a36b48b66d2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 21 11:55:25 2021"},"message":"Expose V8CommandLineAPIScope and V8InspectorSession::createCommandLineAPI\n\nThis CL extracts CommandLineAPIScope from V8Console and exposes it\nas V8CommandLineAPIScope. Also, it exposes V8InspectorSession::createCommandLineAPI.\nThese changes will be used by InspectorPageAgent to install command\nline APIs when evaluating scripts added using CDP's command\nPage.addScriptToEvaluateOnNewDocument.\n\nChromium CL: https://crrev.com/c/2835786\n\nDoc: https://docs.google.com/document/d/1zGG7-NZMb-aOfFfHf1u4VsP4C-lZettopCvYDC6pkBw/\nBug: chromium:1200705\nChange-Id: I39b27f957cfb6d682ea84e385eaf25d09d261b58\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2835712\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Alex Rudenko <alexrudenko@chromium.org>\nCr-Commit-Position: refs/heads/master@{#74096}\n","milestone":92},{"_id":"6124a534b2de3f640a67fb36ee6ae2fdc4535542","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Fri Apr 16 12:33:55 2021"},"commit":"6124a534b2de3f640a67fb36ee6ae2fdc4535542","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Apr 16 13:48:07 2021"},"message":"[fastcall] Add support for leaf interface type checks\n\nThis CL adds an IsTemplateForApiObject method to FunctionTemplate\nallowing the embedder to check whether a given API object was\ninstantiated by this template without including parent templates\nin the search. It also replaces the v8::ApiObject in the fast API\nwith a raw v8::Value pointer to allow use of standard C++ casts.\n\nBug: chromium:1052746\nChange-Id: I0812ec8b4daaa5f5005aabf10b63e1e84e0b8f03\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2595310\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Sathya Gunasekaran  <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73999}\n","milestone":92},{"_id":"7f52e4f92d3d3ded9a1701ee2f93966075ae5004","author":{"name":"Arno Renevier","email":"arenevier@fb.com","time":"Wed Apr 14 16:35:24 2021"},"commit":"7f52e4f92d3d3ded9a1701ee2f93966075ae5004","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Apr 16 02:29:06 2021"},"message":"Heap Number encoding\n\n- represent smis as fake heap numbers\n- numbers nodes (both smi and heap numbers) reference a child node whose\n  name is \"value\" and whose entry is the string representation of that\n  number\n\nThat feature is disabled by default, and can be enabled by passing\ncaptureNumericValue: true when calling HeapProfiler.takeHeapSnapshot\n\nThis patch slightly refactors some functions that operate on \"essential\nobjects\". We now check that the object is essential before trying to\ncreate the entry. Otherwise, we would end up with smi objects created,\nbut not referenced anywhere.\n\nDesign doc:\nhttps://docs.google.com/document/d/1Qh1zxyn0SS5wzJzitD6ecBJTdFbQkJogSMwxDRsn44o/edit\n\nChange-Id: Ibbe6e79a54c4f9eace72bc0a0ccb622a97698e00\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2806747\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Arnaud Renevier <arenevier@fb.com>\nCr-Commit-Position: refs/heads/master@{#73985}\n","milestone":92},{"_id":"bbc72ef6c7d6d8e2c4dd074d7713e5c841003163","author":{"name":"Michaël Zasso","email":"mic.besace@gmail.com","time":"Thu Apr 15 06:30:06 2021"},"commit":"bbc72ef6c7d6d8e2c4dd074d7713e5c841003163","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 15 16:44:50 2021"},"message":"[api] Remove deprecated Symbol::Name()\n\nBug: v8:11165\nChange-Id: I022a50cc25ab57f6bb24739c0e65ebe599371e3d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2826129\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Michaël Zasso <mic.besace@gmail.com>\nCr-Commit-Position: refs/heads/master@{#73980}\n","milestone":92},{"_id":"d435eaa5e452ba39c7f8ccce6575ae199839b68a","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Wed Apr 14 14:01:29 2021"},"commit":"d435eaa5e452ba39c7f8ccce6575ae199839b68a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 14 15:21:25 2021"},"message":"[api] Add v8::Isolate::ThrowError helper\n\nAdd a ThrowError helper to encourage throwing full Error objects\ninstead of just v8::Strings.\n\nBug: v8:11195\nChange-Id: I15d75b1d39b817de3b9026a836b57a70d7c16a28\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2811738\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Dan Elphick <delphick@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73958}\n","milestone":92},{"_id":"521ae93bf652b0cc1fec1fdd788e3b80fb72a349","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Tue Apr 13 12:12:02 2021"},"commit":"521ae93bf652b0cc1fec1fdd788e3b80fb72a349","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 14 12:56:34 2021"},"message":"[api] Add v8::metrics::LongTaskStats for the LongTasks UKM\n\nBug: chromium:1173527\nChange-Id: If918b739f137b9c09030104b909e7bd2d4cd5984\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2817616\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73953}\n","milestone":92},{"_id":"ceb8e42b872cb9bbd5383889297a294b3abcf8ea","author":{"name":"Yuki Shiino","email":"yukishiino@chromium.org","time":"Mon Apr 12 15:29:48 2021"},"commit":"ceb8e42b872cb9bbd5383889297a294b3abcf8ea","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 14 03:39:21 2021"},"message":"[fastcall] Support FastApiCallbackOptions::CreateForTesting\n\nhttps://crrev.com/c/2817958 is going to support artificial\ncalls of NoAllocDirectCall for a testing purpose, and this\nnew API will be used there.\n\nChange-Id: If47ba080eede96e91ba60b89ff502dd3d3e34b93\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2822188\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Yuki Shiino <yukishiino@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73945}\n","milestone":92},{"_id":"6165fef8cc9dde52973e54c915e6905221b3f8fb","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Tue Apr 13 08:49:35 2021"},"commit":"6165fef8cc9dde52973e54c915e6905221b3f8fb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 13 09:49:48 2021"},"message":"[api] Remove previously deprecated Function::GetDisplayName().\n\nThe method was scheduled for removal in M92, as finaly part of the\nfn.displayName support removal.\n\nFixed: chromium:1177685\nDoc: https://bit.ly/devtools-function-displayName-removal\nChange-Id: I243dd6c9849a6f39e76dd003300b639bfd8df604\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2821954\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73930}\n","milestone":92},{"_id":"153f2cea8b4eee28e19741af2c21636a773feb2f","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Mon Apr 12 18:12:33 2021"},"commit":"153f2cea8b4eee28e19741af2c21636a773feb2f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 12 20:23:53 2021"},"message":"[ptr-cage] Deprecate Symbol::Description() in favor of Symbol::Description(isolate)\n\nWith a shared cage, there's no easy way to recover an Isolate from a\nheap pointer. Symbol::Description relies on RO symbols' description slot\nbeing uncompressed so a Handle could point to it. This isn't possible\nwith a shared cage without going through TLS to get an Isolate for\nHandle construction, so deprecate the method in favor of one that takes\nan Isolate directly.\n\nBug: v8:11460\nChange-Id: I69b2b7d77f4c00d0f58954cd80e22cba5ff222e3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2802860\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73924}\n","milestone":92},{"_id":"3ada6f27404b4ffd6d3e97cf15be76672f60c10d","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Sat Apr 10 02:09:41 2021"},"commit":"3ada6f27404b4ffd6d3e97cf15be76672f60c10d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 12 17:49:43 2021"},"message":"[ptr-cage] Introduce PtrComprCage\n\nThe pointer compression cage is the virtual memory reservation\nthat all compressed pointers fall within. This CL splits pointer\ncompression into two modes: a per-Isolate cage and a shared cage\namong multiple Isolates.\n\nWhen multiple Isolates are sharing a cage, they can decompress\neach others' pointers and share the same virtual memory range.\n\nBug: v8:11460\nChange-Id: I7b89b7413b8e7ca6b8b6faafd083dc387542a8b4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2783674\nReviewed-by: Dan Elphick <delphick@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73916}\n","milestone":92},{"_id":"5e0b94c4dc7988e4414d9a4c7722a4a9bed0eb48","author":{"name":"Wenyu Zhao","email":"wenyu.zhao@anu.edu.au","time":"Tue Apr 06 12:01:44 2021"},"commit":"5e0b94c4dc7988e4414d9a4c7722a4a9bed0eb48","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 12 17:34:13 2021"},"message":"Allowing map word to be used for other state in GC header.\n\nThis CL adds features to pack/unpack map words.\n\nCurrently V8 cannot store extra metadata in object headers -- because V8\nobjects do not have a proper header, but only a map pointer at the start\nof the object. To store per-object metadata like marking data, a side\ntable is required as the per-object metadata storage.\n\nThis CL enables V8 to use higher unused bits in a 64-bit map word as\nper-object metadata storage. Map pointer stores come with an extra step\nto encode the metadata into the pointer (we call it \"map packing\").\nMap pointer loads will also remove the metadata bits as well (we call it\n\"map packing\").\n\nSince the map word is no longer a valid pointer after packing, we also\nchange the tag of the packed map word to make it looks like a Smi. This\nhelps various GC and barrier code to correctly skip them instead of\nblindly dereferencing this invalid pointer.\n\nA ninja flag `v8_enable_map_packing` is provided to turn this\nmap-packing feature on and off. It is disabled by default.\n\n* Only works on x64 platform, with `v8_enable_pointer_compression`\n  set to `false`\n\nBug: v8:11624\nChange-Id: Ia2bdf79553945e5fc0b0874c87803d2cc733e073\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2247561\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73915}\n","milestone":92},{"_id":"dcdaf42fa8e66e442d0eb974dcf5f2dd000d72d4","author":{"name":"Emanuel Ziegler","email":"ecmziegler@chromium.org","time":"Fri Apr 09 10:19:25 2021"},"commit":"dcdaf42fa8e66e442d0eb974dcf5f2dd000d72d4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Apr 09 13:51:07 2021"},"message":"[wasm] Add CPU time metrics\n\nThis adds CPU time metrics to the WasmModuleDecoded (except for streaming),\nWasmModuleCompiled and WasmModuleTieredUp events. This can later be used\nto provide this information as UKMs or UMAs.\n\nBug: v8:11611\nChange-Id: I36818f5efbdcae2d3ed6f27c16db21f9d8440d98\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2796952\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCommit-Queue: Emanuel Ziegler <ecmziegler@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73882}\n","milestone":92},{"_id":"d5457f5fb7ea05ca05a697599ffa50d35c1ae3c7","author":{"name":"Stephen Belanger","email":"stephen.belanger@datadoghq.com","time":"Wed Mar 31 17:33:17 2021"},"commit":"d5457f5fb7ea05ca05a697599ffa50d35c1ae3c7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 08 10:19:07 2021"},"message":"[api] JSFunction PromiseHook for v8::Context\n\nThis will enable Node.js to get much better performance from async_hooks\nas currently PromiseHook delegates to C++ for the hook function and then\nNode.js delegates it right back to JavaScript, introducing several\nunnecessary barrier hops in code that gets called very, very frequently\nin modern, promise-heavy applications.\n\nThis API mirrors the form of the original C++ function based PromiseHook\nAPI, however it is intentionally separate to allow it to use JSFunctions\ntriggered within generated code to, as much as possible, avoid entering\nruntime functions entirely.\n\nBecause PromiseHook has internal use also, beyond just the Node.js use,\nI have opted to leave the existing API intact and keep this separate to\navoid conflicting with any possible behaviour expectations of other API\nusers.\n\nThe design ideas for this new API stemmed from discussion with some V8\nteam members at a previous Node.js Diagnostics Summit hosted by Google\nin Munich, and the relevant documentation of the discussion can be found\nhere: https://docs.google.com/document/d/1g8OrG5lMIUhRn1zbkutgY83MiTSMx-0NHDs8Bf-nXxM/edit#heading=h.w1bavzz80l1e\n\nA summary of the reasons for why this new design is important can be\nfound here: https://docs.google.com/document/d/1vtgoT4_kjgOr-Bl605HR2T6_SC-C8uWzYaOPDK5pmRo/edit?usp=sharing\n\nBug: v8:11025\nChange-Id: I0b403b00c37d3020b5af07b654b860659d3a7697\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2759188\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Anton Bikineev <bikineev@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73858}\n","milestone":92},{"_id":"baf2b088dd9f585aa597459f30d71431171666e2","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Wed Apr 07 14:27:44 2021"},"commit":"baf2b088dd9f585aa597459f30d71431171666e2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 07 16:00:22 2021"},"message":"[Jobs]: Cleanup in v8 platform.\n\nThis CL completes Jobs cleanup for deprecated and pure virtual functions in\nv8 platform.\n\nBug: chromium:1196703\nChange-Id: I823ab06b56077181e92eee5a6468096a355634fc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2810155\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73839}\n","milestone":91},{"_id":"e28dadc2070b202aab77b9e50a46e50be02f8f1c","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Mon Apr 05 19:42:59 2021"},"commit":"e28dadc2070b202aab77b9e50a46e50be02f8f1c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 05 20:54:55 2021"},"message":"[ptr-cage] Rename IsolateRoot to PtrComprCageBase\n\nCurrently, IsolateRoot is both the address of the Isolate root and the\nbase address of the pointer compression reservation. This CL teases the\ntwo uses apart by renaming IsolateRoot to PtrComprCageBase.\n\n- In addition to V8_COMPRESS_POINTERS, add a\n  V8_COMPRESS_POINTERS_IN_ISOLATE_CAGE (vs SHARED_CAGE).\n\n- Rename GetIsolate* helpers to GetPtrComprCageBase. When\n  V8_COMPRESS_POINTERS_IN_ISOLATE_CAGE is true, the helpers remain as\n  aliases to GetPtrComprCageBase.\n\n- Rename kPtrComprIsolateRootAlignment to kPtrComprCageBaseAlignment.\n\nBug: v8:11460\nChange-Id: I1d715f678ce9a0b5731895612ca14f56579b1c48\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2783672\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nAuto-Submit: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73790}\n","milestone":91},{"_id":"d9cf7c203b712f10e5b6c7478295587708d47518","author":{"name":"Tianping Yang","email":"yangtianping@oppo.com","time":"Wed Mar 31 09:58:19 2021"},"commit":"d9cf7c203b712f10e5b6c7478295587708d47518","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 31 14:30:56 2021"},"message":"[api] Expand comments on consuming cached data when compile script\n\nBug: v8:11607\nChange-Id: If997ed1ec6a250b197ed994a6d0e6013fbec4b2b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2796911\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73744}\n","milestone":91},{"_id":"c83c9590baf677665b0872ca68cba2c1cf3524c1","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Tue Mar 30 16:55:42 2021"},"commit":"c83c9590baf677665b0872ca68cba2c1cf3524c1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 31 08:42:42 2021"},"message":"[ic] Add a new MegaDOM IC\n\nThis patch implements the MegaDOM IC setup and access. A new MegaDOM\nIC state indicates that we've seen only DOM accessors at this access\nsite.\n\nThis CL only adds support for DOM getters in LoadIC, other kinds of\naccess will be added in follow on CLs.\n\nStill remaining TODO before shipping:\n1. Have a mechanism to invalidate the protector\n2. Have a mechanism to find the accessors that aren't overloaded\n3. Use a new builtin to miss to runtime on access check failure\n\nChange-Id: Ie12efe5e9fa284f023043b996d61e7d74e710ee2\nBug: v8:11321\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2618239\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Dan Elphick <delphick@chromium.org>\nReviewed-by: Mythri Alle <mythria@chromium.org>\nCommit-Queue: Sathya Gunasekaran  <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73733}\n","milestone":91},{"_id":"9eba2d85f420933c9c97caebf357b257b00dc93f","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Thu Mar 25 14:17:06 2021"},"commit":"9eba2d85f420933c9c97caebf357b257b00dc93f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 25 15:56:53 2021"},"message":"[fastcall] Add fast API testing facilities to d8\n\nThis CL provides the minimum necessary functionality to expose fast API\nfor testing in mjsunit, exposing the fast path for fuzzing. It exposes\na d8.test.fast_c_api with an `add_all` method, which exercises primitive\ntypes. On x64, all integer and floating point types are supported. On\nother platforms currently only 32-bit integers are included in the test.\n\nDesign doc:\nhttps://docs.google.com/document/d/1KUKPfXkSRZTA2gMwaWbpQKlYfw0C-T6AE3XzC4viHbo/\n\nBug: chromium:1052746\nChange-Id: Icc824199a26dd2abd2b869f5483a39d38e4dce3e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2749154\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Sathya Gunasekaran  <gsathya@chromium.org>\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73670}\n","milestone":91},{"_id":"16d9298a9c1f06ed8192c31baaef9c9cb1a4484c","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Tue Mar 23 08:02:32 2021"},"commit":"16d9298a9c1f06ed8192c31baaef9c9cb1a4484c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 23 09:03:34 2021"},"message":"[api] Add callback to set up conditional features\n\nOrigin trials allow webpages to use experimental features even though\nthe features are not yet enabled by default. These features will then\nget enabled per execution context: it is possible that the feature is\nenabled in one execution context but disabled in another execution\ncontext. In V8 we check for origin trials by calling a callback provided\nby the embedder that takes the context as a parameter and returns\nwhether a feature is enabled in this context or not.\n\nThis approach fails when a feature changes the context itself, e.g. by\nextending the global object. In that case the context is not available\nyet to check for the origin trial.\n\nTo solve the problem this CL adds a new API function that can be called\nby the embedder to notify V8 that context with the origin trial\ninformation is finished. After that V8 can read the origin trial\ninformation from the context and extend e.g. the global object with the\norigin trial features.\n\nAdditionally to the API this CL also adds code to enable the\nWebAssembly.Exception constructor conditionally, depending on whether\nit has been enabled by an origin trial or not.\n\nThe Blink-side change: https://crrev.com/c/2775573\n\nR=ulan@chromium.org, jkummerow@chromium.org\n\nChange-Id: Ic05c4a89eb3e0e31469e49da8767d630c43b2e00\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2773287\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73597}\n","milestone":91},{"_id":"84e0835ce79dd1e5383b4fd18f2d18ea666f72bb","author":{"name":"Hong Zheng","email":"hong.zheng@intel.com","time":"Fri Mar 12 13:41:01 2021"},"commit":"84e0835ce79dd1e5383b4fd18f2d18ea666f72bb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Mar 15 07:47:09 2021"},"message":"Update load start time\n\nAdd a V8 API to update load start time for RAIL PERFORMANCE_LOAD mode\n\nBug: v8:10947\n\nChange-Id: If86a815f8974b47a6f4ba82c3661c21b73f39553\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2423403\nAuto-Submit: Hong Zheng <hong.zheng@intel.com>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73393}\n","milestone":91},{"_id":"578f6be77fc5d8af975005c2baf918e7225abb62","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Thu Feb 25 18:09:49 2021"},"commit":"578f6be77fc5d8af975005c2baf918e7225abb62","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Mar 12 16:24:42 2021"},"message":"[api] Remove deprecated [Shared]ArrayBuffer API\n\nBug: v8:9380\nChange-Id: I47d23dda133c3838c7f0e8e5ccfdbe3b9520684f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2720306\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73375}\n","milestone":91},{"_id":"3094d59889a19e61eb993e206f3db7b5918ce0a4","author":{"name":"Toon Verwaest","email":"verwaest@chromium.org","time":"Thu Mar 11 17:53:28 2021"},"commit":"3094d59889a19e61eb993e206f3db7b5918ce0a4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 11 18:57:56 2021"},"message":"[wx] Keep the execute bit while making code writable\n\nOtherwise SMC perturbs the icache too much it seems.\n\nChange-Id: Iceea779a7e3deee90efe29df568732d6ac5bcffa\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2753768\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nAuto-Submit: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73355}\n","milestone":91},{"_id":"bc123a1fccd663144209937659946e4f64dd2f07","author":{"name":"Justin Novosad","email":"junov@chromium.org","time":"Tue Mar 02 18:33:15 2021"},"commit":"bc123a1fccd663144209937659946e4f64dd2f07","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 04 16:58:04 2021"},"message":"Add missing include to v8-fast-api-calls.h\n\nThis missing include prevents v8-fast-api-calls.h from being included in\nsome places in blink code.\n\nBUG=chromium:1181349\n\nChange-Id: Ib0678c9a380b702319bd1717fac48bdc64c9b394\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2724929\nAuto-Submit: Justin Novosad <junov@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73197}\n","milestone":91},{"_id":"aee471b2ff5b1a9e622426454885b748d226535b","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Wed Mar 03 09:22:44 2021"},"commit":"aee471b2ff5b1a9e622426454885b748d226535b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 03 15:39:38 2021"},"message":"[api] Avoid handles for const API functions\n\nHandles are notorious for preventing compiler optimizations. We should\navoid them for simple const functions.\n\n- Mark more API functions const\n- Mark more String functions const\n\nBug: v8:11195, chromium:808503, v8:11263\nChange-Id: I9940e85600bc7d19027039d807b3313e2dcccdc7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2575065\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73159}\n","milestone":91},{"_id":"3ba9e86665e80014cc8377843f16413a4b326e7d","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Mon Mar 01 17:46:41 2021"},"commit":"3ba9e86665e80014cc8377843f16413a4b326e7d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 03 14:34:32 2021"},"message":"[api] Advance API deprecation\n\nBug: v8:11165\nChange-Id: Id1c7abec73d5dd4824c0d84c9789a8b4ea4911ac\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2726513\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73156}\n","milestone":91},{"_id":"c613eb97792c5b264a1d03626cacfef3a505b421","author":{"name":"Alex Kodat","email":"akodat@rocketsoftware.com","time":"Tue Mar 02 20:48:16 2021"},"commit":"c613eb97792c5b264a1d03626cacfef3a505b421","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 03 06:37:44 2021"},"message":"[api] Add StackFrame GetScriptSource and GetScriptSourceMappingURL\n\nThese simplify production of extra information in stack traces or\ndereferencing source maps in processing stack traces. While these\ncan be managed externally, this can be very complicated in\nenvironments where scripts come from many different sources,\npossibly not even under embedder control. Since V8 already has\neasy access to this information, it's nice to share it with\nembedders.\n\nBug: v8:11509\nChange-Id: Ic5a1685adf4cdf456bdf7191ce815f728cf491e2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2724571\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73148}\n","milestone":91},{"_id":"1dd8624b524d14076160c1743f7da0b20fbe68e0","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Mar 02 16:45:05 2021"},"commit":"1dd8624b524d14076160c1743f7da0b20fbe68e0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 02 18:18:53 2021"},"message":"[api] Re-introduce v8::String::IsExternal\n\nAfter deprecation and removal of the old misleading API we re-add\nv8::String::IsExternal which returns true for both, external one-byte and\nexternal two-byte strings.\n\nBug: v8:10641\nChange-Id: I4c66d4df891f7180c7a727a45c1fbd254a7f5c02\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2726512\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73137}\n","milestone":91},{"_id":"0390795feea75d550ff8b0ef22e4200ef4cf8bae","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Tue Mar 02 15:43:27 2021"},"commit":"0390795feea75d550ff8b0ef22e4200ef4cf8bae","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 02 17:14:03 2021"},"message":"[scanner] Add a stream for windows-1252\n\nAdd a Utf16CharacterStream for windows-1252, which uses a table to\ncovert from windows-1252 to the appropriate uc16 character. This fixes\nissues where windows-1252 encoded source was treated like latin-1.\n\nThis introduces a new encoding type in the API, so embedders will have\nto opt-in to using this new stream.\n\nFixed: v8:9315\nChange-Id: I2e847c2d4f1727281f6be24b4743d77bb232a62d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2729338\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nAuto-Submit: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73134}\n","milestone":91},{"_id":"3a2836e01bc61fc5fa944f05ab0e36e66543c7cf","author":{"name":"Hannes Payer","email":"hpayer@chromium.org","time":"Tue Feb 23 12:04:41 2021"},"commit":"3a2836e01bc61fc5fa944f05ab0e36e66543c7cf","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 25 14:27:28 2021"},"message":"Update include/OWNERS\n\nChange-Id: I0005fe0ed7b9f00fd074161d355da430b85675ac\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2714703\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCommit-Queue: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73052}\n","milestone":91},{"_id":"db34c5a140ac04bd0e2a9d802c135b76eeda72ce","author":{"name":"Austin Eng","email":"enga@chromium.org","time":"Wed Feb 10 08:47:06 2021"},"commit":"db34c5a140ac04bd0e2a9d802c135b76eeda72ce","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 24 19:17:28 2021"},"message":"[fastcall] Introduce a builder pattern for specifying type modifiers\n\n- Add a CFunctionBuilder interface to allow adding modifier flags\n  to argument types. This will be used to support IDL attributes\n  like [EnforceRange], [Clamp], and [AllowShared]. This CL adds\n  only the interface, but the actual modifier flags do not exist\n  yet as they would not be implemented.\n- Remove the internals of the old CFunction type inference and\n  implement it on top of CFunctionBuilder.\n\nBug: chromium:1052746\nChange-Id: I09a7cba07105097517a8426a8eeb891393883ac6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2686686\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Austin Eng <enga@chromium.org>\nCr-Commit-Position: refs/heads/master@{#73024}\n","milestone":91},{"_id":"cde7a77e3a253dc96424a7ef8d7118022cd26dfd","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Thu Jan 07 18:35:22 2021"},"commit":"cde7a77e3a253dc96424a7ef8d7118022cd26dfd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 08 02:40:54 2021"},"message":"[inspector] Remove special wasm RemoteObject type.\n\nPreviously we had introduced a special `v8::internal::WasmValue` type\nwhich we used to expose Wasm values to the Scope view in Chromium\nDevTools. The problem however is that these values cannot be exposed to\nJavaScript (and in particular not to Debug Evaluate), which means that\nparticularly for v128 and i64 we have inconsistent representations\nacross the various parts of DevTools.\n\nThis change removes the `wasm` type from the RemoteObject and all the\nadjacent logic, and paves the way for a uniform representation of Wasm\nvalues throughout DevTools. For i64 we will simply use BigInt\nconsistently everywhere, and for i32, f32 and f64 we'll just use Number.\nFor externref we will represent the values as-is directly. For v128\nvalues we currently use a Uint8Array, but will introduce a dedicated\nWasmSimd128 class in a follow-up CL.\n\nBug: chromium:1071432\nFixed: chromium:1159402\nChange-Id: I0671e5736c9c27d7ca376e23ed74f16d36e03c80\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2614428\nReviewed-by: Zhi An Ng <zhin@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Zhi An Ng <zhin@chromium.org>\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71962}\n","milestone":89},{"_id":"99b72a674570547b9d4d2eefe173563386ad4351","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Thu Jan 07 13:26:07 2021"},"commit":"99b72a674570547b9d4d2eefe173563386ad4351","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 07 15:12:44 2021"},"message":"[inspector] Synchronize the various `subtype` enums.\n\nNote that the `wasm` type and it's subtypes will be removed soon, so we\ndon't need to synchronize them.\n\nFixed: chromium:1162930\nChange-Id: I8549679cbe53a1e50e98acedf8547dc09c20ad27\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2613036\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71950}\n","milestone":89},{"_id":"8b33c87239c35f665c39ad1c4030e06069e4e277","author":{"name":"Sara Tang","email":"sartang@microsoft.com","time":"Tue Jan 05 18:43:34 2021"},"commit":"8b33c87239c35f665c39ad1c4030e06069e4e277","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 05 20:11:03 2021"},"message":"Step 1 (of 3-ish): Basic ETW Instrumentation in V8\n\nDesign doc:\nhttps://docs.google.com/document/d/1xkXj94iExFgLWc_OszTNyNGi523ARaKMWPZTeomhI4U\nA lot has changed since the last patchset! I recommend revisiting this\ndesign doc and reading the parts in green. I explain the roadmap for\nwhat changes to expect from ETW instrumentation as well as the\ninstrumentation of this particular CL.\n\nI'll do my best to answer any further questions anyone has about my\nparticular instrumentation or ETW in general :)\n\n---\n\nThis is the first of a series of changelists to round out ETW\ninstrumentation for V8.\n\nThis changelist represents the most minimal change needed to instrument\nETW in V8. In particular, it:\n  - defines and registers the ETW provider,\n  - interacts minimally with the rest of V8, by hooking into the\n    existing TracingController::AddTraceEvent function,\n  - is designed with a platform-agnostic layer, so that event tracers\n    for other platforms can be instrumented in teh future.\n\nSome notes on instrumentation (aka I copied stuff from the design doc):\n\nWe make heavy use of the TraceLogging API to log events. It differs from\nprevious methods of emitting ETW events in that it doesn<E2><80><99>t\nrequire the overhead of a separate manifest file to keep track of\nmetadata; rather, events using this API are self-descriptive.\n\nHere are the five major steps to instrument the TraceLogging API:\n  - Forward declare the provider (from provider-win.h)\n  - Define the provider in a .cc file (from provider-win.cc)\n  - Register the provider (called from v8.cc).\n  - Write events (called from libplatform/tracing-controller.cc)\n  - Unregister the provider (called from v8.cc)\n\nAt the base, we have an abstract provider class that encapsulates the\nfunctionality of an event provider. These are things like registering\nand unregistering the provider, and the actual event-logging.\n\nThe provider class is split into provider-win and provider-mac\n(currently not instantiated) classes, with OS-dependent implementations\nof the above functions.\n\nIn particular, the TraceLogging API is used only in provider-win. It is\nhere that we forward declare and define the provider, as well as write\nETW events.\n\nFinally, there is a v8-provider class that serves as a top-level API and\nis exposed to the rest of V8. It acts as a wrapper for the\nplatform-specific providers.\n\nThe .wprp file is needed so that Windows Performance Recorder knows how\nto capture our events.\n\nSome considerations:\n  - Is TracingController::AddTraceEvent the best place from which to\n    write my events?\n  - Is src/libplatform/tracing the best place to put my instrumentation?\n  - Right now, I fail the preupload because of this, which tells me my\n    files are probably not in the best location:\n\nYou added one or more #includes that violate checkdeps rules.\nsrc\\init\\v8.cc Illegal include: \"src/libplatform/tracing/v8-provider.h\"\nBecause of \"-src/libplatform\" from src's include_rules.\n\nChange-Id: Id53e4a034c9e526524a17000da0a647a95d93edf\nBug: v8:11043\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2233407\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCommit-Queue: Sara Tang <sartang@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#71918}\n","milestone":89},{"_id":"39645430e219bce7f27cecdf0da2843ebc5bcc01","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Mon Dec 28 14:43:10 2020"},"commit":"39645430e219bce7f27cecdf0da2843ebc5bcc01","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Dec 28 16:00:42 2020"},"message":"[inspector][wasm] Remove obsolete Debugger.executeWasmEvaluator().\n\nWith https://crrev.com/c/2087396 we introduced a new CDP method\n`Debugger.executeWasmEvaluator()`, which we originally intended\nto use as the foundation for Debug-Evaluate on Wasm frames.\n\nHowever in the process of prototyping we learned that it is too\ncostly and too inefficient to use WebAssembly modules here, and\nwe switched to regular Debug-Evaluate with JavaScript instead\n(with a special debug proxy exposed that allows JavaScript to\npeak into the Wasm frame), since JavaScript is better suited\nfor short-lived / short-running snippets and we don't need\nclang and wasm-ld then to generate these snippets.\n\nThe JavaScript exposed debug proxy (as described in [1]) not\nonly enables more powerful and flexible Debug-Evaluate for the\nDWARF C/C++ extension, but also serves as the basis for various\naspects of the Basic Wasm Developer Experience.\n\nIn order to pay down technical debt and to keep the maintenance\noverhead low, we should remove the initial prototype now, also\nto ensure that we don't accidentally attract other users of CDP\nto rely on this unsupported API (despite it being marked as\n\"experimental\").\n\n[1]: https://docs.google.com/document/d/1VZOJrU2VsqOZe3IUzbwQWQQSZwgGySsm5119Ust1gUA\n\nFixed: chromium:1162062\nBug: chromium:1020120, chromium:1068571, chromium:1127914\nChange-Id: I6dba8c906a8675ce6c29a52e3c32bb6626a27247\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2605186\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71882}\n","milestone":89},{"_id":"f656eab5928876809ef46e18de0c9d35d489e17a","author":{"name":"Andrey Kosyakov","email":"caseq@chromium.org","time":"Wed Dec 23 03:54:47 2020"},"commit":"f656eab5928876809ef46e18de0c9d35d489e17a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 23 05:15:47 2020"},"message":"DevTools: add support for system-unique execution context ids\n\nThis adds ExecutionContextDescription.uniqueId for a system-unique\nway to identify an execution context and supports it in Runtime.evaluate.\nThis allows a client to avoid accidentally executing an expression\nin a context different from that originally intended if a navigation\noccurs while Runtime.evaluate is in flight.\n\nDesign doc: https://docs.google.com/document/d/1vGVWvKP9FTTX6kimcUJR_PAfVgDeIzXXITFpl0SyghQ\n\nBug: v8:11268, chromium:1101897\nChange-Id: I4c6bec562ffc85312559316f639d641780144039\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2594538\nCommit-Queue: Andrey Kosyakov <caseq@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71869}\n","milestone":89},{"_id":"6e9f33f99cd6e1cfc048360feb0405dc931309eb","author":{"name":"Andrey Kosyakov","email":"caseq@chromium.org","time":"Tue Dec 22 07:13:23 2020"},"commit":"6e9f33f99cd6e1cfc048360feb0405dc931309eb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 22 18:40:10 2020"},"message":"Delegate unique id generation to embedder\n\nThis lets embedder to produce an id with sufficient entropy to\nfacilitate an id appropriate for a multi-process system and\nimmune to regular RNG seed being overriden, while maintaining\ndeterministic id allocation for tests.\n\nDesign doc: https://docs.google.com/document/d/1vGVWvKP9FTTX6kimcUJR_PAfVgDeIzXXITFpl0SyghQ\nRelated blink-side change: https://chromium-review.googlesource.com/c/chromium/src/+/2600273\n\nBug: v8:11268\nChange-Id: I1a4d12463cf56d4378859dfa3ee4d717e176d468\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2600442\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Andrey Kosyakov <caseq@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71864}\n","milestone":89},{"_id":"8ae4dc4088826210a52bd678b1921b4e68be2c4b","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Mon Dec 14 20:40:56 2020"},"commit":"8ae4dc4088826210a52bd678b1921b4e68be2c4b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 16 03:48:45 2020"},"message":"[modules][api] Implement HostGetSupportedImportAssertions\n\nImplement the HostGetSupportedImportAssertions, whose purpose\nis to filter the list of import assertions exposed to the embedder to\nonly those assertion with keys that the embedder recognizes. See\nhttps://tc39.es/proposal-import-assertions/#sec-hostgetsupportedimportassertions.\n\nThis change doesn't actually implement it as a callback, but instead\npasses the supported assertions during creation of the Isolate via\nCreateParams. This expresses clearly the requirement that the supported\nassertions must never change for the lifetime of the Isolate.\n\nNote that we still need to maintain all assertions in a map\nwhile parsing the import assertions clause, because duplicate keys for\nan unsupported assertion still needs to be detected as a parse error. So,\nthe filtering is done later during\nSourceTextModuleDescriptor::AstModuleRequest::Serialize.\n\nThe actual filtering algorithm simply iterates the assertions and the\nsupported assertion keys in a nested loop. There's currently only one\nassertion in use (\"type\"), so there should be no reason to get too\nclever here unless at least several more assertions are generally\nsupported.\n\nBug: v8:10958\nChange-Id: I9a2d965e9d452718d0ddfe9dca55b7b4ed963019\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2572173\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#71776}\n","milestone":89},{"_id":"4df69aca81f6d84af86e5883cf80b8ccb8b465f8","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Tue Dec 15 07:27:53 2020"},"commit":"4df69aca81f6d84af86e5883cf80b8ccb8b465f8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 15 12:11:13 2020"},"message":"Expose scriptId as integer\n\nEmbedders often use integers for representing scriptIds, but the\nstack trace interface only exposes scriptIds as strings, which\nintroduces the need for parsing the scriptId string to an int in\nthe embedder.\n\nThis CL also exposes the scriptId as an integer.\n\nBug: chromium:1158782\nChange-Id: I7d85ad1497f2eff17f5cd8f9c87f0c72696c1ecf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2589973\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71761}\n","milestone":89},{"_id":"e677c91f189878d441002a07880cbb2a33cd5624","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Dec 11 15:18:37 2020"},"commit":"e677c91f189878d441002a07880cbb2a33cd5624","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Dec 11 16:19:31 2020"},"message":"[include][cleanup] Replace typedef by using\n\nThe rest of the code base was already migrated last year in\nhttps://crrev.com/c/1631409. In the API we have to be more careful to\nnot break embedders. According to the standard there is no semantic\ndifference between typedef and using ([decl.typedef#2]):\n  A typedef-name can also be introduced by an alias-declaration. The\n  identifier following the using keyword becomes a typedef-name and the\n  optional attribute-specifier-seq following the identifier appertains\n  to that typedef-name. Such a typedef-name has the same semantics as if\n  it were introduced by the typedef specifier.\n\nThus this CL replaces all typedefs in include/v8.h by the equivalent\nusing declaration. This improves readability, especially for function\npointer types.\n\nR=ulan@chromium.org\nCC=leszeks@chromium.org\n\nBug: v8:11074\nChange-Id: Id917b6aa5c8cd289c60bda5da1e3667e747936e7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2563880\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71719}\n","milestone":89},{"_id":"4bf051d536a172e7932845d82f918ad7280c7873","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Tue Dec 08 21:13:54 2020"},"commit":"4bf051d536a172e7932845d82f918ad7280c7873","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Dec 11 13:36:41 2020"},"message":"[api] Add Context::GetMicrotaskQueue method\n\nAdd a method that returns the microtask queue that is being used\nby the `v8::Context`.\n\nThis is helpful in non-monolithic embedders like Node.js, which\naccept Contexts created by its own embedders like Electron, or\nfor native Node.js addons. In particular, it enables:\n\n1. Making sure that “nested” `Context`s use the correct microtask\n   queue, i.e. the one from the outer Context.\n2. Enqueueing microtasks into the correct microtask queue.\n\nPreviously, these things only worked when the microtask queue for\na given Context was the Isolate’s default queue.\n\nAs an alternative, I considered adding a way to make new `Context`s\ninherit the queue from the `Context` that was entered at the time\nof their creation, but that seemed a bit more “magic”, less flexible,\nand didn’t take care of concern 2 listed above.\n\nChange-Id: I15ed796df90f23c97a545a8e1b30a3bf4a5c4320\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2579914\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71710}\n","milestone":89},{"_id":"72249208e745e01999669522f0e75bfe192e671e","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Tue Dec 01 15:58:57 2020"},"commit":"72249208e745e01999669522f0e75bfe192e671e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Dec 10 16:48:48 2020"},"message":"[Jobs]: Deprecate IsCompleted and IsRunning.\n\nFollow up on https://chromium-review.googlesource.com/c/v8/v8/+/2510969\nNow that gin implements the new version:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/2566052\nThese can be deprecated.\n\nChange-Id: Ie1e5448655e40eb3c11089f59510f269a9873e66\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2566430\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71700}\n","milestone":89},{"_id":"a8f6c0610883ffd6ac3f2e06206e9b23335a2f48","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Fri Dec 04 02:50:17 2020"},"commit":"a8f6c0610883ffd6ac3f2e06206e9b23335a2f48","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Dec 07 19:41:09 2020"},"message":"Allow casting to Primitive types from Data\n\nAlthough every Primitive is a Data, the Cast operations for the\nsubclasses of Primitive do not allow casting directly from Data to the\nsubclasses without first going through Value.  Because of this,\nPrimitives extracted from a V8::FixedArray require two casts to get to\nthe \"real\" type.\n\nThus, as a convenience to embedders, this change makes it possible to\ncast directly from Data to all the subtypes of Primitive.\n\nAlso, this change makes the parameter names in the declarations match\nthose in the definitions, though there does not seem to be a universally\nfollowed convention regarding these.\n\nBug: v8:10958\nChange-Id: I18dc3fbb9a9bccb2cb3b75efd829af64d46d8eb9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2573816\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#71649}\n","milestone":89},{"_id":"058299a8817e60abf9ee37c769b00cda37d5bdfd","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Mon Dec 07 07:56:41 2020"},"commit":"058299a8817e60abf9ee37c769b00cda37d5bdfd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Dec 07 11:45:45 2020"},"message":"[wasm] Use WebAssembly.Memory objects in the scope chain.\n\nPreviously V8 would wrap the WebAssembly.Memory backing stores into\nUint8Arrays and report that as memories, but that's confusing to the\ndeveloper, since that's not what's really being used. The way that\nDevTools presents the backing stores of memories, it's still perfectly\npossible to get hold of an Uint8Array if that's what the developer is\nlooking for.\n\nTo make it possible to easily identify the WebAssembly.Memory objects\nin the DevTools front-end (in particular for the memory inspector) we\nadd a 'webassemblymemory' subtype to the Chrome DevTools Protocol. We\nalso improve the description for the memories to include the number\nof active pages.\n\nFixed: chromium:1155566\nScreenshot: https://imgur.com/8enx57u.png\nChange-Id: I63dbabe0e372e9ad6dcc8e6642cdb743147a620c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2574699\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71641}\n","milestone":89},{"_id":"ed64b9822219f26660592ee5048418c1d4ade2a9","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Dec 01 09:22:59 2020"},"commit":"ed64b9822219f26660592ee5048418c1d4ade2a9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 01 12:16:06 2020"},"message":"[api] Clean up ScriptCompiler::StartStreaming* methods\n\nBug: chromium:1061857\nChange-Id: I81ec92979b2e64f77385df79c084b98485c266ff\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2563265\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nReviewed-by: Mythri Alle <mythria@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71525}\n","milestone":89},{"_id":"17ed49b5605ed9b9fcf7fbef8a59ca9594dfef01","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Nov 30 21:30:55 2020"},"commit":"17ed49b5605ed9b9fcf7fbef8a59ca9594dfef01","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 01 12:15:01 2020"},"message":"heap, cppgc: Add write barrier for TracedReference\n\nAdds publicly callable version of write barrier for TracedReferenceBase.\n\nBug: chromium:1056170\nChange-Id: Ie45b4ebbe91d9f0e8f76b521dcbfd931232adcf6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2565248\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71524}\n","milestone":89},{"_id":"9d72d08a8c74d48eed53f742aebd56a5076cb8dd","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Wed Nov 25 19:10:03 2020"},"commit":"9d72d08a8c74d48eed53f742aebd56a5076cb8dd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 30 19:54:52 2020"},"message":"[modules] Add ResolveModuleCallback that takes import assertions\n\nThis change completes the necessary API changes for import assertions\ndiscussed in\nhttps://docs.google.com/document/d/1yuXgNHSbTAPubT1Mg0JXp5uTrfirkvO1g5cHHCe-LmY.\n\nThe old ResolveCallback is deprecated and replaced with a\nResolveModuleCallback that includes import assertions.  Until\nResolveCallback is removed, InstantiateModule and associated functions\nare modified to accept both types of callback, using the new one if it\nwas supplied and the old one otherwise.  An alternative that I chose not\nto go with would be to just duplicate InstantiateModule and associated\nfunctions for both callback types.\n\nSyntheticModule::PrepareInstantiate's callback parameter was unused so I\nremoved it.\n\nBug: v8:10958\nChange-Id: I8e9fbaf9c2853b076b13da02473fbbe039b9db57\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2551919\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#71506}\n","milestone":89},{"_id":"9a1b4763765e8061db6d56c9d374c37fe8627f15","author":{"name":"Santiago Aboy Solanes","email":"solanes@chromium.org","time":"Thu Nov 26 14:24:36 2020"},"commit":"9a1b4763765e8061db6d56c9d374c37fe8627f15","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 27 17:29:35 2020"},"message":"[config] Add V8_NODISCARD to Scopes in v8.h\n\nLike  https://crrev.com/c/v8/v8/+/2555001 for v8.h. Done in a separate\nCL in case it needed to be reverted.\n\nChange-Id: I0c7a7cb24e8f0855c8b80ddeeaab979f10011c4a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2562252\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCommit-Queue: Santiago Aboy Solanes <solanes@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71455}\n","milestone":89},{"_id":"03a940ebee4a18b6a595440a9c3793f1be3574d9","author":{"name":"Santiago Aboy Solanes","email":"solanes@chromium.org","time":"Wed Nov 25 10:50:49 2020"},"commit":"03a940ebee4a18b6a595440a9c3793f1be3574d9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 25 11:49:05 2020"},"message":"[config] Add [[nodiscard]] as an attribute to v8config\n\nThis allows us to assert at compile time that a class instance is\nassigned, which is particularly useful for Guard classes.\n\nChange-Id: Id16b2bb70d29573566e821c908c1169d49ec57af\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2552415\nCommit-Queue: Santiago Aboy Solanes <solanes@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71397}\n","milestone":89},{"_id":"f588c889a40d8e67c93089bd0c816b0955747faa","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Tue Nov 24 19:13:00 2020"},"commit":"f588c889a40d8e67c93089bd0c816b0955747faa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 24 21:16:02 2020"},"message":"[modules] Add refactored API to get ModuleRequests and expose import assertions\n\nThis change refactors the v8.h API as discussed in\nhttps://docs.google.com/document/d/1yuXgNHSbTAPubT1Mg0JXp5uTrfirkvO1g5cHHCe-LmY/edit#heading=h.q0c9h4p928mn\nsuch that a v8::Module exposes module requests as a FixedArray of\nModuleRequest objects, which can then be used to obtain their module\nspecifier and source code offset.  This replaces the old functions that\npassed back individual specifier Strings and Locations via repeated\ncalls to getters that take an index.  These are marked as deprecated.\n\nThe new ModuleRequest interface includes a getter for an\nImportAssertions FixedArray, which will contain the import assertions\nfor the request if --harmony-import-assertions is set, and will be\nempty otherwise.\n\nOne notable change here is that the APIs now return source code offsets\nrather than v8::Locations.  The host must then call the new\nModule::SourceOffsetToLocation to convert these offsets into line/column\nnumbers. This requires a bit more back-and-forth, but allows the host to\ndefer the cost of converting from source offset to line/column numbers\nuntil an error needs to be reported, potentially skipping the work\naltogether.\n\nBug: v8:10958\nChange-Id: I181639737c701e467324e6c781aa4d7bdd87ae8c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2545577\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71387}\n","milestone":89},{"_id":"9750bda3dfd985a5f2732f163daf3c24ceea1547","author":{"name":"Sara Tang","email":"sartang@microsoft.com","time":"Fri Nov 20 23:18:21 2020"},"commit":"9750bda3dfd985a5f2732f163daf3c24ceea1547","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 24 21:02:32 2020"},"message":"(Step 3 of 3): Prepping Wasm events in the Recorder interface\n\nRemoved wall_clock_time_in_us field.\n\nBug: v8:11109\nChange-Id: Ib3efa74fc741b793ef064c1d12ca1797be3a10c1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2550280\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Sara Tang <sartang@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#71386}\n","milestone":89},{"_id":"546939fe77cdeee1f870b7393a82d88525a67963","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Nov 24 14:07:00 2020"},"commit":"546939fe77cdeee1f870b7393a82d88525a67963","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 24 19:51:42 2020"},"message":"[api] Simplify ScriptOrigin\n\n- Use C++ primitives (int, bool) for the ScriptOrigin constructor.\n- Deprecate the old accessors and constructor\n\nBug: v8:11195\nChange-Id: I739edd6b4c58e19a8a16ddce863eea14ec933697\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2555005\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71384}\n","milestone":89},{"_id":"a48fcd6d3bdeaf7f6541b7de5c9609841ecd4dd2","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Wed Nov 18 12:30:06 2020"},"commit":"a48fcd6d3bdeaf7f6541b7de5c9609841ecd4dd2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 23 15:18:21 2020"},"message":"[api] Add module streaming support\n\n- Add support for module streaming compilation\n- Enable module streaming testing d8\n- Update API tests to include basic module streaming\n\nBug: chromium:1061857\nChange-Id: I3ac95f7d672c382406182fb6900b1095f15c63b3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2536457\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71342}\n","milestone":89},{"_id":"7a62cceb72cd9d9b95cf2517accb29c665a60330","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Wed Nov 18 11:19:56 2020"},"commit":"7a62cceb72cd9d9b95cf2517accb29c665a60330","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 18 12:29:22 2020"},"message":"[fastcall] Add CPU profiler support for fast calls\n\nThis CL introduces a new fast_api_call_target field on the isolate,\nwhich is set by Turbofan before making the fast call. It then uses\nthe field when creating a stack sample and stores it in the existing\nexternal_callback_entry used for regular API callbacks. The CL also\nadds a cctest with simple usage scenario and introduces a minor\nrefactoring in test-api.cc.\n\nDesign doc:\nhttps://docs.google.com/document/d/1r32qlPzGz0P7nieisJ5h2qfSnWOs40Cigt0LXPipejE/edit\n\nBug: chromium:1052746\nChange-Id: I2dab1bc395ccab0c14088f7c354fb52b08df8d32\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2488683\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71254}\n","milestone":89},{"_id":"9f5b10b19e8885010a72b6690275fe0211d8d3b7","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Nov 17 09:46:33 2020"},"commit":"9f5b10b19e8885010a72b6690275fe0211d8d3b7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 18 10:45:39 2020"},"message":"[API] Advance API deprecation\n\nRemove more deprecated APIs after upgrading uses in chrome.\n\nBug: v8:11165, v8:10641, v8:8124, chromium:1096017\nChange-Id: If0379806d73c2dbc877f09603b15a5a68dc75d36\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2543926\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71252}\n","milestone":89},{"_id":"b0d990f93239529e56c024045b7b38c10b23160a","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Sun Nov 15 10:36:09 2020"},"commit":"b0d990f93239529e56c024045b7b38c10b23160a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 17 11:15:05 2020"},"message":"api,heap: Add public version of CppHeap\n\nAllows embedders to allocate C++ objects on the internal managed C++\nheap.\n\nBug: chromium:1056170\nChange-Id: Ibd81d0fc915478a81f14e8ab12a631e442790f04\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2536642\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71225}\n","milestone":89},{"_id":"e50161e549579d6b4ea6a525c0b274b06d8d1ad2","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Mon Nov 16 16:12:20 2020"},"commit":"e50161e549579d6b4ea6a525c0b274b06d8d1ad2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 16 17:27:28 2020"},"message":"[API] Advance API deprecation\n\nBug: v8:11165, v8:10096\nChange-Id: I4be596f74a231641b8032e70063f47f4776ec6a8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2539919\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71212}\n","milestone":89},{"_id":"a18a674bb8423d0eec98e3d3933f648a7029d79d","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Fri Nov 13 16:10:56 2020"},"commit":"a18a674bb8423d0eec98e3d3933f648a7029d79d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 13 17:20:58 2020"},"message":"[api] Introduce a single-threaded version of DefaultPlatform\n\nThe new platform can be used in combination with --single-threaded.\nIt disables background threads and thus avoids waiting on mutexes\nand condition variables completely, which is useful for V8 embedders\nthat fork the V8 process after initialization.\n\nAs a bonus the new platform allows use to test --single-threaded and\nhas already uncovered an existing bug in parallel pointer updating code.\n\nChange-Id: I3446fa027d2a077641cdaac0cd08062a1acae176\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2416501\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71187}\n","milestone":89},{"_id":"9ec952d76584beb3b95d1c54107b971c0ff55677","author":{"name":"Alfonso Castaño","email":"alcastano@google.com","time":"Wed Nov 04 10:18:59 2020"},"commit":"9ec952d76584beb3b95d1c54107b971c0ff55677","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 13 09:42:04 2020"},"message":"Introduce CSPViolation as pause reason (V8)\n\nThis CL adds the CSPViolation pause reason.\nSuch an enum will be used to enable breakpoints on Trusted Type violations.\n\nDesign doc: https://docs.google.com/document/d/1rlRtq_Ai0leS9sqlRvoOL5RNc1BR6Q1yAVvLLJFasMA/\nFrontend CL: https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2520827\nFollow-up CL: https://chromium-review.googlesource.com/c/chromium/src/+/2517519\n\nBug: chromium:1142804\nChange-Id: Iefdbb52115d0ba1810527773a8a2828e795fe533\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2519513\nReviewed-by: Daniel Vogelheim <vogelheim@chromium.org>\nReviewed-by: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Alfonso Castaño <alcastano@google.com>\nCr-Commit-Position: refs/heads/master@{#71172}\n","milestone":89},{"_id":"2970147b913c84df0c2dcafc99f7210a6c3bbe14","author":{"name":"Lutz Vahl","email":"vahl@chromium.org","time":"Thu Nov 12 10:39:44 2020"},"commit":"2970147b913c84df0c2dcafc99f7210a6c3bbe14","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 12 11:55:44 2020"},"message":"Change Version number to 8.9\nTBR=vahl@chromium.org\n\nChange-Id: Ife9b1f135cd181822f39328b2524a739ddd04e6b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2534473\nReviewed-by: Lutz Vahl <vahl@chromium.org>\nCommit-Queue: Lutz Vahl <vahl@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71147}\n","milestone":89},{"_id":"8bd612d13f4fcbfebdfab38c63b92c0c0557b4ae","author":{"name":"Liviu Rau","email":"liviurau@chromium.org","time":"Tue Oct 05 12:43:56 2021"},"commit":"8bd612d13f4fcbfebdfab38c63b92c0c0557b4ae","committer":{"name":"Liviu Rau","email":"liviurau@chromium.org","time":"Tue Oct 05 12:49:28 2021"},"message":"Make roller owner of touched files\n\nBug: v8:12276\nChange-Id: I3c24f77da87ed8049b905d224df6296c58f37434\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3205890\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nOwners-Override: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/branch-heads/9.0@{#81}\nCr-Branched-From: bd0108b4c88e0d6f2350cb79b5f363fbd02f3eb7-refs/heads/9.0.257@{#1}\nCr-Branched-From: 349bcc6a075411f1a7ce2d866c3dfeefc2efa39d-refs/heads/master@{#73001}\n","milestone":90},{"_id":"ed225df70cc62b03942850ddd5493c365aff3157","author":{"name":"Santiago Aboy Solanes","email":"solanes@chromium.org","time":"Fri Feb 19 10:29:01 2021"},"commit":"ed225df70cc62b03942850ddd5493c365aff3157","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 19 12:17:04 2021"},"message":"[objects] Cache the ExternalString's data in its resource\n\nFor external uncached strings (also called \"Small External Strings\")\nwith cacheable resources, we can cache its resource's data at the\nstring's creation time. This allows us to safely read the data from the\nbackground as we wouldn't trigger a data() callback.\n\nFor more information regarding the investigation and possible proposals\nsee\nhttps://docs.google.com/document/d/101eAQqFpBPWFGNJicxtdlwYShJkTOUsEuxkVVeu5Hrk/edit?usp=sharing\n\nBug: v8:7790, v8:11463\nChange-Id: I6164092b01a6ccb525a9516f476e066b35fb1f96\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2685177\nCommit-Queue: Santiago Aboy Solanes <solanes@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72862}\n","milestone":90},{"_id":"6c5d7c2a807b02d8d804772fceb8e5605da98545","author":{"name":"Austin Eng","email":"enga@chromium.org","time":"Wed Feb 10 08:35:18 2021"},"commit":"6c5d7c2a807b02d8d804772fceb8e5605da98545","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 18 17:20:24 2021"},"message":"[fastcall] Remove unused / unsupported APIs from the interface\n\n- Remove unused type inference paths which will be replaced\n  with more explicit structs.\n- Removes the tagged pointer from CTypeInfo since the embedder\n  will perform the type check for API objects.\n\nBug: chromium:1052746\nChange-Id: I47a5f5ae35b06845b01b68cb089c67f76a7fb05e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2686685\nCommit-Queue: Austin Eng <enga@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72848}\n","milestone":90},{"_id":"eec25f2199e726d7915b15e29ad7718ae5e09711","author":{"name":"Nicolas Dubus","email":"nicodubus@fb.com","time":"Tue Feb 16 06:05:32 2021"},"commit":"eec25f2199e726d7915b15e29ad7718ae5e09711","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 16 22:09:21 2021"},"message":"[Callback] Execute DiscardedSamplesDelegate Callback when\nsamples being discarded\n\n - Passed in as CpuProfilingOptions parameter, client is responsible for\ndetermining if function is still safe to execute. Includes unit tests\n\n - Client (blink) side CR: https://chromium-review.googlesource.com/c/chromium/src/+/2649617,\n - Client (blink) side CR requires this to be pushed prior to it being pushed\n\nChange-Id: I3ef4640186115d4e14c1b73f902c889c776e310f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2652206\nCommit-Queue: Nicolas Dubus <nicodubus@fb.com>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72794}\n","milestone":90},{"_id":"b38bf5b0b1f149f7af3fd90a2ce12344e7191d03","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Tue Feb 16 10:27:07 2021"},"commit":"b38bf5b0b1f149f7af3fd90a2ce12344e7191d03","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 16 12:52:31 2021"},"message":"[api] Change CreationContext to return a MaybeHandle\n\nThe current API returns a Handle<NativeContext> which can be\noptionally null and all the users of this API never actually\nchecked for this null value.\n\nPreviously, this wasn't a problem as all the possible JSObjects\nthat were user visible would return a valid NativeContext but now\nthere are wasm objects that don't have a valid constructor so don't\nhave a NativeContext.\n\nBug: v8:11451, chromium:1166077\nChange-Id: I4fd5edf8f1a750e6f0abb931fd41358e5ae4dfcf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2692695\nCommit-Queue: Sathya Gunasekaran  <gsathya@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72769}\n","milestone":90},{"_id":"2678e60b7ac143948c640fdd968443fe70a2abe2","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Fri Feb 12 12:33:53 2021"},"commit":"2678e60b7ac143948c640fdd968443fe70a2abe2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 16 10:28:31 2021"},"message":"Add bmeurer as owner for V8's CDP definitions\n\nChange-Id: If794ddadcf7a5e1b75bc0087bc83c2d0e566503c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2692191\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCommit-Queue: Hannes Payer <hpayer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nAuto-Submit: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72760}\n","milestone":90},{"_id":"518b3633de23b4ab1d13a6cded045bc2522ac10c","author":{"name":"Gus Caplan","email":"snek@chromium.org","time":"Fri Feb 12 16:18:59 2021"},"commit":"518b3633de23b4ab1d13a6cded045bc2522ac10c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 15 10:41:24 2021"},"message":"[fastcall] support float return types on x64\n\nBug: chromium:1052746\nChange-Id: I79f58aa3f732f8569654f0d5751ae89a5b6f547d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2686667\nCommit-Queue: Georg Neis <neis@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72733}\n","milestone":90},{"_id":"c5cf7db1f2180472bd8df6cf0b55a12389e20096","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Fri Feb 12 10:33:50 2021"},"commit":"c5cf7db1f2180472bd8df6cf0b55a12389e20096","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 12 16:00:40 2021"},"message":"[api] Deprecate Function::GetDisplayName().\n\nMark Function::GetDisplayName() as deprecated, scheduled for removal\nwith M92.\n\nBug: chromium:1177685, chromium:17356\nChange-Id: Iedb905d2d5ab6f8ec95f47bbc982e4f03891fd48\nDoc: https://bit.ly/devtools-function-displayName-removal\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2690601\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72710}\n","milestone":90},{"_id":"bdf74a170007754bce916c19b6666ab1975b8014","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Thu Feb 11 16:03:02 2021"},"commit":"bdf74a170007754bce916c19b6666ab1975b8014","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 11 16:53:18 2021"},"message":"[inspector] Add wasmvalue to all subtype enums.\n\nThe `wasmvalue` was missing from `PropertyPreview` and `ObjectPreview`\nsubtype enums.\n\nBug: chromium:1170282\nChange-Id: If4f8aa330d81e603c82a16b19f14d037d556a373\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2689197\nReviewed-by: Philip Pfaffe <pfaffe@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nAuto-Submit: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72669}\n","milestone":90},{"_id":"b1c36b23051f48d7b4bd4b837e7b1fa40d7023b2","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Mon Apr 20 11:37:50 2020"},"commit":"b1c36b23051f48d7b4bd4b837e7b1fa40d7023b2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 11 12:19:07 2021"},"message":"[api] Advance legacy ArrayBuffer API deprecation\n\nBug: v8:9380\nChange-Id: I31d825265d283627406d4b976c8ab067eb7d2c06\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2154798\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72656}\n","milestone":90},{"_id":"f033e2a1548a73cf98fea2a556aa864e714f011d","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Thu Feb 04 22:04:14 2021"},"commit":"f033e2a1548a73cf98fea2a556aa864e714f011d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 10 16:50:25 2021"},"message":"Fix top-level await crash from synthetic module being evaluated twice\n\nWith top-level await, when Evaluate is performed on an already-evaluated\nsynthetic module, Module::InnerEvaluate returns undefined.  This breaks\ntop-level await's assumption that the returned value is always a\npromise.\n\nIn order to make SyntheticModule's behavior consistent with\nSourceTextModule, the top_level_capability field is moved up to Module\nand SyntheticModule::Evaluate places the promise returned from the\nhost's evaluation steps in that field.  Now SourceTextModule and\nSyntheticModule can share the same code to handle the case where the\nmodule is either kErrored or kEvaluated, so the code for this\nis moved up to Module.\n\nThus, SyntheticModule is now guaranteed to return the\npromise from the evaluation steps even on subsequent Evaluate() calls.\n\nUnfortunately Node hasn't yet updated their EvaluationStepsCallback\nto return a Promise, so we can't yet assume that the returned value\nis a Promise without breaking Node.  So, this change also adds a clause\nto check for this condition and create a new resolved Promise if one\nwas not provided by the callback steps.  This could eventually be\nremoved once Node's callback steps are updated for top-level await.\n\nChange-Id: I2d6ae918abfeba9e3a757838502d4df92946edaa\nBug: v8:11398\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2673794\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#72629}\n","milestone":90},{"_id":"4c9d7ff91672586fb6f7659ad53f71159ab5b86b","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Wed Feb 10 14:18:30 2021"},"commit":"4c9d7ff91672586fb6f7659ad53f71159ab5b86b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 10 16:34:44 2021"},"message":"[api] Add API callback setter for the wasm exceptions origin trial\n\nThe implementation is similar to the callbacks that already exist for\nthe origin trial for WebAssembly simd.\n\nBug: v8:8091\nChange-Id: I969b68c209ea62cf70dbaf317616300b782b5e14\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2672020\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Thibaud Michaud <thibaudm@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72628}\n","milestone":90},{"_id":"ffd9e82dd5dd314bad48ab602517bd378b6d2184","author":{"name":"Brice Dobry","email":"brice.dobry@futurewei.com","time":"Tue Feb 09 16:11:55 2021"},"commit":"ffd9e82dd5dd314bad48ab602517bd378b6d2184","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 09 17:06:36 2021"},"message":"Add RISC-V backend\n\nThis very large changeset adds support for RISC-V.\n\nBug: v8:10991\nChange-Id: Ic997c94cc12bba6881bc208e66526f423dd0679c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2571344\nCommit-Queue: Brice Dobry <brice.dobry@futurewei.com>\nCommit-Queue: Georg Neis <neis@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nReviewed-by: Michael Stanton <mvstanton@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72598}\n","milestone":90},{"_id":"fbcaf729f21cd0cbd8f62e8cf38b20b29cbafc0b","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Feb 09 09:02:40 2021"},"commit":"fbcaf729f21cd0cbd8f62e8cf38b20b29cbafc0b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 09 09:57:52 2021"},"message":"api, cppgc-js: Allow creating a v8::CppHeap in detached state\n\nThe detached CppHeap allows for allocation without invoking garbage\ncollections.  Allocated bytes are reported on the first allocation\nafter the CppHeap has been attached to an Isolate.\n\nStates:\n- Detached: Allow only allocation;\n- Attached: Unified heap GCs;\n- Termination GC: Require detached state;\n\nDestruction:\n- Heap::TearDown: Detach if attached;\n- ~CppHeap: Detach if attached;\n\nBug: chromium:1056170\nChange-Id: I95ce029f36a7f10392257080b6e23e13cc0fc7b8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2672940\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72579}\n","milestone":90},{"_id":"8e5026b5a54fd9c89d484188885575cf8f669a4f","author":{"name":"Gus Caplan","email":"snek@chromium.org","time":"Mon Feb 08 15:07:39 2021"},"commit":"8e5026b5a54fd9c89d484188885575cf8f669a4f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 09 08:30:40 2021"},"message":"[fastcall] support more return types\n\nThis adds support for kBool, kInt32, and kUint32 types.\n\nBug: chromium:1052746\nChange-Id: I54641eb036eea30113c44eab2c08626176ecc40a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2629463\nCommit-Queue: Georg Neis <neis@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72574}\n","milestone":90},{"_id":"f10edd090069dbff1a9f7ee939aa3d79795f349c","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Mon Feb 08 15:39:00 2021"},"commit":"f10edd090069dbff1a9f7ee939aa3d79795f349c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 09 05:50:16 2021"},"message":"[inspector][wasm] Re-add WasmValue as JSObject subclass.\n\nBREAKING CHANGE: The values of Wasm locals, stack, and globals are now\nrepresented as objects instead of holding the (primitive) values\ndirectly, and SIMD128 values are no longer represented as Uint8Arrays.\nThe DWARF extension has been prepared for this breaking change.\n\nThe new `WasmValue` comes with `type` and `value` properties that hold\nits contents. The motivation here is that this is a more extensible\napproach. In case of SIMD128, the `value` property holds the canonical\nstring representation, which has the additional advantage that these\nvalues can be compared with `===` (and `==`).\n\nThis partially reverts https://crrev.com/c/2614428, the main difference\nhere being that WasmValue is now a proper JSObject that can be exposed\non the DebugEvaluate proxy API.\n\nScreenshot: https://imgur.com/rcahNKM.png\nBug: chromium:1170282, chromium:1071432, chromium:1159402\nChange-Id: Iea304e3680775123c41deb4c3d172ac949da1b98\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2643384\nReviewed-by: Philip Pfaffe <pfaffe@chromium.org>\nReviewed-by: Zhi An Ng <zhin@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72570}\n","milestone":90},{"_id":"c781da6c8b360ed3afdae1e50e5cc689f4ee8a50","author":{"name":"Thibaud Michaud","email":"thibaudm@chromium.org","time":"Wed Feb 03 10:41:08 2021"},"commit":"c781da6c8b360ed3afdae1e50e5cc689f4ee8a50","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 03 15:45:27 2021"},"message":"[wasm][eh] Add use counter for exception handling\n\nR=ahaas@chromium.org,ulan@chromium.org\n\nBug: v8:8091\nChange-Id: Ia826e18bd06b5e6d401ff43b33b43b4e4c2a69db\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2672022\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Thibaud Michaud <thibaudm@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72501}\n","milestone":90},{"_id":"412203f203730678155246202c8f9f7d50325122","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Thu Jan 28 20:10:15 2021"},"commit":"412203f203730678155246202c8f9f7d50325122","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 29 17:36:30 2021"},"message":"[api] Advance supported_import_assertions to V8_DEPRECATED.\n\nAdvance v8::Isolate::CreateParams::supported_import_assertions from\nV8_DEPRECATE_SOON to V8_DEPRECATED now that Blink has stopped\nsetting it.\n\nBug: v8:10958\nChange-Id: I502f08c0c2e424f3afae3a6cb11835376a847bcb\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2656936\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#72436}\n","milestone":90},{"_id":"2ff3bbbc70d61bcace3f3b15e082d065ac1f45c2","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Tue Jan 26 19:15:52 2021"},"commit":"2ff3bbbc70d61bcace3f3b15e082d065ac1f45c2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 27 13:10:18 2021"},"message":"[api, heap] Add GC events to v8::metrics::Recorder\n\nThe naming follows the scheme outlined in bit.ly/v8-gc-stats-collection\nand in the UMA document referenced from it.\n\nBug: chromium:1154636\nChange-Id: I872520de06e62f58d771383fd87d8aa06386bf0d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2650213\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72364}\n","milestone":90},{"_id":"a09c076f0022f31c19c33bb80dfc4f58f2097ecb","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Tue Jan 26 01:38:33 2021"},"commit":"a09c076f0022f31c19c33bb80dfc4f58f2097ecb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 26 04:15:15 2021"},"message":"[modules][api] Add version of HostImportModuleDynamically with import assertions\n\nThis change completes support for import assertions for dynamic import().\n\nA new version of the HostImportModuleDynamically callback taking import\nassertions is added to the public API. The name is very verbose; we\ncould consider removing the \"ImportAssertions\" part when the old API\nis removed.\n\nBytecode generation is updated to pass the assertions, if present, to\nRuntime_DynamicImportCall.\n\nIsolate::RunHostImportModuleDynamicallyCallback extracts the assertions\nfrom the options bag, filters out the assertions not present in the\nlist specified by the host in HostGetSupportedImportAssertions, and\nsorts them by code point order of the keys per\nhttps://tc39.es/proposal-import-assertions/#sec-import-call-runtime-semantics-evaluation.\nThe resulting array is passed to the host in the callback.\n\nBug: v8:10958\nChange-Id: I931df00f954a9f9c65bff5bcf461ba1c8f11e94e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2620578\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Mythri Alle <mythria@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72307}\n","milestone":90},{"_id":"81e7e2f437d20f2ecbcd7ca70c012f90e2259adb","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Tue Jan 26 00:50:44 2021"},"commit":"81e7e2f437d20f2ecbcd7ca70c012f90e2259adb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 26 04:14:10 2021"},"message":"[regexp] Implement the /d flag for RegExp indices\n\nThis CL implements the upcoming spec change:\nhttps://github.com/tc39/proposal-regexp-match-indices/pull/49\n\nA new JSRegExpResultWithIndices subclass is introduced with a separate map and\nan extra slot for storing the indices. If /d is passed, exec() constructs a\nJSRegExpResultWithIndices and eagerly builds indices.\n\nThe existing re-execution logic is removed.\n\nBug: v8:9548\nChange-Id: Ic11853e7521017af5e8bd583c7b82bb672821132\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2616873\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72306}\n","milestone":90},{"_id":"53cb6654ea39316ef2bb67176e5bf0ee104c0884","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Thu Jan 21 21:42:57 2021"},"commit":"53cb6654ea39316ef2bb67176e5bf0ee104c0884","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 25 19:30:13 2021"},"message":"[modules][api] Stop filtering import assertions based on list provided by the host\n\nThe change https://chromium-review.googlesource.com/c/v8/v8/+/2572173\nimplemented HostGetSupportedImportAssertions [1] in a fairly literal\nsense, where the host supplies a list of supported import assertions\nand V8 filters the import assertions in a ModuleRequest and exposes\nonly supported assertions via its API surface.\n\nHowever, we've decided that the interop guarantees provided\nby doing the filtering in V8 are probably not worth the added\ncomplexity. Thus, this change removes the filtering. Going forward,\nhosts will be expected to ignore unknown asserions received from V8.\n\nThis is mostly a revert of\nhttps://chromium-review.googlesource.com/c/v8/v8/+/2572173, with\nv8::Isolate::CreateParams::supported_import_assertions being kept\nfor now (since we first have to delete the Blink code that sets it),\nand a new comment in v8.h instructing hosts to ignore unknown\nassertions.\n\n[1] https://tc39.es/proposal-import-assertions/#sec-hostgetsupportedimportassertions\n\nBug: v8:10958\nChange-Id: I7e8e2a7fbfe2d5bf891805cff6c3160d0e6825cd\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2643563\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Mythri Alle <mythria@chromium.org>\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#72299}\n","milestone":90},{"_id":"9515942d2c31c8f1e879ed8b33a9fc22e7c56d12","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Jan 25 11:03:56 2021"},"commit":"9515942d2c31c8f1e879ed8b33a9fc22e7c56d12","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 25 12:03:26 2021"},"message":"api: Fix constexpr construction of compaction space index\n\nBug: chromium:1056170\nChange-Id: If639b12e1cceec2d27355bb4cbf8c1fefa8b5038\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2642462\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72283}\n","milestone":90},{"_id":"fd4813bb9d880d2fc2ef4f22f86bab36e3b02e04","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Wed Jan 20 14:06:38 2021"},"commit":"fd4813bb9d880d2fc2ef4f22f86bab36e3b02e04","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 22 23:30:20 2021"},"message":"Refactor JavaScript execution scopes to not allocate\n\nThis CL introduces a new internal class PerIsolateAssertSwitch which\ngives a static Allow/Disallow interface to be used from within classes\nsuch as DisallowJavascriptExecutionScope without the need for slow heap\nallocations.\n\nBug: chromium:1155348\nChange-Id: I66cd8377b5d9c43510165cd7b9a7f5ccdaf45c18\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2617086\nAuto-Submit: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72273}\n","milestone":90},{"_id":"61972b112d4a764f95d1c56197ca2c25174c7342","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri Jan 15 23:18:53 2021"},"commit":"61972b112d4a764f95d1c56197ca2c25174c7342","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 21 03:14:08 2021"},"message":"[regexp] Remove unused flag getter use counters\n\nThe compatibility fixes have been standardized.\n\nBug: chromium:581577\nChange-Id: I4ab1df59cbcb4bcbcfe9e3a3c658b2d6b81fe68e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2633539\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72210}\n","milestone":90},{"_id":"810eaab3c5a99194a22f393d0e02c4db6db1a3c0","author":{"name":"Gus Caplan","email":"snek@chromium.org","time":"Wed Jan 20 17:45:29 2021"},"commit":"810eaab3c5a99194a22f393d0e02c4db6db1a3c0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 20 19:36:24 2021"},"message":"[fastcall] enable accessing template data from fast callback\n\nAdds a `data` field to `v8::FastApiCallbackOptions`.\n\nBug: chromium:1052746\nChange-Id: I0c4ac1a0ea1191e90d3bbc041aec5d8d860d7057\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2603925\nCommit-Queue: Gus Caplan <snek@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72207}\n","milestone":90},{"_id":"852294fc4abb31c89f55858c1f808393539abc40","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Jan 18 20:13:14 2021"},"commit":"852294fc4abb31c89f55858c1f808393539abc40","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 19 14:08:18 2021"},"message":"heap,cppgc: Support for termination GC\n\nTermination GCs are used to destroy remaining C++ object on the\nmanaged heap to free potential off-heap memory. This is important for\ngracefully shutting down workers.\n\nDrive-by: Add guard prohibiting recursive sweeping calls on the\n  mutator thread.\n\nBug: chromium:1056170\nChange-Id: I02ea3b632d38f5beab18cc8f077cf717ed877909\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2631504\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72155}\n","milestone":90},{"_id":"70fbfb0cc422fcf1a7e499ac1448780ad8654016","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Jan 13 14:56:50 2021"},"commit":"70fbfb0cc422fcf1a7e499ac1448780ad8654016","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 15 17:46:44 2021"},"message":"api: Make Context a Data object\n\nContext objects are allocated on the heap and thus should be Data\nobjects. This allows handling them through tracing in the GC through\nthe API.\n\nBug: chromium:1013149\nChange-Id: Id3a7bfd57fab19a5669062ccf61c2f8588faf0bb\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2627307\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72120}\n","milestone":90},{"_id":"ee3f5ba10b47e21775634f9b5fcd47e06453c793","author":{"name":"Ben Noordhuis","email":"info@bnoordhuis.nl","time":"Tue Jan 12 11:54:50 2021"},"commit":"ee3f5ba10b47e21775634f9b5fcd47e06453c793","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 14 23:51:04 2021"},"message":"[api] Make ScriptOrigin take isolate as parameter\n\nRemove the ambient dependency on the currently entered isolate, let the\nembedder pass it in explicitly.\n\nBug: v8:11287\nChange-Id: I03690390a308a59e2c6ea5c6ae268780d836b717\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2608209\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72105}\n","milestone":90},{"_id":"32dfefac49da56ef9fea27d690d10b500d2406bf","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Jan 12 14:12:18 2021"},"commit":"32dfefac49da56ef9fea27d690d10b500d2406bf","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 13 17:20:37 2021"},"message":"[api] Dehandlify FunctionTemplate initialization\n\nDrive-by-fix: Sort forward declarations in v8.h\n\nBug: v8:11263\nChange-Id: I2d1b5324e0cddd54a1bec440e1aebcebef393a6d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2581958\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72076}\n","milestone":90},{"_id":"4e57789f26f3de83fb961ad1e9a52c3151bcc8df","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Jan 12 13:47:25 2021"},"commit":"4e57789f26f3de83fb961ad1e9a52c3151bcc8df","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 12 15:28:39 2021"},"message":"[wasm] Remove bulk-memory flag\n\nbulk-memory shipped in V8 v7.5, hence the feature flag can be removed\nnow. This saves some binary size and a few dynamic checks for the flag.\n\nR=ahaas@chromium.org\n\nBug: v8:11074\nChange-Id: Ia73622637939f2192940fdd6909520786ed27286\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2622913\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#72045}\n","milestone":90},{"_id":"5488d2dbd888a78067406c75123d6f2c4af8c223","author":{"name":"Yuki Shiino","email":"yukishiino@chromium.org","time":"Sat Aug 15 16:02:06 2020"},"commit":"5488d2dbd888a78067406c75123d6f2c4af8c223","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 17 12:25:13 2020"},"message":"minor tidy up of v8/include/v8.h\n\nMoves a forward declaration of v8::CFunction to the appropriate\nposition.\n\nChange-Id: I9ea8c7697a0abd39a0c8fdc536aae0417e04cafe\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2359091\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Yuki Shiino <yukishiino@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69424}\n","milestone":86},{"_id":"2d0cad7c3ae1f7b1ca0bb4bc8be17d0072174c49","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Thu Aug 13 16:35:28 2020"},"commit":"2d0cad7c3ae1f7b1ca0bb4bc8be17d0072174c49","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 13 19:12:16 2020"},"message":"[Jobs API]: Expose missing pieces in Job to accommodate worklist users.\n\nExpose:\n- JobHandle::IsCompleted()\n- worker_count passed as argument to GetMaxConcurrency()\n- JobDelegate::GetTaskId\nWith default implementation. Once gin implements it, it can be made pure\nvirtual.\n\nBug: chromium:1114823\nChange-Id: I24ce60d1df6adff4061c050e5aa8bf8d7bb1cf5a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2352485\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69388}\n","milestone":86},{"_id":"2e37bfc5b9f8bd6f1633ad1461e7eafc3c833a39","author":{"name":"Dominik Inführ","email":"dinfuehr@chromium.org","time":"Mon Aug 10 19:25:30 2020"},"commit":"2e37bfc5b9f8bd6f1633ad1461e7eafc3c833a39","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Aug 12 12:27:17 2020"},"message":"[heap] Move external memory counters back into Heap\n\nMove external memory counters out of IsolateData back into Heap.\nThe class ExternalMemoryAccounting now stores all counters and is\nresponsible for updates. This change will allow turning counters into\natomic variables.\n\nBug: v8:10315\nChange-Id: I2abeda298d3cfcc630fd04ca78a3d6d703e3b419\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2346647\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69356}\n","milestone":86},{"_id":"a36f40cb3fedbece3d5659f1233b683d38e09aad","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri Jul 31 22:02:36 2020"},"commit":"a36f40cb3fedbece3d5659f1233b683d38e09aad","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 10 23:02:17 2020"},"message":"[atomics] Remove the deprecated Atomics.wake\n\nThe Intent to Deprecate and Remove was sent in March 2019:\nhttps://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/_zPuM7ETNSE\n\nCurrent use of Atomics.wake is at <0.0002% of page loads:\nhttps://chromestatus.com/metrics/feature/timeline/popularity/2556\n\nBug: v8:7883\nChange-Id: I4534df6cb88e0afbeae655254d6ce48ad7b462e7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2333349\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Ben Smith <binji@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69317}\n","milestone":86},{"_id":"c3927608432d9399e340c2b0047a57733e3ce88f","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Fri Aug 07 08:50:12 2020"},"commit":"c3927608432d9399e340c2b0047a57733e3ce88f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 10 17:10:36 2020"},"message":"[api] Add API function Isolate::HasPendingBackgroundTasks\n\nThis CL adds an API function that tells the embedder if there is ongoing\nbackground work that will eventually post foreground tasks.\n\nDesign doc: https://docs.google.com/document/d/18vaABH1mR35PQr8XPHZySuQYgSjJbWFyAW63LW2m8-w\n\nR=adamk@chromium.org\n\nBug: v8:10787\nChange-Id: I9060c5cdc9dbafeb7ea7c5c26d09c2dc744800bd\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2342847\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69312}\n","milestone":86},{"_id":"d855a6aa03158734ea1b67bfa258e3dd899f209d","author":{"name":"Santiago Aboy Solanes","email":"solanes@chromium.org","time":"Thu Aug 06 15:02:22 2020"},"commit":"d855a6aa03158734ea1b67bfa258e3dd899f209d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 06 15:57:48 2020"},"message":"[heap] Remove DeferredHandles instrumentation\n\nNow that we are using PersistentHandles, we don't need it anymore.\n\nBug: v8:7790\nChange-Id: Id0b9d555191c00fb08dc2bb9099746076c5ad1b7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2332161\nCommit-Queue: Santiago Aboy Solanes <solanes@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69278}\n","milestone":86},{"_id":"4eb150599719c7a0e756287003fb548530c47709","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Thu Aug 06 12:47:03 2020"},"commit":"4eb150599719c7a0e756287003fb548530c47709","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 06 14:11:10 2020"},"message":"[turbofan] Add tests for uint64 for fast API calls\n\nTBR=cbruni@chromium.org\n\nBug: chromium:1052746\nChange-Id: Ib61b06bcc4cd7cf9cfa741899322739e807605b0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2339619\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nAuto-Submit: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69274}\n","milestone":86},{"_id":"5c8492903b42579ccb34e30ac9f9749e7dff2cd2","author":{"name":"Kim-Anh Tran","email":"kimanh@chromium.org","time":"Tue Aug 04 08:05:41 2020"},"commit":"5c8492903b42579ccb34e30ac9f9749e7dff2cd2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 04 12:01:44 2020"},"message":"[debug] Add CDP method to support skipLists\n\nThis adds CDP methods to support skipping locations\non stepOver and stepInto.\n\nBug: chromium:1105765\nChange-Id: I8b902009883807082cf5fda0411b992e90dee81d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2335181\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCommit-Queue: Kim-Anh Tran <kimanh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69223}\n","milestone":86},{"_id":"75d4b18a77c3aa508aa3b9a77ac3f81fc4e0a0cd","author":{"name":"Omer Katz","email":"omerkatz@chromium.org","time":"Fri Jul 31 15:08:57 2020"},"commit":"75d4b18a77c3aa508aa3b9a77ac3f81fc4e0a0cd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 03 09:37:02 2020"},"message":"heap: Fix TracedReference::IsEmptyThreadSafe again\n\nreinterpret_cast to std::atomic was missing const.\n\nBug: chromium:1108537\nChange-Id: Ib737418bddbef6774deafa9714b0efcf2e3fd07c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2332797\nAuto-Submit: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69194}\n","milestone":86},{"_id":"260ec995992fee58b61490debc438e23832027a2","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Thu Jul 30 19:17:04 2020"},"commit":"260ec995992fee58b61490debc438e23832027a2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Sat Aug 01 14:16:11 2020"},"message":"[ukm] Rename v8::Context::Token to v8::metrics::Recorder::ContextId\n\nChrome is currently adding a 128-bit V8ContextToken to keep track of\nV8 contexts across multiple isolates and processes. Having per-isolate\ntoken exposed by V8 leads to confusion of these two tokens.\n\nThis moves v8::Context::Token to v8::metrics::Recorder and changes\nthe corresponding functions:\n- v8::Context::GetToken => v8::metrics::Recorder::GetContextId\n- v8::Context::GetByToken => v8::metrics::Recorder::GetContext\n\nThis CL is purely mechanical and does not change the behaviour.\n\nBug: chromium:1101749\nTbr: clemensb@chromium.org\nChange-Id: I31bbfa02ebab1c0d91b00f0d08c1b236392d14d2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2330023\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Emanuel Ziegler <ecmziegler@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69188}\n","milestone":86},{"_id":"84be14c24590e066e6c12d855636d45d95488f3f","author":{"name":"Omer Katz","email":"omerkatz@chromium.org","time":"Thu Jul 30 22:29:08 2020"},"commit":"84be14c24590e066e6c12d855636d45d95488f3f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 31 07:20:58 2020"},"message":"heap: Fix TracedReference::IsEmptyThreadSafe\n\n* GetThreadSlot was missing const (Blink CL failed to build).\n* Aligning IsEmptyThreadSafe implementation with IsEmpty.\n\nBug: chromium:1108537\nChange-Id: I9c07e9a0e7f029cf3d70b4d2507900b600d064cc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2330027\nAuto-Submit: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69157}\n","milestone":86},{"_id":"c1c38e1973634f6ebcde96cfdde1606076a994a6","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Thu Jul 30 10:08:51 2020"},"commit":"c1c38e1973634f6ebcde96cfdde1606076a994a6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 30 18:31:21 2020"},"message":"[platform] Add SharedMemory allocation and mapping\n\nThis adds new methods AllocateSharedPages, ReserveForSharedMemoryMapping\nand CanAllocateSharedPages to v8::PageAllocator, which if overridden\nallows the platform to declare that it supports allocation and remapping\nof shared memory.\n\nThis interface is currently a work in progress so the new methods are\nmarked \"INTERNAL ONLY\" and they may change without being first\ndeprecated.\n\nAn implementation of PageAllocator is provided that can allocate and map\nshared memory on Linux and Android, but no other platforms are yet\nsupported. While Windows is not supported the interface has been\ndesigned to make this possible as AllocateSharedPages returns a\nSharedMemory object that wraps the shared memory and provides its own\nremap function. This should allow the SharedMemory object on windows to\ncontain a mapping a to hFileMappingObject as required by\nMapViewOfFileEx.\n\nBug: v8:10454\nChange-Id: I2e601d49ea14da44867a102c823fa4e341cf0dab\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2306789\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69154}\n","milestone":86},{"_id":"af92046ad3c9b07e3b0445b9be3d12d14e0bfbf7","author":{"name":"Omer Katz","email":"omerkatz@chromium.org","time":"Thu Jul 30 09:29:05 2020"},"commit":"af92046ad3c9b07e3b0445b9be3d12d14e0bfbf7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 30 12:12:16 2020"},"message":"heap: Use atomic writes in TracedReference.\n\nBug: chromium:1108537\nChange-Id: I82a64d57432b7e0854a3787f309c85477d37f701\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2327910\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69142}\n","milestone":86},{"_id":"367da305431fbe391618fa888f0e4634c51e0581","author":{"name":"Emanuel Ziegler","email":"ecmziegler@chromium.org","time":"Tue Jul 28 11:11:06 2020"},"commit":"367da305431fbe391618fa888f0e4634c51e0581","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 28 12:09:21 2020"},"message":"[ukm] Add framework for collecting event-based metrics\n\nAdd a framework for collecting event-based metrics like UKMs in V8\nthat is independent of the actual implementation.\n\nDesign doc: https://docs.google.com/document/d/1vCZQCh4B05isqwJOwTPv7WqcnVp4KJITMgsHSBg35ZI/\n\nR=ulan@chromium.org\n\nBug: chromium:1101749\nChange-Id: If3a5b954d1f0bcee4e06a03467b651feae378a5f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2288231\nCommit-Queue: Emanuel Ziegler <ecmziegler@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69098}\n","milestone":86},{"_id":"83d7c4d34be4d7d835a61a543d3d3c5e0318e605","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Fri Jul 24 09:23:02 2020"},"commit":"83d7c4d34be4d7d835a61a543d3d3c5e0318e605","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 27 15:40:00 2020"},"message":"Report reliable embedderName in scriptParsed/scriptFailedToParse\n\nCurrently, only a scriptURL is reported, which can be over-written by\nsourceURL comments of the script. This means a script can basically\nclaim to come from anywhere. This means that DevTools doesn't know the\nresource name the embedder provided if there is a sourceURL comment.\nThis CL adds a `embedderName` field to the scriptParsed and\nscriptFailedToParse events that reports the name the embedder\nassociated with the script.\n\nBug: chromium:974543\nChange-Id: I9863f878f57638174847890d9a3818952b1efc27\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2317310\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69078}\n","milestone":86},{"_id":"76b53b66b0a441494748b82250b7d3ea3f1ef6fe","author":{"name":"Bill Budge","email":"bbudge@chromium.org","time":"Fri Jul 24 17:28:09 2020"},"commit":"76b53b66b0a441494748b82250b7d3ea3f1ef6fe","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 24 18:15:02 2020"},"message":"[api] Add a SharedArrayBuffersEnabled callback.\n\n- Adds a SharedArrayBuffersEnabled callback and uses it to\n  enable/disable SABs per context. The feature flag is used\n  if no callback is registered.\n\nBug: chromium:923807\nChange-Id: I4d3472fcd79b158cb50dc98793aece6dbbb81d93\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2316901\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Bill Budge <bbudge@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69057}\n","milestone":86},{"_id":"93292424eca878792f15775cdf65c4518b7c174c","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Fri Jul 24 11:31:22 2020"},"commit":"93292424eca878792f15775cdf65c4518b7c174c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 24 12:14:05 2020"},"message":"[turbofan] Cleanup of the fast API calls\n\nThis CL includes the following minor cleanups:\n * Renames MakeRaisesException -> MakeWithErrorSupport\n * Removes remaining WrapperTraits related code\n * Makes the public header follow the IWYU principle\n\nBug: chromium:1052746\nChange-Id: I60e730fa15f9bde421a7b6273093c84870666a64\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2316296\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69043}\n","milestone":86},{"_id":"4aa185bcb199dd9ad864ca347c02689f4c6a5600","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Thu Jul 23 09:39:48 2020"},"commit":"4aa185bcb199dd9ad864ca347c02689f4c6a5600","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 23 11:48:02 2020"},"message":"[api] Don't provide a default PostJob implementation\n\nThe default implementation just returns {nullptr}, which is not a\ncorrect implementation. Since we rely on the implementation of {PostJob}\nsince https://crrev.com/c/2301933, and embedders can just use\n{NewDefaultJobHandle} since https://crrev.com/c/2304812 (backported to\n8.5), we should stop providing this dangerous default.\n\nR=ulan@chromium.org\n\nBug: v8:10723, v8:10740, chromium:1101340\nChange-Id: I6e34c584cbed186ddf6cfa4a9c5a7e8caa3b61c8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2315981\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69021}\n","milestone":86},{"_id":"b8e51d9307bafa49bc1931cd2cb5b351e0405db1","author":{"name":"Georg Neis","email":"neis@chromium.org","time":"Mon Jul 20 07:39:53 2020"},"commit":"b8e51d9307bafa49bc1931cd2cb5b351e0405db1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 22 15:02:06 2020"},"message":"[modules] Allow import.meta callback to throw\n\nIt makes no sense to allow calling into V8 but at the same time insist\nthat there must be no exception, as potentially any such call can result\nin a stack overflow.\n\nThis CL only removes a comment from v8.h, the code changes were part of\nhttps://chromium-review.googlesource.com/c/v8/v8/+/2299375.\n\nBug: v8:7044\nChange-Id: I57769fa0f109219d07a7bdb979b46ca98cd0cec7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2306792\nAuto-Submit: Georg Neis <neis@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68999}\n","milestone":86},{"_id":"470b6146087fe7ed1847322c566b13891679d8db","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Tue Jul 21 09:29:25 2020"},"commit":"470b6146087fe7ed1847322c566b13891679d8db","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 22 12:24:13 2020"},"message":"[turbofan] Remove object unwrapping for fast C calls\n\nThe object is passed now as an v8::ApiObject instead of unwrapped\nC++ pointer and the embedder should do the unwrapping.\n\nBug: chromium:1052746\nChange-Id: If5671c5fdbbe8d58435c7bd9aceccf5e17f8ea21\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2304571\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68991}\n","milestone":86},{"_id":"cb082a6026124c8761dd278b8f39bcd0d516d88d","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Jul 17 16:41:53 2020"},"commit":"cb082a6026124c8761dd278b8f39bcd0d516d88d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 20 09:47:17 2020"},"message":"[platform] Provide NewDefaultJobHandle function\n\nThis will allow embedders to actually instantiate the {DefaultJobHandle}\nas suggested in the comment. Node currently implements {PostJob()} by\njust returning a nullptr. After this change, it can use the new\n{NewDefaultJobHandle} function and we can actually start using this API\nin v8.\n\nR=adamk@chromium.org\n\nBug: v8:10723\nChange-Id: I4b31a640d0edc7e7207d1df95e683465dfaaaeff\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2304812\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68934}\n","milestone":86},{"_id":"0c1a75ee23d2ae9261e3fab412f7efd7de8b72bf","author":{"name":"Marijn Kruisselbrink","email":"mek@chromium.org","time":"Thu Jul 16 17:04:32 2020"},"commit":"0c1a75ee23d2ae9261e3fab412f7efd7de8b72bf","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 17 16:30:11 2020"},"message":"Expose async iterator prototype.\n\nExposes initial_async_iterator_prototype the same way that\ninitial_iterator_prototype is exposed, to let blink implement\nasync iterables better.\n\nBug: chromium:1087157\nChange-Id: I94f65eedb3aad0bf62cb4808935f320fe4bf4e9c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2300779\nCommit-Queue: Marijn Kruisselbrink <mek@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68921}\n","milestone":86},{"_id":"ca1e6573e42724040cc68a6f92724f0ebe9973fa","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Wed Jul 15 11:54:33 2020"},"commit":"ca1e6573e42724040cc68a6f92724f0ebe9973fa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 15 14:48:01 2020"},"message":"[turbofan] Fast API calls support for default fallback\n\nThis change adds a has_error parameter on the stack\nwhich allows the fast callback to report an error. In case\nthis parameter is set to non-zero, the generated code calls\nthe slow (default) callback, which can throw the exception.\n\nBug: chromium:1052746\n\nChange-Id: Ib11f6b0bef37d5eb1d04cd6d0a3ef59028dcc448\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2183929\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68871}\n","milestone":86},{"_id":"9a11ada5fc3c3cfa13ae50b88ff2953cf99ac1b2","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Jul 10 14:50:36 2020"},"commit":"9a11ada5fc3c3cfa13ae50b88ff2953cf99ac1b2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 10 20:50:06 2020"},"message":"heap: Add atomic unified-heap support\n\nAdds support for main-thread handling of JSMember during the\natomic pause.\n\nFollow-ups for later:\n- Copy/Move/Heterogenous assignment\n- Write barrier\n- Atomic handling for concurrent processing.\n\nBug: chromium:1056170\nChange-Id: Ia9ac4599ca85cf7cc2d67066e89485744d7d56b6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2289781\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Anton Bikineev <bikineev@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68813}\n","milestone":86},{"_id":"335350232294006bf1f07e3553ef0f9df63374c8","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Jul 07 10:31:36 2020"},"commit":"335350232294006bf1f07e3553ef0f9df63374c8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 09 17:31:08 2020"},"message":"[api] Fix TryCatch comment\n\nTryCatch creates normal handles for Exception and Message objects.\n\nBug: v8:10537\nChange-Id: I6ccd531242bfdc7a97ff5d8314d2f31086a28b07\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2284490\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68764}\n","milestone":86},{"_id":"10fdca843da971014cb0a2300460ec8b22b05432","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Mon Jun 22 20:26:53 2020"},"commit":"10fdca843da971014cb0a2300460ec8b22b05432","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 07 15:14:31 2020"},"message":"[heap, api] Add a memory measurement mode that doesn't force GC\n\nBy default the v8::MeasureMemory API forces GC after some timeout.\nThere are use cases that require low overhead measurements without\nforcing GC at all.\n\nChange-Id: I7d57c552d78d86800c4f37acb680c70c6422477f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2257856\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68718}\n","milestone":86},{"_id":"3a50eae04822118cd501f8e3d6a5216078834166","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Jul 07 09:59:51 2020"},"commit":"3a50eae04822118cd501f8e3d6a5216078834166","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 07 13:48:31 2020"},"message":"api: Add JSVisitor and JSMember reference\n\n- Adds JSVisitor that is used for unified heap marking.\n- Adds JSMember as supported reference type that also encapsulates a\n  write barrier in future. JSMember is a replacement for\n  TracedReference which can be deprecated with EmbedderHeapTracer once\n  the library is used to handle unified heap collections.\n\nThe dispatch for v8::JSMember on cppgc::Visitor is provided through a\nspecialization of TraceTrait.\n\nBug: chromium:1056170\nChange-Id: I60d976ae66db3e5fa2e690a21627bdcb8c6871af\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2284488\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Anton Bikineev <bikineev@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68716}\n","milestone":86},{"_id":"b7bbe0af0fa8f1a338b2231f3bbe6d917504dfde","author":{"name":"Kim-Anh Tran","email":"kimanh@chromium.org","time":"Mon Jun 29 09:52:53 2020"},"commit":"b7bbe0af0fa8f1a338b2231f3bbe6d917504dfde","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 01 15:32:11 2020"},"message":"[v8] Change TypedArray max length definition for 32 bit builds\n\nThis makes the 4GB max length compilable for 32 bit MSVC.\n\nBug: chromium:1095721\nChange-Id: I2be9f69668687f18beb86028debb3fd5ff350202\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2272558\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Kim-Anh Tran <kimanh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68637}\n","milestone":86},{"_id":"f70c2d62fa282201f223d98163c980427ca68083","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Thu Jun 25 13:12:00 2020"},"commit":"f70c2d62fa282201f223d98163c980427ca68083","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 25 14:13:06 2020"},"message":"[d8] Changes needed for testing Atomics.waitasync\n\nDesign doc:\nhttps://docs.google.com/document/d/1BU-Zyco8YPP2Ra0Y3eVZ_BllzpUkJaJhmVmmnGD44Yc/edit#heading=h.mmdxlkic7kqd\n\nBug: v8:10239\nChange-Id: Ie1b953c8242e32a0447440aaae7c2ed377c97511\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2259933\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68540}\n","milestone":86},{"_id":"787568a9d2e89ee82ab718327211da16b09b0a00","author":{"name":"Lutz Vahl","email":"vahl@chromium.org","time":"Thu May 14 11:44:56 2020"},"commit":"787568a9d2e89ee82ab718327211da16b09b0a00","committer":{"name":"Lutz Vahl","email":"vahl@chromium.org","time":"Thu May 14 11:48:15 2020"},"message":"created V8 branch for Chrome M84\n\nChange-Id: Ie428e69c5f37168a33f6480a62c41e9bc3108a6b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2201138\nReviewed-by: Lutz Vahl <vahl@chromium.org>\nCr-Commit-Position: refs/branch-heads/8.4@{#1}\nCr-Branched-From: 88ed2e39f2d351baba8e3190eb8af1f644b79287-refs/heads/8.4.371@{#1}\nCr-Branched-From: 35f88bf3cc4a3ad9cfcab558040087de0fa97951-refs/heads/master@{#67773}\n","milestone":84},{"_id":"f67131e50029ad3b84b7a8d9097457b9068fcb46","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed May 13 08:36:23 2020"},"commit":"f67131e50029ad3b84b7a8d9097457b9068fcb46","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 13 09:42:00 2020"},"message":"[sandbox][api] Introduce Internals::GetIsolateForHeapSandbox()\n\n... for the cases when the Isolate is necessary only for external\npointers decoding. This will avoid unnecessary calls to non-inlined\nIsolateFromNeverReadOnlySpaceObject().\n\nBug: v8:10391\nChange-Id: I0a299c8a44d5845f26cf704ce53555bf07c93f8d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2198978\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67771}\n","milestone":84},{"_id":"fff219bff776d9fca320a41377900bf539657beb","author":{"name":"Omer Katz","email":"omerkatz@chromium.org","time":"Tue May 12 11:09:49 2020"},"commit":"fff219bff776d9fca320a41377900bf539657beb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 12 12:07:27 2020"},"message":"heap,cppgc: Update StackState enum values\n\nThis CL adds 2 new values to the EmbedderStackState enum with more\nexplicit names. The old values are updated as aliases to the new\nvalues and marked as soon to be deprecated. This CL also moves the\nenum to v8-platform.h so that it can be reused by cppgc.\n\nDepracating individual values in an enum is supported by GCC only\nsince version 6. Thus new macros were needed for the deprecation\n(which delegate to the existing macros when supported). GCC versions\nolder than 6 are still used by the CQ bots.\n\nBug: chromium:1056170\nChange-Id: Id1ea73edfbbae282b0d8a3bb103dbbbf8ebd417e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2188971\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67744}\n","milestone":84},{"_id":"df8b8117a9096e04b235a814a6de026a311f6723","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Mon May 11 21:12:04 2020"},"commit":"df8b8117a9096e04b235a814a6de026a311f6723","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 11 22:50:24 2020"},"message":"Add use counter for var redeclarations of catch bindings\n\nBug: v8:10516\nChange-Id: I0a75b32ca4b90dc5a6c2f2f3ec66b183dc3ff99e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2191411\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67724}\n","milestone":84},{"_id":"9c546d8fe09b3f983d0be4feca006f9e6c8c039e","author":{"name":"Deepti Gandluri","email":"gdeepti@chromium.org","time":"Fri May 08 17:20:00 2020"},"commit":"9c546d8fe09b3f983d0be4feca006f9e6c8c039e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri May 08 19:14:00 2020"},"message":"[wasm-simd] Add use counter for SIMD opcodes\n\nThis CL adds use counters, as well as the callbacks needed to\nregister usage during the SIMD origin trial.\n\nChange-Id: I35b7f48277b519b72136f86cf03508adbaa069b8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2189334\nCommit-Queue: Deepti Gandluri <gdeepti@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67690}\n","milestone":84},{"_id":"5bf47728786ab7483c0f3b63095e1f0e64ebd1cf","author":{"name":"Georg Neis","email":"neis@chromium.org","time":"Fri May 08 08:36:36 2020"},"commit":"5bf47728786ab7483c0f3b63095e1f0e64ebd1cf","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri May 08 14:18:40 2020"},"message":"[modules] Disallow throwing in import.meta callback\n\n... via a comment in the API and a CHECK in\nIsolate::RunHostInitializeImportMetaObjectCallback.\n\nAlso restructure things a little bit such that\nthis function really just runs the callback and\ndoesn't deal with module internals. Memoization\nnow happens in the SourceTextModule class.\n\nBug: v8:7044\nChange-Id: I5b850ae629c3638c4b30dfdeaa996642a33d14dc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2190413\nReviewed-by: Sathya Gunasekaran  <gsathya@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nAuto-Submit: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67682}\n","milestone":84},{"_id":"c64b52a8929108cbeb98369f54e6f8513a00fc68","author":{"name":"Nico Hartmann","email":"nicohartmann@chromium.org","time":"Fri Apr 17 12:33:45 2020"},"commit":"c64b52a8929108cbeb98369f54e6f8513a00fc68","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 06 12:35:46 2020"},"message":"[sandbox] Wire ExternalString resource through bottleneck\n\nBug: v8:10391\nChange-Id: Ic92cdaca38c2181427cc12ec5e572d5964afe704\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2152647\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Nico Hartmann <nicohartmann@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67601}\n","milestone":84},{"_id":"37cdcdf421c0de20ad6615f6900a5af229378d86","author":{"name":"Philip Pfaffe","email":"pfaffe@chromium.org","time":"Thu Apr 30 07:32:58 2020"},"commit":"37cdcdf421c0de20ad6615f6900a5af229378d86","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 05 16:45:49 2020"},"message":"Support .external_debug_info symbol references\n\nWasm modules generated by emscripten today have two ways to point to\ndebug symbol files, the source mapping url and external debug info\ncustom sections. To support both, this CL extends CDP to appropriately\nreport the symbol type and location.\n\nBug: chromium:1064248\nChange-Id: I9076034f6d73901d8a9c5cfd7c2988fb30bb14c1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2116208\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Philip Pfaffe <pfaffe@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67571}\n","milestone":84},{"_id":"abad484607db298245da0eafbc286910feaa1a5d","author":{"name":"Philip Pfaffe","email":"pfaffe@chromium.org","time":"Mon May 04 12:05:34 2020"},"commit":"abad484607db298245da0eafbc286910feaa1a5d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 05 15:50:39 2020"},"message":"[wasm-debug-eval] expose wasm debug eval on the inspector protocol\n\nAllow the DevTools frontend to evaluate variables in a wasm frame context by\nreusing the existing Debugger expression evaluation API. Where previously the\nAPI expected JavaScript expressions, which would in general just fail, now the\nexpression is expected to be base64 encoded Wasm that creates a JSON string in\nlinear memory.\n\nBug: chromium:1020120 chromium:1068571\nChange-Id: I4b31fdb9d3b21b4e08c4995ec2f07880923959e9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2087396\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Philip Pfaffe <pfaffe@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67568}\n","milestone":84},{"_id":"4570ce146c67bc98ac084572ae0b65d006f90305","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue May 05 13:58:59 2020"},"commit":"4570ce146c67bc98ac084572ae0b65d006f90305","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 05 15:38:09 2020"},"message":"heap: Introduce EmbedderHeapTracer::kForced\n\nThe flag is used by V8 to propagate information on whether this GC was\nsomehow forced.\n\nThis allows the embedder using EmbedderHeapTracer to easily figure out\nwhether a GC was forced based on a local flag without depending on GC\nprologue/epilogue callbacks.\n\nBug: chromium:1074061\nChange-Id: Ic04c93ae58da854e54c6da1ca4aac03b5ab49897\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2182473\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67567}\n","milestone":84},{"_id":"961c21b1ca0ebebf2f02564b6a1a440ef00b9bd8","author":{"name":"Samuel Groß","email":"saelo@google.com","time":"Tue May 05 11:29:36 2020"},"commit":"961c21b1ca0ebebf2f02564b6a1a440ef00b9bd8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 05 15:27:49 2020"},"message":"[sandbox] Access external pointers in embedder slots via bottlenecks\n\nBug: v8:10391\nChange-Id: I55d4d33820c83711d3ea3c6a2f3a20a36707fe36\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2151354\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67566}\n","milestone":84},{"_id":"4cab8099cdd1b5e4451bb5aa8fcfbfd5a32f48e3","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Mon May 04 15:38:52 2020"},"commit":"4cab8099cdd1b5e4451bb5aa8fcfbfd5a32f48e3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 04 16:32:41 2020"},"message":"[ro-heap] Remove ReadOnlyHeap::Instance\n\nThis removes the static ReadOnlyHeap::Instance method replacing it with\nPopulateReadOnlySpaceStatistics on the way to removing the global\nReadOnlyHeap object.\n\nBug: v8:10454\nChange-Id: Ic78c898ff99c6a7dac023d2b5230fbbbf6f36f46\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2179805\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nAuto-Submit: Dan Elphick <delphick@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67545}\n","milestone":84},{"_id":"7b582b615ee8758073b3c5bc86031836fbb8183e","author":{"name":"Thibaud Michaud","email":"thibaudm@chromium.org","time":"Mon May 04 13:34:07 2020"},"commit":"7b582b615ee8758073b3c5bc86031836fbb8183e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 04 15:07:21 2020"},"message":"[wasm] Store the source URL in CompiledWasmModule\n\nThis allows us to preserve the script URL when importing a module in a\nworker.\n\nR=ahaas@chromium.org,clemensb@chromium.org\nCC=kimanh@chromium.org\n\nBug: chromium:1064548\nChange-Id: Id5e48c840e2dba8eadb5c854fcb389787ce11215\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2167866\nCommit-Queue: Thibaud Michaud <thibaudm@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67543}\n","milestone":84},{"_id":"de4c0042cbe6772ac034d1bef4c4c3b925afeec2","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Tue Apr 28 21:22:27 2020"},"commit":"de4c0042cbe6772ac034d1bef4c4c3b925afeec2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 30 10:18:05 2020"},"message":"[weakrefs] Remove deprecated FinalizationGroup V8 API\n\nBug: v8:8179\nChange-Id: I16170a197028beb35309b15613004b29a956896c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2171696\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCommit-Queue: Ross McIlroy <rmcilroy@chromium.org>\nAuto-Submit: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67492}\n","milestone":84},{"_id":"679945ff12ab9547ef2120a6a12c7f4bc79e6741","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed Apr 29 15:36:21 2020"},"commit":"679945ff12ab9547ef2120a6a12c7f4bc79e6741","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 30 08:04:24 2020"},"message":"[sandbox][x64] Access external pointer in Foreign via bottlenecks\n\nBug: v8:10391\nChange-Id: Ie019eb6253fdd29bfbae6a9f77c8b3396dacb599\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2134141\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67488}\n","milestone":84},{"_id":"920a53b6b6aa703951674dd8d06e037ceb4f9445","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon Apr 27 16:29:03 2020"},"commit":"920a53b6b6aa703951674dd8d06e037ceb4f9445","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 27 16:37:04 2020"},"message":"Fix LINT exceptions across the code base\n\nThe category name changed in https://crrev.com/c/2159690 (in\ndepot_tools), hence presubmit tests start failing whenever someone\ntouches a file which still refers to the old category.\n\nR=zhin@chromium.org\nTBR=machenbach@chromium.org\n\nNo-Try: true\nNo-Tree-Checks: true\nChange-Id: I62813a42d63e512d421c4fe94229d04a56056978\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2165760\nReviewed-by: Zhi An Ng <zhin@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67403}\n","milestone":84},{"_id":"7ae30cb7b61622b7bb17cfc0b8ba64d02ff6dd89","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Mon Apr 27 14:55:12 2020"},"commit":"7ae30cb7b61622b7bb17cfc0b8ba64d02ff6dd89","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 27 15:48:13 2020"},"message":"[heap] Skip memory reducer on AdjustAmountOfExternalAllocateMemory\n\nV8 performs GC based on external memory limit. Additionally triggering\nmemory reducing GCs may be problematic for large heaps and increases\nthe chances of multiple V8 isolates performing GCs after\nIsolateInBackgroundNotification.\n\nBug: chromium:1072746\n\nChange-Id: I7649a176504803ba666e6367b008593bbcfe6312\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2159488\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67398}\n","milestone":84},{"_id":"05b6268126c1435d1c964ef81799728088b72c76","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Fri Apr 24 13:14:50 2020"},"commit":"05b6268126c1435d1c964ef81799728088b72c76","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Apr 24 15:31:21 2020"},"message":"[Jobs]: Add job impl to default platform.\n\nThe impl works by posting up to NumberOfWorkerThreads() tasks\nwith CallOnWorkerThread().\n\nChange-Id: I188ac57c9e5d6e3befdcc6f945fbf337dabe1d1d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2130886\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nReviewed-by: Gabriel Charette <gab@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67368}\n","milestone":84},{"_id":"ba33e9dcd78258b1f820ac25d735082cb6005328","author":{"name":"Ng Zhi An","email":"zhin@chromium.org","time":"Mon Apr 20 17:21:37 2020"},"commit":"ba33e9dcd78258b1f820ac25d735082cb6005328","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 20 19:57:37 2020"},"message":"[wasm-simd] Add anyref subtype\n\nBug: v8:10347\nChange-Id: I46890321944cd861f7f8f193e5e499d4d9cd6aea\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2155156\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Zhi An Ng <zhin@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67252}\n","milestone":84},{"_id":"9dbab9bbdb979af4366b2ace6fc2e31cbf7f8324","author":{"name":"Sami Kyostila","email":"skyostil@chromium.org","time":"Fri Apr 17 20:46:18 2020"},"commit":"9dbab9bbdb979af4366b2ace6fc2e31cbf7f8324","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Apr 17 21:31:24 2020"},"message":"[tracing] Migrate tracing to Perfetto track events\n\nThis patch replaces V8's tracing implementation (i.e., the TRACE_EVENT\nmacros) with the track event base implementation from Perfetto. The\nadvantages of doing this are:\n\n1) This allows us to remove most tracing-related backend code from V8.\n\n2) V8 can start writing strongly typed trace event arguments, which\n   are more compact, easier to process and more extensible than legacy\n   JSON-based trace arguments.\n\nFor the time being, we still support the old trace macros when V8 is\nembedded into Chrome and other embedders.\n\nDesign doc: https://docs.google.com/document/d/1f7tt4cb-JcA5bQFR1oXk60ncJPpkL02_Hi_Bc6MfTQk/edit#heading=h.398p6b4eaen2\n\nBug: chromium:1006766\nChange-Id: Ie71474fbe065821772b13d851487ebbca680c4ae\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1947688\nCommit-Queue: Sami Kyöstilä <skyostil@chromium.org>\nAuto-Submit: Sami Kyöstilä <skyostil@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67217}\n","milestone":84},{"_id":"fa3e37e511ee242e8fa0ca09f5425dea4d7cecff","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Wed Apr 15 07:02:36 2020"},"commit":"fa3e37e511ee242e8fa0ca09f5425dea4d7cecff","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 16 11:23:30 2020"},"message":"[api] remove deprecated snapshot APIs\n\nR=verwaest@chromium.org\n\nFixed: v8:7463\nChange-Id: I3d0127865ad0430d38124c3ad8ed3bc63ba4e6d3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2149421\nAuto-Submit: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67169}\n","milestone":84},{"_id":"5241205835e0e0e9e740aa13957c986908268473","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Wed Apr 15 10:54:10 2020"},"commit":"5241205835e0e0e9e740aa13957c986908268473","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 15 12:47:29 2020"},"message":"[protectors] Add use counters to track invalidations\n\n... to make real world protector invalidations measurable.\n\nChromium CL: https://crrev.com/c/2149324\n\nDrive-by: Add missing newline in protector tracing.\nDrive-by: Consistent naming for the regexp species protector.\n\nBug: v8:9496\nChange-Id: I3c7238aa8024e03ea9e89daf83345b8ec4f0d768\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2149428\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67149}\n","milestone":84},{"_id":"2db93c0233790b2cfb9e80fa1fa89dee18c7109f","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Tue Apr 14 12:33:12 2020"},"commit":"2db93c0233790b2cfb9e80fa1fa89dee18c7109f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 14 14:13:39 2020"},"message":"[api] Add embedder-vs-V8 build configuration compatibility check\n\nv8::V8::Initialize() will fail with meaningful error upon build\nconfiguration mismatch.\n\nBug: v8:10041\nChange-Id: Ic69ba68ef1764b356beef0f204fe58b45bae3c49\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2144953\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67116}\n","milestone":84},{"_id":"bb9f0c2b2fe920a717794f3279758846f59f7840","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Fri Apr 10 00:43:43 2020"},"commit":"bb9f0c2b2fe920a717794f3279758846f59f7840","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 14 13:04:29 2020"},"message":"[snapshot] Improve snapshot docs and error printing\n\n- Minor improvements to the documentation for snapshotting.\n- Add newlines to printed errors where necessary.\n\nChange-Id: I822e7e850adb67eae73b51c23cf34e40ba3106f0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2144954\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67111}\n","milestone":84},{"_id":"e2e42338a20335128e6e2bf30d25ea32717a9b86","author":{"name":"Emanuel Ziegler","email":"ecmziegler@chromium.org","time":"Mon Apr 06 18:40:09 2020"},"commit":"e2e42338a20335128e6e2bf30d25ea32717a9b86","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 08 17:45:55 2020"},"message":"[wasm] Allow throwing Wasm errors from Blink\n\nExpose Wasm error classes to the V8 API such that they can be accessed\nfrom embedding environments like Blink.\n\nFollow-up in change I19568e6c0906de518fd6e5b417ef7e045e9d43c8\n\nR=ahaas@chromium.org\nR=ulan@chromium.org\n\nChange-Id: I238288de73283a06c5075d0060977b366c0fbe09\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2137416\nCommit-Queue: Emanuel Ziegler <ecmziegler@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67068}\n","milestone":84},{"_id":"0d6debcc5f08fe3c41d07686f82c9de05310519f","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Fri Apr 03 14:46:32 2020"},"commit":"0d6debcc5f08fe3c41d07686f82c9de05310519f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Apr 03 15:40:25 2020"},"message":"[turbofan] Fixes for integrating the fast C API\n\nThis commit adds a few fixes neccessary for integrating the\nfast C API into Blink:\n- added default constructor for CFunction\n- removed a bogus template specialization allowing void* params\n- extended the public Isolate class\n\nBug: chromium:1052746\nChange-Id: I4f2ba84299920e2cc9d66ec1ed59302313db6c0b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2120587\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66986}\n","milestone":84},{"_id":"e7cb911a93f372a6dbbeacab8f0a615c0c58a9c4","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon Mar 30 16:15:05 2020"},"commit":"e7cb911a93f372a6dbbeacab8f0a615c0c58a9c4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 31 06:55:16 2020"},"message":"[wasm] Fix capitalization of \"Wasm\"\n\nIf we want external people to stop shouting WASM, we should start\nby avoiding that in our own code base.\nThis CL replaces almost all occurrences of \"WASM\" by \"Wasm\". The\nlast remaining ones (in frames.cc) are in capitalized contexts where\nWASM fits.\n\nTBR=ecmziegler@chromium.org\n\nBug: v8:10155\nChange-Id: I905b92220768b99bb5e1165255691ffe4498dba3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2126917\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Emanuel Ziegler <ecmziegler@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66917}\n","milestone":83},{"_id":"155d2bc4aea7879ba5e3aa34b3b38abe2457de51","author":{"name":"Kim-Anh Tran","email":"kimanh@chromium.org","time":"Wed Mar 25 21:23:02 2020"},"commit":"155d2bc4aea7879ba5e3aa34b3b38abe2457de51","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 26 07:54:15 2020"},"message":"[wasm][debug] Add stack scope to CDP and V8\n\nThis change adds a stack scope for wasm debugging.\nCurrently the local scope contains both local variables as well as\nthe expression stack. For now, this change duplicates the information\navailable on stacks into the stack scope, until we have added\nsupport for the stack scope in the DevTools front-end.\n\nBug: chromium:1043034\nChange-Id: Ib0a07e07be7c53003526a7b1e1dbfaa1116b41ad\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2093510\nCommit-Queue: Kim-Anh Tran <kimanh@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66867}\n","milestone":83},{"_id":"844fe8f7d965fcb305bd1b71fe6b34628fc4d1fd","author":{"name":"Johannes Henkel","email":"johannes@chromium.org","time":"Fri Feb 07 23:26:48 2020"},"commit":"844fe8f7d965fcb305bd1b71fe6b34628fc4d1fd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 25 14:25:53 2020"},"message":"Make StringBuffer::string return a StringView instead of a reference.\n\nA StringView is pretty light, so this should be similar to\nhow absl::string_view is typically used, e.g. see the guidance here:\nhttps://github.com/abseil/abseil-cpp/blob/master/absl/strings/string_view.h\nI suspect this reasoning holds even though StringView (defined\njust above StringBuffer in v8-inspector.h) carries an additional bool.\nThis yields a small simplification of the StringBuffer implementations.\n\nChange-Id: I03f850049afe2327913070838f39649fcdfa6fa8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2045110\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66858}\n","milestone":83},{"_id":"7a3c7b155a362636a063bc718c525f563736c618","author":{"name":"Ng Zhi An","email":"zhin@chromium.org","time":"Tue Mar 24 20:28:58 2020"},"commit":"7a3c7b155a362636a063bc718c525f563736c618","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 25 13:35:48 2020"},"message":"[wasm-simd] Add Wasm types to protocol\n\nBug: v8:10347\nBug: chromium:1043034\nChange-Id: I804ea511e3ed7c866e0202c97a22dcac007243e8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2117325\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66857}\n","milestone":83},{"_id":"19de495c3fd6bd50f9eccc8abe535e5d38980aff","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Mar 24 14:57:59 2020"},"commit":"19de495c3fd6bd50f9eccc8abe535e5d38980aff","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 24 17:33:19 2020"},"message":"api: Add myself to OWNERS\n\nAs discussed offline, adding myself to OWNERS for the C++ GC, handles,\nand Blink embedding issues in general.\n\nBug: chromium:1056170\nChange-Id: Iff6a9f119000c04b40fb12b70f56d9bab7e32b43\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2116204\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66849}\n","milestone":83},{"_id":"d1253ae95b099d8ede3aacbdc5e5834ebd5d8865","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Thu Mar 19 15:14:35 2020"},"commit":"d1253ae95b099d8ede3aacbdc5e5834ebd5d8865","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 19 16:18:53 2020"},"message":"[unwinder] Advance deprecation of the old unwinder API\n\nChrome uses the new version now.\n\nBug: v8:8116\nChange-Id: I59af8d2c6a897a852acd6de3a7938a4b8d3943e4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2110015\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66796}\n","milestone":83},{"_id":"e71d328fb396cab9ef0b7bc14fdabd442c73bccf","author":{"name":"Philip Pfaffe","email":"pfaffe@chromium.org","time":"Tue Mar 17 11:53:02 2020"},"commit":"e71d328fb396cab9ef0b7bc14fdabd442c73bccf","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 17 13:25:24 2020"},"message":"Report additional wasm script info on the CDP\n\nAdd a scriptLanguage enum to the new scripts events. This overhauls\ncrrev.com/c/2011083 that was related. Report the code section offset\nas well as the script language on the Debugger.scriptParsed and\nDebugger.scriptFailedToParse events.\n\nBug: chromium:1057569\nChange-Id: I40b43f28f0b3e094720db4fc1f07db1a0c293ee0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2083025\nReviewed-by: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Philip Pfaffe <pfaffe@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66749}\n","milestone":83},{"_id":"98b1ef80c722b1a9e6584a0b49b63eda188cbc41","author":{"name":"Yuki Shiino","email":"yukishiino@chromium.org","time":"Fri Mar 13 13:14:09 2020"},"commit":"98b1ef80c722b1a9e6584a0b49b63eda188cbc41","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 17 13:04:24 2020"},"message":"Expose the %ObjProto_valueOf% intrinsic object to embedders\n\nhttps://html.spec.whatwg.org/multipage/history.html#the-location-interface\nHTML Location platform objects need to be initialized with using\nthe %ObjProto_valueOf% intrinsic object.\n\nThis patch exposes the %ObjProto_valueOf% intrinsic object to\nembedders.\n\nExample usage is: https://crrev.com/c/2102306\n\nChange-Id: Iec58135773e01aed5de330c0c5dea89a49835a52\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2102408\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Yuki Shiino <yukishiino@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66747}\n","milestone":83},{"_id":"5cf02f0f207c05cebce74b1a8f2d0fe2accc7df6","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Mon Mar 16 16:49:58 2020"},"commit":"5cf02f0f207c05cebce74b1a8f2d0fe2accc7df6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 17 08:10:24 2020"},"message":"[api] Support v8::BackingStores with empty deleters\n\nThis adjusts v8::[Shared]ArrayBuffer::NewBackingStore to allow passing\na known empty deleter -- v8::BackingStore::EmptyDeleter. Such API is\nuseful if the backing store memory is static or is manually managed.\n\nWe can skip adjusting the amount of external memory for ArrayBuffers\nwith empty deleters and thus avoid scheduling ineffective GCs.\n\nBug: chromium:1061960\n\nChange-Id: I0ef5b2b0839098beb59d5cebbb28f9f81a73a042\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2105355\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66740}\n","milestone":83},{"_id":"42f2e1fcc0cc5af5c31f649111f18e9e12eccd7f","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon Mar 09 11:04:51 2020"},"commit":"42f2e1fcc0cc5af5c31f649111f18e9e12eccd7f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Mar 13 09:50:42 2020"},"message":"[API] Use proper C++ methods to implement type checks\n\nThe {TYPE_CHECK} macro used an ancient pattern to check for\nassignability, by assigning to a static_casted nullptrs of the\nrespective types.\nC++11 introduced standard library helpers to express this more\nnaturally. The most direct translation would have been to use\n{std::is_assignable} or {std::is_convertible} on the pointer types, but\nin most cases we can be even more strict and force one type to be a\nproper subtype of the other.\nThe only exception is {ReturnValue}, which allows to assign anything if\nit's void.\n\nR=ulan@chromium.org\n\nBug: v8:10155\nChange-Id: I41c1103e0206514c8700c47a0bf107ad704cfc47\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2093497\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66695}\n","milestone":83},{"_id":"92ffc9106eb51765c1d32ba792a592d43df96d0c","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Jul 17 16:41:53 2020"},"commit":"92ffc9106eb51765c1d32ba792a592d43df96d0c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 22 08:22:52 2020"},"message":"Merged: [platform] Provide NewDefaultJobHandle function\n\nThis will allow embedders to actually instantiate the {DefaultJobHandle}\nas suggested in the comment. Node currently implements {PostJob()} by\njust returning a nullptr. After this change, it can use the new\n{NewDefaultJobHandle} function and we can actually start using this API\nin v8.\n\nTBR=​adamk@chromium.org, victorgomes@chromium.org\n\n(cherry picked from commit cb082a6026124c8761dd278b8f39bcd0d516d88d)\n\nBug: v8:10723\nChange-Id: Iaf1df42a9b2f990d1ad1b793ef210263d6b1e5f9\nNo-Try: true\nNo-Presubmit: true\nNo-Tree-Checks: true\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2310365\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/branch-heads/8.5@{#30}\nCr-Branched-From: a7f8bc434b35c3122a859f094fa541febd74ec7c-refs/heads/8.5.210@{#1}\nCr-Branched-From: dd58472158b209e36f3f8646e9adfb31ffa61483-refs/heads/master@{#68510}\n","milestone":85},{"_id":"5b5b72fdd9971274c1fa6de23d2834219be2d32e","author":{"name":"Kim-Anh Tran","email":"kimanh@chromium.org","time":"Mon Jun 29 09:52:53 2020"},"commit":"5b5b72fdd9971274c1fa6de23d2834219be2d32e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 03 12:36:01 2020"},"message":"Merged: [v8] Change TypedArray max length definition for 32 bit builds\n\nThis makes the 4GB max length compilable for 32 bit MSVC.\n\n(cherry picked from commit b7bbe0af0fa8f1a338b2231f3bbe6d917504dfde)\n\nTBR=clemensb@chromium.org\n\nBug: chromium:1095721\nNo-Try: true\nNo-Presubmit: true\nNo-Tree-Checks: true\nChange-Id: I2be9f69668687f18beb86028debb3fd5ff350202\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2280097\nCommit-Queue: Kim-Anh Tran <kimanh@chromium.org>\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nCr-Commit-Position: refs/branch-heads/8.5@{#12}\nCr-Branched-From: a7f8bc434b35c3122a859f094fa541febd74ec7c-refs/heads/8.5.210@{#1}\nCr-Branched-From: dd58472158b209e36f3f8646e9adfb31ffa61483-refs/heads/master@{#68510}\n","milestone":85},{"_id":"de05e68e3e45de40f1c399227ecfac23fe74795e","author":{"name":"Alex Turner","email":"alexmt@chromium.org","time":"Fri Jun 19 16:49:23 2020"},"commit":"de05e68e3e45de40f1c399227ecfac23fe74795e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 23 16:23:15 2020"},"message":"[api] Add a ScriptId getter for Module objects\n\nThere is currently no API call that allows access to the id of the\nscript underlying a Module. As this function can only be used for\nSourceTextModules, we also add IsSourceTextModule() and\nIsSyntheticModule() to allow callers to distinguish them.\n\nBug: v8:10616\nChange-Id: Ia55ea8e6993922b695019852e38ca54ffce32cbf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2248199\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Alex Turner <alexmt@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68487}\n","milestone":85},{"_id":"e63ca1581a72259aa3adeb2f1e42dab5617871d1","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Mon Jun 22 11:18:04 2020"},"commit":"e63ca1581a72259aa3adeb2f1e42dab5617871d1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 23 06:50:14 2020"},"message":"[Platform API] Add comment about non-nestable tasks\n\nClarify when we should use PostTask vs PostNonNestableTask.\n\nChange-Id: I2b69dc4d4b6de4079dcab05e8b5c3b1f77cbbe2c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2253852\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68475}\n","milestone":85},{"_id":"6574a7133d175f5ffec389f236742c248ca231a0","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Mon Jun 22 12:35:34 2020"},"commit":"6574a7133d175f5ffec389f236742c248ca231a0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jun 22 15:15:31 2020"},"message":"[Respect] Rename lists\n\nThis changes black/white list to block/allow list.\n\nBug: v8:10619\nChange-Id: Id55d72f90891670ca57b62dfeb6b3251025927dc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2257228\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68464}\n","milestone":85},{"_id":"f510c66b96441c518c8734e69d739bfe798cde56","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Fri Jun 19 09:33:29 2020"},"commit":"f510c66b96441c518c8734e69d739bfe798cde56","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jun 19 10:24:20 2020"},"message":"inspector: Add flag to Runtime.evaluate() for unsafe eval\n\nevaluate() bypassed CSP for unsafe-eval by default. This is a useful\noption for debugging clients, but is not always what we want.\n\ne.g. in the devtools console we want to match the page's CSP settings\nto make debugging CSP issues on the page easier.\n\nAdd a toggle that keeps the current behavior by default.\n\nBug: chromium:1084558\nChange-Id: Ia01142d5be00f8ef5f65e5eeba17549efc6f9120\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2250245\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68432}\n","milestone":85},{"_id":"94dd3e992ef52dc72001b1c46bdb50431a89dffa","author":{"name":"Kim-Anh Tran","email":"kimanh@chromium.org","time":"Thu Jun 18 12:08:19 2020"},"commit":"94dd3e992ef52dc72001b1c46bdb50431a89dffa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jun 19 06:52:21 2020"},"message":"[v8] Allow for 4GB TypedArrays\n\nIncrease TypedArray.kMaxLength by 1.\n\nBug: chromium:1095721\nChange-Id: Ic3668ff4e71cfd1289eda495333c4aae62c44795\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2249668\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Kim-Anh Tran <kimanh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68424}\n","milestone":85},{"_id":"87ec89deeba0eb2981d227f1dd09e62b84a6c848","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Jun 16 17:11:35 2020"},"commit":"87ec89deeba0eb2981d227f1dd09e62b84a6c848","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 16 22:30:44 2020"},"message":"[api] Add cbruni@ as api owner\n\nChange-Id: I69379880ef201f3668f54e8e3594c3933b5a6947\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2247758\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68377}\n","milestone":85},{"_id":"f08cbfdc4051266e4200b6e26775d35307b1259b","author":{"name":"Daniel Bevenius","email":"daniel.bevenius@gmail.com","time":"Wed Jun 10 11:00:05 2020"},"commit":"f08cbfdc4051266e4200b6e26775d35307b1259b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jun 12 13:01:10 2020"},"message":"Suppress cast-function-type in PersistentBase::SetWeak\n\nThis issue was seen in Node.js when compiling with GCC. It can also\nbeen see if building V8 using GCC and enabling -Wcast-function-type\nin BUILD.gn:\n  \"-Wcast-function-type\",\n\nThere are unit tests in V8 that produce this warning, for example\ntest/cctest/test-global-handles.cc (formatted to fit the commit\nmessage width):\ng++ -MMD -MF obj/test/cctest/cctest_sources/test-global-handles.o.d\n...\nIn file included from ../../include/v8-inspector.h:14,\n                 from ../../src/execution/isolate.h:15,\n                 from ../../src/api/api.h:10,\n                 from ../../src/api/api-inl.h:8,\n                 from ../../test/cctest/test-global-handles.cc:28:\n../../include/v8.h:\nIn instantiation of ‘void v8::PersistentBase<T>::SetWeak(\n    P*,\n    typename v8::WeakCallbackInfo<P>::Callback,\n    v8::WeakCallbackType)\n[with\n  P = v8::Global<v8::Object>;\n  T = v8::Object;\n  typename v8::WeakCallbackInfo<P>::Callback =\n  void (*)(const v8::WeakCallbackInfo<v8::Global<v8::Object> >&)\n]’:\n../../test/cctest/test-global-handles.cc:292:47: required from here\n../../include/v8.h:10750:16: warning:\ncast between incompatible function types from\n‘v8::WeakCallbackInfo<v8::Global<v8::Object> >::Callback’ {aka\n‘void (*)(const v8::WeakCallbackInfo<v8::Global<v8::Object> >&)’} to\n‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’}\n[-Wcast-function-type]\n10750 |                reinterpret_cast<Callback>(callback), type);\n      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis commit suggests adding a pragma specifically for GCC to suppress\nthis warning.\n\nBug: v8:8735\nChange-Id: I5dd2dccf215a7fd2f6dd14993368cc5cbb6c71e5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2080361\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68320}\n","milestone":85},{"_id":"fe201c34db38d3583231701ebbcad62c303e6d17","author":{"name":"Thibaud Michaud","email":"thibaudm@chromium.org","time":"Wed Jun 10 13:49:13 2020"},"commit":"fe201c34db38d3583231701ebbcad62c303e6d17","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jun 10 15:15:21 2020"},"message":"[wasm] Add use counters for anyref, bulk memory and multi value\n\nR=clemensb@chromium.org\n\nBug: v8:10549\nChange-Id: I516d35b0810ce147b568c1b8e32eb084753614e8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2235697\nCommit-Queue: Thibaud Michaud <thibaudm@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68294}\n","milestone":85},{"_id":"e51ad7e339d07ce343b5a39a4ab41c2d44bf5ab8","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Jun 09 14:53:42 2020"},"commit":"e51ad7e339d07ce343b5a39a4ab41c2d44bf5ab8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jun 10 07:41:50 2020"},"message":"[api] Avoid using v8::NewFromUtf8Lilteral if possible\n\nChange-Id: I4e9a70339a59845c33432fe6a8dcaacebd2046a6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2237631\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68278}\n","milestone":85},{"_id":"ba688c6ec9c0fb4439f7381cb8046ea14b159d0e","author":{"name":"Manos Koukoutos","email":"manoskouk@chromium.org","time":"Tue Jun 09 15:54:14 2020"},"commit":"ba688c6ec9c0fb4439f7381cb8046ea14b159d0e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 09 17:51:04 2020"},"message":"[wasm] Rename anyref to externref, anyref flag/feature to reftypes\n\nThe reference types wasm proposal dropped all subtyping. Subsequently,\nthe 'anyref' type was renamed to externref.\nThis changes all references of the *type* anyref to externref.\nAdditionally, the flag that permits this extension is renamed to\n\"reftypes\" to mirror the proposal name.\n\nBug: v8:7748\nChange-Id: Icf323f13b9660fd10540e65125af053fca3a03f9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2232941\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Kim-Anh Tran <kimanh@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68270}\n","milestone":85},{"_id":"226fa8da81562e55c8430c96100e594713c68bb5","author":{"name":"Gus Caplan","email":"me@gus.host","time":"Mon Jun 08 14:52:36 2020"},"commit":"226fa8da81562e55c8430c96100e594713c68bb5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jun 08 19:17:36 2020"},"message":"[api] expose dynamic fast call api constructor\n\nThis allows fast call callbacks to be created in cases where C++\ntemplates cannot be used, for example C or Rust.\n\nBug: chromium:1052746\nChange-Id: I90122444297f6c00428cd7345e0c0c7eca010716\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2235914\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Gus Caplan <me@gus.host>\nCr-Commit-Position: refs/heads/master@{#68239}\n","milestone":85},{"_id":"04210bb8bf85537a96f183fa16ac16bcaea64482","author":{"name":"Daniel Bevenius","email":"daniel.bevenius@gmail.com","time":"Mon May 25 03:58:33 2020"},"commit":"04210bb8bf85537a96f183fa16ac16bcaea64482","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 28 16:46:56 2020"},"message":"Fix two minor typos in v8.h\n\nChange-Id: Iea3514074fb7c5669ec2b766f8234a6545164759\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2213423\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#68050}\n","milestone":85},{"_id":"c3112fc2ff8351b668394fb44c13c136b28b143d","author":{"name":"Junha Park","email":"jpark3@scu.edu","time":"Mon May 25 06:59:15 2020"},"commit":"c3112fc2ff8351b668394fb44c13c136b28b143d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 25 08:52:48 2020"},"message":"Added API to verify version match on snapshot blob\n\nThis patch added an IsValid method to StartupData which returns a\nboolean upon verifying a given snapshot matches the v8 version.\nEmbedders can use this API now to check snapshots' versions.\n\nThis was originally done by Snapshot::CheckVersion, which now simply\nruns Startup::IsValid.\n\nBug: v8:8104\nChange-Id: If555bcc55de4a05adf61798cd58d9ea8c8a71302\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2178091\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nAuto-Submit: Junha Park <jpark3@scu.edu>\nCr-Commit-Position: refs/heads/master@{#67951}\n","milestone":85},{"_id":"d5f7622136d4fd13d6c85910da932b04daf5401a","author":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Fri May 15 10:16:40 2020"},"commit":"d5f7622136d4fd13d6c85910da932b04daf5401a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri May 15 10:24:49 2020"},"message":"Add include owners for version changes\n\nNOTRY=true\n\nChange-Id: I3c6ee995634ebd16b9829ca75ae84203ac2c2f35\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2202987\nAuto-Submit: Michael Achenbach <machenbach@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/heads/master@{#67818}\n","milestone":85},{"_id":"c9e883e803822f098056bfae0fd9a9bbcfbb16a8","author":{"name":"Sara Tang","email":"sartang@microsoft.com","time":"Fri Nov 06 19:51:33 2020"},"commit":"c9e883e803822f098056bfae0fd9a9bbcfbb16a8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 09 15:29:14 2020"},"message":"(Step 1 of 2): Prepping Wasm events in the Recorder interface\n\nAs part of an effort to prepare the Recorder interface for general use,\nwe had to make some changes to the way the existing Wasm Events are\nbeing used. In particular,\n  - it is more fitting to use a ElapsedTimer than a TimedScope to\n    measure the durations in src/wasm/module-[decoder|instantiate].cc\n  - we want to rename the wall_clock_time_in_us field to duration_in_us\n    for clarity.\n\nBecause these Wasm events are already being instantiated in chromium,\nrenaming the field requires a two-step change. This is the first of\nthose changes.\n\nChange-Id: If1b2990f7645616a59fc21d07ac10bf00701c0e5\nBug: v8:11109\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2518619\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Emanuel Ziegler <ecmziegler@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#71053}\n","milestone":88},{"_id":"2ccd4dc564b93a46246e73604c4a6ef0ddb89f99","author":{"name":"Devlin Cronin","email":"rdevlin.cronin@chromium.org","time":"Mon Nov 02 22:01:19 2020"},"commit":"2ccd4dc564b93a46246e73604c4a6ef0ddb89f99","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 05 00:38:40 2020"},"message":"Introduce Function::FunctionProtoToString()\n\nAdd a new function on the public API to allow serializing a function to\na string using the built-in toString() implementation, allowing\nserialization without worrying about untrusted author script overriding\nthe toString() implementation. This is similar in nature to\nObject::ObjectProtoToString() (but that only returns \"[object Function]\"\nfor any passed function).\n\nAdd tests for the same.\n\nBug: chromium:1144841\nChange-Id: Ie4c29b870034c0817c23bf91f9424f956098823d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2514768\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Devlin <rdevlin.cronin@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70976}\n","milestone":88},{"_id":"543e5633af40bf003b301d542f0774fb7c964765","author":{"name":"Daniel Vogelheim","email":"vogelheim@chromium.org","time":"Fri Oct 30 16:38:33 2020"},"commit":"543e5633af40bf003b301d542f0774fb7c964765","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 04 16:35:21 2020"},"message":"[api] TC39 Dynamic Code Brand checks - rename for consistency.\n\nRename-only CL: Rename \"code kind\" to \"code like\".\n\nThe reason is CL feedback when using this feature, and a desire for\nconsistency across V8 + Blink. An additional benefit would be to\ndisambiguate from the v8::internal::CodeKind type, which is unrelated to\nany of this.\n\nOriginal CL: crrev.com/c/v8/v8/+/2339618\nCL whose review prompted this change: crrev.com/c/2340905\n\nBug: chromium:1096017\nChange-Id: Id59016fc2906ab6cd1414e598338b3963811b92f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2509598\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Daniel Vogelheim <vogelheim@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70970}\n","milestone":88},{"_id":"5ce10a0b5e213d432f0306751ea3487a13d602a6","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Mon Oct 26 16:31:26 2020"},"commit":"5ce10a0b5e213d432f0306751ea3487a13d602a6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 04 12:38:46 2020"},"message":"[api] Add updated ScriptCompiler::StartStreaming API\n\nThe new api removes the unused CompileOptions argument.\n\nChange-Id: Ie3c48cda5247da9ce87d70a90b7ab9c43d5e8e37\nBug: chromium:1061857\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2498698\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70965}\n","milestone":88},{"_id":"9a49b2298f65f6b18c5245f3681aca04e5fe4e46","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Thu Oct 29 14:02:03 2020"},"commit":"9a49b2298f65f6b18c5245f3681aca04e5fe4e46","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 02 11:57:30 2020"},"message":"Fix alloc/dealloc size mismatch for v8::BackingStore\n\nOn newer compilers the {operator delete} with explicit {size_t}\nargument would be instantiated for {v8::BackingStore} and used\nin the destructor of {std::unique_ptr<v8::BackingStore>}. The {size_t}\nargument is wrong though, since the pointer actually points\nto a {v8::internal::BackingStore} object.\nThe solution is to explicitly provide a {operator delete}, preventing\nan implicitly generated {size_t} operator.\n\nBug:v8:11081\n\nChange-Id: Iee0aa47a67f0e41000bea628942f7e3d70198b83\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2506712\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70916}\n","milestone":88},{"_id":"4fb053d847e1f693e0fb87b65a4bcf04dcfba0b3","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Fri Oct 30 18:41:00 2020"},"commit":"4fb053d847e1f693e0fb87b65a4bcf04dcfba0b3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 30 19:57:38 2020"},"message":"[Jobs API] Rename !IsCompleted -> IsActive\n\nIsCompleted is backwards. For a more consistent api, the function is\nrenamed IsActive and logic is flipped.\nFollowing up on https://chromium-review.googlesource.com/c/v8/v8/+/2461840\nThe intend is to make the distinction between IsActive and IsValid obvious.\n\nChange-Id: Iaf00b9f6ffa8f1efe93ae29f09899737ef20f04d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2510969\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70901}\n","milestone":88},{"_id":"5720d2056c80daba09e0977fce3f111d72ea9fed","author":{"name":"Martin Bidlingmaier","email":"mbid@google.com","time":"Thu Oct 29 10:23:57 2020"},"commit":"5720d2056c80daba09e0977fce3f111d72ea9fed","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 30 08:33:06 2020"},"message":"[regexp] Add 'l' flag to force experimental engine\n\nThis commit adds the 'l' (linear) RegExp flag (as in e.g. /asdf|123/l)\nthat forces execution in linear time.  These regexps are handled by the\nexperimental engine.  If the experimental engine cannot handle the\npattern, an exception is thrown on creation of the regexp.\n\nThe commit also adds a new global V8 flag and changes an existing one:\n* --enable-experimental-engine, which turns on recognition of the RegExp\n  'l' flag.  Previously this flag also caused all supported regexps to\n  be executed by the experimental engine; this is not the case anymore.\n* --default-to-experimental-regexp-engine takes over the previous\n  semantics of --enable-experimental-regexp-engine:  We execute all\n  supported regexps with the experimental engine.\n\nCq-Include-Trybots: luci.v8.try:v8_linux64_fyi_rel_ng\nBug: v8:10765\nChange-Id: I5622a89b19404105e8be280d454e9fdd63c003b3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2461244\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Martin Bidlingmaier <mbid@google.com>\nCr-Commit-Position: refs/heads/master@{#70892}\n","milestone":88},{"_id":"954b3a778762a6d5e4de99c6ecc42f9690f1c010","author":{"name":"Alfonso Castaño","email":"alcastano@google.com","time":"Wed Oct 28 11:52:50 2020"},"commit":"954b3a778762a6d5e4de99c6ecc42f9690f1c010","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Oct 29 09:39:11 2020"},"message":"Prepare for moving object description generation to blink (ValueMirror)\n\nThis CL is a preliminary work to move the description generation of objects that are not V8 specific to the Embedder. Until now, the description for Nodes and Trusted Types was generated by V8 what was problematic, since Blink (not V8) is who has access to the information required for the description.\nOnce the refactoring is complete the existing descriptionForNode and descriptionForTrustedType can be deleted from V8.\n\n\nCorresponding Blink CL: https://chromium-review.googlesource.com/c/chromium/src/+/2502589\nFollow-up V8 CL: https://chromium-review.googlesource.com/c/v8/v8/+/2502869\n\nBug: chromium:1048143\nChange-Id: Ia30c207697d7355bf3f8b27f7494349ca41266e1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2502342\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Sigurd Schneider <sigurds@chromium.org>\nCommit-Queue: Alfonso Castaño <alcastano@google.com>\nCr-Commit-Position: refs/heads/master@{#70870}\n","milestone":88},{"_id":"aabe6406c472f427aac903cee69dc3c45815c45f","author":{"name":"Daniel Vogelheim","email":"vogelheim@chromium.org","time":"Tue Oct 27 17:07:49 2020"},"commit":"aabe6406c472f427aac903cee69dc3c45815c45f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 28 14:18:53 2020"},"message":"[api] TC39 Dynamic Code Brand checks\n\nhttps://github.com/tc39/proposal-dynamic-code-brand-checks\n\nAn experimental implementation of the TC39 \"Dynamic Code Brand Checks\". This\nimplementation sticks an API-only symbol on each \"code kind\" object, which\nis more flexible, but costs memory for each instance.\n\nBug: chromium:1096017\nChange-Id: Idfeca035c61204ca0cea8ec735fdfa40a49d85e4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2339618\nCommit-Queue: Daniel Vogelheim <vogelheim@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70842}\n","milestone":88},{"_id":"a5490e39e5152de4e37efd9127bd6139866e6bae","author":{"name":"Nicolas Dubus","email":"nicodubus@fb.com","time":"Mon Oct 26 18:12:10 2020"},"commit":"a5490e39e5152de4e37efd9127bd6139866e6bae","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 27 19:10:45 2020"},"message":"[cpu-profiler] Return CpuStartProfilingStatus when starting profiling\n\n - Created status enum with statuses kStarted, kAlreadyStarted and\nkErrorTooManyProfilers, returning when StartProfiling is invoked\n - Tests spin up one profiler, check kStarted returned; spin up\nanother with same name, check kAlreadyStarted returned; Spin up 99\nmore profilers (100 total), check each returning kStarted, and\none more, expecting 101st to return kErrorTooManyProfilers\n\nR=acomminos@fb.com, petermarshall@chromium.org, ulan@chromium.org\n\nChange-Id: I64e2e6396775f90f9f49f75331a075a47efa7fca\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2486240\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70808}\n","milestone":88},{"_id":"b6ebafa2d520a874ba8952efb9119c5fa3a8a4e9","author":{"name":"Bill Budge","email":"bbudge@chromium.org","time":"Tue Oct 27 12:20:13 2020"},"commit":"b6ebafa2d520a874ba8952efb9119c5fa3a8a4e9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 27 18:36:05 2020"},"message":"[api] Add V8::SetIsCrossOriginIsolated method\n\n- Adds a method to tell V8 that the process is cross-origin-isolated\n  under COOP+COEP. In this case, SharedArrayBuffer can be enabled.\n\nBug: chromium:923807\nChange-Id: I729093665a50d2b3667c028e05b42d21d76b12d3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2502448\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Bill Budge <bbudge@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70805}\n","milestone":88},{"_id":"aa42907747a606cf64e32b971aa502c9b98a1fe9","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Oct 27 14:58:26 2020"},"commit":"aa42907747a606cf64e32b971aa502c9b98a1fe9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 27 16:45:35 2020"},"message":"heap, cpppgc: Add support for wrappper nodes in snapshots\n\nWrapper nodes are merged into their corresponding C++ object nodes\nwhen the reference between C++ and JS object has a wrapper class id\nset.\n\nInstead of iterating all global handles and checking for those with\nclass ids, the new algorithm discovers them while iterating C++\nobjects.\n\nNote: Additional wrapper nodes, e.g., those from isolated worlds in\nBlink are not merged.\n\nBug: chromium:1056170\nChange-Id: I6dff8992e41d7a1a2c3b99a115a53df6b6fbb64c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2499661\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70804}\n","milestone":88},{"_id":"b63d4841a1d8d12b3141806d3ca7bd6d8de82596","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Thu Oct 22 08:48:27 2020"},"commit":"b63d4841a1d8d12b3141806d3ca7bd6d8de82596","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Oct 22 12:44:54 2020"},"message":"[fastcall] Turn the options pointer to a reference\n\nRefactor the {options} output parameter of the fast callback to a\nreference, since it can never be nullptr for functions created with\nMakeWithFallbackSupport. This allows embedders to spare the nullptr\ncheck.\n\nBug: chromium:1052746\nChange-Id: I3e22f07af4740ebe8522691da51b6addbc980f24\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2491026\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nAuto-Submit: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70706}\n","milestone":88},{"_id":"e5c6a3bd750f1db5d42fff6b5997719c11177cf6","author":{"name":"Edward Lesmes","email":"ehmaldonado@google.com","time":"Thu Oct 15 17:33:45 2020"},"commit":"e5c6a3bd750f1db5d42fff6b5997719c11177cf6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 20 22:12:28 2020"},"message":"Add DIR_METADATA files to v8.\n\nGenerate DIR_METADATA files and remove metadata from OWNERS\nfiles for v8.\n\nR=jkummerow@chromium.org, ochang@chromium.org, yangguo@chromium.org\n\nBug: chromium:1113033\nChange-Id: I82cbb62e438d82dbbc408e87120af39fa9da0afa\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2476680\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Edward Lesmes <ehmaldonado@chromium.org>\nAuto-Submit: Edward Lesmes <ehmaldonado@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70669}\n","milestone":88},{"_id":"d6c586f756ffe25884d55d4f6f76b0318871662d","author":{"name":"Santiago Aboy Solanes","email":"solanes@chromium.org","time":"Tue Oct 20 09:40:34 2020"},"commit":"d6c586f756ffe25884d55d4f6f76b0318871662d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 20 12:32:09 2020"},"message":"[unwinder] Restore callee saved registers after unwinding in arm32\n\nBug: v8:10799\nChange-Id: Id912520b6a27e439e204bac47c0723a8f613be4b\nFixed: v8:10799\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2472000\nCommit-Queue: Santiago Aboy Solanes <solanes@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70656}\n","milestone":88},{"_id":"4d5e6fb3018ef61e87b3441739afbcec0f166f75","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Tue Oct 20 07:07:48 2020"},"commit":"4d5e6fb3018ef61e87b3441739afbcec0f166f75","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 20 08:14:09 2020"},"message":"[fastcall] Generalize fallback option for fast API calls\n\nSwitch the current bool* parameter to a structure that contains\nthe boolean fallback flag and is forward compatible, if we decide\nto add more options to the fallback call.\n\nFly-by refactoring: moved V8_ENABLE_FP_PARAMS_IN_C_LINKAGE out of\na public V8 header file.\n\nBug: chromium:1052746\nChange-Id: I844db24cc687c58b3c3bbd84b4d61bb4759bcfc7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2474775\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70642}\n","milestone":88},{"_id":"10b847c76589c6fd3d80c2cded20fb218b9e55e3","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Fri Oct 16 17:53:20 2020"},"commit":"10b847c76589c6fd3d80c2cded20fb218b9e55e3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 19 17:01:48 2020"},"message":"[Jobs API] Rename IsRunning -> IsValid\n\nIsRunning is the v8 equivalent of operator bool, but is confusing\nwith IsCompleted. IsValid (to match base:: operator bool) should be more\nclear.\n\nChange-Id: I2529bea21c7cb7613bd5057c66715fb5ea450396\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2461840\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70625}\n","milestone":88},{"_id":"c1c4f292192edad83234044e74c6ce0f9b52fd8a","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Sun Oct 18 10:26:01 2020"},"commit":"c1c4f292192edad83234044e74c6ce0f9b52fd8a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 19 07:27:09 2020"},"message":"Fix typos\n\nChange-Id: Ie0b3a41e4248fb831d76ac47417cd8cb3a1e23f9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2482823\nCommit-Queue: Omer Katz <omerkatz@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70596}\n","milestone":88},{"_id":"cf84dd04a3503325e8b8519e4904645866bb9c23","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Tue Oct 13 11:30:41 2020"},"commit":"cf84dd04a3503325e8b8519e4904645866bb9c23","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 13 12:21:09 2020"},"message":"[turbofan] Add docs and tests for fast calls with fallback\n\nBug: chromium:1052746\nChange-Id: I6c1f888ed9a7f27d43872e24f8d8cf353a103f1a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2461740\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70479}\n","milestone":88},{"_id":"c6368d294a293d16fb19fe19e4c3edd4a41e6db2","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Mon Oct 12 06:35:21 2020"},"commit":"c6368d294a293d16fb19fe19e4c3edd4a41e6db2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 13 08:55:54 2020"},"message":"[api] Add Isolate::GetEmbeddedCodeRange\n\n... to expose the memory region containing embedded builtins. Similar\nto `GetCodeRange`, which does the same for on-heap V8 Code objects.\n\nBug: v8:11001\nChange-Id: I1aa3ae650f161cabb410c61dbb6d364908370f8f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2465461\nAuto-Submit: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70470}\n","milestone":88},{"_id":"977b77a332c77a57f75f2b7aa086d5562d398434","author":{"name":"Samuel Groß","email":"saelo@google.com","time":"Fri Oct 09 09:10:25 2020"},"commit":"977b77a332c77a57f75f2b7aa086d5562d398434","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 09 15:39:44 2020"},"message":"[sandbox][x64] Add a type tag to external pointers\n\nThis change tags pointers in the external pointer table with a type\ndependent value in order to prevent type confusions between different\nexternal pointers.\n\nBug: v8:10391\nChange-Id: I5a83178e5ac46d49a99c91047816926120d801d3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2443133\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Samuel Groß <saelo@google.com>\nCr-Commit-Position: refs/heads/master@{#70430}\n","milestone":88},{"_id":"4569ffae0bc2924f9f6a4a80fb168bd539a60bbd","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Oct 09 12:06:43 2020"},"commit":"4569ffae0bc2924f9f6a4a80fb168bd539a60bbd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 09 14:33:57 2020"},"message":"Migrate CrossThreadPersistent\n\nAdds a cross-thread reference for strongly and weakly retaining\nobjects on a thread other than the thread that owns the object.\n\nThe intended use of the reference is by setting it up on the\noriginating thread, holding the object alive from another thread, and\nultimately accessing the object again on the originating thread.\n\nThe reference has known caveats:\n- It's unsafe to use when the heap may terminate;\n- It's unsafe to transitively reach through the graph because of\n  compaction;\n\nChange-Id: I84fbdde69a099eb54af5b93c34e2169915b17e64\nBug: chromium:1056170\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2436449\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Omer Katz <omerkatz@chromium.org>\nReviewed-by: Anton Bikineev <bikineev@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70428}\n","milestone":88},{"_id":"3499b8567ac2e8e6ac46c717df495e5ed91b3fc6","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Wed Oct 07 16:37:03 2020"},"commit":"3499b8567ac2e8e6ac46c717df495e5ed91b3fc6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 07 17:34:30 2020"},"message":"[top-level-await] Implement v8::Module::IsGraphAsync()\n\nThis is a predicate checking if any module in a module graph is [[Async]], i.e.\ncontains a top-level await. It is needed for ServiceWorker integration, as\nServiceWorkers disallows top-level await in its modules to prevent stalling\nduring registration.\n\nhttps://github.com/w3c/ServiceWorker/pull/1444\n\nBug: v8:9344\nChange-Id: Id84489bc73717b4c9950059c8ff6def9297499d0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2451212\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70390}\n","milestone":88},{"_id":"4f1bf7d10bbb1e39e83f6dac3c8113d04cf6ddec","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Mon Oct 05 20:27:31 2020"},"commit":"4f1bf7d10bbb1e39e83f6dac3c8113d04cf6ddec","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 06 15:54:31 2020"},"message":"[Jobs]: Expose CancelAndDetach()\n\nThis is useful for wasm instead of keeping around a list of handles.\n\nChange-Id: I4ef970ba191a66303c577bbe8e6ab1327aad2e24\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2451209\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70353}\n","milestone":88},{"_id":"cc65d55212f9beedecc437a8c62ecba3bdc57b09","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Oct 06 09:39:40 2020"},"commit":"cc65d55212f9beedecc437a8c62ecba3bdc57b09","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 06 15:18:11 2020"},"message":"[api] Advance deprecation of MicroTask APIs\n\nV8_DEPRECATE_SOON happened in v8.2\n\nBug: v8:8124\nChange-Id: Iab138dc6bf45c577c86bed3cc2fc5b6422eeffab\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2450067\nAuto-Submit: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70349}\n","milestone":88},{"_id":"add718276e045f5154050639ab96374d46ab71f6","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Oct 06 09:35:08 2020"},"commit":"add718276e045f5154050639ab96374d46ab71f6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 06 12:26:10 2020"},"message":"[api] Advance deprecation of ResourceConstraints API methods\n\nV8_DEPRECATE_SOON happened in v7.7\n\nBug: v8:9306\nChange-Id: I652b494c88534e531c2bef3a1417bfb18c594e85\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2450065\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70340}\n","milestone":88},{"_id":"086eecbd96b63f8d8604d5d373d2850c2edc840d","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Tue Oct 06 09:45:16 2020"},"commit":"086eecbd96b63f8d8604d5d373d2850c2edc840d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 06 11:03:31 2020"},"message":"[platform] Add Permission::kNoAccessWillJitLater enum value\n\nThis value is unused for now. This CL is part 1 of a 3-step dance.\nPart 2 will be teaching Chrome's Platform implementation to accept\nthe new value. Part 3 will then actually use it in V8.\n\nBug: chromium:1117591\nChange-Id: Ie3aed20d4cc58f3def3be2a3a03bba4c3a37bf44\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2450056\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70335}\n","milestone":88},{"_id":"66bafce629750e0a0649c5079a5359d9493d8b6c","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Tue Oct 06 09:17:24 2020"},"commit":"66bafce629750e0a0649c5079a5359d9493d8b6c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 06 10:47:50 2020"},"message":"[api] Advance deprecation of String::isExternal\n\nV8_DEPRECATE_SOON happened in v8.7\n\nBug: v8:10641\nChange-Id: Ia20f89da38b1e739051d019a395ff1e7989a361b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2450063\nReviewed-by: Victor Gomes <victorgomes@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70334}\n","milestone":88},{"_id":"fe947abf4d753413653aae24529b508442cd0a9d","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Thu Oct 01 15:17:53 2020"},"commit":"fe947abf4d753413653aae24529b508442cd0a9d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 02 08:26:06 2020"},"message":"[turbofan] Add float/double support for fast API calls\n\nThis CL implements passing float parameters to fast API calls by\nusing the existing representation conversions for double parameters\nand then truncating the double to a float.\n\nIt also adds float/double tests for fast API calls.\n\nBug: chromium:1052746\nChange-Id: Ibb3ccd173b3807a515adbf38cebaa1cf8e2784b6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2436333\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70277}\n","milestone":88},{"_id":"abacd4c11518d10459da7848be4eef8dd030c69e","author":{"name":"Andrey Kosyakov","email":"caseq@chromium.org","time":"Wed Sep 30 22:27:32 2020"},"commit":"abacd4c11518d10459da7848be4eef8dd030c69e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Oct 01 17:20:04 2020"},"message":"DevTools: add support for injecting bindings by context name\n\nThis adds support for injecting binding into contexts other than\nmain based on the context name (AKA isolated world name in Blink\nterms). This would simplify a common use case for addBinding in\nPuppeteer and other automation tools that use addBinding to expose\na back-channel for extension code running in an isolated world by\nmaking bindings available to such code at an early stage and in a\nrace-free manner (currently, we can only inject a binding into\nspecific context after the creation of the context has been reported\nto the client, which typically introduces a race with other evals\nthe client may be running in the context).\n\nChange-Id: I66454954491a47a0c9aa4864f0aace4da2e67d3a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2440984\nReviewed-by: Simon Zünd <szuend@chromium.org>\nReviewed-by: Pavel Feldman <pfeldman@chromium.org>\nCommit-Queue: Andrey Kosyakov <caseq@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70266}\n","milestone":88},{"_id":"32e2584405e8071958fa83e8db3c84ac84d89b31","author":{"name":"Samuel Groß","email":"saelo@google.com","time":"Tue Sep 29 13:40:21 2020"},"commit":"32e2584405e8071958fa83e8db3c84ac84d89b31","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 29 17:13:43 2020"},"message":"[sandbox][x64] Access external pointer through a table\n\nThis change moves external pointers into a separate table and turns\nexternal pointers in heap objects into indices into that table.\n\nThis CL implements one of two possible ownership models for the table\nentries. With this one, every heap object owns its table entries, and\nthey are allocated when the owning object is allocated. As such, setting\nexternal pointer fields does not require allocation of table entries. On\nthe other hand, table indices cannot be shared between multiple objects.\n\nThis CL does not yet implement freeing of external pointer table\nentires. This will later happen by a table garbage collector.\n\nBug: v8:10391\nChange-Id: I4d37785295c25a7d1dcbc9871dd5887b9d788a4f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2235700\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Samuel Groß <saelo@google.com>\nCr-Commit-Position: refs/heads/master@{#70204}\n","milestone":88},{"_id":"023e2376863f279d6b000fdc8e1e500268c73246","author":{"name":"ishell@chromium.org","email":"ishell@chromium.org","time":"Fri Feb 14 16:28:58 2020"},"commit":"023e2376863f279d6b000fdc8e1e500268c73246","committer":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Fri Feb 14 16:33:56 2020"},"message":"Merged: [ptr-compr] Fix decompression functions in v8-internal.h\n\nRevision: 8738ab8027849225b29bd59ea7e7646b8f851aa7\n\nBUG=v8:10198,v8:9706,chromium:1045034\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=ulan@chromium.org\n\nChange-Id: Ieeca890abf68f15a4a73834fbef3e0677fd799b0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2056851\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/branch-heads/8.0@{#39}\nCr-Branched-From: 69827db645fcece065bf16a795a4ec8d3a51057f-refs/heads/8.0.426@{#2}\nCr-Branched-From: 2fe1552c5809d0dd92e81d36a5535cbb7c518800-refs/heads/master@{#65318}\n","milestone":80},{"_id":"b4207358689ccaba6895cd88ab65d4c5ddd442e2","author":{"name":"ishell@chromium.org","email":"ishell@chromium.org","time":"Mon Feb 10 12:49:08 2020"},"commit":"b4207358689ccaba6895cd88ab65d4c5ddd442e2","committer":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Mon Feb 10 13:02:07 2020"},"message":"Merged: [ptr-compr] Bump max string length to ~2**29\n\nRevision: ea56bf5513d0cbd2a35a9035c5c2996272b8b728\n\nWithout pointer compression, the max string length on 64-bit platforms\nused to be 2**30 (minus header). With pointer-compression, this was\naccidentally lowered to 2**28 (which is the historical limit for 32-bit\nplatforms). This CL bumps the limit on 64-bit platforms to 2**29, which\nis the maximum we can support given that any heap object's size in bytes\nmust fit into a Smi (which are now 31-bit on all 64-bit platforms, with\nor without pointer compression).\n\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=jkummerow@chromium.org\n\nBug: v8:10184\nChange-Id: I05413d528dcc9ddaeb88d111835ccd3c0c0bf27a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2046887\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/branch-heads/8.0@{#32}\nCr-Branched-From: 69827db645fcece065bf16a795a4ec8d3a51057f-refs/heads/8.0.426@{#2}\nCr-Branched-From: 2fe1552c5809d0dd92e81d36a5535cbb7c518800-refs/heads/master@{#65318}\n","milestone":80},{"_id":"075d24d497ac07d6ba0d6dec2771d2b442afe40e","author":{"name":"Bartek Nowierski","email":"bartekn@chromium.org","time":"Mon Dec 09 13:14:20 2019"},"commit":"075d24d497ac07d6ba0d6dec2771d2b442afe40e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Dec 13 10:13:55 2019"},"message":"Merged: Introduce and emit \"function calls in detached window\" use counters.\n\nNOTE! This re-introduces the following change with a modification that\ndetached_window_time_in_seconds is initialized with 0, instead of\ncurrent time.\nhttps://chromium-review.googlesource.com/c/v8/v8/+/1924000\n\nBug: chromium:1018156,v8:10045\n(cherry picked from commit 9645810552d5181c783cf14a2cce20ae5914f4d7)\n\nChange-Id: Id81f2d41dad8c819f3b535333ac0d039df055f08\nNo-Try: true\nNo-Presubmit: true\nNo-Tree-Checks: true\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1966991\nCommit-Queue: Michael Hablich <hablich@chromium.org>\nReviewed-by: Michael Hablich <hablich@chromium.org>\nCr-Commit-Position: refs/branch-heads/8.0@{#10}\nCr-Branched-From: 69827db645fcece065bf16a795a4ec8d3a51057f-refs/heads/8.0.426@{#2}\nCr-Branched-From: 2fe1552c5809d0dd92e81d36a5535cbb7c518800-refs/heads/master@{#65318}\n","milestone":80},{"_id":"0da7ca8781c6c7ec852bef845b72ca7f212cdc23","author":{"name":"Mike West","email":"mkwst@chromium.org","time":"Mon Dec 02 13:45:57 2019"},"commit":"0da7ca8781c6c7ec852bef845b72ca7f212cdc23","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Dec 02 15:16:46 2019"},"message":"Add a UseCounter for SharedArrayBuffer creation.\n\nBlink CL: https://chromium-review.googlesource.com/c/chromium/src/+/1944474\n\nBug: chromium:1029700\nChange-Id: I91936942b21d133e06f2583a4e3c70951e5e86f4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1946348\nCommit-Queue: Mike West <mkwst@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65290}\n","milestone":80},{"_id":"78786a2f668b18aea4d04425dad5521993aa9872","author":{"name":"Bartek Nowierski","email":"bartekn@chromium.org","time":"Mon Dec 02 07:48:38 2019"},"commit":"78786a2f668b18aea4d04425dad5521993aa9872","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Dec 02 08:56:13 2019"},"message":"Introduce and emit \"function calls in detached window\" use counters.\n\nBug: chromium:1018156\nChange-Id: I2133bd8fc4ae4d9ce3c16c50887beb677d979e18\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1924000\nCommit-Queue: Bartek Nowierski <bartekn@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65272}\n","milestone":80},{"_id":"3bbadd008bf77e4845be8052fdaabd1a1a2eee8e","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Oct 18 13:14:44 2019"},"commit":"3bbadd008bf77e4845be8052fdaabd1a1a2eee8e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 28 13:55:15 2019"},"message":"[api] Remove deprecated wasm type and methods\n\nThey have been deprecated in v7.9, hence they can be removed in v8.0.\n\nR=ulan@chromium.org\nCC=​mstarzinger@chromium.org\n\nBug: v8:10021\nChange-Id: Ic21c5ee5703b548ddcca2ffeba6c583715d3fbd3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1864947\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65237}\n","milestone":80},{"_id":"866621dd16feca4554d1a3cb1f12b8917a8dcce8","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Wed Nov 27 13:06:20 2019"},"commit":"866621dd16feca4554d1a3cb1f12b8917a8dcce8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 27 14:05:16 2019"},"message":"Deprecate SnapshotCreator::AddTemplate\n\nBUG: v8:7463\n\nChange-Id: I75e81aa78ce2cd75ab4e393ffaec614da6e2bf7b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1939708\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nAuto-Submit: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65208}\n","milestone":80},{"_id":"99268b15c21ac76f561cb4ec6336708ad91de759","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Wed Nov 27 12:34:41 2019"},"commit":"99268b15c21ac76f561cb4ec6336708ad91de759","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 27 13:56:19 2019"},"message":"[cpu-profiler] Remove deprecated GetCallUid()\n\nDeprecated in 79.\n\nChange-Id: If0e2b95b4b66328858b33a533454a469c80fad63\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1940147\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nAuto-Submit: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65204}\n","milestone":80},{"_id":"162c5b0ff973c7af1123338e78beb62d9f747dd8","author":{"name":"Frank Tang","email":"ftang@chromium.org","time":"Mon Nov 18 18:55:57 2019"},"commit":"162c5b0ff973c7af1123338e78beb62d9f747dd8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 18 21:48:22 2019"},"message":"[Intl] Prototype Intl.DisplayNames\n\nDesign Doc https://shorturl.at/emEHW\nI2I: http://shorturl.at/pKRUV\n\nBug: v8:8703\nChange-Id: I9573b2ee6f1dce4dc594aa1df2753095f45af15e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1848683\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Frank Tang <ftang@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65021}\n","milestone":80},{"_id":"6ec6ed9cbe3cab6651979f3e4bab105e0b660483","author":{"name":"Eric Leese","email":"leese@chromium.org","time":"Wed Nov 06 15:51:44 2019"},"commit":"6ec6ed9cbe3cab6651979f3e4bab105e0b660483","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 15 09:59:58 2019"},"message":"Report real module in addition to fake scripts\n\nCurrently the inspector reports Wasm in one of two ways:\n - If there is a source map, report one script per Wasm script, with\n   bytecode but no source.\n - If there is no source map, report one script per Wasm function, with\n   source (Wasm disassembly) but no bytecode.\n\nWith this change, behavior with source map is same, but without source\nmap it will report both ways. This will allow us to change the frontend\nto do its own disassembly, allowing us to remove the per-function scripts\nin a future change.\n\nBug: chromium:1013527\nChange-Id: I0c559ad08896e8d0da419e3c6ad8d1edff3976fc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1899782\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Eric Leese <leese@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64980}\n","milestone":80},{"_id":"f83b1b3beb4baf219461ef111a924fb8d125aade","author":{"name":"Milad Farazmand","email":"miladfar@ca.ibm.com","time":"Thu Nov 07 17:07:34 2019"},"commit":"f83b1b3beb4baf219461ef111a924fb8d125aade","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 08 13:35:41 2019"},"message":"[tracing] Fix endianness problem when using booleans\n\nAll the data types defined under ArgValue are 8 bytes\nexpect \"bool as_bool\". When casting to <uint64_t> under\n\"tracing/trace-event.h\", boolean gets placed on the lower\nbyte of the memory on LE, and on the higher byte on BE machines.\nWhen using a \"Union\" to read back the value as a boolean, only\nthe lower byte of the memory location is read which makes it\nfine on LE machines, however the value will not be present on BE\nmachines.\n\nUsing an 8 byte data type as boolean will assure the entire filed\nis read instead of only the lower byte.\n\nChange-Id: I0740b9c019588c963a4c7878af60c6df04827141\nTBR: petermarshall@chromium.org\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1896835\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Junliang Yan <jyan@ca.ibm.com>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64859}\n","milestone":80},{"_id":"501739245ccb53985002d33ae355f01b139afdcd","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Fri Nov 08 11:10:40 2019"},"commit":"501739245ccb53985002d33ae355f01b139afdcd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 08 12:29:51 2019"},"message":"[api] Tweak SharedMemoryStatistics Api\n\nMove the API from Isolate to V8 and add better memory fields.\n\nBug: v8:7464\nChange-Id: Ic82c7c74ac8f20a2f2cb896dc0203fdd0b5d8d5f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1905546\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64856}\n","milestone":80},{"_id":"276b13cb001d13b2b8d90e697b2777810b2c0a96","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Thu Nov 07 09:24:16 2019"},"commit":"276b13cb001d13b2b8d90e697b2777810b2c0a96","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 07 10:54:36 2019"},"message":"[api] Create SharedMemoryStatistics API\n\nCreates new APIs to get Shared Memory statistics like the size of\nread-only space and potentially the memory used by shared array buffers.\n\nCurrently all shared memory statistics are zero.\n\nBug: v8:7464\nChange-Id: Ib8d58f885beaa1d65ccef7b64dd4f3db4149bca3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1900465\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64831}\n","milestone":80},{"_id":"91c8be959941b7fc6156954844c0518d67361c02","author":{"name":"Peter Kvitek","email":"kvitekp@chromium.org","time":"Wed Oct 30 00:58:34 2019"},"commit":"91c8be959941b7fc6156954844c0518d67361c02","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 05 18:59:24 2019"},"message":"[DevTools] Implemented DevTools protocol API to retrieve V8 RunTime Call Stats.\n\nThe new APIs are:\nenableRuntimeCallStats\ndisableRuntimeCallStats\ngetRuntimeCallStats\n\nThe RunTime Call Stats are collected per isolate.\n\nChange-Id: I7e520e2c866288aa9f9dc74f12572abedf0d3ac8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1881601\nCommit-Queue: Peter Kvitek <kvitekp@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64784}\n","milestone":80},{"_id":"5c23e6b5f2c43fa06348ac6b770846f2181912ed","author":{"name":"Eric Leese","email":"leese@chromium.org","time":"Tue Nov 05 13:15:28 2019"},"commit":"5c23e6b5f2c43fa06348ac6b770846f2181912ed","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 05 14:53:45 2019"},"message":"V8 Wasm locations should always be based on byte offsets\n\nCurrently there are two ways wasm locations are represented in the\ninspector. This remains unchanged for now. Also, currently there are\nmultiple ways location is represented within V8, with the line number\nsometimes being a function index and sometimes being 0, and the column\nnumber being a byte offset which is sometimes function relative and\nsometimes module relative. With this change, the line number is never\nused within V8 (it is always 0), and the column number is always a\nbyte offset from the beginning of the module. This simplifies\ntranslation logic and keeps it in one place, and will simplify future\nchanges to wasm location representation in the inspector API.\n\nBug: chromium:1013527\nChange-Id: I8813d47c881988f9ab49d7529fb81fe10dbbccff\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1886915\nCommit-Queue: Eric Leese <leese@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64774}\n","milestone":80},{"_id":"6c0825aaa73ca3163f089ca161c1f6e15633f306","author":{"name":"Stefano Sanfilippo","email":"ssanfilippo@chromium.org","time":"Thu Oct 31 10:41:23 2019"},"commit":"6c0825aaa73ca3163f089ca161c1f6e15633f306","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 05 11:49:19 2019"},"message":"[compiler, api] Allow modifying codegen hook to block non-strings.\n\nInstead of inferring allow_codegen from the state of MaybeLocal<String>, return it separately. This allows to distinguish \"could not stringify this object\" from \"block execution of this object\", regardless of whether the object is a string or not. Currently, the hook can trigger an EvalError only if the original source was a string.\n\nModify the logic so that one of the three mechanisms (unconditional, non-modifying, modifying) decides alone. Before, if the non-modifying callback rejected a value, the value would be forwarded to the modifying callback, but the unconditional would not forward to the non-modifying callback. This introduces a more uniform behaviour where the three mechanisms act in decreasing priority.\n\nChange-Id: Iaaa9873227052653d714df65f31c4de914f48b7d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1776082\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Daniel Vogelheim <vogelheim@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Stefano Sanfilippo <ssanfilippo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64763}\n","milestone":80},{"_id":"63dc55568b6cf7da700d0e68c3d63030141209e0","author":{"name":"Bartek Nowierski","email":"bartekn@chromium.org","time":"Thu Oct 31 04:07:35 2019"},"commit":"63dc55568b6cf7da700d0e68c3d63030141209e0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 01 00:57:40 2019"},"message":"Add a debug v8 API SetDetachedWindowReason\n\nA window is a Blink concept. This API marks the context as backing\na detached window. This doesn't necessarily mean that the context is\ndetached.\n\nEvery time a JS function is called within a context that has a non-zero\nDetachedWindowReason, Runtime::kReportDetachedWindowAccess is invoked,\nwhich will report this call to Blink via a callback, which in turn can\nreport number of such calls via UKM metrics.\n\nBug: chromium:1018156\nChange-Id: I67c89fef459f4efcb912229eed8a4f3ea3b60f54\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1862829\nAuto-Submit: Bartek Nowierski <bartekn@chromium.org>\nCommit-Queue: Bartek Nowierski <bartekn@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64707}\n","milestone":80},{"_id":"7bd40681016b634c7a917e394f31232b382cf1a8","author":{"name":"Gus Caplan","email":"me@gus.host","time":"Mon Oct 28 18:16:45 2019"},"commit":"7bd40681016b634c7a917e394f31232b382cf1a8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 30 10:38:55 2019"},"message":"Rename and retype Symbol name to description\n\nChange-Id: I2a1ad1835b751237b350e56d64e3475459bfb7a6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1873715\nCommit-Queue: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Sathya Gunasekaran  <gsathya@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64636}\n","milestone":80},{"_id":"bfe3d6bce734e596e312465e207bcfd55a59fe34","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Tue Oct 29 19:00:28 2019"},"commit":"bfe3d6bce734e596e312465e207bcfd55a59fe34","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 29 22:01:54 2019"},"message":"[api] Deprecate [Shared]ArrayBuffer::Externalize/GetContents and constructors\n\nThe new API with v8::BackingStore should be used instead as explained in\nhttps://docs.google.com/document/d/1sTc_jRL87Fu175Holm5SV0kajkseGl2r8ifGY76G35k\n\nThis also relaxes the pre-condition for [Shared]ArrayBuffer::Detach to\nnot require externalization first.\n\nBug: v8:9380, v8:9908\nChange-Id: Idd119fcd28be84a2fae74ae86f7381fd997766f5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1859628\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64625}\n","milestone":80},{"_id":"2f9a967369a000604eae9e7c888ab391f3d51873","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Sat Oct 26 12:03:14 2019"},"commit":"2f9a967369a000604eae9e7c888ab391f3d51873","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 28 12:28:08 2019"},"message":"[api] Fix SuppressMicrotaskExecutionScope constructor\n\nThe overload taking a `MicrotaskQueue*` was introduced in\ncce33f3752825 but never actually implemented.\n\nThis aligns the constructor signature to actually work, and\naligns it with e.g. `MicrotasksScope`. The previous signature\nwithout an `Isolate*` argument would not work, because there’s\nno pointer back from a MicrotaskQueue to the Isolate.\n\nRefs: https://chromium-review.googlesource.com/c/v8/v8/+/1414950\nBug: v8:8124\nChange-Id: I5dbaabef54c8de2b48f6172808825a186971524d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1879901\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64584}\n","milestone":80},{"_id":"6b0a9535e6983a626420d864b45582167cd61540","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Thu Oct 24 09:45:03 2019"},"commit":"6b0a9535e6983a626420d864b45582167cd61540","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Oct 24 10:56:03 2019"},"message":"[api] Add possibility for BackingStore to keep Allocator alive\n\nAdd an `array_buffer_allocator_shared` field to the\n`Isolate::CreateParams` struct that allows embedders to share\nownership of the ArrayBuffer::Allocator with V8, and which in\nparticular means that when this method is used that the\nBackingStore deleter will not perform an use-after-free access to the\nAllocator under certain circumstances.\n\nFor Background:\n\ntl;dr: This is necessary for Node.js to perform the transition to\nV8 7.9, because of the way that ArrayBuffer::Allocators and their\nlifetimes currently work there.\n\nIn Node.js, each Worker thread has its own ArrayBuffer::Allocator.\nChanging that would currently be impractical, as each allocator\ndepends on per-Isolate state. However, now that backing stores\nare managed globally and keep a pointer to the original\nArrayBuffer::Allocator, this means that when transferring an\nArrayBuffer (e.g. from one Worker to another through postMessage()),\nthe original Allocator has to be kept alive until the ArrayBuffer\nno longer exists in the receiving Isolate (or until that Isolate\nis disposed). See [1] for an example Node.js test that fails with\nV8 7.9.\n\nThis problem also existed for SharedArrayBuffers, where Node.js\nwas broken by V8 earlier for the same reasons (see [2] for the bug\nreport on that and [3] for the resolution in Node.js).\nFor SharedArrayBuffers, we already had extensive tracking logic,\nso adding a shared_ptr to keep alive the ArrayBuffer::Allocator\nwas not a significant amount of work. However, the mechanism for\ntransferring non-shared ArrayBuffers is quite different, and\nit seems both easier for us and better for V8 from an API standpoint\nto keep the Allocator alive from where it is being referenced.\n\nBy sharing memory with the custom deleter function/data pair,\nthis comes at no memory overhead.\n\n[1]: https://github.com/nodejs/node/pull/30044\n[2]: https://github.com/nodejs/node-v8/issues/115\n[3]: https://github.com/nodejs/node/pull/29637\n\nBug: v8:9380\nChange-Id: Ibc2c4fb6341b53653cbd637bd8cb3d4ac43809c7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1874347\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64542}\n","milestone":80},{"_id":"b1c1a81faf9c153163d620b6e9d8198997bcf5b1","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Thu Oct 17 08:33:01 2019"},"commit":"b1c1a81faf9c153163d620b6e9d8198997bcf5b1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 23 11:23:04 2019"},"message":"[regexp] Expose RegExp::Exec through the API\n\nPreviously, embedders had to fetch the 'exec' property off the RegExp\nprototype in order to call exec (and such calls involve two\ntransitions between C++ and JS).\n\nThis CL exposes a convenient RegExp::Exec method through the API.\n\nBug: v8:9695\nChange-Id: I57a9174626143d26f2ea34676b8e55fef64932cf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1864940\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64508}\n","milestone":80},{"_id":"b0fadf7f70e36bee6981444430d934b69ef1b38e","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Mon Oct 21 14:16:38 2019"},"commit":"b0fadf7f70e36bee6981444430d934b69ef1b38e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 23 10:14:08 2019"},"message":"[regexp] Expose RegExp::NewWithBacktrackLimit through the API\n\nBug: v8:9695\nChange-Id: I401a18c84a9ec1af7e14f44004a0788cbfd4a34b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1864657\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64501}\n","milestone":80},{"_id":"6f1de28834a44a81d0bf2bf62eabac70a53c06f5","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Tue Oct 22 13:47:40 2019"},"commit":"6f1de28834a44a81d0bf2bf62eabac70a53c06f5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 23 08:06:17 2019"},"message":"[regexp] Add use counters for slow exec and replace calls\n\nThese counters track how often the slow path of these two builtins is\nhit. Exec is very permissive, its fast-path check doesn't look at the\nregexp prototype at all. Replace is strict; any change on the\nprototype will trigger the slow path.\n\nChromium CL: https://crrev.com/c/1875250\n\nBug: v8:5577\nChange-Id: I9807f43829981445b75b5c5d29800cbdac9bc26a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1873698\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64496}\n","milestone":80},{"_id":"10b5e80637bc026415dfe8718078f5912fa1b0b2","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Tue Oct 22 11:09:27 2019"},"commit":"10b5e80637bc026415dfe8718078f5912fa1b0b2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 22 15:36:42 2019"},"message":"[api] Add v8::BackingStore::IsShared\n\nThe new predicate indicates whether the backing store was created for\nan ArrayBuffer or a SharedArrayBuffer. It is useful for some embedders.\n\nBug: v8:9380\nChange-Id: I804063bb8c4c17815defd6538ce6a1b32f6a4531\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1873689\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64479}\n","milestone":80},{"_id":"6f7eeec89d94e6a1caef53ce80a2e60896eb462e","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Tue Oct 22 12:38:15 2019"},"commit":"6f7eeec89d94e6a1caef53ce80a2e60896eb462e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 22 13:42:12 2019"},"message":"Introduce 'replMode' flag for Runtime.evaluate\n\nThis CL adds a boolean flag to Runtime.evaluate that allows REPL\nmode to be enabled. REPL mode hasn't landed in V8 yet, and the internal\nAPI for it is still in flux.\n\nR=yangguo@chromium.org\n\nBug: chromium:1004193\nChange-Id: I281285e225d3fd2dd4175f3dd967d6562459a203\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1866510\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64470}\n","milestone":80},{"_id":"bba5f1f43d59cf06e6043eb94d689021cc94a4e2","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Tue Oct 22 10:42:23 2019"},"commit":"bba5f1f43d59cf06e6043eb94d689021cc94a4e2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 22 12:00:02 2019"},"message":"[api] Add API functions for constructing standalone BackingStores\n\nThese are useful for the cases when an embedder works with backing\nstores without creating JS ArrayBuffer objects.\n\nBug: v8:9380\nChange-Id: I452bd911e7b20fb38568f18f9d15ea1a7ffb5a57\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1825339\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64460}\n","milestone":80},{"_id":"c4f502ed4d53320e5405502817b501213f331227","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Tue Oct 22 04:59:35 2019"},"commit":"c4f502ed4d53320e5405502817b501213f331227","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 22 07:48:05 2019"},"message":"Remove JS natives support, step 3\n\nThe natives blob was deprecated in V8 7.8. This CL removes all related\nfunctionality, including:\n\n- Build system support, i.e.: generation of natives_blob.bin and the\nv8_extra_library_files gn flag.\n- Related scripts (js2c.py, concatenate-files.py).\n- Related API functions (SetNativesDataBlob,\nInitializeExternalStartupData).\n- Natives bootstrapping logic.\n- The InternalArray type (previously exposed through natives).\n- Other natives-exposed builtins.\n- Inlining of these builtins.\n- The dedicated 'uncached external one byte string' type.\n\nStep 1 landed in https://crrev.com/c/1824944.\nStep 2 landed in https://crrev.com/c/1835536.\nStep 3 (this CL) removes these all functionality related to natives\nsupport in V8.\n\nBug: v8:7624\nChange-Id: Ice6c2662781efe8417231805276476d32bc5a625\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1844771\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nReviewed-by: Tamer Tas <tmrts@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64446}\n","milestone":80},{"_id":"777fa98cc47ac32f0fde3d9aafd830949deb5d23","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Mon Oct 21 17:26:16 2019"},"commit":"777fa98cc47ac32f0fde3d9aafd830949deb5d23","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 21 20:32:04 2019"},"message":"Make SetSyntheticModuleExport throw instead of crash for nonexistent export name\n\nPer spec, Module::SetSyntheticModuleExport should throw a ReferenceError\nwhen called with an export name that was not supplied when constructing\nthat SyntheticModule.  Instead, the current implementation crashes with\na failed CHECK().\n\nAdd a new Module::SyntheticModuleSetExport that throws (without an ensuing\ncrash) for this case, and deprecate the old\nModule::SetSyntheticModuleExport.\n\nBug: v8:9828\nChange-Id: I3b3d353064c3851882781818099bd8f6ee74c809\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1860996\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#64438}\n","milestone":80},{"_id":"edd7434b3dba10ca3b704199f1c1a708001771b5","author":{"name":"Seth Brenith","email":"seth.brenith@microsoft.com","time":"Tue Oct 15 15:42:06 2019"},"commit":"edd7434b3dba10ca3b704199f1c1a708001771b5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 21 16:09:40 2019"},"message":"Update Unwinder to handle JSEntry frame on Windows ARM64\n\nOn Windows ARM64, it is insufficient to just follow the linked list of\nframe pointers in all cases. This is similar to logic added in\nhttps://crrev.com/c/v8/v8/+/1701133 except this affects the Unwinder\nmethods rather than the function metadata for RtlVirtualUnwind.\n\nTogether with https://crrev.com/c/chromium/src/+/1844276 , this allows\nthe Chromium unit test V8UnwinderTest.UnwindThroughV8Frames to pass on\nWindows ARM64.\n\nChange-Id: I82d4d894be14d4a6ace75bba10c13b10342d0b12\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1845189\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCommit-Queue: Seth Brenith <seth.brenith@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#64432}\n","milestone":80},{"_id":"d0ae6031e76a56dc940695e7bd0890f5943b8104","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon Oct 21 11:43:14 2019"},"commit":"d0ae6031e76a56dc940695e7bd0890f5943b8104","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 21 13:07:56 2019"},"message":"[api] Prepare removal of deprecated tasks API\n\nBefore we can remove the deprecated methods, we need to provide default\nimplementations for them. Then, we can remove all overrides in\nembedders, and finally remove the methods from v8.\n\nR=ulan@chromium.org\nCC=ahaas@chromium.org\n\nBug: v8:9810\nChange-Id: If9286dc8ba441c226c9a1d524832ff203ac4bce6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1871915\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64419}\n","milestone":80},{"_id":"11e50bc31ba1020036633ed87acb24278a3bf2ab","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Oct 15 13:45:06 2019"},"commit":"11e50bc31ba1020036633ed87acb24278a3bf2ab","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 21 11:20:09 2019"},"message":"Remove build support for gcc < 5\n\nWe still set a lot of macros depending on specific gcc versions. All\nthese old versions are unsupported by now anyways, so we can also just\ndefine these macros as 1.\nIf this CL sticks for a while, we can start actually cleaning up all\ncode relying on these macros, as most of them should be 1 now on all\nplatforms.\n\nR=ulan@chromium.org\n\nBug: v8:9810\nChange-Id: I2f9c55170091f8c263deeddfb7ff89e5b2a0bb12\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1862564\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64413}\n","milestone":80},{"_id":"f3b29768bd113a405b2fd4bd4502ba5d85e04e27","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Oct 18 07:15:01 2019"},"commit":"f3b29768bd113a405b2fd4bd4502ba5d85e04e27","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 18 19:55:26 2019"},"message":"[api] Move forward deprecations in EmbedderHeapTracer and its references\n\n- Move foward deprecations in EmbedderHeapTracer\n- Deprecate SetFinalizationCallback in v8::TraceReference\n\nChange-Id: Ic68402096ce8f5fe08521253836d3b19d73326ae\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1863941\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64388}\n","milestone":80},{"_id":"ec5807099f40964190d10e9498a69f194d192129","author":{"name":"Zhou, Zhiguo","email":"zhiguo.zhou@intel.com","time":"Tue Oct 15 14:47:45 2019"},"commit":"ec5807099f40964190d10e9498a69f194d192129","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Oct 17 14:03:51 2019"},"message":"Log debug info of WASM for Intel VTune Amplifier\n\nThis CL logs debug information of WASM in Intel VTune Amplifer via\nVTune's JIT Profiling API. With this CL, the profiling information\nof JITted code and its corresponding C/C++ source code is displayed\noptionally. To use this feature, a runtime flag \"vtune_prof_annotat\ne_wasm\" should be passed to the VTune-enabled V8 engine. Currently,\nthe inline function in C/C++ is not well supported due to the\nlimitation of source map.\n\nAs a drive-by fix, the dynamically allocated event-specific data\nof JavaScript (src/third_party/vtune/vtune-jit.cc) is managed with\nC++ containers for safety.\n\nChange-Id: Ic27420fcdcd775bc5c7778abf5cff6edf0fb38b6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1782126\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Zhiguo Zhou <zhiguo.zhou@intel.com>\nCr-Commit-Position: refs/heads/master@{#64351}\n","milestone":80},{"_id":"143241483b532d5067b664c94bd2fcc6f941e5ac","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Oct 15 13:44:45 2019"},"commit":"143241483b532d5067b664c94bd2fcc6f941e5ac","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 16 09:32:46 2019"},"message":"Rename V8_CAN_HAVE_DCHECK_IN_CONSTEXPR to V8_HAS_CXX14_CONSTEXPR\n\nDCHECKs are not really special, they just create a non-constexpr path\nwithin an otherwise constexpr function. Since C++14, this is allowed.\nUnfortunately, gcc only supports this since version 6, but we still\nneed to support gcc 5.\n\nR=ulan@chromium.org\n\nChange-Id: If74486144abafa5bbdcdbb9a567ee9295ac4cfc7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1862568\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64310}\n","milestone":80},{"_id":"ce38a0679ba29fcbb6a638e6dc1f26f174b20ba4","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Mon Sep 28 08:47:40 2020"},"commit":"ce38a0679ba29fcbb6a638e6dc1f26f174b20ba4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Sep 28 15:36:53 2020"},"message":"[turbofan] Add double support in c-linkage for x64\n\nThis CL also adds some unit tests, locally tested under x64.\n\nThe double support is based on this original CL by Gus Caplan\n(snek@chromium.org):\nhttps://chromium-review.googlesource.com/c/v8/v8/+/2264612\n\nBug: chromium:1052746\nChange-Id: Ibdf631689b01ab619a72005226bfc015b4737dde\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2416028\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nAuto-Submit: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70168}\n","milestone":87},{"_id":"b77c63c0a65376d1598ca7b1978d4193ffdef710","author":{"name":"Emanuel Ziegler","email":"ecmziegler@chromium.org","time":"Thu Sep 24 08:14:38 2020"},"commit":"b77c63c0a65376d1598ca7b1978d4193ffdef710","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 24 12:05:27 2020"},"message":"[wasm][ukm] Add tests for Wasm events (reland)\n\nEnsure that events are triggered when a module is decoded, compiled,\ninstantiated and tiered-up.\n\nThis is a reland of Ib5883a338c3756c6f3488fbdd7b6861ecc2ba218.\n\nR=clemensb@chromium.org\nTBR=adamk@chromium.org\n\nBug: chromium:1092417\nChange-Id: I803ae3db23a5f71f26e8ec118251eccdfc551353\nCq-Include-Trybots: luci.v8.try:v8_linux64_tsan_rel_ng\nCq-Include-Trybots: luci.v8.try:v8_linux64_tsan_isolates_rel_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2425056\nCommit-Queue: Emanuel Ziegler <ecmziegler@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70113}\n","milestone":87},{"_id":"54b141ef9a1b836c760fa813f6694fe17699f733","author":{"name":"Emanuel Ziegler","email":"ecmziegler@chromium.org","time":"Tue Sep 22 14:17:55 2020"},"commit":"54b141ef9a1b836c760fa813f6694fe17699f733","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 22 20:21:02 2020"},"message":"[wasm][ukm] Add tests for Wasm events (reland)\n\nEnsure that events are triggered when a module is decoded, compiled,\ninstantiated and tiered-up.\n\nThis is a reland of I9dc87957fc03023c5ab1c4f49e865957c8324e1a.\n\nR=clemensb@chromium.org\n\nBug: chromium:1092417\nCq-Include-Trybots: luci.v8.try:v8_linux64_tsan_rel_ng\nCq-Include-Trybots: luci.v8.try:v8_linux64_tsan_isolates_rel_ng\nChange-Id: Ib5883a338c3756c6f3488fbdd7b6861ecc2ba218\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2367866\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Emanuel Ziegler <ecmziegler@chromium.org>\nCr-Commit-Position: refs/heads/master@{#70074}\n","milestone":87},{"_id":"69951fa707443893d5a129128eea8198c1817160","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Fri Sep 11 13:50:34 2020"},"commit":"69951fa707443893d5a129128eea8198c1817160","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 17 16:49:07 2020"},"message":"[Jobs API]: Expose JobDelegate::IsJoiningThread.\n\nTo let the user do special handling on the main thread e.g. Scavenging\nuses different tracing categories for background/foreground threads.\n\nChange-Id: I6c9187fd6201b5b81cd83727727fda49fcf7ff68\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2405797\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69978}\n","milestone":87},{"_id":"05af36810076ace617805a2343bc5e6bcd2006d0","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Mon Sep 14 19:09:07 2020"},"commit":"05af36810076ace617805a2343bc5e6bcd2006d0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Sep 14 20:24:46 2020"},"message":"[cpu-profiler] Remove support for context filtering\n\nSince the web-exposed profiler will require COOP/COEP, it is no longer\nnecessary to perform isolation at the V8 level. Strip the unnecessary\ncomplexity and unreliability of context filtering accordingly.\n\nBug: chromium:956688, v8:9881, v8:9860\nChange-Id: I21a30d51f8daf7565ec95de8c265e9d3b9d10fad\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2386144\nCommit-Queue: Andrew Comminos <acomminos@fb.com>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69894}\n","milestone":87},{"_id":"a29b44e570030dbb0475f281b0b448ea002db384","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Sep 14 10:56:38 2020"},"commit":"a29b44e570030dbb0475f281b0b448ea002db384","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Sep 14 12:11:34 2020"},"message":"api: Fix Detachedness typo\n\nkUnkown -> kUnknown\n\nBug: chromium:1110816\nChange-Id: I8138df76ade7f2a78632e329682cca83c64edac8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2407776\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69875}\n","milestone":87},{"_id":"96618d094c6ce1f081559093ef9f40469c69f774","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Sep 09 13:30:43 2020"},"commit":"96618d094c6ce1f081559093ef9f40469c69f774","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 09 14:42:41 2020"},"message":"heap-snapshot: Add detachedness field\n\nAdds a field that can be propagated by embedders. The field holds\nthe detachedness state of DOM objects but can be used in general\nby embedder to indicate which objects are for sure part of interesting\napplication logic and which objects are not. This field is then\nprocessed properly by the DevTools front end.\n\nBug: chromium:1110816\nChange-Id: I53a172208cd69ce2ba2ed9524d36b6512aae7d30\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2332174\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69780}\n","milestone":87},{"_id":"74ede0710396b4aa4a53f4e4ce71cdf944a968ad","author":{"name":"Gus Caplan","email":"me@gus.host","time":"Wed Sep 09 03:25:22 2020"},"commit":"74ede0710396b4aa4a53f4e4ce71cdf944a968ad","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 09 12:36:16 2020"},"message":"Fix PerformCastCheck on v8::Data (again)\n\nSee crrev.com/c/2383030\n\nPerformCheckCast<Data>() itself should not invoke Data::Cast(), since\nthere is no such method and every publicly available value can be\ncasted to it anyway. This is an issue in e.g.\nGetDataFromSnapshotOnce<Data>().\n\nChange-Id: I4acbff86ffd4537b744dafc588733428e792b4bd\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2399052\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Gus Caplan <snek@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69771}\n","milestone":87},{"_id":"6b3e8e693eaaa1cdc0ea6c2d705caef2c6829e4c","author":{"name":"Peter Kvitek","email":"kvitekp@chromium.org","time":"Thu Sep 03 22:03:55 2020"},"commit":"6b3e8e693eaaa1cdc0ea6c2d705caef2c6829e4c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 08 18:32:05 2020"},"message":"[DevTools] Re-implemented Profiler.getRuntimeCallStats.\n\nThe original Profiler.getRuntimeCallStats implementation retrieved\na bunch of V8 Counters instead of runtime call counters. This\nfunctionality is now available through the new APIs:\nenableCounters, disableCounters and getCounters.\n\nThe getRuntimeCallStats API now retrieves real V8 Runtime Call Stats.\n\nChange-Id: I702f60a6c43773f5c41b6861be3f9435975c370f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2380853\nCommit-Queue: Peter Kvitek <kvitekp@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69753}\n","milestone":87},{"_id":"3f315b0088035a21b9a523d15c9cda0cf79f1124","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Tue Sep 01 17:21:22 2020"},"commit":"3f315b0088035a21b9a523d15c9cda0cf79f1124","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 02 20:51:29 2020"},"message":"[Jobs API]: Cleanup migration of missing Jobs pieces.\n\n- JobHandle::IsCompleted()\n- JobDelegate::GetTaskId()\n- worker_count passed as argument to GetMaxConcurrency().\n  Jobs implementation must call the new GetMaxConcurrency(), but Jobs\n  users aren't migrated yet.\n\nBug: chromium:1114823\nChange-Id: Ie09a8847d1cb884b1e388903370e49f33fa25a64\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2374308\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69683}\n","milestone":87},{"_id":"018e370041baec872bd84de13cf100e2caabf1ba","author":{"name":"Jeremy Roman","email":"jbroman@chromium.org","time":"Wed Sep 02 14:13:55 2020"},"commit":"018e370041baec872bd84de13cf100e2caabf1ba","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 02 15:18:48 2020"},"message":"[api] Correct comment on deprecated v8::String::IsExternal.\n\nBug: v8:10641\nChange-Id: I9248c6877ead34e622b94cd32959b6570f824e15\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2390442\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nAuto-Submit: Jeremy Roman <jbroman@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69678}\n","milestone":87},{"_id":"9d413c635de2d9ed042371cb5012d0335ae5749b","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Mon Jul 13 10:00:53 2020"},"commit":"9d413c635de2d9ed042371cb5012d0335ae5749b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 02 13:35:20 2020"},"message":"[api] Deprecate misleading v8::String::IsExernal method\n\nv8::String::IsExternal is confusing since it only checks for external\ntwo byte strings. The goal is to reintroduce String::IsExternal which\nchecks for one and two byte external strings after removing the old,\nmisleading api method.\n\n- Add String::IsExternalTwoByte\n- Deprecate String::IsExternal for now since it is misleading\n\n\nBug: v8:10641\nChange-Id: I8989de7576c823846e0536fc1898e769b6d68c87\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2284495\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69674}\n","milestone":87},{"_id":"d4d0cf326238be6b029131aea70be5fe56615e87","author":{"name":"Gus Caplan","email":"me@gus.host","time":"Tue Sep 01 15:22:26 2020"},"commit":"d4d0cf326238be6b029131aea70be5fe56615e87","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 01 16:31:59 2020"},"message":"[api] add reflection apis for v8::Data\n\nAllows reflection of v8::Data types, such as being able to check if a\nvalue is a v8::Module. This is useful for libraries which wrap the V8\nAPI, such as rusty_v8.\n\nChange-Id: I4841c5f7f60885b20e1504c8562e278844ff7ec3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2382719\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Gus Caplan <snek@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69649}\n","milestone":87},{"_id":"0ab923b8c08af5c094090ca6b61177b93a2bb045","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Sep 01 06:41:06 2020"},"commit":"0ab923b8c08af5c094090ca6b61177b93a2bb045","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 01 07:46:09 2020"},"message":"[API] Add missing include for <atomic>\n\n{std::atomic} is being used in the header without including the <atomic>\nheader. It was reported on the v8-users list that this causes compile\nerrors on Windows.\n\nR=ulan@chromium.org\n\nChange-Id: I1de19c301ce47787628416bf0e744d0dd7507fa3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2387562\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69633}\n","milestone":87},{"_id":"61216077be6d64304b28a3307314e66a9d6d6fb9","author":{"name":"Gus Caplan","email":"me@gus.host","time":"Mon Aug 31 10:36:52 2020"},"commit":"61216077be6d64304b28a3307314e66a9d6d6fb9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 31 14:21:23 2020"},"message":"fix PerformCastCheck on v8::Data\n\nPerformCheckCast<Data>() itself should not invoke Data::Cast(), since\nthere is no such method and every publicly available value can be\ncasted to it anyway. This is an issue in e.g.\nGetDataFromSnapshotOnce<Data>().\n\nChange-Id: I5d9ee89657c31bc0ca1fb16e704df58911c85f6c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2383030\nCommit-Queue: Gus Caplan <snek@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69622}\n","milestone":87},{"_id":"d77e12bcb9f4bf1fe35a051d30416ef428c6e08c","author":{"name":"Etienne Pierre-doray","email":"etiennep@chromium.org","time":"Thu Aug 13 21:14:37 2020"},"commit":"d77e12bcb9f4bf1fe35a051d30416ef428c6e08c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 25 13:38:03 2020"},"message":"[Jobs API]: Implement missing Jobs pieces in the various v8 implementations.\n\n- JobHandle::IsCompleted()\n- JobDelegate::GetTaskId()\n- worker_count passed as argument to GetMaxConcurrency().\n  Jobs implementation must call the new GetMaxConcurrency(), but Jobs\n  users aren't migrated yet.\n\nBug: chromium:1114823\nChange-Id: I0f4295ccaf9eba866dd771f30e2e49aa3eae9551\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2352484\nCommit-Queue: Etienne Pierre-Doray <etiennep@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69553}\n","milestone":87},{"_id":"9c5eed71c75112beaae65f7dcd179068752acc64","author":{"name":"Santiago Aboy Solanes","email":"solanes@chromium.org","time":"Fri Aug 21 13:39:40 2020"},"commit":"9c5eed71c75112beaae65f7dcd179068752acc64","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 24 10:36:59 2020"},"message":"[unwinder] Delete the old unwinder API\n\nThe new one was created in\nhttps://chromium-review.googlesource.com/c/v8/v8/+/1969900, and the old\nAPI was deprecated in\nhttps://chromium-review.googlesource.com/c/v8/v8/+/2110015, so now we\ncan remove it.\n\nBug: v8:8116\nChange-Id: Ia839279609b412c36f1f17368acef23fe07e7c61\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2369174\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCommit-Queue: Santiago Aboy Solanes <solanes@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69536}\n","milestone":87},{"_id":"acbb989b3e0b879ba021c1c618317bc814da9126","author":{"name":"johnx","email":"johnx@google.com","time":"Sat Aug 22 02:27:50 2020"},"commit":"acbb989b3e0b879ba021c1c618317bc814da9126","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 24 06:37:26 2020"},"message":"Introduce Starboard platform\n\nStarboard is the platform abstraction for Cobalt.\nThis CL introduces all Cobalt changes in src/base/platform.\n\nThe review was conducted mostly on:\nhttps://chromium-review.googlesource.com/c/v8/v8/+/2247918\n\nSee b/156155426 for background\n\nTbr: mlippautz@chromium.org\nChange-Id: I6cd092304ba6485acd38e82aa2dc4505d7dfb0aa\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2346090\nCommit-Queue: John Xu <johnx@google.com>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#69530}\n","milestone":87},{"_id":"8d08318e1a852efc17f3c6a0ee6935f596734aaa","author":{"name":"Dominik Inführ","email":"dinfuehr@chromium.org","time":"Mon Mar 09 10:42:11 2020"},"commit":"8d08318e1a852efc17f3c6a0ee6935f596734aaa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 10 16:46:48 2020"},"message":"[heap] Report allocated size of global handles\n\nReport the allocated size of global handles in GetHeapStatistics as\nwell, not including free handles.\n\nBug: chromium:1060192\nChange-Id: I1aedba36735f897cd8518edbb5ef2261cc348bff\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2093493\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66651}\n","milestone":82},{"_id":"b097a8e5de7aa918c079d7defb7fa6a613b3e300","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Mon Mar 09 10:41:45 2020"},"commit":"b097a8e5de7aa918c079d7defb7fa6a613b3e300","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Mar 09 12:02:07 2020"},"message":"[api] Create v8::String::NewFromLiteral that returns Local<String>\n\nString::NewFromLiteral is a templated function that takes a char[N]\nargument that can be used as an alternative to String::NewFromUtf8 and\nreturns a Local<String> rather than a MaybeLocal<String> reducing the\nnumber of ToLocalChecked() or other checks.\n\nSince the string length is known at compile time, it can statically\nassert that the length is less than String::kMaxLength, which means that\nit can never fail at runtime.\n\nThis also converts all found uses of NewFromUtf8 taking a string literal\nor a variable initialized from a string literal to use the new API. In\nsome cases the types of stored string literals are changed from const\nchar* to const char[] to ensure the size is retained.\n\nThis API does introduce a small difference compared to NewFromUtf8. For\na case like \"abc\\0def\", NewFromUtf8 (using length -1 to infer length)\nwould treat this as a 3 character string, whereas the new API will treat\nit as a 7 character string.\n\nAs a drive-by fix, this also fixes all redundant uses of\nv8::NewStringType::kNormal when passed to any of the String::New*\nfunctions.\n\nChange-Id: Id96a44bc068d9c4eaa634aea688e024675a0e5b3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2089935\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nReviewed-by: Mathias Bynens <mathias@chromium.org>\nReviewed-by: Mythri Alle <mythria@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66622}\n","milestone":82},{"_id":"9423ede124f86a9a0e6f54d882c5e7f36c52185a","author":{"name":"Nate Chapin","email":"japhet@chromium.org","time":"Thu Feb 13 18:22:17 2020"},"commit":"9423ede124f86a9a0e6f54d882c5e7f36c52185a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Mar 06 18:43:59 2020"},"message":"Provide a way to propagate contextual script information through promise resolution\n\nThis state can be set on the NativeContext by the embedder. When a\nPromiseReaction/PromiseReactionJobTask is constructed, store this\ncontextual state if present, and restore it while the reaction job\nis running.\n\nChange-Id: I141cdbd9e36ea83ce4a6bf08440ae7eaa54523df\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2005849\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Sathya Gunasekaran  <gsathya@chromium.org>\nCommit-Queue: Nate Chapin <japhet@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66617}\n","milestone":82},{"_id":"1ed469833165cd1a6801e56a2d1ec956a5af4b21","author":{"name":"Victor Gomes","email":"victorgomes@chromium.org","time":"Mon Mar 02 08:53:31 2020"},"commit":"1ed469833165cd1a6801e56a2d1ec956a5af4b21","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 03 16:55:04 2020"},"message":"[runtime] Adapt FunctionCallInfo when arguments are reversed in the stack\n\nBug: v8:10201\nChange-Id: I5cae5d5c30f42427995c2380d906ade0f117fcd9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2083011\nAuto-Submit: Victor Gomes <victorgomes@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66570}\n","milestone":82},{"_id":"65238018ca4be983c804bf74115f415e0184b354","author":{"name":"Dominik Inführ","email":"dinfuehr@chromium.org","time":"Tue Mar 03 11:43:50 2020"},"commit":"65238018ca4be983c804bf74115f415e0184b354","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 03 13:22:15 2020"},"message":"[heap] Report total size of global handles\n\nReport the total size of global handles in GetHeapStatistics as well.\nThis size includes used and free global handles.\n\nChange-Id: I08c0647d993a810a37ae9f332732de9551b5ea8d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2083020\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66562}\n","milestone":82},{"_id":"d5b444bc5a842fbbb1cccfaf0733dba9a551f7bd","author":{"name":"Frank Tang","email":"ftang@chromium.org","time":"Fri Feb 21 00:22:54 2020"},"commit":"d5b444bc5a842fbbb1cccfaf0733dba9a551f7bd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 28 19:48:52 2020"},"message":"Add UsageCounters for misc Intl features\n\nWe need to track misc features launched in 2019 to understand the impact.\nAlso we need to measure the v8BreakIterator usage of 'word' and 'line'\nto lobby the need for 'line' in the replacement standard Intl.Segmenter\nwhich an Apple engineer opposed to include.\n\nBug: v8:10251\nChange-Id: I5d4cbe6ccf458c9ec4adfebad235f9c6dcd2ac37\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2067512\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Frank Tang <ftang@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66506}\n","milestone":82},{"_id":"cca9dd1012f132be9ae49c4b71e495994dd19e2f","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Thu Feb 27 17:21:29 2020"},"commit":"cca9dd1012f132be9ae49c4b71e495994dd19e2f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 28 13:37:17 2020"},"message":"[turbofan] Add bounds checks to fast API calls\n\nThe interface for ArgumentInfo was allowing out-of-bounds\nread from the returned array. Improved that by passing the\nindex explicitly as a parameter and checking against the\nexpected bounds.\n\nBug: v8:10267\nChange-Id: Ic1022def3e338598cd9bd9e6582d67a62836d0db\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2078578\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Michael Stanton <mvstanton@chromium.org>\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66499}\n","milestone":82},{"_id":"61e117d7948223771087b6c1c682b875103e2ac6","author":{"name":"Victor Gomes","email":"victorgomes@chromium.org","time":"Wed Feb 26 16:50:36 2020"},"commit":"61e117d7948223771087b6c1c682b875103e2ac6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 26 17:52:04 2020"},"message":"[runtime] Add arguments type: kRuntime and kJS.\n\nThis adds static types to the argument class that accesss the arguments in the\nstack. kRuntime arguments are used by runtime functions and kJS arguments\nare used to access the JS stack (eg. builtins).\n\nThe distinction allows the reversal of arguments in the JS stack without\nchanging the runtime arguments order.\n\nBug: v8:10201\nChange-Id: I7c08164d53c4071c7910836fa733dee8ff7fa680\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2066985\nCommit-Queue: Victor Gomes <victorgomes@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nAuto-Submit: Victor Gomes <victorgomes@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66470}\n","milestone":82},{"_id":"700b1b97e9ab1c3ae7b0a99ef4003de32e2d1590","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Jan 31 14:59:56 2020"},"commit":"700b1b97e9ab1c3ae7b0a99ef4003de32e2d1590","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 26 17:05:34 2020"},"message":"[api] Remove deprecated wasm module type check\n\nThe method was deprecated in favor of {IsWasmModuleObject}.\n\nR=adamk@chromium.org\n\nBug: v8:10155\nChange-Id: Id21a1b74dde5576c2c82cc209555c22209a9e5d4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2033170\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66469}\n","milestone":82},{"_id":"e5ffd0ce90b6c3b16a0a8f86769b8e133ce97f33","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Wed Feb 26 07:28:47 2020"},"commit":"e5ffd0ce90b6c3b16a0a8f86769b8e133ce97f33","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 26 08:53:32 2020"},"message":"Updated documentation for {replMode} parameter in {Runtime.evaluate}\n\nR=yangguo@chromium.org\n\nChange-Id: Icafeeccdcbe854d6986d3930ec6fcb2c856d274a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2072743\nAuto-Submit: Simon Zünd <szuend@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66444}\n","milestone":82},{"_id":"ff89c6bc6fc3204bf9bb921e4d511d81feb76551","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Tue Feb 25 01:19:48 2020"},"commit":"ff89c6bc6fc3204bf9bb921e4d511d81feb76551","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 25 22:53:20 2020"},"message":"[weakrefs] Rename FinalizationGroup to FinalizationRegistry for JS\n\nThe deprecated legacy FinalizationGroup APIs are left unchanged for\ncompat.\n\nBug: v8:8179\nChange-Id: I9bdcaa92360db318c96fc8524c04163ece25118e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2071236\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66437}\n","milestone":82},{"_id":"1161fe868d8a80e1a4b11dff25086c361ce707e2","author":{"name":"Gus Caplan","email":"me@gus.host","time":"Thu Feb 20 22:00:27 2020"},"commit":"1161fe868d8a80e1a4b11dff25086c361ce707e2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 24 19:17:56 2020"},"message":"[api] add v8::Object::IsUndetectable\n\nThis will enable people to check if an object is\ndocument.all without having to use tricks like\n`typeof v === 'undefined' && v !== undefined`.\n\nChange-Id: I74670e4d3886fcd90f0f3cef9c3644a24ee08fda\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2067681\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66412}\n","milestone":82},{"_id":"4e11ad92f3e1a2ea4f401ebd52e7d37f49cabdfa","author":{"name":"Mike Stanton","email":"mvstanton@chromium.org","time":"Wed Feb 19 14:54:24 2020"},"commit":"4e11ad92f3e1a2ea4f401ebd52e7d37f49cabdfa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 19 16:31:05 2020"},"message":"[turbofan] Fast API calls from TurboFan\n\nRelanding the Fast C API code with fix for arm sim lite build.\n\nDesign doc:\nhttp://doc/1SAHn7d8M7CoazTd1laVF8gduFC_ikZWiYuytrR9c4Oc/\n\nThis CL implements basic API with integer and pointer types marshaling.\n\nWhat is not supported yet:\n- sequences\n- annotations\n- floating point arguments\n- 64-bit arguments\n- exception handling\n- InstanceOf checks for the pointer types\n- functions with non-void return type\n\nBug: chromium:1052746\n\nTBR=yangguo@chromium.org,mvstanton@chromium.org,neis@chromium.org,leszeks@chromium.org,verwaest@chromium.org,mslekova@chromium.org,nicohartmann@chromium.org\n\nChange-Id: I4421ce817e3b6159a38d2cb39fb97847f128e648\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2064223\nReviewed-by: Michael Stanton <mvstanton@chromium.org>\nCommit-Queue: Michael Stanton <mvstanton@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66344}\n","milestone":82},{"_id":"9f0f2cb7f08d0aecf22c684779b8ecd696bf9675","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Wed Feb 19 01:22:49 2020"},"commit":"9f0f2cb7f08d0aecf22c684779b8ecd696bf9675","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 19 02:25:34 2020"},"message":"[weakrefs] Call Isolate::ClearKeptObjects() as part of microtask checkpoint\n\nIn the spec, WeakRefs that are dereferenced are kept alive until there's\nno JS on the stack, and then the host is expected to call\nClearKeptObjects to clear those strong references [1]. HTML calls\nClearKeptObjects at the end of a PerformMicrotaskCheckpoint [2].\n\nIn V8, leaving this up to the embedder is error prone in the same way\nthe deprecated FinalizationGroup callback APIs were error prone: it\ndepends on the embedder doing the right thing. This CL moves the call to\nClearKeptObjects to be after running of microtasks within V8.\n\nHowever, the Isolate::ClearKeptObjects API should not be removed or\ndeprecated in case an embedder uses an entirely custom MicrotaskQueue\nimplementation and invokes MicrotaskQueue::PerformCheckpoint manually.\n\n[1] https://tc39.es/proposal-weakrefs/#sec-clear-kept-objects\n[2] https://github.com/whatwg/html/pull/4571\n\nBug: v8:8179\nChange-Id: Ie243804157b56241ca69ed8fad300e839a0c9f75\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2055967\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66327}\n","milestone":82},{"_id":"50790c0b0dca8c05b81caf7e5737d61381859ec2","author":{"name":"Maya Lekova","email":"mslekova@chromium.org","time":"Tue Feb 18 19:00:42 2020"},"commit":"50790c0b0dca8c05b81caf7e5737d61381859ec2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 18 20:25:28 2020"},"message":"[turbofan] Fast API calls from TurboFan\n\nDesign doc:\nhttp://doc/1SAHn7d8M7CoazTd1laVF8gduFC_ikZWiYuytrR9c4Oc/\n\nThis CL implements basic API with integer and pointer types marshaling.\n\nWhat is not supported yet:\n- sequences\n- annotations\n- floating point arguments\n- 64-bit arguments\n- exception handling\n- InstanceOf checks for the pointer types\n- functions with non-void return type\n\nBug: chromium:1052746\n\nChange-Id: Idbbf6dd50f43dfc9f8d707fe3333e5da3da84a13\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2030740\nCommit-Queue: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Nico Hartmann <nicohartmann@chromium.org>\nReviewed-by: Michael Stanton <mvstanton@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66322}\n","milestone":82},{"_id":"8738ab8027849225b29bd59ea7e7646b8f851aa7","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Thu Feb 13 11:35:54 2020"},"commit":"8738ab8027849225b29bd59ea7e7646b8f851aa7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 13 12:30:25 2020"},"message":"[ptr-compr] Fix decompression functions in v8-internal.h\n\nIn the final version of our pointer compression scheme, decompression\nuses zero-extension of the compressed value. The API copy of that code\nerroneously still used a sign-extending decompression from an earlier\niteration of the scheme.\n\nBug: v8:9706, v8:10198\nChange-Id: I17c3a52d26ce26bc0623627d725f686c379fbd6e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2051954\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66256}\n","milestone":82},{"_id":"117520e2191891613a069f1970d9b48fdc34d283","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Fri Feb 07 14:55:19 2020"},"commit":"117520e2191891613a069f1970d9b48fdc34d283","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 12 10:00:14 2020"},"message":"[coverage] Provide option to prevent triggered updates\n\nCoverage updates are sent as deltas, and this means that it\nis very important that the consumer gets /all/ updates;\notherwise, the coverage information will be wrong.\n\nPreviously, we introduces the ability into the back-end to\nsend triggered updates, i.e. updates that are triggered by\nthe back-end at interesting points in time. These updates\nare delivered via an event, and any consumer must process\nthese events.\n\nThis CL introduces a flag to startPreciseCoverage that\ncontrols whether the back-end is allowed to send such\ntriggered updates on its own initiative. The default is\n`false` to maintain backwards compatibility with consumers\nthat don't yet handle the events.\n\nBug: chromium:1022031\nChange-Id: Ie36a92a3b627b19ea4041f1b8da1ec66c6b9b771\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2043798\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66232}\n","milestone":82},{"_id":"4b1447e4bb0e306c40214026342858664a13b551","author":{"name":"Joakim Bengtsson","email":"jb@vewd.com","time":"Fri Feb 07 07:59:00 2020"},"commit":"4b1447e4bb0e306c40214026342858664a13b551","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 10 09:33:33 2020"},"message":"Improve V8 GC logic for external memory\n\nThe logic for V8 GC normally only takes the external memory growth\nsince last mark-compact into account. Unfortunately, the amount of\nexternal memory recorded at the end of MC is often too high. The\nreason is that it might take a while for the external memory\nassociated with the GCed objects to be released (e.g. V8 itself post a\ntask to release external memory for ArrayBuffer backing stores). In a\nworst case scenario GC is driven only by external memory and none of\nthe external memory is released by the end of the MC. Then each MC\nwill record the external memory at its highest point and the GC logic\nwill allow the external memory to grow a bit higher each time which\ncan lead to excessive memory use.\n\nThis patch improves the situation a bit by calculating the growth from\nthe lowest external memory seen since the last MC. That way the growth\ncalculation will be offset from a level presumably closer to the\nintended one (to what it would have been if the external memory\nassociated with the GCed objects was released during the MC). Now,\nthis fix is not perfect because it can be thrown off by external\nmemory growth occurring before the lingering memory is\nreleased. However, it seems to work rather well in practice (e.g. when\nplaying MSE video on YT).\n\nBug: v8:10185\nChange-Id: Ifcdd87eb45f3ae4a99d2aeec667c3ae4ca9a52b6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2042711\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66193}\n","milestone":82},{"_id":"31d8ff7ac5f4a91099f2f06f01e43e9e7aa79bc4","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri Feb 07 22:24:36 2020"},"commit":"31d8ff7ac5f4a91099f2f06f01e43e9e7aa79bc4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Sat Feb 08 00:20:10 2020"},"message":"[weakrefs] Schedule FinalizationGroup cleanup tasks from within V8\n\nDeprecate the following explicit FinalizationGroup APIs in favor of\nautomatic handling of FinalizationGroup cleanup callbacks:\n  - v8::Isolate::SetHostCleanupFinalizationGroupCallback\n  - v8::FinaliationGroup::Cleanup\n\nIf no HostCleanupFinalizationGroupCallback is set, then\nFinalizationGroup cleanup callbacks are automatically scheduled by V8\nitself as non-nestable foreground tasks.\n\nWhen a Context being disposed, all FinalizationGroups that are\nassociated with it are removed from the dirty list, cancelling\nscheduled cleanup.\n\nBug: v8:8179\nChange-Id: Ic09313a11dd00af36d1f698250b3d735155f45e8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1986392\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66184}\n","milestone":82},{"_id":"f0057afc2fb629e9625bb43df9fcdff06cbf6bf9","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Jan 31 14:58:48 2020"},"commit":"f0057afc2fb629e9625bb43df9fcdff06cbf6bf9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 07 09:40:47 2020"},"message":"[api] Remove deprecated and non-functional method\n\nThe functionality was not used since a long time, and was hence removed\nfor the 8.1 branch, and the method was deprecated.\nThis CL removed the deprecated method completely.\n\nR=adamk@chromium.org\n\nBug: v8:10155\nChange-Id: Iae299d64decb7230d38c2fda8d269a7b0387bb0d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2033169\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66167}\n","milestone":82},{"_id":"8c8af291e19d3e0b1da809ce9004667a8cba26e7","author":{"name":"Georg Neis","email":"neis@chromium.org","time":"Wed Feb 05 12:31:32 2020"},"commit":"8c8af291e19d3e0b1da809ce9004667a8cba26e7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 05 13:33:18 2020"},"message":"[api] Add comment on assumptions about SetWeak callback argument\n\nBug: v8:10101\nChange-Id: If833324b1acebcde8a3bce8888d86c598ed14249\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2037442\nAuto-Submit: Georg Neis <neis@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66135}\n","milestone":82},{"_id":"94723c19719961a15b1f5546ec02fd3e916e1c0d","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Jan 31 15:52:22 2020"},"commit":"94723c19719961a15b1f5546ec02fd3e916e1c0d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 04 12:04:53 2020"},"message":"api: Remove deprecated TracedReference::SetFinalizationCallback method\n\nTracedReference is supposed to be as light-weight as possible without\ndestructor or other callbacks, essentially just representing a plain managed\nreference.\n\nChange-Id: Iae52cf7460e3623f1fb7d183757ecd39b2431369\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2033173\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66106}\n","milestone":82},{"_id":"e395d16984537c0767dc8152c7f273dbf2a555f5","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Jan 31 15:32:36 2020"},"commit":"e395d16984537c0767dc8152c7f273dbf2a555f5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 04 09:56:04 2020"},"message":"[api] Remove deprecated DeserializeOrCompile method\n\nThis method was used to implement deserialization via the value\nserializer. It was deprecated since this functionality is not used any\nmore, and hence untested.\nThis CL cleans up by removing the deprecated method and two private\nhelper methods.\n\nR=adamk@chromium.org\n\nBug: v8:10155\nChange-Id: I4dda1949fd4f1b499cb6f8d6e6a76b642179303a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2033171\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66096}\n","milestone":82},{"_id":"535c5053e4ad36475dbeafc1d0d8a87447a77ab0","author":{"name":"Natalie Silvanovich","email":"natashenka@google.com","time":"Fri Jan 31 19:26:24 2020"},"commit":"535c5053e4ad36475dbeafc1d0d8a87447a77ab0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 04 00:07:49 2020"},"message":"Adding counters for elements on Array.prototype and Object.prototype\n\nBug: chromium:1048354\nChange-Id: Ib37c33f918e96b100926b8247a2ca034482fb978\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2028840\nCommit-Queue: Natalie Silvanovich <natashenka@google.com>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66092}\n","milestone":82},{"_id":"9e52d5c5d7178ae522c71562b01af79a89f88fad","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Mon Feb 03 13:45:06 2020"},"commit":"9e52d5c5d7178ae522c71562b01af79a89f88fad","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 03 16:33:29 2020"},"message":"[debugger] Allow termination-on-resume when paused at a breakpoint\n\nThis CL implements functionality to allow an embedder to mark a\ndebug scope as terminate-on-resume. This results in a termination\nexception when that debug scope is left and execution is resumed.\nExecution of JavaScript remains possible after a debug scope is\nmarked as terminate-on-resume (but before execution of the paused\ncode resumes).\nThis is used by blink to correctly prevent resuming JavaScript\nexecution upon reload while being paused at a breakpoint.\n\nThis is important for handling reloads while paused at a breakpoint\nin blink. The resume command terminates blink's nested message loop\nthat is used while to keep the frame responsive while the debugger\nis paused. But if a reload is triggered while execution is paused\non a breakpoint, but before execution is actually resumed from the\n breakpoint (that means before returning into the V8 JavaScript\nframes that are paused on the stack below the C++ frames that belong\nto the nested message loop), we re-enter V8 to do tear-down actions\nof the old frame. In this case Runtime.terminateExecution() cannot be\nused before Debugger.resume(), because the tear-down actions that\nre-enter V8 would trigger the termination exception and crash the\nbrowser (because the browser expected the tear-down to succeed).\n\nHence we introduce this flag on V8 that says: It is OK if someone\nre-enters V8 (to execute JS), but upon resuming from the breakpoint\n(i.e. returning to the paused frames that are on the stack below),\ngenerate a termination exception.\n\nWe deliberated adding a corresponding logic on the blink side (instead\nof V8) but we think this is the simplest solution.\n\nMore details in the design doc:\n\nhttps://docs.google.com/document/d/1aO9v0YhoKNqKleqfACGUpwrBUayLFGqktz9ltdgKHMk\n\nBug: chromium:1004038, chromium:1014415\n\nChange-Id: I896692d4c21cb0acae89c1d783d37ce45b73c113\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1924366\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66084}\n","milestone":82},{"_id":"ea56bf5513d0cbd2a35a9035c5c2996272b8b728","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Mon Feb 03 13:12:06 2020"},"commit":"ea56bf5513d0cbd2a35a9035c5c2996272b8b728","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 03 16:05:39 2020"},"message":"[ptr-compr] Bump max string length to ~2**29\n\nWithout pointer compression, the max string length on 64-bit platforms\nused to be 2**30 (minus header). With pointer-compression, this was\naccidentally lowered to 2**28 (which is the historical limit for 32-bit\nplatforms). This CL bumps the limit on 64-bit platforms to 2**29, which\nis the maximum we can support given that any heap object's size in bytes\nmust fit into a Smi (which are now 31-bit on all 64-bit platforms, with\nor without pointer compression).\n\nChange-Id: I263544317d9e6137f6b6a044784a21f41a2761b0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2030916\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66083}\n","milestone":82},{"_id":"e8ba5699c648fb5d9878b582342482360f74f80b","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Fri Jan 31 14:58:42 2020"},"commit":"e8ba5699c648fb5d9878b582342482360f74f80b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 31 16:04:55 2020"},"message":"[tools] Add a VMState for Atomics.wait\n\nWe will use this state in devtools via the inspector to indicate\nwhether a thread is currently stuck polling in atomics.wait.\n\nVMState already distinguishes the important states we care about which\nare idle vs. running JS. We also want to know the state for\natomics.wait(), which is commonly used in WebWorkers to poll the main\npage for work to do.\n\nThis CL just adds and maintains the state and adds assertions in\natomics tests. Another CL will emit inspector notifications when the\nVMState changes in a way that the inspector cares about.\n\nRe-flow comments as a drive-by cleanup.\n\nBug: chromium:1025490\nChange-Id: I961051bfb846aa20454a56214310370ea8e47d1c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2033168\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66071}\n","milestone":82},{"_id":"8be98077e06c1aaa4c87e345fc98f881a551186d","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Jan 30 14:08:55 2020"},"commit":"8be98077e06c1aaa4c87e345fc98f881a551186d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 30 15:01:12 2020"},"message":"Update version to 8.2\n\nTBR=machenbach@chromium.org\n\nChange-Id: I2a60152b04301c835fa21c03cd879b3530c436bf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2030726\nReviewed-by: Michael Hablich <hablich@chromium.org>\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCommit-Queue: Michael Hablich <hablich@chromium.org>\nCommit-Queue: Michael Achenbach <machenbach@chromium.org>\nAuto-Submit: Michael Hablich <hablich@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66051}\n","milestone":82},{"_id":"b5c917ee80cbf33b18a96bfcf67a4c598ea85722","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Sat Jan 25 20:29:27 2020"},"commit":"b5c917ee80cbf33b18a96bfcf67a4c598ea85722","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 30 12:05:17 2020"},"message":"[api] New function for reallocating ArrayBuffer backing store\n\nThis patch adds a new BackingStore::Reallocate function that internally\nuses a new ArrayBuffer::Allocator::Reallocate provided by the embedder.\n\nThe default implementation of the function simply copies the backing\nstore. The embedder can override the function and provide a more\nefficient implementation e.g. using realloc.\n\nBug: v8:9908, v8:9380\n\nChange-Id: I2179c80ba199c045b6900c620a813916150e7098\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2007274\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#66044}\n","milestone":82},{"_id":"67a2d9761af383e99f84894730418984889add77","author":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Fri Apr 17 08:34:07 2020"},"commit":"67a2d9761af383e99f84894730418984889add77","committer":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Fri Apr 17 08:34:48 2020"},"message":"Manually increment version to bump auto-tag\n\nChange-Id: I97ef66a06debc90e54dc22aeeeb1084a2d917508\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2153217\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/branch-heads/8.1@{#62}\nCr-Branched-From: a4dcd39d521d14c4b1cac020812e44ee04a7f244-refs/heads/8.1.307@{#1}\nCr-Branched-From: f22c213304ec3542df87019aed0909b7dafeaa93-refs/heads/master@{#66031}\n","milestone":81},{"_id":"4411585c75ec5dba6c610d3fb65e2aeb633045b8","author":{"name":"ishell@chromium.org","email":"ishell@chromium.org","time":"Fri Feb 14 16:34:38 2020"},"commit":"4411585c75ec5dba6c610d3fb65e2aeb633045b8","committer":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Fri Feb 14 16:39:06 2020"},"message":"Merged: [ptr-compr] Fix decompression functions in v8-internal.h\n\nRevision: 8738ab8027849225b29bd59ea7e7646b8f851aa7\n\nBUG=v8:10198,v8:9706,chromium:1045034\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=ulan@chromium.org\n\nChange-Id: Ic7c5a705a841a8f55407bd1caebaea4300e2b14a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2056852\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/branch-heads/8.1@{#14}\nCr-Branched-From: a4dcd39d521d14c4b1cac020812e44ee04a7f244-refs/heads/8.1.307@{#1}\nCr-Branched-From: f22c213304ec3542df87019aed0909b7dafeaa93-refs/heads/master@{#66031}\n","milestone":81},{"_id":"3d53c701ee9bfad3db65dbe4cf139775ca55531e","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Mon Feb 03 13:12:06 2020"},"commit":"3d53c701ee9bfad3db65dbe4cf139775ca55531e","committer":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Mon Feb 10 12:41:49 2020"},"message":"Merged: [ptr-compr] Bump max string length to ~2**29\n\nWithout pointer compression, the max string length on 64-bit platforms\nused to be 2**30 (minus header). With pointer-compression, this was\naccidentally lowered to 2**28 (which is the historical limit for 32-bit\nplatforms). This CL bumps the limit on 64-bit platforms to 2**29, which\nis the maximum we can support given that any heap object's size in bytes\nmust fit into a Smi (which are now 31-bit on all 64-bit platforms, with\nor without pointer compression).\n\n(cherry picked from commit ea56bf5513d0cbd2a35a9035c5c2996272b8b728)\n\nBug: v8:10184\nChange-Id: I263544317d9e6137f6b6a044784a21f41a2761b0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2030916\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nCr-Original-Commit-Position: refs/heads/master@{#66083}\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2046886\nCr-Commit-Position: refs/branch-heads/8.1@{#8}\nCr-Branched-From: a4dcd39d521d14c4b1cac020812e44ee04a7f244-refs/heads/8.1.307@{#1}\nCr-Branched-From: f22c213304ec3542df87019aed0909b7dafeaa93-refs/heads/master@{#66031}\n","milestone":81},{"_id":"1920e6c92f9212d83fdc0cc29a311413b178983d","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Thu Jan 23 23:25:32 2020"},"commit":"1920e6c92f9212d83fdc0cc29a311413b178983d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 24 05:04:10 2020"},"message":"[platform] Require the foreground taskrunner to support non-nestable tasks for weak refs\n\nBug: v8:8179\nChange-Id: I2e7024412216decc06e814e88eecd5b4eb5ae8cb\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2013696\nReviewed-by: Ben Smith <binji@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65966}\n","milestone":81},{"_id":"1dc3ac969366fecc2fe81449e5db0373baf7c438","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri Jan 24 00:03:09 2020"},"commit":"1dc3ac969366fecc2fe81449e5db0373baf7c438","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 24 01:07:50 2020"},"message":"[platform] Support nestable and non-nestable tasks in DefaultForegroundTaskRunner\n\nBug: v8:8179\nChange-Id: I3a41243b971d499d50e35c4782bff5b8b012f434\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2013695\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65965}\n","milestone":81},{"_id":"a8d059d9adc74eb66526e1a4a3102e2d4e73aa17","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Thu Jan 23 08:50:33 2020"},"commit":"a8d059d9adc74eb66526e1a4a3102e2d4e73aa17","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 23 18:53:59 2020"},"message":"[api] Deprecate old name for wasm module type check\n\nThe new name \"IsWasmModuleObject\" was introduced in\nhttps://crrev.com/c/2013109 and chrome switched to the new name in\nhttps://crrev.com/c/2016622. Thus, the old name can be deprecated for\nthe 8.1 branch.\n\nR=adamk@chromium.org\n\nBug: v8:10021\nChange-Id: Ic09d4f8c9ae65ee855e3968f1c0814df0c97bb25\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2016584\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65955}\n","milestone":81},{"_id":"d92bc122430f322ac445268e66e4b282b066b465","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Wed Jan 22 22:44:12 2020"},"commit":"d92bc122430f322ac445268e66e4b282b066b465","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 22 23:35:08 2020"},"message":"[api] Remove \"experimental\" warnings from SharedArrayBuffer in v8.h\n\nThe feature has been on-by-default in Chrome for nearly a year now,\nand is an established part of the ECMAScript standard.\n\nChange-Id: Icf9d424e5fe9139c12fc26b41603b4e39f79ea54\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2015942\nReviewed-by: Ben Smith <binji@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65935}\n","milestone":81},{"_id":"d968ae0acc88d795a982f0c971885ed55c3f09a2","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed Jan 22 19:50:06 2020"},"commit":"d968ae0acc88d795a982f0c971885ed55c3f09a2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 22 20:41:28 2020"},"message":"[api] Deprecate SetExpectInlineWasm\n\nThis flag was used for IndexedDB support. Last uses in chrome were\nremoved in https://crrev.com/c/2013046, hence the API method can be\ndeprecated.\n\nAlso remove deserializer tests that were disabled by default or just\ntest that random bytes (from the deserializer's perspective) fail\nto decode.\n\nR=adamk@chromium.org\n\nBug: v8:10146\nChange-Id: I8596849c3b51ab1c60272a49ff3fdaa0946452bf\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2013104\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65931}\n","milestone":81},{"_id":"67b6af7ca58eeac4c9df8c30227000d14a2d3d1c","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed Jan 22 10:55:13 2020"},"commit":"67b6af7ca58eeac4c9df8c30227000d14a2d3d1c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 22 19:38:12 2020"},"message":"[api] Rename instance check for WasmModuleObject\n\nBoth the API wrapper as well as the internal object are named\n\"WasmModuleObject\". This CL renames the object type check from\n\"IsWebAssemblyCompiledModule\" to \"IsWasmModuleObject\" to be consistent.\n\nR=adamk@chromium.org\n\nBug: v8:10021\nChange-Id: I6d5814421f38bc5f5bd73a492ff4a36f552ff763\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2013109\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65930}\n","milestone":81},{"_id":"a184598fb40aa0254cb88f2aebc07d90eb474f72","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon Jan 20 14:06:21 2020"},"commit":"a184598fb40aa0254cb88f2aebc07d90eb474f72","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 22 08:46:23 2020"},"message":"[wasm] Deprecate unused {DeserializeOrCompile} API\n\nThis API was used for IndexedDB support and for transferring modules by\nserializing and deserializing (before we were sharing code between\nisolates). Last uses were removed in https://crrev.com/c/1847366, thus\nthis whole API is unused by now.\nThis CL deprecates the API and refactors tests to use the internal APIs\ninstead.\n\nR=adamk@chromium.org\n\nBug: v8:10146\nChange-Id: I838039b4be7ea4eebe6769f31f48e51e7bcd4645\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2006090\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65908}\n","milestone":81},{"_id":"9e3f60700ab362f8e63d35a3aaf6dbdcdf8debd7","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon Jan 20 14:13:35 2020"},"commit":"9e3f60700ab362f8e63d35a3aaf6dbdcdf8debd7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 22 07:46:13 2020"},"message":"[api] Fix link in the API header\n\nThe previous link does not use http, and redirects to\nhttp://developers.google.com/v8/?csw=1, which again redirects to\nhttps://v8.dev/.\nThus place the proper link directly.\n\nR=ulan@chromium.org\n\nNo-Try: true\nChange-Id: Ifb4fa7cbb5727bab1a2e46ce1801fdef7c70a5ee\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2010797\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65906}\n","milestone":81},{"_id":"ee8602d33430da7a921dff0bc0bbf1c9b8a7d9de","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Mon Jan 20 09:32:23 2020"},"commit":"ee8602d33430da7a921dff0bc0bbf1c9b8a7d9de","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 20 15:15:52 2020"},"message":"[coverage] Add event for coverage reporting\n\nThis CL adds a new event that enables the back-end to send coverage\nupdates on its own initiative. This event can be triggered via the C++\nmethod `triggerPreciseCoverageDeltaUpdate` on the agent in a way that\ncauses coverage data to be immediatelly collected.\n\nThis is useful in the back-end to collect coverage at a certain point\nin time, i.e. when a lifecycle event such as first contentful paint\noccurs.\n\nThe previous interface could not support this, because it could not\nreasonably be triggered from C++, and if triggered through the protocol,\ndispatching messages added delay that invalidated the data (i.e. data\nmight have been taken too late to be accurate).\n\nTBR=yangguo@chromium.org\n\nChange-Id: I0f7201412a8d64866e6e314e5bc850354c13a9da\nBug: chromium:1022031\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1992437\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65864}\n","milestone":81},{"_id":"8024204828361d4bc9d5be9f63f368dcc943fa9a","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Sun Jan 19 15:50:19 2020"},"commit":"8024204828361d4bc9d5be9f63f368dcc943fa9a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Sun Jan 19 16:43:57 2020"},"message":"[api] New v8::Isolate::MeasureMemory API with per-context sizes\n\nThis adds a new API function that can be customized by the embedder\nby providing a delegate that defines contexts to be measured and\nreports the results to JS.\n\nA memory measurement request is carried out as follows:\n\n1) MeasureMemory(delegate) invocation enqueues a new request in\n   MemoryMeasurement::received_ and schedules a delayed GC task.\n\n2) At the start of the next GC (that is triggered either by the\n   GC schedule or by the delayed task) each request in received_\n   moves to processing_. Per-context marking worklists are created\n   for each native context that was selected by the delegates\n   (using the ShouldMeasure predicate).\n\n3) At the end of the GC the sizes of the native contexts are\n   recorded for each request in processing_. The requests move\n   to the done_ list and result reporting task is scheduled.\n\n4) When the result reporting task runs it invokes the\n   MeasurementComplete function of each delegate in done_.\n\n\nBug: chromium:973627\n\nChange-Id: I0254cae693c5b8fab7c85a9eca0a3a128210b6c4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1981493\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65856}\n","milestone":81},{"_id":"27e9b54558f1944a7edc7895c81bce0c59ee3422","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Jan 16 16:07:06 2020"},"commit":"27e9b54558f1944a7edc7895c81bce0c59ee3422","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 16 18:17:54 2020"},"message":"api, heap: Fix move of on-stack TracedReference\n\nPreviously, V8 was just relinking nodes which broke when a move involves\nan on-stack reference as such nodes have different semantics.\n\nThe solution is to create new internal nodes when necessary.\n\nBug: chromium:1040038\nChange-Id: Ia5b3866ae68d014beb30972c4266aa5bae6559fc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2002546\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65823}\n","milestone":81},{"_id":"26ca6abd2eec76b79871ffad9365b884ec3adca6","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Jan 14 11:26:48 2020"},"commit":"26ca6abd2eec76b79871ffad9365b884ec3adca6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 14 15:37:57 2020"},"message":"api,handles: Support for on-stack TracedReference\n\n- Introduces a API to set top of the stack through\n  EmbedderHeapTracer::SetStackTop.\n- Introduces a new API to inform V8 about an empty embedder stack.\n- Switch internal representation of TracedReference\n  for on-stack handles to a proper stack that considers all\n  contained handles as roots.\n- Handle garbage is avoided by cleaning up on handle creation or\n  GC.\n\nDesign doc: https://bit.ly/on-stack-traced-reference\n\nBug: chromium:1040038\nChange-Id: I927ef0abb268fdb5853c9e17b1bc96e2491cf101\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1993973\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65757}\n","milestone":81},{"_id":"1a4b5990543088e9771cdfacab7a1ccc22072861","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Jan 13 11:41:28 2020"},"commit":"1a4b5990543088e9771cdfacab7a1ccc22072861","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 14 13:52:17 2020"},"message":"api: Remove deprecated RegisterEmbedderReference method\n\nChange-Id: I5889da6b5bb916639d00c450d06c35040c34a9a0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1997130\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65752}\n","milestone":81},{"_id":"8b7113bf3c61dc1df33cb74452b5a40acb25c07a","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Mon Jan 13 12:16:18 2020"},"commit":"8b7113bf3c61dc1df33cb74452b5a40acb25c07a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 13 13:02:55 2020"},"message":"[coverage] Change time format in recently added protocol messages\n\nThe time was reported in milliseconds, but should be reported in seconds\ninstead.\n\nTBR=ulan@chromium.org, szuend@chromium.org\n\nChange-Id: I171cdb0107cd522b0d62ac6ed4edfacf7599da0b\nBug: chromium:1022031\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1997137\nReviewed-by: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65727}\n","milestone":81},{"_id":"1e7e3e9b8a4b065240295efb2e6a9463a5e9edef","author":{"name":"arthursonzogni","email":"arthursonzogni@chromium.org","time":"Fri Jan 10 17:20:50 2020"},"commit":"1e7e3e9b8a4b065240295efb2e6a9463a5e9edef","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 13 10:02:45 2020"},"message":"Deprecate SetAllowCodeGenerationFromStringsCallback.\n\nIt has been superseeded by SetModifyCodeGenerationFromStringsCallback.\n\nThe new method has been introduced in M77 [1], in current form since M80\n[2], default-used by Blink since M80 [3].\n\n[1] https://crrev.com/b9342b7b5ff2e5588eceb503dd52bb1e3fbfb21c\n[2] https://crrev.com/6c0825aaa73ca3163f089ca161c1f6e15633f306\n[3] https://crrev.com/bfd0621af3f09557e9713d5c76108c7dddaa49a6\n\nBug: v8:10096\nChange-Id: If5475aaff9cfee29b42529cd158372b191d34f32\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1987252\nCommit-Queue: Arthur Sonzogni <arthursonzogni@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Daniel Vogelheim <vogelheim@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65717}\n","milestone":81},{"_id":"1069eb3ca7fe8f978411b03fa14a8490b0af0a81","author":{"name":"Shu-yu Guo","email":"syg@chromium.org","time":"Fri Jan 10 20:28:48 2020"},"commit":"1069eb3ca7fe8f978411b03fa14a8490b0af0a81","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 10 21:35:17 2020"},"message":"[d8] Use message listener to print exceptions\n\nUsing the message listener is more in line with what Chromium does, and\nwould allow d8 to report exceptions of JS tasks posted internally by V8\n(e.g. FinalizationGroup cleanups).\n\nBug: v8:8179\nChange-Id: Ie058e1104818b77b2e8ca5e18173a7e68837c9e2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1986390\nCommit-Queue: Shu-yu Guo <syg@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65711}\n","milestone":81},{"_id":"b05c5896a1e1ed6d47bd79bfe0d2a30c17367687","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Thu Jan 09 13:08:17 2020"},"commit":"b05c5896a1e1ed6d47bd79bfe0d2a30c17367687","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 10 14:11:51 2020"},"message":"[coverage] Report timestamp on coverage updates\n\nThis CL adds timestamps to coverage updates. This is useful for clients,\nbecause between requesting a coverage update and collecting coverage data\nsignificant time may pass. This change allows precise attribution at what\ntime a coverage update was taken.\n\nChange-Id: I65a9cccb0171e892b7dbe35d105d3ca246ba08d0\nBug: chromium:1022031\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1992435\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65696}\n","milestone":81},{"_id":"95aba36b52eecdec56752956a7960b916f986a39","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Mon Oct 21 15:39:21 2019"},"commit":"95aba36b52eecdec56752956a7960b916f986a39","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 08 13:54:45 2020"},"message":"[API] Remove deprecated tasks API\n\nIt has been deprecated in v7.9, but needed to be changed\nagain for v8.0 by providing a default implementation. This\nallowed embedders to remove all overrides. We can now\nremove the definitions in v8.1.\n\nR=ulan@chromium.org\nCC=​​ahaas@chromium.org\n\nBug: v8:9810\nChange-Id: I9d303bf8a01d863bce3522abccdd3ded5e551818\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1868620\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65633}\n","milestone":81},{"_id":"ab723525b2a11644ce43fd846a58314948dbfb4a","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Jan 03 14:28:52 2020"},"commit":"ab723525b2a11644ce43fd846a58314948dbfb4a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 07 16:40:46 2020"},"message":"api: Forward TracedReference deprecation\n\nChange-Id: Ifc3100595c88a374ac41cb0d90825c23c1cae756\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1980704\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65609}\n","milestone":81},{"_id":"e08436ce07c11eb1a43b2eb5065da1f6a1f89c6b","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Thu Dec 19 11:56:25 2019"},"commit":"e08436ce07c11eb1a43b2eb5065da1f6a1f89c6b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Dec 19 12:59:35 2019"},"message":"[unwinder] Add a new API based on code pages for arm32 support\n\nThis new API uses the code pages rather than code ranges approach.\n\nIt's supported on arm32, as well as the previous two supported\nplatforms, x64 and arm64.\n\nDeprecate the old API which only works on x64 and arm64 to reduce the\nmaintenance overhead of keeping both. Users of the old API should\nmigrate to the new one as it can be used all on supported platforms.\n\nWe keep the tests for the old API by ignoring deprecation warnings so\nthat we don't accidentally break it while it is still in the codebase.\n\nDesign doc:\nhttps://docs.google.com/document/d/1VGwUult5AHLRk658VetwEHMOmDDxA2eDQs9lDFMZTE0\n\nBug: v8:8116\nChange-Id: I1de8246a48fc1b4991603501ea6087db6b43fdd9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1969900\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65521}\n","milestone":81},{"_id":"bf8ef94cfe6c3e00981d2355f594e3fdb00df0da","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Tue Dec 17 09:25:28 2019"},"commit":"bf8ef94cfe6c3e00981d2355f594e3fdb00df0da","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 18 10:18:58 2019"},"message":"[heap-profiler] Expose 'globalObjectsAsRoots' via inspector interface\n\nThis CL adds an argument to the heap profiler that allows to control\nwhether global objects (e.g. 'window' in JavaScript) are treated as\nroots in the heap snapshot. Doing so hides blink-internal details and\nis often a good choice when user-JS leaks are investigated. Sometimes,\nhowever, this introduces spurious retainer cycles, which are hard to\ndebug.\n\nPreviously, this option was exposed as a V8 flag. The blink\nimplications of the build-time V8 flag are now available via\nthe new blink flag `enable_additional_blink_object_names`.\n\nTbr: hpayer@chromium.org\nBug: chromium:1034504\nChange-Id: Ibe9412917ae598a3ff0c3dc956ab0bc179f50a21\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1967387\nReviewed-by: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65491}\n","milestone":81},{"_id":"285e4d69de9da09b1f940a60447a51786180c0d3","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Mon Dec 16 16:30:20 2019"},"commit":"285e4d69de9da09b1f940a60447a51786180c0d3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 17 08:05:20 2019"},"message":"[unwinder] Add a vector-based code page mechanism for arm32\n\nAdd an API on Isolate that returns a sorted vector of code pages allocated\nwithin V8. The implementation is designed to be signal-safe, so that the\nuser (the UMA sampling profiler) can access this information from a signal\nhandler, where allocation and taking locks is prohibited.\n\nThis CL adds the machinery for maintaining the list of allocated code\npages. Further CLs will modify the Unwinder API itself to accept the code\npages provided by this API.\n\nThe unwinder API currently uses the reserved virtual-memory range called\nthe CodeRange to identify where all V8 code objects live, but this doesn't\nexist on arm32 or any 32-bit platform, so this approach adds a way to\nexpose the location of all valid V8 code objects in a signal-safe way for\nuse by the UMA sampling profiler.\n\nOn 64-bit, this API always gives the code_range and embedded_code_range, and\ndoes not maintain a vector of code pages. This is so that we have a unified\nAPI on 32 and 64-bit that can be used in exactly the same way by embedders.\n\nDesign doc:\nhttps://docs.google.com/document/d/1VGwUult5AHLRk658VetwEHMOmDDxA2eDQs9lDFMZTE0\n\nBug: v8:8116\nChange-Id: I732509a45121fc54853182481c24d1083275afce\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1564068\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65469}\n","milestone":81},{"_id":"bdb828c9c6cae705e30f2883fb787123022153d5","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Mon Dec 09 13:37:22 2019"},"commit":"bdb828c9c6cae705e30f2883fb787123022153d5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Dec 13 18:08:35 2019"},"message":"[api] Various improvements to documentation\n\nThis improves documentation about some things that came up\nin conversation and things that I noticed while working on\nthose other things. :)\n\nChange-Id: I4f47cec6594f7b331259bea8ed506f5de908d438\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1954386\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65449}\n","milestone":81},{"_id":"83786cb49d1e74470b0d910da19ccd13bb6b2047","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Fri Dec 13 09:02:02 2019"},"commit":"83786cb49d1e74470b0d910da19ccd13bb6b2047","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Dec 13 10:57:44 2019"},"message":"Delay setting up deserialized JSArrayBuffer\n\nSetting up JSArrayBuffer may trigger GC. Delay this until we\nare done with deserialization.\n\nR=ulan@chromium.org\n\nBug: chromium:1033395\nChange-Id: I6c79bc47421bc2662dc1906534fc8e820c351ced\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1965580\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65441}\n","milestone":81},{"_id":"a68ee60ac3ff3ee58b7ee0f492eaa47af4b40243","author":{"name":"Thibaud Michaud","email":"thibaudm@chromium.org","time":"Tue Dec 10 14:11:22 2019"},"commit":"a68ee60ac3ff3ee58b7ee0f492eaa47af4b40243","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 10 18:29:30 2019"},"message":"[wasm][debug] Set script URL from WasmStreaming\n\nAdd a method to set the URL of a Wasm script from a WasmStreaming object.\nThis will allow devtools to report the actual URL when it is available.\n\nR=clemensb@chromium.org\n\nBug: v8:9762\nChange-Id: Iccd41d76c9a4a2e1858716e8d555782404719faa\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1944153\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Clemens Backes <clemensb@chromium.org>\nCommit-Queue: Thibaud Michaud <thibaudm@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65405}\n","milestone":81},{"_id":"9645810552d5181c783cf14a2cce20ae5914f4d7","author":{"name":"Bartek Nowierski","email":"bartekn@chromium.org","time":"Mon Dec 09 13:14:20 2019"},"commit":"9645810552d5181c783cf14a2cce20ae5914f4d7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Dec 09 17:41:02 2019"},"message":"Introduce and emit \"function calls in detached window\" use counters.\n\nNOTE! This re-introduces the following change with a modification that\ndetached_window_time_in_seconds is initialized with 0, instead of\ncurrent time.\nhttps://chromium-review.googlesource.com/c/v8/v8/+/1924000\n\nBug: chromium:1018156\nChange-Id: I6d0880e0355d2cb08dbf4f2ef92c8fcead03f9ad\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1958344\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Bartek Nowierski <bartekn@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65393}\n","milestone":81},{"_id":"963ff849dfc3c390b8dc6abfb117ea8e80d870c9","author":{"name":"Joyee Cheung","email":"joyee@igalia.com","time":"Wed Dec 04 19:02:02 2019"},"commit":"963ff849dfc3c390b8dc6abfb117ea8e80d870c9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 04 20:13:34 2019"},"message":"[class] implement inspector support for private instance methods\n\nThis patch implements inspector support for private instance methods:\n\n- Previously to implement brand checking for instances with private\n  instance methods we store the brand both as the value with the brand\n  itself as the key in the stances. Now we make the value the context\n  associated with the class instead.\n- To retrieve the private instance methods and accessors from the\n  instances at runtime, we look into the contexts stored with the\n  brands, and analyze the scope info to get the names as well as\n  context slot indices of them.\n- This patch extends the `PrivatePropertyDescriptor` in the inspector\n  protocol to include optional `get` and `set` fields, and make the\n  `value` field optional (similar to `PropertyDescriptor`s).\n  Private fields or private instance methods are returned in the\n  `value` field while private accessors are returned in the `get`\n  and/or `set` field. Property previews for the instaces containing\n  private instance methods and accessors are also updated similarly,\n  although no additional protocol change is necessary since the\n  `PropertyPreview` type can already be used to display accessors.\n\nDesign doc: https://docs.google.com/document/d/1N91LObhQexnB0eE7EvGe57HsvNMFX16CaWu-XCTnnmY/edit\n\nBug: v8:9839, v8:8330\nChange-Id: If37090bd23833a18f75deb1249ca5c4405ca2bf2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1934407\nCommit-Queue: Joyee Cheung <joyee@igalia.com>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#65337}\n","milestone":81},{"_id":"e359c49b9d4b9ac37fc6dc49cdf91e0c2f9a2bb6","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Mon Oct 14 19:18:49 2019"},"commit":"e359c49b9d4b9ac37fc6dc49cdf91e0c2f9a2bb6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 15 17:40:59 2019"},"message":"Add verwaest as an API owner\n\nPrevious API owners (adamk, yangguo) are less-involved with the JS API\nthen ever, so it seems appropriate to have an owner whose responsibility\nis squarely in the JS domain.\n\nChange-Id: I4235778fda8f55d0429e875d52ff74049024dad1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1860328\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64300}\n","milestone":79},{"_id":"f05bae1e0df48aa6a32d958fb4339a85fefb5179","author":{"name":"Toon Verwaest","email":"verwaest@chromium.org","time":"Tue Oct 15 13:45:11 2019"},"commit":"f05bae1e0df48aa6a32d958fb4339a85fefb5179","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 15 15:01:13 2019"},"message":"[runtime] Move Context::native_context to the map\n\nRemove the native context slot from contexts by making context maps\nnative-context-specific. Now we require 2 loads to go from a context to the\nnative context, but we have 1 field fewer to store when creating contexts.\n\nChange-Id: I3c0d7c50c94060c4129db684f46a567de6f30e8d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1859629\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64296}\n","milestone":79},{"_id":"55be65da1597926416e5546d95ac723419e4c8ef","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Oct 11 11:58:02 2019"},"commit":"55be65da1597926416e5546d95ac723419e4c8ef","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 15 09:28:28 2019"},"message":"api: Rely on v8::Data base type for garbage collection support\n\nUse v8::Data as basetype for managed objects that can integrate with\nv8::EmbedderHeapTracer.\n\nBug: v8:9841\nChange-Id: Id3e06701207a23870cea89e1d7d334c48fcd3006\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1856002\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64283}\n","milestone":79},{"_id":"def681de0025b513f4c7f77e355abc67f756fbcb","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed Oct 09 11:05:44 2019"},"commit":"def681de0025b513f4c7f77e355abc67f756fbcb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 14 12:17:02 2019"},"message":"[api] Deprecate old tasks API\n\nIt was marked V8_DEPRECATE_SOON in https://crrev.com/c/1261936 (part of\nM-71).\n\nR=ahaas@chromium.org, ulan@chromium.org\n\nBug: v8:9810\nChange-Id: I64a7937b518dbf2a75361bbbecd514618922d543\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1849523\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64273}\n","milestone":79},{"_id":"4693fdf9b785a855f36eb962820eb614b7859950","author":{"name":"Zhang, Shiyu","email":"shiyu.zhang@intel.com","time":"Thu Oct 10 08:53:48 2019"},"commit":"4693fdf9b785a855f36eb962820eb614b7859950","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Sat Oct 12 02:12:11 2019"},"message":"[runtime] Add fast path for ConvertToKeysArray\n\n... for the case we haven't seen any elements on the entire prototype chain.\n\nContributed by tao.pan@intel.com\n\nChange-Id: Ied7d1a918b545e71d94ab1521bf0d233ea15cfce\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1848960\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Shiyu Zhang <shiyu.zhang@intel.com>\nCr-Commit-Position: refs/heads/master@{#64261}\n","milestone":79},{"_id":"0b4e0f8558e109a7dfac673a67db6ed42573e720","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Fri Oct 11 11:33:39 2019"},"commit":"0b4e0f8558e109a7dfac673a67db6ed42573e720","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 11 20:41:01 2019"},"message":"[api] Deprecate obsolete wasm methods\n\nThe API was marked to be depracated soon in https://crrev.com/c/1847366.\nChromium switched to the new APIs in https://crrev.com/c/1855822.\n\nR=ulan@chromium.org\n\nBug: v8:9810\nChange-Id: I0befb06e180b57ec21ca4c2d56fa8e10a36b0d9e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1856001\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64252}\n","milestone":79},{"_id":"6f8381958cb7808a2ba12e72617e8249a86117d2","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed Oct 09 09:47:48 2019"},"commit":"6f8381958cb7808a2ba12e72617e8249a86117d2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Oct 10 09:01:45 2019"},"message":"[wasm] Remove obsolete --no-wasm-shared-code flag\n\nThe flag is enabled since M-70, and we do not use the previous\nbehaviour anywhere. Hence, remove the flag and clean up some API code.\nIn particular, the concept of {TransferrableModule} is not needed any\nmore, we can just use {CompiledWasmModule}.\n\nR=mstarzinger@chromium.org, adamk@chromium.org\n\nBug: v8:9810\nChange-Id: I9b3aa4972277a9262b58da70b141e90d1de31f35\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1847366\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64209}\n","milestone":79},{"_id":"db5afff86e7a4943d0a8cc725a8f02de3f8ef4ec","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed Oct 09 11:51:33 2019"},"commit":"db5afff86e7a4943d0a8cc725a8f02de3f8ef4ec","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 09 13:02:01 2019"},"message":"[ptr-compr] Fix build issues on win64 and mac64\n\nBug: v8:7703\nChange-Id: If8605f4dc4ab50fb5a95b43994262c8f3edd92a7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1849524\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64192}\n","milestone":79},{"_id":"ebe753234a3c868a58429f1d096397b229a96388","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Wed Oct 09 10:27:09 2019"},"commit":"ebe753234a3c868a58429f1d096397b229a96388","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 09 12:28:02 2019"},"message":"[api] Remove deprecated method\n\nThe method was deprecated in https://crrev.com/c/1581640 (part of M-76).\n\nR=ulan@chromium.org\n\nBug: v8:9810\nChange-Id: I08db459356273239f1d340b8792e2b57857d1076\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1849518\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64188}\n","milestone":79},{"_id":"be346c6a5c3cae2754bf3c4f84fc346aac80dc08","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Oct 08 16:15:51 2019"},"commit":"be346c6a5c3cae2754bf3c4f84fc346aac80dc08","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 09 07:51:18 2019"},"message":"Remove unused macro\n\nThe V8_HAS_DECLSPEC_NORETURN macro is unused since\nhttps://crrev.com/c/529072, where we switched to the standard\n[[noreturn]] attribute.\n\nR=ulan@chromium.org\n\nBug: v8:9810\nChange-Id: Ifd76c967df1da7bb71369e61cd0adc1807b62d44\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1847365\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64175}\n","milestone":79},{"_id":"739bee71faeae2b7a6472aae96d32ac52a860045","author":{"name":"Clemens Backes","email":"clemensb@chromium.org","time":"Tue Oct 08 16:30:08 2019"},"commit":"739bee71faeae2b7a6472aae96d32ac52a860045","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 09 07:31:28 2019"},"message":"[api] Use C++14 [[deprecated]] attribute\n\nSince C++14, there is a spec'ed attribute for deprecation of methods,\nfunctions, types, aliases or anything else.\nThis CL switches from the GCC __attribute__ to this standard attribute.\nThis allows to use the V8_DEPRECATED and V8_DEPRECATE_SOON macros on\nanything where the standard attribute can be used (including {using}\nstatements that were not working before). It also avoids the need to\nnest the whole declaration in the macro, making the code more readable.\n\nR=adamk@chromium.org\n\nBug: v8:9810\nChange-Id: I7adab7694af75423fb31ade2fc982dbf9c9bc699\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1847361\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Backes <clemensb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64174}\n","milestone":79},{"_id":"557c745eb0f7e72c43a6424f4b29811781a64ae8","author":{"name":"Irina Yatsenko","email":"irinayat@microsoft.com","time":"Fri Oct 04 17:52:06 2019"},"commit":"557c745eb0f7e72c43a6424f4b29811781a64ae8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 08 16:20:54 2019"},"message":"Add full heap dump crash key trigger and use it for crashes under ScavengePage.\n\nBug: chromium:1010312\nChange-Id: I46ca9349f15f3dac896a4ab631be672c1979cc48\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1838927\nCommit-Queue: Irina Yatsenko <irinayat@microsoft.com>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64167}\n","milestone":79},{"_id":"1b5f3be087e0b984db55ca5390382bed4b85acf2","author":{"name":"Ingvar Stepanyan","email":"rreverser@google.com","time":"Mon Oct 07 13:50:37 2019"},"commit":"1b5f3be087e0b984db55ca5390382bed4b85acf2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 08 10:54:09 2019"},"message":"[wasm] Pretend that DWARF section is a fake source map\n\nUnfortunately, codebase contains lots of places that use one of the two\nformats as an internal representation for Wasm locations:\n1) {line: 0, column: byte offset within entire module}\n2) {line: function index, column: byte offset within function}\n\nThese places choose these formats interchangeably and convert from one\nto another depending on the presence of source map URL in Wasm.\n\nThis is not very convenient and makes it hard to add support for DWARF\nwhich should behave just like Wasm with source maps - that is, report a\nraw Wasm script instead of fake scripts per each disassembled function,\nand use representation (1) instead of (2) internally.\n\nI tried to refactor these locations and avoid checking for source map\nURLs in the previous CL - https://crrev.com/c/v8/v8/+/1833688. However,\nit quickly got out of hand, and updating code in one place just kept\nrevealing yet another that gets broken by the changes, so I made a\ndecision to abandon it and leave to someone who knows the codebase\nbetter.\n\nInstead, this CL is based on https://crrev.com/c/v8/v8/+/1809375, but,\nrather than trying to integrate DWARF separately and only for supported\nagents, it pretends that encountering DWARF section is the same as\nencountering a `sourceMappingURL` section with fake URL \"wasm://dwarf\".\n\nThis ensures that Wasm with DWARF behaves exactly in the same way as\nWasm with source maps, just like we want, with minimal changes to the\ncodebase. The only downside is that frontends without DWARF support\nwon't get even a disassembled version of Wasm that contains DWARF info.\nThis is unfortunate, but, as per previous discussions, should be fine\ngiven current state of Wasm debugging.\n\nChange-Id: Ia7256075e4bfd2f407d001d02b96883d7267436e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1834341\nCommit-Queue: Ingvar Stepanyan <rreverser@google.com>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64157}\n","milestone":79},{"_id":"3677468397fa7f9fad9bbd71e9fb3120bdf67620","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Oct 07 17:03:48 2019"},"commit":"3677468397fa7f9fad9bbd71e9fb3120bdf67620","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 07 22:34:54 2019"},"message":"[api, heap] Implement TracedReference\n\nTracedGlobalTrait was unable to override v8::TracedGlobal<v8::Object> for\navoiding the destructor because it is needed on the API surface itself and C++\nODR which prohibits specialization after template instantiation.\n\nAvoid this problem by providing a separate type TracedReference\nthat, similar to TracedGlobal, is purely traced but avoids the destructor\ncompletely. This only works for embedders that have their memory management\ntied to V8 as it is prone to accessing already reclaimed objects otherwise.\n\nBug: chromium:995684\nChange-Id: Iab4332ed417b26c58638a8f9389174cc355a305b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1840972\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64150}\n","milestone":79},{"_id":"340868769c3161fde6e21938acab8111c3d89415","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Mon Oct 07 16:23:50 2019"},"commit":"340868769c3161fde6e21938acab8111c3d89415","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 07 17:26:30 2019"},"message":"[ptr-compr] Set isolate root to the beginning of a 4Gb reservation\n\nWith the smi-corrupting decompression approach we don't have to sign\nextend Smis anymore and therefore we can switch to zero extending\napproach by moving the isolate root to the beginning of the reserved\n4Gb region.\n\nBug: v8:9706\nChange-Id: Icd6008fa87d0924519b574fdec445976f742e306\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1835548\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64144}\n","milestone":79},{"_id":"fe78dd71a7bcd9d43b7fd45f8f158e2f28ad986b","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Oct 04 18:00:38 2019"},"commit":"fe78dd71a7bcd9d43b7fd45f8f158e2f28ad986b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 04 19:05:12 2019"},"message":"[api] Advance deprecations in EmbedderHeapTracer\n\nChange-Id: I0751c1761a2d07dd89d831ca6370ae01bc569b6a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1841351\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64116}\n","milestone":79},{"_id":"618bb202383363a5560850adbfdadc7a5843646d","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Wed Oct 02 10:19:41 2019"},"commit":"618bb202383363a5560850adbfdadc7a5843646d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 04 06:28:11 2019"},"message":"Remove JS natives support, step 2\n\nThe natives blob is deprecated and will be removed in the next\nrelease.\n\nStep 1 landed in https://crrev.com/c/1824944.\nStep 2 (this CL) is to mark API functions as V8_DEPRECATED.\nStep 3, in the next V8 release, is to remove these functions and all\nother natives support in V8.\n\nBug: v8:7624\nChange-Id: I177fa6197e06a3ca21787b4e2d74dd1689038b6b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1835536\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64101}\n","milestone":79},{"_id":"28a9dc2b81faec353c8cbcfcba699e61910cf51c","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Wed Oct 02 07:28:07 2019"},"commit":"28a9dc2b81faec353c8cbcfcba699e61910cf51c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 02 10:21:12 2019"},"message":"Remove JS natives support, step 1\n\nThe natives blob is deprecated and will be removed in the next\nrelease.\n\nThis commit does two things, 1. it disables the v8_extra_library_files\ngn argument which will make building natives_blob.bin through gn\nimpossible; 2. it marks API functions associated with the natives blob\nas V8_DEPRECATE_SOON.\n\nEmbedders should remove any uses of SetNativesDataBlob and replace all\ncalls to\n\n InitializeExternalStartupData(const char*, const char*)\n\nwith the new function\n\n InitializeExternalStartupDataFromFile(const char*)\n\nStep 2 is to mark API functions as V8_DEPRECATED.\nStep 3, in the next V8 release, is to remove these functions and all\nother natives support in V8.\n\nBug: v8:7624\nChange-Id: I745e96c60204a9b94d9240be65dd59bb9bdd0699\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1824944\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nAuto-Submit: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64080}\n","milestone":79},{"_id":"7d0f593e8ff16368dba6b25bdaae7a35b594a5de","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Fri Sep 27 11:25:04 2019"},"commit":"7d0f593e8ff16368dba6b25bdaae7a35b594a5de","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Sep 27 12:16:01 2019"},"message":"[inspector] Add \"disableBreaks\" parameter to \"Runtime.evaluate\".\n\nThis new optional parameter controls whether \"Runtime.evaluate\" ignores\nbreak points and previous \"Debugger.pause\" calls while evaluating the\nexpression. This will be used for live expressions, which should never\ninterfere with debugging.\n\nBug: chromium:1001216\nChange-Id: Ie37f6616a4a1cae40399b79255ab92fb254d91b5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1826664\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#64018}\n","milestone":79},{"_id":"fd4cc2b254463886e529e8701e8e985568b5dfd7","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Thu Sep 26 13:51:23 2019"},"commit":"fd4cc2b254463886e529e8701e8e985568b5dfd7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 26 15:08:51 2019"},"message":"[ptr-compr][csa] Preparing for smi-corrupting decompression\n\nThis CL fixes comparison operations that take into account full-word\nvalue instead of the lower 32 bits and tweaks some CSA helper functions\nfor smi-corrupting decompression.\n\nBug: v8:9706\nChange-Id: I50e38a9f34b911ec0b8dd4e21298417bf23160aa\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1824943\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63995}\n","milestone":79},{"_id":"c7848612d87d5f8a32d074b54930abb9babd7058","author":{"name":"Ingvar Stepanyan","email":"rreverser@google.com","time":"Tue Sep 24 19:46:49 2019"},"commit":"c7848612d87d5f8a32d074b54930abb9babd7058","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 25 14:05:26 2019"},"message":"Add support for reporting raw Wasm scripts\n\nThis addition will allow to experiment with parsing DWARF information from\nWebAssembly on the frontend side for improved debugging.\n\nThe frontend must explicitly opt-in to this experiment by setting\n`supportsWasmDwarf: true` in `Debugger.enable` params.\n\nWhen this option is present, and Wasm appears to contain DWARF information\n(heuristic: `.debug_info` custom section is present), V8 will not try to\ndisassemble and report each WebAssembly function as a separate fake script, but\ninstead will report Wasm module as a whole.\n\nNote that V8 already does this when Wasm is associated with a source map.\n\nAdditionally, this CL adds a dedicated `Debugger.getWasmBytecode` command that\naccepts scriptId and returns raw wire bytes of the chosen WebAssembly module.\n\nChange-Id: I7a6e80daf8d91ffaaba04fa15688f2ba9552870f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1809375\nCommit-Queue: Ingvar Stepanyan <rreverser@google.com>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63969}\n","milestone":79},{"_id":"ee21e39044190b24befa06cf5651ae0c4ae84380","author":{"name":"Matheus Marchini","email":"mmarchini@netflix.com","time":"Fri Sep 13 14:27:11 2019"},"commit":"ee21e39044190b24befa06cf5651ae0c4ae84380","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 24 10:50:05 2019"},"message":"[log] report code relocation through CodeEventHandler\n\nAlso report code relocation events through the public CodeEventHandler\nAPI, so that embedders can expose this information to external\nprofilers, allowing those profilers to correctly translate function\nnames even after they were relocated.\n\nR=bmeurer@chromium.org, jgruber@chromium.org, yangguo@chromium.org\n\nChange-Id: I8795186f5f5c58ede9054e4b83e2d290d92b6e00\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1802657\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63943}\n","milestone":79},{"_id":"6f60c36248c92ef6a0c72e218da4ca1c8e289b51","author":{"name":"Dmitry Gozman","email":"dgozman@chromium.org","time":"Thu Sep 19 04:48:11 2019"},"commit":"6f60c36248c92ef6a0c72e218da4ca1c8e289b51","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Sep 20 00:38:24 2019"},"message":"inspector: V8StackTraceId serialization/deserialization\n\nThis makes it possible to plumb string representation of stack trace id\nacross various channels, e.g. for network requests.\n\nDrive-by: extracted class V8DebuggerId, which encapsulates operations\nwith pair<int64_t, int64_t>.\n\nBug: chromium:988842\nChange-Id: I348c91390a85bf07c746d1b1c4a7775f44c7d769\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1725193\nCommit-Queue: Dmitry Gozman <dgozman@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63900}\n","milestone":79},{"_id":"337611a443a9b92d6d12da281be9058670b1195c","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Wed Sep 18 15:18:44 2019"},"commit":"337611a443a9b92d6d12da281be9058670b1195c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 19 12:51:56 2019"},"message":"[api] Add [Shared]ArrayBuffer::New that takes a BackingStore\n\nThis complements [Shared]ArrayBuffer::GetBackingStore and allows the\nembedder to transfer (shared) array buffers using only BackingStores.\n\nBug: v8:9380\nChange-Id: I4714a27e06d5be43aef06dc633f11f2d43e4ee75\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1811037\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63889}\n","milestone":79},{"_id":"55c48820f8697f90895e0ef9d085425a2ff42c06","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Wed Sep 18 11:04:58 2019"},"commit":"55c48820f8697f90895e0ef9d085425a2ff42c06","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 19 10:03:02 2019"},"message":"[api] Add [Shared]ArrayBuffer::GetBackingStore()\n\nThis adds an additional V8 API to get the backing store of an array\nbuffer. Unlike the existing API, the backing store comes wrapped\nin a std::shared_ptr, making lifetime management with the embedder\nexplicit. This obviates the need for the old GetContents() and\nExternalize() APIs, which will be deprecated in a future CL.\n\nContributed by titzer@chromium.org\n\n\nBug: v8:9380\nChange-Id: I8a87f5dc141dab684693fe536b636e33f6e45173\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1807354\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63883}\n","milestone":79},{"_id":"60624b569283e534ef9936744dfb02021e3ced7d","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Tue Sep 17 11:59:59 2019"},"commit":"60624b569283e534ef9936744dfb02021e3ced7d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 17 13:31:22 2019"},"message":"Disallow nullptr arguments for {CopyChars}\n\nThis allows to remove special casing for the {count == 0} case, which\nwas needed because {memmove} does not accept {nullptr} arguments even\nif the {count} is zero.\n\nR=leszeks@chromium.org\n\nBug: v8:9396\nChange-Id: Iaef3cdbbffa74c2ba1c4e4501dafd943282cbcd9\nCq-Include-Trybots: luci.v8.try:v8_linux64_ubsan_rel_ng\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1807366\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63838}\n","milestone":79},{"_id":"abf47eee04ccd4634cf46e75d0a00ff816d56b7e","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Mon Sep 16 13:20:05 2019"},"commit":"abf47eee04ccd4634cf46e75d0a00ff816d56b7e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Sep 16 15:37:47 2019"},"message":"[cpu-profiler] Removed deprecated methods, advance deprecation\n\nRemove CollectSample() and SetIdle(), advance deprecation of GetCallUid()\n\nChange-Id: Idb8c4f4d14bc5318a430e3549aaff7a41a911557\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1805641\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63805}\n","milestone":79},{"_id":"d16cda8fc3476cc534a756873cc8aa2692a57054","author":{"name":"Jose Dapena Paz","email":"jose.dapena@lge.com","time":"Thu Aug 22 11:13:36 2019"},"commit":"d16cda8fc3476cc534a756873cc8aa2692a57054","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Sep 16 14:17:24 2019"},"message":"GCC: declare noexcept move constructor/assign operators of V8StackTraceId\n\nblink::BlinkCloneableMessage declares default implementation of\nmove operator/assign operator that requires v8_inspector::V8StackTraceId\nto declare its move constructor/assign operator too.\n\nBug: chromium:819294\nChange-Id: Iaf626ee8245efcba372a17cdf2de448e691d41d6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1796062\nCommit-Queue: José Dapena Paz <jose.dapena@lge.com>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63799}\n","milestone":79},{"_id":"75790c9823481d21d1f2a45cf3e28ef7c041973b","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Fri Sep 13 16:11:40 2019"},"commit":"75790c9823481d21d1f2a45cf3e28ef7c041973b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Sep 13 17:13:36 2019"},"message":"[iwyu] Add missing includes of <memory> for std::unique_ptr\n\nAfter https://crrev.com/c/1800575 and https://crrev.com/c/1803343,\nwhich tried to fix this on occuring compile errors, this CL\nsystematically adds the <memory> include to each header that uses\n{std::unique_ptr}.\n\nR=sigurds@chromium.org\nTBR=mlippautz@chromium.org,alph@chromium.org,rmcilroy@chromium.org,verwaest@chromium.org\n\nBug: v8:9396\nChange-Id: If7f9c3140842f9543135dddd7344c0f357999da0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1803349\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Sigurd Schneider <sigurds@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63767}\n","milestone":79},{"_id":"fe3d51e1b2823e183e45eb7baf7f2fffe42e725d","author":{"name":"Dmitry Gozman","email":"dgozman@chromium.org","time":"Fri Sep 13 00:25:29 2019"},"commit":"fe3d51e1b2823e183e45eb7baf7f2fffe42e725d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Sep 13 02:33:22 2019"},"message":"[inspector] Simplify async stepping\n\nCurrently, debugger pauses on async call schedule and then waits for Debugger.pauseOnAsyncCall\nwith parentStackTraceId to actually schedule the pause.\n\nThis CL combines these two steps:\n- For local async tasks, it just stores m_taskWithScheduledBreak at the time of schedule,\n  to be able to pause once this task is run.\n- For external async tasks, it plumbs \"should_pause\" boolean in V8StackTraceId from\n  the point of schedule to the point of execution, and schedules a pause once\n  externalAsyncTaskStarted is called with \"should_pause\" set to true.\n\nThis approach greatly simplifies the implementation, and reduced frontend to a single\n\"breakOnAsyncCall: true\" parameter in Debugger.stepInto.\n\nDrive-by: introduce hasScheduledBreakOnNextFunctionCall() to make\nSetBreakOnNextFunctionCall management more robust.\n\nNote: artificial pauses at async call schedule time are gone from test expectations -\nwe now only pause when user actually wants to pause, which makes protocol much simpler.\n\nSee also design doc linked in the bug.\n\nBUG=chromium:1000475\n\nChange-Id: I2d16f79c599fe196b2aaeca8223c63437a2954a9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1783724\nCommit-Queue: Dmitry Gozman <dgozman@chromium.org>\nReviewed-by: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63737}\n","milestone":79},{"_id":"aaf4714310eebe5d161a30192c6c8e62f21363d0","author":{"name":"Dmitry Gozman","email":"dgozman@chromium.org","time":"Wed Sep 11 23:28:56 2019"},"commit":"aaf4714310eebe5d161a30192c6c8e62f21363d0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 12 00:16:20 2019"},"message":"[inspector] Prepare to simpler async stepping\n\nAdd should_pause to V8StackTraceId in preparation for\nasync stepping simplification [1].\n\n[1] https://chromium-review.googlesource.com/c/v8/v8/+/1783724\n\nBUG=chromium:1000475\nTBR=yangguo@chromium.org\n\nChange-Id: I3a90d33322c83f624a3d28c18ebdfff80b2cd904\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1799453\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCommit-Queue: Dmitry Gozman <dgozman@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63696}\n","milestone":79},{"_id":"e9730043cf00e78a0229b584b60d785cdb2a524d","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Wed Sep 11 16:37:40 2019"},"commit":"e9730043cf00e78a0229b584b60d785cdb2a524d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 11 18:18:10 2019"},"message":"[api, heap] Add v8::Isolate::MeasureMemory API\n\nThis adds a new API function and provides a simple implementation\nof performance.measureMemory() in d8. The implementation currently\nimmediately resolves the result promise with the current heap size.\n\nBug: chromium:973627\n\nChange-Id: Ia8e1963a49b7df628b5487a2c0d601473f0cb039\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1796502\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63694}\n","milestone":79},{"_id":"e36eb3e9477f0548f10d96f1dcfc266b87683afe","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Aug 29 07:23:08 2019"},"commit":"e36eb3e9477f0548f10d96f1dcfc266b87683afe","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 29 18:59:39 2019"},"message":"[api] Expose v8::Object::IsApiWrapper\n\nAllow querying whether an object is capable of holding information that\nis relevant to the embedder in its embedder fields.\n\nBug: chromium:999262\nChange-Id: Iced1a1cc78142481990d40d91d8e70e6e5518c5b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1773268\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63463}\n","milestone":78},{"_id":"fe7b3f9dbbcd6b9df687b06fdc710ab95009910d","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Thu Aug 29 11:14:02 2019"},"commit":"fe7b3f9dbbcd6b9df687b06fdc710ab95009910d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 29 12:13:28 2019"},"message":"[ptr-compr] Use __builtin_assume_aligned() when available\n\n... to let C++ compiler know that isolate root is 4Gb aligned and give\nit a chance to generate a better code.\n\nBug: v8:9353\nChange-Id: Ibd23c14cc44107c722a446a84dd14ca66f3bccfe\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1776079\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63445}\n","milestone":78},{"_id":"bb5b15c1fd9a3029ac25de08da74150d4a6f004a","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Aug 28 14:56:24 2019"},"commit":"bb5b15c1fd9a3029ac25de08da74150d4a6f004a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 29 07:28:18 2019"},"message":"[api,heap] TracedGlobal: Provide copy operators\n\nProvide copy ctor and assignment operators as it turned out that they are\nuseful for embedders in certain scenarios when dealing with TracedGlobal\nhandles without finalization callbacks.\n\nBug: v8:9660\nChange-Id: I2b04f540baeef61a0bc8329ca06b999571cbfe66\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1773250\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63439}\n","milestone":78},{"_id":"5c1fc7bdc3abdc8c736ce46269694eb3cde801e8","author":{"name":"Zhou, Zhiguo","email":"zhiguo.zhou@intel.com","time":"Sat Aug 24 06:44:39 2019"},"commit":"5c1fc7bdc3abdc8c736ce46269694eb3cde801e8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 26 15:19:02 2019"},"message":"Add source map support of WasmModule\n\nThis CL adds a new class WasmModuleSourceMap for source map support of WasmModule,\nwhich maps C/C++ source code to WASM bytecode. Via this support, V8 can build a\ndirect map of source code and JITted code and inform profilers of it, thus the\nsource-code-level profiling information is presented.\n\nChange-Id: I346f6216809ce4f3bf8b27f1e839dd4efdb00ead\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1708029\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCommit-Queue: Zhiguo Zhou <zhiguo.zhou@intel.com>\nCr-Commit-Position: refs/heads/master@{#63401}\n","milestone":78},{"_id":"0292896dbf869e39bd0e4903b53f71b336b55b93","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Fri Aug 23 12:40:12 2019"},"commit":"0292896dbf869e39bd0e4903b53f71b336b55b93","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 23 14:31:11 2019"},"message":"[csa] Add TaggedEqual for comparing tagged values\n\nReplace uses of WordEqual on two tagged representation nodes with a new\nTaggedEqual helper, which on pointer compressed configs only compares\nthe bottom 32-bits of the word. We no longer allow using WordEqual on\nanything not known to be a WordT (i.e. Node* or TNode<Object>).\n\nIn the future, this may allow us to ignore the top bits of an\nuncompressed Smi, and have simpler decompression, though this patch is\nnot sufficient for such a change.\n\nAs a necessary drive-by, TNodify a bunch of stuff.\n\nBug: v8:8948\nChange-Id: Ie11b70709e5d3073f12551b37b420a172a71bc99\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1763531\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Santiago Aboy Solanes <solanes@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63372}\n","milestone":78},{"_id":"b1f6461029a04ada29ac9aae85d0a7c642de90bc","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Aug 23 12:49:09 2019"},"commit":"b1f6461029a04ada29ac9aae85d0a7c642de90bc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 23 13:49:11 2019"},"message":"api: Advance forward deprecations in EmbedderHeapTracer\n\nChange-Id: Iea75626e58d60506ff54c2ab2b6ee814230fb80c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1768580\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63368}\n","milestone":78},{"_id":"0af80a3796f795bb52daec6e434ac5657c095683","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Aug 23 09:28:14 2019"},"commit":"0af80a3796f795bb52daec6e434ac5657c095683","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 23 10:32:29 2019"},"message":"api,heap: Avoid reaching out to embedder memory on TracedGlobal reset\n\nAvoid clearing the memory on the embedder-side of a TracedGlobal handle.\n\nWhen using destructors in TracedGlobal this is safe as long as the embedder\nreports the handle on tracing GCs. If the embedder does not report a handle it\nis assumed that the containing object is dead as well.\n\nWithout using destructors the same argument holds for tracing GCs. In addition,\nembedders using the optimization of clearing references on non-tracing GCs\nare expected to clear the reference in ResetHandleInNonTracingGC.\n\nIt is suggested that only expert embedders make use of (a) no destructors and\n(b) IsRootForNonTracingGC.\n\nChange-Id: Ia417c0eb0860094fcaa554e7046d38abac905714\nBug: chromium:995684\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1763539\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63362}\n","milestone":78},{"_id":"64c88d86982e4a8203656267ce7cb3ee3431a6c8","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Thu Aug 08 15:03:57 2019"},"commit":"64c88d86982e4a8203656267ce7cb3ee3431a6c8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 22 16:35:44 2019"},"message":"[api] Fix overflow in AdjustAmountOfExternalAllocatedMemory\n\nClusterFuzz found another case where \"weird\" embedder calls can cause\nsigned integer overflow. This patch fixes the last addition in that\nfunction to use unsigned types.\n\nBug: chromium:991676\nChange-Id: Ia77a12020908de8f0a3bd1be7d3722ba5c5c919b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1743971\nAuto-Submit: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63349}\n","milestone":78},{"_id":"e66cee7e9e9630bd8ee28943a3ca0da20fed647d","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Thu Aug 22 07:24:01 2019"},"commit":"e66cee7e9e9630bd8ee28943a3ca0da20fed647d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 22 09:01:56 2019"},"message":"[debug] only break on entry when immediately called from JS\n\nWhen we break on function entry, check whether the target function is being\ncalled from JS after entering V8 through V8's API. We implement this by\nkeeping track of the stack height when we enter V8 through the API, and compare\nthe caller JS frame's stack height with that.\n\nR=szuend@chromium.org\n\nBug: chromium:991217, chromium:992406\nChange-Id: I258ad9cef11fe0ef48de6fd5055790792fd0ec0c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1762298\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63331}\n","milestone":78},{"_id":"8c1de9ce37472b0481dffd166740ee5c0f52f68b","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Aug 20 18:19:13 2019"},"commit":"8c1de9ce37472b0481dffd166740ee5c0f52f68b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Aug 21 19:53:35 2019"},"message":"api: Fixed TracedGlobal<T> move operators\n\nImplement move ctor and assignment for both, the version that matches T\nand the version where T and S are related in the type hierarchy.\n\nBug: chromium:995684\nChange-Id: I21a747d706b224117c398e6feff42cc4ffc4cae8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1762296\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63325}\n","milestone":78},{"_id":"489e7deb7ea28c5bf6093b682827a0f3c8ae01e8","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Tue Aug 20 13:24:13 2019"},"commit":"489e7deb7ea28c5bf6093b682827a0f3c8ae01e8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 20 19:04:04 2019"},"message":"[object] Remove MutableHeapNumber\n\nSince the mutability of HeapNumbers is determined by their owning\nobject's descriptor array, we can remove the MutableHeapNumber type\nentirely, at the cost of a few fewer DCHECKs and a couple of TODOs\nto use the descriptor array information.\n\nThis is a necessary step towards a follow-up which allows in-place\nDouble -> Tagged transitions\n\nDesign doc: https://docs.google.com/document/d/1VeKIskAakxQFnUBNkhBmVswgR7Vk6T1kAyKRLhqerb4/\n\nBug: v8:9606\nChange-Id: I13209f9c86f1f204088f6fd80089e17d956b4a50\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1743972\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63294}\n","milestone":78},{"_id":"debbfe4ebd28a7508661d7768b7b242af45d7afe","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Aug 20 15:08:13 2019"},"commit":"debbfe4ebd28a7508661d7768b7b242af45d7afe","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 20 16:38:39 2019"},"message":"api: Add trait that allows disabling v8::TracedGlobal<T> destructor\n\nTracedGlobal is already cleared by V8 during garbage collections. It's\nthe embedders responsibility to clear the reference if it destroys the\nunderlying reference through other means.\n\nAllow embedders to specify whether they want TracedGlobal to execute\nclear on destruction via TracedGlobalTrait.\n\nBug: chromium:995684\nChange-Id: Ieb10cf21f95eb97e01eff15d4fbd83538f17cf7c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1762007\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63289}\n","milestone":78},{"_id":"f93fe955aca2042e24815961c6a60d9230081532","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Mon Aug 19 22:58:21 2019"},"commit":"f93fe955aca2042e24815961c6a60d9230081532","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 20 00:04:31 2019"},"message":"[cpu-profiler] Add parameter to filter profiles by v8::Context\n\nAdds support to the CPU profiler for scraping the incumbent contexts of\nV8 stack frames. While it is generally unsafe to access heap objects\nduring a profiling interrupt, the native context is uniquely usable due\nto being guaranteed an alive root on the stack, as well as its slots\nbeing immutable after context creation.\n\nChange-Id: I2c3149c1302b74d2f13aa99d1fdd0cf006e0f9d1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1580020\nCommit-Queue: Andrew Comminos <acomminos@fb.com>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63258}\n","milestone":78},{"_id":"35558d385b0231000ec676f8529a8889f7048a3e","author":{"name":"Daryl Haresign","email":"dharesign@bloomberg.net","time":"Thu Aug 15 23:46:04 2019"},"commit":"35558d385b0231000ec676f8529a8889f7048a3e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 16 15:53:55 2019"},"message":"[api] TracedGlobal not V8_EXPORT\n\nV8_EXPORT is not required for public class templates, and using it may\nlead to linker errors when users attempt to dllimport V8.\n\nChange-Id: I0b2db2371d0fcbf50af94ba629670486b8f2bc00\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1757284\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63225}\n","milestone":78},{"_id":"fb698cec37c6f082917436fa14bb800f17753ccc","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Tue Aug 13 10:37:59 2019"},"commit":"fb698cec37c6f082917436fa14bb800f17753ccc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 13 12:33:59 2019"},"message":"[isolate-data] Move hot fields closer to isolate_root\n\nIn generated code, we access fields inside IsolateData through the\nroot-register. On some platforms it is significantly cheaper to access\nthings that are close to the root-register value than things that are\nlocated far away. The motivation for this CL was a 5% difference in\nOctane/Mandreel scores between\n\n// Part of the stack check.\ncmpq rsp,[r13+0x9ea8]\n\nand\n\ncmpq rsp,[r13-0x30]  // Mandreel score improved by 5%.\n\nThis moves the StackGuard up to fix Mandreel. As a drive-by, also move\ntwo more fields up that are accessed by each CallCFunction.\n\nTbr: yangguo@chromium.org\nBug: v8:9534,chromium:993264\nChange-Id: I5418b63d40274a138e285fa3c99b96e33a814fb1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1751345\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nAuto-Submit: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63187}\n","milestone":78},{"_id":"6d21451b86a9bff5fd94e9af38ae65c5278f8422","author":{"name":"Irina Yatsenko","email":"irinayat@microsoft.com","time":"Mon Aug 12 23:35:15 2019"},"commit":"6d21451b86a9bff5fd94e9af38ae65c5278f8422","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 13 00:35:59 2019"},"message":"Add crash keys via a callback to the embedder that created the isolate.\n\nThis allows us to keep v8 free of the dependency on the crash/base components.\nSecond half of the change: https://chromium-review.googlesource.com/c/chromium/src/+/1690003.\n\n\nBug: v8:9323\nChange-Id: If35288e3916df951ae6e2ae39e1cb06fab5fbf8c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1699102\nCommit-Queue: Irina Yatsenko <irinayat@microsoft.com>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63177}\n","milestone":78},{"_id":"04a6f872f26f100764d8e4abba3182f0e7f73a1c","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Mon Aug 12 12:50:36 2019"},"commit":"04a6f872f26f100764d8e4abba3182f0e7f73a1c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 12 13:52:52 2019"},"message":"Use relative paths to OWNERS files\n\nR=machenbach@chromium.org\n\nBug: chromium:992584\nChange-Id: I301013731a502689f2edd5c90e5e7bf2136198c5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1745337\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63159}\n","milestone":78},{"_id":"2ac8bb719992296a70463f549aef55d037cbe436","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Aug 09 07:09:27 2019"},"commit":"2ac8bb719992296a70463f549aef55d037cbe436","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 09 08:41:03 2019"},"message":"profiler: Allow querying SnapshotObjectId for native objects\n\n- Adds regular native heap entries to the HeapObjectsMap.\n- Adds a side map for keeping a mapping of native objects to their canonical\n  heap entry that they have been merged into.\n\nChange-Id: Ida00628126ded1948ceb2a0cbe14da817af7f361\nBug: chromium:988350\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1720810\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63140}\n","milestone":78},{"_id":"fb0df2c8978ab4acbd0b8eae92a14eb5670d16e4","author":{"name":"Patrick Thier","email":"pthier@google.com","time":"Tue Aug 06 12:53:11 2019"},"commit":"fb0df2c8978ab4acbd0b8eae92a14eb5670d16e4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 08 13:09:56 2019"},"message":"[regexp] Improve regex interpreter dispatch\n\nThis CL changes the dispatch technique in the regex interpreter to\ntoken-threaded dispatch, if computed gotos are supported by the\ncompiler. Otherwise old switch-based dispatch is still used\n(e.g. for MSVC).\n\nWith computed gotos, less jumps will be emitted (no extra jump to\nsingle branch point/begin of switch) and branch prediction will\nbe better because of no single branch point.\n\nThis CL improves performance on the RexBench Benchmark suite by ~10%.\n\nBug: v8:9575\nChange-Id: I585ad824ff1cc595a5dfa8831ad66d6810d0119b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1733073\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nCommit-Queue: Patrick Thier <pthier@google.com>\nCr-Commit-Position: refs/heads/master@{#63126}\n","milestone":78},{"_id":"5ab7510e93350fe119e0ddcaa3129602c612adc8","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Mon Aug 05 14:57:31 2019"},"commit":"5ab7510e93350fe119e0ddcaa3129602c612adc8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 05 15:54:07 2019"},"message":"[tracing] Fix TracingCpuProfiler test for Perfetto\n\nUpdate the TracingCpuProfiler test to work properly with perfetto.\n\nRoll perfetto to get fixes for bugs encountered with starting/stopping\ntracing rapidly, which happens in the test for the tracing profiler.\n\nAdd a check that the DataSource::Register call was successful to flush\nout any errors there (although they are fixed by the perfetto roll).\n\nEmit a fake trace event when stopping tracing in order to avoid\nlosing the final trace event that the user provided. Remove the ad-hoc\nfake final trace events that the cctests for perfetto added.\n\nAdd a test StartAndStopRepeated which flushes out the issues fixed by\nthe perfetto roll.\n\nTBR=yangguo@chromium.org\n\nCq-Include-Trybots: luci.v8.try:v8_linux64_perfetto_dbg_ng\nBug: v8:8339\nChange-Id: I042d7385486bf42c86f1631406974693868a477f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1731006\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63083}\n","milestone":78},{"_id":"9d4a2ae1179737f8ad5d71567a388fabb1028fd0","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Mon Aug 05 09:53:15 2019"},"commit":"9d4a2ae1179737f8ad5d71567a388fabb1028fd0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 05 12:32:38 2019"},"message":"[api] Advance deprecation of TypedArray::Neuter operations\n\nBug: chromium:913887\nChange-Id: I3b3040acc919990fa39f54add989c5caf325864a\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1735316\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63077}\n","milestone":78},{"_id":"f391faf1d10d10bfb79e535525bec8a2977ba93c","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Fri Aug 02 10:28:42 2019"},"commit":"f391faf1d10d10bfb79e535525bec8a2977ba93c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 02 16:14:39 2019"},"message":"[heap] Add a flag for setting the initial heap size\n\nWhen the --initial-heap-size flag is set V8's heap will grow to that\nvalue without full GCs. Additionally, full GCs will be skipped\nif the heap size drops below that value.\n\nThis patch also adds a comment for the initial_heap_size_in_bytes\nparameter of ResourceConstraints:ConfigureDefaultsFromHeapSize\n\nChange-Id: I85fda14bc6422af7bf2193d530efbc9b0bd0553d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1728622\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Dominik Inführ <dinfuehr@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63054}\n","milestone":78},{"_id":"5611f70b3d74fc28d6b6994a2bcabf7728b4bb75","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Thu Aug 01 15:21:35 2019"},"commit":"5611f70b3d74fc28d6b6994a2bcabf7728b4bb75","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 02 10:40:43 2019"},"message":"\"Reland x4 [arraybuffer] Rearchitect backing store ownership\"\n\nThis is a reland of bc33f5aeba9ceb13f8bfc401c5ba2521c2207ffb\n\nContributed by titzer@chromium.org\n\nOriginal change's description:\n> [arraybuffer] Rearchitect backing store ownership\n>\n> This CL completely rearchitects the ownership of array buffer backing stores,\n> consolidating ownership into a {BackingStore} C++ object that is tracked\n> throughout V8 using unique_ptr and shared_ptr where appropriate.\n>\n> Overall, lifetime management is simpler and more explicit. The numerous\n> ways that array buffers were initialized have been streamlined to one\n> Attach() method on JSArrayBuffer. The array buffer tracker in the\n> GC implementation now manages std::shared_ptr<BackingStore> pointers,\n> and the construction and destruction of the BackingStore object itself\n> handles the underlying page or embedder-allocated memory.\n>\n> The embedder API remains unchanged for now. We use the\n> v8::ArrayBuffer::Contents struct to hide an additional shared_ptr to\n> keep the backing store alive properly, even in the case of aliases\n> from live heap objects. Thus the embedder has a lower chance of making\n> a mistake. Long-term, we should move the embedder to a model where they\n> manage backing stores using shared_ptr to an opaque backing store object.\n\nTBR=yangguo@chromium.org\n\nBUG=v8:9380,v8:9221,chromium:986318\n\nChange-Id: If671a4a9ca0476e8f084efae46e0d2bf99ed99ef\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1731005\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63041}\n","milestone":78},{"_id":"df8e61777295ad5568eff27722a99fab765eabbd","author":{"name":"Ben L. Titzer","email":"titzer@chromium.org","time":"Wed Jul 31 10:33:37 2019"},"commit":"df8e61777295ad5568eff27722a99fab765eabbd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 31 14:13:59 2019"},"message":"\"Reland x3 [arraybuffer] Rearchitect backing store ownership\"\n\nThis is a reland of bc33f5aeba9ceb13f8bfc401c5ba2521c2207ffb\n\nOriginal change's description:\n> [arraybuffer] Rearchitect backing store ownership\n>\n> This CL completely rearchitects the ownership of array buffer backing stores,\n> consolidating ownership into a {BackingStore} C++ object that is tracked\n> throughout V8 using unique_ptr and shared_ptr where appropriate.\n>\n> Overall, lifetime management is simpler and more explicit. The numerous\n> ways that array buffers were initialized have been streamlined to one\n> Attach() method on JSArrayBuffer. The array buffer tracker in the\n> GC implementation now manages std::shared_ptr<BackingStore> pointers,\n> and the construction and destruction of the BackingStore object itself\n> handles the underlying page or embedder-allocated memory.\n>\n> The embedder API remains unchanged for now. We use the\n> v8::ArrayBuffer::Contents struct to hide an additional shared_ptr to\n> keep the backing store alive properly, even in the case of aliases\n> from live heap objects. Thus the embedder has a lower chance of making\n> a mistake. Long-term, we should move the embedder to a model where they\n> manage backing stores using shared_ptr to an opaque backing store object.\n\nR=mlippautz@chromium.org\nBUG=v8:9380,v8:9221,chromium:986318\nTBR=ulan@chromium.org\n\nChange-Id: I6c49e2425029b5664ef1c68dab8b5146f4ed0ff2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1719191\nReviewed-by: Ben Titzer <titzer@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCommit-Queue: Ben Titzer <titzer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#63007}\n","milestone":78},{"_id":"743ce7726dbfb775e8c7e0f78b10e03c23382f30","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Tue Jul 30 10:10:18 2019"},"commit":"743ce7726dbfb775e8c7e0f78b10e03c23382f30","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 30 12:19:39 2019"},"message":"[WeakRefs] Make cleanup callback run as a task\n\nPreviously, this was run as a microtask and this CL changes it to run\nas a separate task as mandated by the current WeakRef spec.\n\nThis CL also introduces a FinalizationGroup type to the V8 API\nrepresenting the JSFinalizationGroup. This has a `Cleanup`\nfunction that runs the cleanup callback associated with it.\n\nSetHostCleanupFinalizationGroupCallback is added to set\nthe embedder defined HostCleanupFinalizationGroupCallback.\n\nClearKeptObject is exposed on the v8::Isolate to reset the strongly\nheld set of objects.\n\nThe general workflow is the following:\n\n(a) When the GC notices that a given finalization group has dirty\n    cells, it calls HostCleanupFinalizationGroupCallback with the given\n    finalization group.\n\n(b) As part of HostCleanupFinalizationGroupCallback, the embedder\n    enqueues a task that at some point later calls\n    FinalizationGroup::Cleanup.\n\n(c) At some point in the future, FinalizationGroup::Cleanup is called,\n    which runs the cleanup callback of the finalization group.\n\nThis patch also includes d8 changes to use these new APIs. Currently,\nd8 cycles through the enqueued finalization groups after a synchronous\nturn (and it's microtask checkpoint) and runs the cleanup callbacks.\n\nChange-Id: I06eb4da2c103b2792a9c62bc4b98fd4e5c4892fc\nBug: v8:8179\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1655655\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62984}\n","milestone":78},{"_id":"8f97640136d732ca0f0dc67ed84aec1551d694a3","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Thu Jul 18 23:18:18 2019"},"commit":"8f97640136d732ca0f0dc67ed84aec1551d694a3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 26 19:57:02 2019"},"message":"[cpu-profiler] Enable logging for the lifetime of each CpuProfiler\n\nImplements ProfilerCodeObserver, a class to track the generation and\nmovement of code on the heap for the lifetime of each CpuProfiler. When\nsampling is inactive, logged code is committed directly to the CodeMap.\nDuring profiling, ProfilerCodeObserver redirects these events onto the\nprofiling thread for later dispatch.\n\nBug: v8:9151\nChange-Id: Ib5b152446d2a3838e1b00a80253fc4fbd2f6e8c3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1604143\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCommit-Queue: Andrew Comminos <acomminos@fb.com>\nCr-Commit-Position: refs/heads/master@{#62943}\n","milestone":78},{"_id":"dd7190a97952ff61b140430468aa1689254c90ac","author":{"name":"Mathias Bynens","email":"mathias@chromium.org","time":"Thu Jul 25 11:30:36 2019"},"commit":"dd7190a97952ff61b140430468aa1689254c90ac","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 25 12:53:02 2019"},"message":"[regexp] Add UseCounter for matchAll with non-g RegExp\n\nPer the July TC39 meeting consensus, we'd like to make the\nupcoming String.prototype.replaceAll proposal throw for\nnon-global RegExp searchValues. However,\nString.prototype.matchAll currently does not throw in this\ncase, causing consistency concerns.\n\nThis patch adds a use counter for String.prototype.matchAll\nwith a non-global RegExp as the searchValue. Hopefully, this\npattern isn't too common in real-world code today, in which case\nwe can both a) change matchAll and b) proceed with the desired\nreplaceAll semantics.\n\nhttps://github.com/tc39/proposal-string-replaceall/issues/16\n\nV8 CL: https://chromium-review.googlesource.com/c/v8/v8/+/1718145\nChromium CL: https://chromium-review.googlesource.com/c/chromium/src/+/1718367\n\nBUG=v8:9551\n\nChange-Id: Ica660a0a6189d84c3d33398c98305d0bcb9f8c23\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1718145\nCommit-Queue: Mathias Bynens <mathias@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62913}\n","milestone":78},{"_id":"b33af60dd9e7e5b2557b9fbf3fdb80209f6db844","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Wed Jul 17 05:54:12 2019"},"commit":"b33af60dd9e7e5b2557b9fbf3fdb80209f6db844","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 19 13:45:25 2019"},"message":"[api] Get ScriptOrModule from CompileFunctionInContext\n\nAdds a new out param which allows accessing the ScriptOrModule\nof a function, which allows an embedder such as Node.js to use\nthe function's i::Script lifetime.\n\nRefs: https://github.com/nodejs/node-v8/issues/111\nChange-Id: I34346d94d76e8f9b8377c97d948673f4b95eb9d5\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1699698\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62830}\n","milestone":77},{"_id":"749f0727a263b2e32de864aa49bf84fe78a5a2ce","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Mon Jul 08 21:06:28 2019"},"commit":"749f0727a263b2e32de864aa49bf84fe78a5a2ce","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 09 00:09:32 2019"},"message":"[modules] Implement SyntheticModule::ResolveExport and SyntheticModule::Evaluate.\n\nResolveExport and Evaluate are the final unimplemented SyntheticModule methods; with this\nchange the implementation is complete.\n\nTest-api unit tests are also provided.\n\nBug: v8:9292\nChange-Id: Ieb7643cc5b6495dd201a51f04199d2406a703e52\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1681187\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#62582}\n","milestone":77},{"_id":"ef332f7a6911c80ef18f31f81d642eee241a405e","author":{"name":"Irina Yatsenko","email":"irinayat@microsoft.com","time":"Mon Jul 08 15:40:29 2019"},"commit":"ef332f7a6911c80ef18f31f81d642eee241a405e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 08 17:23:49 2019"},"message":"Make adding crash keys a platform API\n\nThe current integration of crash keys into v8 got the dependencies wrong: it introduced into v8 a dependency on components and base. This change will allow moving the implementation into \"gin\" (via Platform's abstraction), which is ok to depend on components and base, while providing the default noop implementation for the embedders that don't care to collect crash keys. Gin's side: https://chromium-review.googlesource.com/c/chromium/src/+/1690003.\n\nBug: v8:9323\nChange-Id: I7b6e3e2cdc4b5f14f61ad20d2c362344d53896c6\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1689834\nCommit-Queue: Irina Yatsenko <irinayat@microsoft.com>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62579}\n","milestone":77},{"_id":"31cd5d83d34ece8d1917082236b76bfeb09f038b","author":{"name":"Ben L. Titzer","email":"titzer@chromium.org","time":"Mon Jul 08 12:46:08 2019"},"commit":"31cd5d83d34ece8d1917082236b76bfeb09f038b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 08 16:06:48 2019"},"message":"[arraybuffer] Rearchitect backing store ownership\n\nThis CL completely rearchitects the ownership of array buffer backing stores,\nconsolidating ownership into a {BackingStore} C++ object that is tracked\nthroughout V8 using unique_ptr and shared_ptr where appropriate.\n\nOverall, lifetime management is simpler and more explicit. The numerous\nways that array buffers were initialized have been streamlined to one\nAttach() method on JSArrayBuffer. The array buffer tracker in the\nGC implementation now manages std::shared_ptr<BackingStore> pointers,\nand the construction and destruction of the BackingStore object itself\nhandles the underlying page or embedder-allocated memory.\n\nThe embedder API remains unchanged for now. We use the\nv8::ArrayBuffer::Contents struct to hide an additional shared_ptr to\nkeep the backing store alive properly, even in the case of aliases\nfrom live heap objects. Thus the embedder has a lower chance of making\na mistake. Long-term, we should move the embedder to a model where they\nmanage backing stores using shared_ptr to an opaque backing store object.\n\nR=mlippautz@chromium.org\nBUG=v8:9380,v8:9221\n\nChange-Id: I48fae5ac85dcf6172a83f252439e77e7c1a16ccd\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1584323\nCommit-Queue: Ben Titzer <titzer@chromium.org>\nReviewed-by: Ben Titzer <titzer@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Deepti Gandluri <gdeepti@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62572}\n","milestone":77},{"_id":"edd383fbcd3511cfc4c6abc20e90df7e986180f2","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Mon Jul 08 08:29:54 2019"},"commit":"edd383fbcd3511cfc4c6abc20e90df7e986180f2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 08 13:37:16 2019"},"message":"[tracing] Use the new perfetto client API\n\nThe client API provides a much simpler interface so that we don't have\nto deal with producers, consumers etc. directly. This CL removes all the\ncode that dealt with the more complex API used previously.\n\nThe architecture used here requires that the embedder call into\nTracing::Initialize() to set up the tracing backend. The tracing\ncontroller then connects to this backend when calling\nDataSource::Register() and Tracing::NewTrace(). This will ultimately\navoid the need for a virtual call (or two) for every trace event that\nneed to be dispatched over the API - chrome can provide a backend\nand V8 will connect to it opaquely with the same code when tracing is\nenabled.\n\nCq-Include-Trybots: luci.v8.try:v8_linux64_perfetto_dbg_ng\nBug: v8:8339\nChange-Id: I6b74fbb49ffcc89638caeb59ed3d5cc81238f3e8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1634916\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62568}\n","milestone":77},{"_id":"8e11cc395afeca1cd3f0c5038f00e734779f4a23","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Mon Jul 08 08:42:48 2019"},"commit":"8e11cc395afeca1cd3f0c5038f00e734779f4a23","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 08 09:59:36 2019"},"message":"Enable cpplint 'runtime/references' warning\n\nCpplint usually checks for non-const reference arguments. They are\nforbidden in the style guide, and v8 does not explicitly make an\nexception here.\nThis CL re-enables that warning, and fixes all current violations by\nadding an explicit \"NOLINT(runtime/references)\" comment. In follow-up\nCLs, we should aim to remove as many of them as possible.\n\nTBR=mlippautz@chromium.org\n\nBug: v8:9429\nChange-Id: If7054d0b366138b731972ed5d4e304b5ac8423bb\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1687891\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62551}\n","milestone":77},{"_id":"92147e3aca982c714e9b6a26e108889b8cd66073","author":{"name":"Daniel Clark","email":"daniec@microsoft.com","time":"Thu Jun 27 21:11:44 2019"},"commit":"92147e3aca982c714e9b6a26e108889b8cd66073","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 27 22:23:46 2019"},"message":"[modules] Introduce SyntheticModule\n\nThis change is a partial implementation of Synthetic Module Record as specified here:\nhttps://heycam.github.io/webidl/#synthetic-module-records\n\nThis includes:\n- Introduce SyntheticModule class inheriting from Module.\n- Extend v8::Module interface in v8.h to include Synthetic Module APIs, with corresponding\n  implementations in api.cc.\n- Provide SyntheticModule implementations of PrepareInstantiate, FinishInstantiate, and SetExport.\n- Provide cctest unit tests for the implementations in the preceding item.\n\nWe will follow up with further submissions to implement the remaining members of\nSyntheticModule (ResolveExport and Evaluate).\n\nBug: v8:9292\nChange-Id: I25b1b695b5d1c3004677cd685f0dfd95283438fa\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1626829\nCommit-Queue: Dan Clark <daniec@microsoft.com>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62433}\n","milestone":77},{"_id":"00e389d238846a67cbf01fb3a3ccf63212526bad","author":{"name":"Johannes Henkel","email":"johannes@chromium.org","time":"Wed Jun 26 00:45:46 2019"},"commit":"00e389d238846a67cbf01fb3a3ccf63212526bad","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jun 26 15:17:19 2019"},"message":"[DevTools] V8StackTrace: Add the ability to limit the max async depth...\n\n... when building inspector objects.\n\nThis is useful in Chromium, when recording the initiator information\nfor navigations.\n\nSee https://chromium-review.googlesource.com/c/chromium/src/+/1674885\n\nChange-Id: Ib9ddcaf05586ca1f48a31921a20ab11a703ec7b0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1677381\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nCommit-Queue: Johannes Henkel <johannes@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62389}\n","milestone":77},{"_id":"ff5a3e3d86118577de526c6b8d92afe7c0966bbe","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Mon Jun 24 15:05:24 2019"},"commit":"ff5a3e3d86118577de526c6b8d92afe7c0966bbe","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jun 26 10:15:11 2019"},"message":"[scanner] Use JSRegExp::Flags instead of v8::RegExp::Flags\n\nThere's no reason to use the API RegExp type instead of the internal\nJSRegExp type. In fact, the parsed flags end up in\nRuntime_CreateRegExpLiteral, which assumes them to be of type\nJSRegExp::Flags.\n\nDrive-by: Additional asserts and helper functions in JSRegExp.\n\nBug: v8:9359\nChange-Id: I5c12aba7d4e39a4891fb23d8b47c55fc480a28d9\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1667004\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62376}\n","milestone":77},{"_id":"9ae5a9a1d6920da424647dd876b79a28c2cf63df","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Tue Jun 18 09:52:25 2019"},"commit":"9ae5a9a1d6920da424647dd876b79a28c2cf63df","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jun 24 17:36:01 2019"},"message":"[api] Remove deprecated Object::Get/Set methods\n\nBug: v8:9183\nChange-Id: I40c1cd1f55efc353af19cdee48e85ddc8085586c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1664059\nAuto-Submit: Dan Elphick <delphick@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62344}\n","milestone":77},{"_id":"632239011db501e76475d82ff6492f37fa8c1edc","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Tue Jun 11 13:11:16 2019"},"commit":"632239011db501e76475d82ff6492f37fa8c1edc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 18 17:59:36 2019"},"message":"Move inspector protocol definitions to include/\n\nThis does not delete the files in the old locations yet since we need\nto fix up the references in Chrome and Node.js.\n\nBug: v8:9247\nChange-Id: I75dd469e19b6d4249ed187dd6d095d306f1b6c45\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1649355\nReviewed-by: Pavel Feldman <pfeldman@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62258}\n","milestone":77},{"_id":"6f7ebd03857bed07b8594a15e9b606e801f08ac4","author":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Tue Jun 18 12:32:01 2019"},"commit":"6f7ebd03857bed07b8594a15e9b606e801f08ac4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 18 14:31:05 2019"},"message":"Make nested DEPS files commonly owned\n\nNOTRY=true\n\nChange-Id: Ic57b26b9a2732a43dcac4445be4f57d3bb5e7396\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1664071\nReviewed-by: Tamer Tas <tmrts@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62247}\n","milestone":77},{"_id":"b9342b7b5ff2e5588eceb503dd52bb1e3fbfb21c","author":{"name":"Daniel Vogelheim","email":"vogelheim@chromium.org","time":"Thu Jun 13 12:09:01 2019"},"commit":"b9342b7b5ff2e5588eceb503dd52bb1e3fbfb21c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jun 14 14:10:28 2019"},"message":"Allow embedder to block or modify eval arguments.\n\nThis extends the existing Isolate::SetAllowCodeGenerationFromStringsCallback\nmechanism, by adding SetModifyCodeGenerationFromStringCallback, which\ncan also modify the eval argument (it could e.g. add escaping).\n\nBug: chromium:940927\nChange-Id: I2b72ec2e3b77a5a33f428a0db5cef3f9f8ed6ba2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1593336\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Daniel Vogelheim <vogelheim@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62185}\n","milestone":77},{"_id":"1c1aa818aff76bfa8e0bc7cbb1afaccf1738f55f","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Thu Jun 13 09:55:34 2019"},"commit":"1c1aa818aff76bfa8e0bc7cbb1afaccf1738f55f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jun 14 05:33:51 2019"},"message":"[stack-trace] Introduce two usage counters for two CallSite API builtins\n\nThis CL introduces two usage counters for two CallSite functions in\nsloppy mode:\n  - getFunction()\n  - getThis()\n\nChromium CL: https://crrev.com/c/1657902\n\nBug: v8:8742\nChange-Id: I81e8fec48534f5932a72de86d9d21f3b370c66a7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1657919\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62164}\n","milestone":77},{"_id":"af927dac4953a1d50c28fdd9cd5eb9e7ab1f2ace","author":{"name":"Johannes Henkel","email":"johannes@chromium.org","time":"Fri Jun 07 23:47:28 2019"},"commit":"af927dac4953a1d50c28fdd9cd5eb9e7ab1f2ace","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 11 17:39:56 2019"},"message":"[DevTools] Remove V8InspectorSession::stateJSON().\n\nhttps://chromium.googlesource.com/v8/v8.git/+/refs/heads/7.6-lkgr/include/v8-inspector.h\nhas the V8_DEPRECATED method.\n\nAnd looks like\nhttps://chromium.googlesource.com/v8/v8.git/+/refs/heads/7.7.1\nhas been cut, so this is no longer needed.\n\nChange-Id: I9db414df4900fc24cd6789708464f9d90bfb64f2\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1649344\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Johannes Henkel <johannes@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62102}\n","milestone":77},{"_id":"e77e65f159b6d3218e3c43b51991a3714c3ebc06","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Thu Jun 06 14:01:41 2019"},"commit":"e77e65f159b6d3218e3c43b51991a3714c3ebc06","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 06 19:17:40 2019"},"message":"Introduce v8::Context::ScriptExecutionCallback\n\nBug: chromium:965916\nChange-Id: I2cb28a8c569c88631bc835b55a04e8629f56cb6f\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1630684\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62034}\n","milestone":77},{"_id":"e423f0040333dd3ab410b3c6cab5b71a4f75fa6a","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Wed Jun 05 21:08:15 2019"},"commit":"e423f0040333dd3ab410b3c6cab5b71a4f75fa6a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 06 10:22:56 2019"},"message":"[api] Add a way to specify the max heap size in ResourceConstraints\n\nThe new API function is called ConfigureDefaultsFromHeapSize and\naccepts two parameters: the initial and the maximum heap size.\nBased on the given limits the function computes the default size\nfor the young and the old generation.\n\nThe patch also cleans up the existing functions to make them\nconsistent in terms of units and heap structure.\n\nBug: v8:9306\nChange-Id: If2200a9cdb45b0b818a373207efe4e6426f7b688\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1631593\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#62017}\n","milestone":77},{"_id":"cbf72529dabfd6fffdb6aa0f10bebd6cbf94dd5a","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Jun 04 13:27:55 2019"},"commit":"cbf72529dabfd6fffdb6aa0f10bebd6cbf94dd5a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 04 14:39:33 2019"},"message":"[api,heap] Allow decrementing allocated embedder size\n\nAllow the embedder to decrement its allocated bytes count:\n- The decrement will be applied to the used bytes value.\n- The decrement is ignored for the total allocated bytes.\n\nBug: chromium:948807\nChange-Id: I609ccf81017b693e0db13b499cbf8967f5f8a2c7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1631428\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61982}\n","milestone":77},{"_id":"8f4845117b6e212ee5504b2ba4513a959a4fd27a","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Fri May 31 05:58:52 2019"},"commit":"8f4845117b6e212ee5504b2ba4513a959a4fd27a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jun 03 10:18:22 2019"},"message":"Remove 'set noparent' from OWNERS files where reasonable\n\nR=rmcilroy@chromium.org\nNOPRESUBMIT=true\n\nBug: v8:9247\nChange-Id: I355ac92c323ab34e1898c0764856ebadc3357dcc\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1635691\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61960}\n","milestone":77},{"_id":"d64f582ae40fc93f32021d7db25a5ac4b09aa0b5","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Wed May 29 11:01:08 2019"},"commit":"d64f582ae40fc93f32021d7db25a5ac4b09aa0b5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 30 04:51:21 2019"},"message":"Add OWNERS files for src and test\n\nBug: v8:9247\nChange-Id: Id6860e7b0f932990ac3cda39e369b0809e4f6a2b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1632072\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Daniel Clifford <danno@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61928}\n","milestone":77},{"_id":"d365f62ec1c2681a05a358fa996533f79a673286","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Mon May 27 12:46:35 2019"},"commit":"d365f62ec1c2681a05a358fa996533f79a673286","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 27 14:28:36 2019"},"message":"[tracing] Add a way to test perfetto traces.\n\nAdd a new abstract class TraceEventListener which is just an interface\nfor consuming trace events. This separates the V8-specific stuff that\nan actual perfetto consumer needs to do e.g. handling the has_more flag\nand signalling back to the controller with a semaphore.\n\nThis is a change from the previous plan of making the PerfettoConsumer\nclass sub-classable to implement custom consumption of trace events.\nThis will be difficult when the consumer is created outside of the\nPerfettoTracingController as we can't hook up the\nconsumer_finished_semaphore_ that belongs to the controller.\n\nNow the PerfettoTracingController is responsible for the Consumer life-\ncycle and hides it entirely from callers. We add the\nAddTraceEventListener() method to allow callers to register a listener\neither for testing or a JSON listener for real tracing.\n\nThis lets us write tests that can store all the trace events in memory\nwithout first converting them to JSON, letting us write test more\neasily. There's an example test add to test-tracing - more tests using\nthis style will follow.\n\nCq-Include-Trybots: luci.v8.try:v8_linux64_perfetto_dbg_ng\nBug: v8:8339\nChange-Id: I2d2b0f408b1c7bed954144163e1968f40d772c1b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1628789\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nAuto-Submit: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61854}\n","milestone":76},{"_id":"99a927c6926490e436b34051b565306d890e7e30","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Thu May 23 08:23:54 2019"},"commit":"99a927c6926490e436b34051b565306d890e7e30","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 23 09:05:56 2019"},"message":"[api] Remove obsolete FunctionTemplate::SetHiddenPrototype().\n\nThe `FunctionTemplate::SetHiddenPrototype()` API was deprecated\nbeginning of the year and all uses in Node.js and Chrome have been\nremoved appropriately. This removes the implementation of the method\nand the bit in the `FunctionTemplateInfo`, but retains the bit in\nthe Map for now. That will be cleaned up as a second step later.\n\nBug: v8:9183, v8:9267\nChange-Id: I9aa2fc484b3321f4f42a29a0a38d72a6d30054a7\nCq-Include-Trybots: luci.chromium.try:linux-rel,win7-rel\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1627329\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61771}\n","milestone":76},{"_id":"a03ed626797be8e9424bef58a7dde4415eb9181f","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Tue May 21 11:24:16 2019"},"commit":"a03ed626797be8e9424bef58a7dde4415eb9181f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 22 15:25:31 2019"},"message":"[tracing] Add a configurable output stream for perfetto tracing\n\nAdd the ability to provide perfetto with an output stream for the JSON\nconsumer rather than hardcode it. D8 will use this interface exclusively\nonce the old trace controller is removed.\n\nAlso add a test for scope-managed trace events and their duration - this\nwas leftover from a previous CL.\n\nCq-Include-Trybots: luci.v8.try:v8_linux64_perfetto_dbg_ng\nBug: v8:8339\nChange-Id: I1c45e17e528b549a4cfdaecabd33c7ac4ab4af77\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1611801\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61753}\n","milestone":76},{"_id":"245a5b38e7ed136e3e88ffc13a390ff46e63376e","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Wed May 22 00:06:41 2019"},"commit":"245a5b38e7ed136e3e88ffc13a390ff46e63376e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 22 06:12:24 2019"},"message":"[cpu-profiler] Remove redundant record_samples option\n\nNow that we support a max_samples parameter, it isn't actually necessary\nto have a record_samples flag (as it can just be modeled by 0).\n\nChange-Id: I578ecc9f6ee73ecbe1f93d0d04ee8028a9a2716d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1611015\nCommit-Queue: Andrew Comminos <acomminos@fb.com>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61717}\n","milestone":76},{"_id":"cfe281f3dba735f14bc114ea3fd0e7cca2aa60db","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue May 21 18:13:45 2019"},"commit":"cfe281f3dba735f14bc114ea3fd0e7cca2aa60db","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 21 19:06:01 2019"},"message":"[heap] Add global memory controller\n\nProvide a global memory controller used to compute limits for combined\non-heap and embedder memory. The global controller uses the same\nmechanism (gc speed, mutator speed) and growing factors as the regular\non-heap controller.\n\nRely on V8's mechanisms for configured state that stops shrinking the\nlimit.\n\nBug: chromium:948807\nChange-Id: I3283a2c28e6ab889f8d2ad85c9b67b8f234b9900\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1619762\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61712}\n","milestone":76},{"_id":"deb3231a23b231e423bc1a99cb26e7fad1ab8313","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Tue May 14 20:24:49 2019"},"commit":"deb3231a23b231e423bc1a99cb26e7fad1ab8313","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 15 16:48:27 2019"},"message":"[cpu-profiler] Implement CPU profiler subsampling/multiplexing\n\nPermit individual calls to CpuProfiler::StartSampling to provide their\nown requested sampling interval, to be snapped to the profiler's\nsampling interval. Use the greatest common divisor of all sample rates\nto determine what sample rate should be chosen for the sampling thread,\nand dispatch samples to attached profilers based on their requested\nsample periodicity.\n\nChange-Id: I0b076d09761d7176f31725e112578b68ab5da54c\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1484461\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCommit-Queue: Andrew Comminos <acomminos@fb.com>\nCr-Commit-Position: refs/heads/master@{#61548}\n","milestone":76},{"_id":"2021d4ef2c0f0088347806a9cdbdeb79d55bc96c","author":{"name":"Johannes Henkel","email":"johannes@chromium.org","time":"Tue May 14 23:07:29 2019"},"commit":"2021d4ef2c0f0088347806a9cdbdeb79d55bc96c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 15 15:58:12 2019"},"message":"[DevTools] Switch inspector-test.cc to use the CBOR encoded inspector state.\n\nThe main change here is that in isolate-data.h, I'm switching from stateJSON to state.\nThis routine returns a CBOR encoded state cookie, which is also what we already\nuse in Chromium (blink).\n\nIn inspector-test.cc, I then put this byte vector into a V8 String,\nand to make this roundtrip, change the extraction routine to get the\nbytes. It's a little weird to store arbitrary bytes inside a v8 string,\nbut it appears to work fine because these bytes end up in the 8 bit portion,\nmuch like isolatin characters would.\n\nChange-Id: I72a0bdefd85a290f4e91db79be67d86952831685\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1610478\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nCommit-Queue: Johannes Henkel <johannes@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61544}\n","milestone":76},{"_id":"5554781f7453ce6f2017eda9b87a97b163ee0ad4","author":{"name":"gengjiawen","email":"technicalcute@gmail.com","time":"Sun May 12 15:50:25 2019"},"commit":"5554781f7453ce6f2017eda9b87a97b163ee0ad4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 13 07:58:31 2019"},"message":"make deleted functions public in include\n\nEffective Modern C++ Items 11:\nPrefer deleted functions to private undefined ones\n\n\nChange-Id: I35c6277fcc77c60fc0a3d904763039c916d62b78\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1608325\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61433}\n","milestone":76},{"_id":"68449685e96d2774c42bed5988a2a002930c9fa2","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Thu May 09 19:20:21 2019"},"commit":"68449685e96d2774c42bed5988a2a002930c9fa2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri May 10 08:30:23 2019"},"message":"[cpu-profiler] Implement StartProfiling call accepting an options object\n\nHelps make configuring profilers more scalable as our number of\nparameters grows.\n\nChange-Id: I81263a30c221edaa3934a92eb000b71ddfbdea60\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1601585\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCommit-Queue: Andrew Comminos <acomminos@fb.com>\nCr-Commit-Position: refs/heads/master@{#61402}\n","milestone":76},{"_id":"e0d7f816990ada28ebe1281ca9431236ef8c6e4f","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Fri May 03 14:16:13 2019"},"commit":"e0d7f816990ada28ebe1281ca9431236ef8c6e4f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 09 10:38:38 2019"},"message":"[api] Remove methods deprecated in 7.5 and earlier\n\nRemoves:\n  * ReturnValue::Set(Persistent)\n  * String::NewFromUtf8/NewFromTwoByte/NewExternal overloads that\n  returned Locals instead of MaybeLocal\n  * String::NewStringType\n\nNow that the old String overloads are gone, the new ones can now have\na default parameter for NewStringType matching the old overloads.\n\nBug: v8:7289, v8:7281, v8:9183\nChange-Id: If66e6d587ac778e015c281b376a9b4d6093f6ec3\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1591605\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61373}\n","milestone":76},{"_id":"89ed6b764afb0878ab0fb0a2f96e90e12220b490","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Wed May 08 19:16:42 2019"},"commit":"89ed6b764afb0878ab0fb0a2f96e90e12220b490","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 08 20:12:02 2019"},"message":"[cpu-profiler] Add parameter to limit profiler samples taken\n\nTo prevent OOMs for leaked CPU profilers, add the option to limit the\nmaximum number of samples that are included in a CPU profile.\n\nBug: chromium:956688\nChange-Id: I119d0622e7d39c187f8e09e2d49dec91fd724ecb\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1588412\nCommit-Queue: Andrew Comminos <acomminos@fb.com>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61352}\n","milestone":76},{"_id":"2f4c928c65f2fa095be1991a58f78d10d55fca10","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Wed Apr 24 10:43:58 2019"},"commit":"2f4c928c65f2fa095be1991a58f78d10d55fca10","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 06 14:23:28 2019"},"message":"[api] Deprecate one {SetFlagsFromString} variant\n\nThis deprecates the variant taking an int argument.\nChromium was switched to the size_t variant in\nhttps://crrev.com/c/1583747 and\nhttps://crrev.com/c/1587597. Pdfium was switched here:\nhttps://pdfium-review.googlesource.com/c/pdfium/+/53996\n\nR=ulan@chromium.org\n\nChange-Id: I0f4e007b2edc7a176bd8865600bfd5e70b838c3d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1581640\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61243}\n","milestone":76},{"_id":"7ebcb5a1531fa64815ed41bc7632585307c842f2","author":{"name":"Simon Zünd","email":"szuend@chromium.org","time":"Fri May 03 08:55:17 2019"},"commit":"7ebcb5a1531fa64815ed41bc7632585307c842f2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 06 09:48:07 2019"},"message":"[stack-trace] Add 'IsUserJavaScript' flag to stack frame API\n\nThis CL extends the stack frame API to include a flag to distinguish\nbetween user and V8 builtin frames. The intention is to extend the API in\na later CL, so stack traces include builtin frames.\nThis flag gives embedders more control what to do with builtin frames.\n\nR=jgruber@chromium.org, yangguo@chromium.org\n\nBug: v8:8742\nChange-Id: Ieda5782dd2073c1e7fd49492bfdfa829a43dc710\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1583723\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCommit-Queue: Simon Zünd <szuend@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61233}\n","milestone":76},{"_id":"9d7c1947f52dcfa6c678f63022c19027bf5536ac","author":{"name":"Johannes Henkel","email":"johannes@chromium.org","time":"Thu May 02 20:50:38 2019"},"commit":"9d7c1947f52dcfa6c678f63022c19027bf5536ac","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri May 03 16:54:51 2019"},"message":"[DevTools] Add V8InspectorSession::state(), which returns binary (CBOR).\n\nKeep the existing method for compatibility, by converting\nto json from CBOR using the inspector_protocol_encoding library,\nvia a v8 specific interface library that directs routines for\nconverting between strings and doubles to v8's implementations.\n\nThis change also brings in the encoding.h / encoding.cc files from the\nupstream inspector_protocol project. The only modification here\nare the header guards, and the namespace. I will fix roll.py to\nmake it so that we pick up future changes.\n\nthird_party/inspector_protocol/BUILD.gn is specific to v8, by necessity.\nthird_party/inspector_protocol/.clang-format is a copy of the upstream\nfile. If we don't put this, we'll find ourselves auto-formatting the roll,\nwhich is annoying.\n\nThis is a reland of\nhttps://chromium-review.googlesource.com/c/v8/v8/+/1590627 with the\nonly modification in the DEPS file; this time I'm including\nthird_party/inspector_protocol/encoding/encoding{.h,cc} in addition to\nthe relative include there. Not sure why this is needed but I'm hoping\nit gets me past the presubmit which may resolve the include path\nrelative to the V8 base (the ../../third_party is needed for when V8 is\nembedded into Chromium).\n\nChange-Id: Ic76b2b5faa7e1cbdceb15aff3f369e9a303e3e85\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1593646\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCommit-Queue: Johannes Henkel <johannes@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61214}\n","milestone":76},{"_id":"8f4063c6ea5597e03a95f42631c33c1618c7cf38","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Tue Apr 30 11:11:39 2019"},"commit":"8f4063c6ea5597e03a95f42631c33c1618c7cf38","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri May 03 14:33:58 2019"},"message":"[tracing] Implement the default TracingController with Perfetto\n\nBased on Primiano's prototype:\nhttps://chromium-review.googlesource.com/c/v8/v8/+/1290549\n\nThis is still behind a build flag. I'll add functionality incrementally\nrather than land everything in one giant CL.\n\nThis CL sets up the basic classes that will be used for the Perfetto\nimplementation, e.g. the producer, consumer, controller and task runner.\n\nThis implementation produces a binary proto file in the current\ndirectory named v8_trace.proto. It doesn't yet produce JSON output,\nthat is coming in a following CL.\n\nCurrently the old tracing and perfetto tracing are both run alongside\neach other if the build flag is enabled.\n\nCq-Include-Trybots: luci.v8.try:v8_linux64_perfetto_dbg_ng\nBug: v8:8339\nChange-Id: I0eb9ecefa191ceead60aadd5b591d75c99395a6e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1408995\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61209}\n","milestone":76},{"_id":"da8feb091111bb4c8fab9e6c5903e5f86594839c","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri May 03 13:39:37 2019"},"commit":"da8feb091111bb4c8fab9e6c5903e5f86594839c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri May 03 14:31:51 2019"},"message":"heap/api: Use regular enum to simplify embedder code\n\nChange-Id: I1b386a11d4a9d1319ac18efd53108aea851f8897\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1594561\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61207}\n","milestone":76},{"_id":"b7134d3af6c12393d317fe2b4fca7a03ec6184f9","author":{"name":"Johannes Henkel","email":"johannes@chromium.org","time":"Thu May 02 00:20:31 2019"},"commit":"b7134d3af6c12393d317fe2b4fca7a03ec6184f9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 02 19:06:48 2019"},"message":"[DevTools] Add V8InspectorSession::state(), which returns binary (CBOR).\n\nKeep the existing method for compatibility, by converting\nto json from CBOR using the inspector_protocol_encoding library,\nvia a v8 specific interface library that directs routines for\nconverting between strings and doubles to v8's implementations.\n\nThis change also brings in the encoding.h / encoding.cc files from the\nupstream inspector_protocol project. The only modification here\nare the header guards, and the namespace. I will fix roll.py to\nmake it so that we pick up future changes.\n\nthird_party/inspector_protocol/BUILD.gn is specific to v8, by necessity.\nthird_party/inspector_protocol/.clang-format is a copy of the upstream\nfile. If we don't put this, we'll find ourselves auto-formatting the roll,\nwhich is annoying.\n\nChange-Id: I20fa8759164e7a39f8a7c30e0d2a3f8a7e4be227\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1590627\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCommit-Queue: Johannes Henkel <johannes@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61187}\n","milestone":76},{"_id":"e0a109c05821fa36ec20e1f25895c23baa8d64c3","author":{"name":"Joyee Cheung","email":"joyee@igalia.com","time":"Thu May 02 13:49:45 2019"},"commit":"e0a109c05821fa36ec20e1f25895c23baa8d64c3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 02 14:43:15 2019"},"message":"[api] Implement StartupData::CanBeRehashed() for the snapshot blob\n\nThis enables the embedder to check if the snapshot generated\nfrom SnapshotCreator::CreateBlob() can be rehashed and the seed\ncan be recomputed during deserialization.\n\nThe lack of this functionality resulted in a temporary vunerability\nin Node.js: https://github.com/nodejs/node/pull/27365\n\nChange-Id: I88d52337217c40f79c26438be3c87d2db874d980\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1578661\nCommit-Queue: Joyee Cheung <joyee@igalia.com>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61175}\n","milestone":76},{"_id":"4349e32d4cd7e9af391987d11b4b555109c14cf1","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Fri Apr 26 16:06:38 2019"},"commit":"4349e32d4cd7e9af391987d11b4b555109c14cf1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 29 20:36:39 2019"},"message":"[ubsan] Fix overflow in AdjustAmountOfExternalAllocatedMemory\n\nSimilar issue as crbug.com/933103, so the fix follows the same\npattern too.\n\nNo regression test, because it will OOM anyway.\n\nBug: chromium:957015\nChange-Id: Ic5b67d84aa1c44609e6c96485974af9ecab2ed0e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1585854\nAuto-Submit: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61101}\n","milestone":76},{"_id":"8e01d664dcbd755689487d9c13450e37d42d193e","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Apr 29 16:01:01 2019"},"commit":"8e01d664dcbd755689487d9c13450e37d42d193e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 29 16:56:09 2019"},"message":"heap/api: EmbedderHeapTracer: Pass along memory reducing mode\n\nChange-Id: I55e8e42b88c8df1f75ff05f22b39d69e9dc586ce\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1588457\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61097}\n","milestone":76},{"_id":"c76f377a990343b18953123c2726337b38c59812","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Fri Apr 26 10:45:52 2019"},"commit":"c76f377a990343b18953123c2726337b38c59812","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 29 09:07:47 2019"},"message":"[api] Remove deprecated conversion functions\n\nRemove Isolate versions of\nValue::ToNumber/ToString/ToObject/ToInteger/ToInt32 and Context versions\nof ToBoolean and BooleanValue (which could never throw anyway).\n\nBug: v8:7279, v8:9183\nChange-Id: Ib144f8894a2b37c44216ba2d0cb298e8f0c72a3e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1585735\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61071}\n","milestone":76},{"_id":"30eb6e7ed9f02481bba5f28e2c3e87f51f6b5194","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Tue Apr 16 14:46:38 2019"},"commit":"30eb6e7ed9f02481bba5f28e2c3e87f51f6b5194","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 29 06:17:42 2019"},"message":"[api] Advance Object::Get/Set to V8_DEPRECATED\n\nBug: v8:7283, v8:9183\nChange-Id: Idf7ddc20d0cb7da69f3458cf96935e426f454f34\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1569440\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nAuto-Submit: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61060}\n","milestone":76},{"_id":"b08412723b360cca9322803d965df36c9e4a6ea3","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Wed Apr 24 20:21:58 2019"},"commit":"b08412723b360cca9322803d965df36c9e4a6ea3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 25 14:29:25 2019"},"message":"[cpu-profiler] Split out debug mode for CPU profiler naming\n\nAdds a new flag to CpuProfiler to control whether or not \"debug\" names\n(potentially inferred from scope) are used for captured frames\nassociated with a SharedFunctionInfo instance.\n\nBug: v8:9135\nChange-Id: Ia1db20e389f3d0beb60eb47798820fb11d501c88\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1583042\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#61015}\n","milestone":76},{"_id":"381a7f9e76d5fd6ee78a45acf146ae5d29117792","author":{"name":"Ross McIlroy","email":"rmcilroy@chromium.org","time":"Wed Apr 24 09:20:56 2019"},"commit":"381a7f9e76d5fd6ee78a45acf146ae5d29117792","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 24 11:33:37 2019"},"message":"[Profiler] Ensure ticks in frameless bytecode handlers are interpreted frames.\n\nOn Arm/64 the last return address is stored in a link register instead of\nbeing pushed to the top-of-stack like on x64/ia32. Extend the support in the\ntick sampler to check for samples in a frameless bytecode handler with support\nfor checking the link register if it exists instead of top-of-stack. In addition,\nmake the x64/ia32 check more robust by ensuring we only apply the change if the\npc is a bytecode handler and the top frame isn't a bytecode handler (stub) frame.\n\nBUG=v8:9162\n\nChange-Id: I89d2e80ea8a0b84ff6a265d0e0e73f9fdd1daca8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1578464\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60976}","milestone":76},{"_id":"5f652b84c0f6049f8c9c4c8630e1f37b1a2b263c","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Tue Apr 23 18:17:01 2019"},"commit":"5f652b84c0f6049f8c9c4c8630e1f37b1a2b263c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 24 10:43:17 2019"},"message":"[flags] Receive length as size_t\n\nThis is one step towards removing the {StrLength} helper and using\n{size_t} consistently instead.\n\nR=mstarzinger@chromium.org\n\nBug: v8:8834\nChange-Id: Ibcdfd579531a259d490c39a8e8c96d469a5a4aac\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1578901\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60974}","milestone":76},{"_id":"fa6ec3cb0836fe0ff8fd692ae2c94cf5de56ea32","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Wed Apr 17 20:08:26 2019"},"commit":"fa6ec3cb0836fe0ff8fd692ae2c94cf5de56ea32","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 24 09:35:32 2019"},"message":"[cpu-profiler] Split out debug mode for CPU profiler naming\n\nAdds a new flag to CpuProfiler to control whether or not \"debug\" names\n(potentially inferred from scope) are used for captured frames\nassociated with a SharedFunctionInfo instance.\n\nBug: v8:9135\nChange-Id: I104f3246431dc6336de4e4688c0d98c86e0bb776\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1566169\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60972}","milestone":76},{"_id":"1ebf5f7281fc91cb4ad2d949e1e677c6eab24894","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Apr 23 12:53:34 2019"},"commit":"1ebf5f7281fc91cb4ad2d949e1e677c6eab24894","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 23 14:08:51 2019"},"message":"[api,heap] Remove deprecated Persistent APIs\n\nRemoves APIs:\n- MarkIndependent\n- IsIndependent\n- MarkActive\n- RegisterExternalReference\n\nAll weak persistent handles are now treated as independent. Users of\ntraced handles should already use v8::EmbedderHeapTracer.\n\nBug: chromium:923361\nChange-Id: Ic90a647fe2ce9db92197ad6560e4907290805592\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1578459\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60953}","milestone":76},{"_id":"0d988491b6ba697d00b3a9f70d4d14f759cf8dba","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Apr 18 08:12:07 2019"},"commit":"0d988491b6ba697d00b3a9f70d4d14f759cf8dba","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 18 08:14:42 2019"},"message":"Update master version to 7.6.\n\nTBR=machenbach@chromium.org\nNOTRY=true\n\nChange-Id: Iecc4c113a175a6acacc8d90b30c341762f9c7cb4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1571612\nReviewed-by: Michael Hablich <hablich@chromium.org>\nCommit-Queue: Michael Hablich <hablich@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60914}","milestone":76},{"_id":"8b3cd48db859788520ea3cfd273252bc9e3b0020","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Thu Mar 14 07:25:55 2019"},"commit":"8b3cd48db859788520ea3cfd273252bc9e3b0020","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 16 12:16:30 2019"},"message":"[cpu-profiler] Add method for controlling sampler busy-waiting\n\nAdds CpuProfiler::SetUsePreciseSampling, which provides a hint whether\nto sacrifice CPU cycles to reduce the level of sampling interval\nvariance. On Windows, this controls whether or not busy waiting is\nperformed for sample rates < 100ms. Defaults to enabled (old behaviour).\n\nBug: v8:3967\nChange-Id: Iee84c3ae8132541c78b1f78bf294ec7c718bb19b\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1510577\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60866}","milestone":75},{"_id":"1ab717db8495b4ad40d2754dd0ba2b339c9c80a4","author":{"name":"tzik","email":"tzik@chromium.org","time":"Mon Apr 15 12:36:09 2019"},"commit":"1ab717db8495b4ad40d2754dd0ba2b339c9c80a4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 16 10:53:20 2019"},"message":"Expose the depth of MicrotasksScope per MicrotaskQueue\n\nBlink used to use v8::MicrotasksScope::GetCurrentDepth() to get the\nnumber of nested MicrotasksScope for the default microtask queue.\nHowever, there was no corresponding one for non-default queues.\n\nChange-Id: I1c2472ba19b1a11cb968f02119d91d92867c6e02\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1567705\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Taiju Tsuiki <tzik@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60862}","milestone":75},{"_id":"1b51dca30d697a448f70fdf3e11c8491b122f4ee","author":{"name":"tzik","email":"tzik@chromium.org","time":"Wed Apr 10 10:51:13 2019"},"commit":"1b51dca30d697a448f70fdf3e11c8491b122f4ee","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 16 04:16:17 2019"},"message":"Add MicrotasksPolicy parameter on MicrotaskQueue constructor\n\nMicrotasksPolicy was a missing functionality of MicrotaskQueue that\nwas available on the per-Isolate MicrotaskQueue.\nThis expose that as a construction time option.\n\nChange-Id: I22bcc8082ca64552d107ee6db138011654047861\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1559677\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Taiju Tsuiki <tzik@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60858}","milestone":75},{"_id":"97562879b1edaf62c085c2ef8ca0d1d2bb8812a1","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Mon Apr 08 22:55:56 2019"},"commit":"97562879b1edaf62c085c2ef8ca0d1d2bb8812a1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 10 22:42:19 2019"},"message":"Fix build error on ARM64/Windows\n\nIn file include/v8config.h we define:\n\nifdef V8_OS_WIN\n...\nif defined(_M_X64) || defined(__x86_64__)\n  define V8_OS_WIN_X64 true\nendif\n\nand V8_OS_WIN_X64 is supposed to be defined when targeting X64 on Windows only.\nBut this is wrong because V8_OS_WIN_X64 gets defined also on an ARM64 builds\nwhen the host machine is X64. It should instead be:\n\nifdef V8_OS_WIN\n...\nif defined(V8_TARGET_ARCH_X64)\n  define V8_OS_WIN_X64 true\nendif\n\nBug: v8:9090\nChange-Id: I88e4c46bb6df1efa2070d4e1785081d71df96f0e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1554222\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#60758}","milestone":75},{"_id":"f7f24659c38d009803e1f9f6ce57dd88d13029dc","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Thu Apr 04 16:09:09 2019"},"commit":"f7f24659c38d009803e1f9f6ce57dd88d13029dc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 08 10:42:51 2019"},"message":"[api] Advance many methods to V8_DEPRECATED\n\nMarks following previously annotated V8_DEPRECATE_SOON methods as\nV8_DEPRECATED:\n  Value::ToBoolean\n  Value::ToNumber\n  Value::ToString\n  Value::ToObject\n  Value::ToInteger\n  Value::ToInt32\n  String::NewFromTwoByte\n  String::NewExternal\n  Date::DateTimeConfigurationChangeNotification\n\nBug: v8:7279, v8:7281\nChange-Id: I54778ac42bd43afd2fa4f08ffc9f55e71fa43775\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1552788\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60678}","milestone":75},{"_id":"b0077b3b50e551a10d8ef4fabfe18f9005494b5a","author":{"name":"Deepti Gandluri","email":"gdeepti@chromium.org","time":"Thu Apr 04 19:36:57 2019"},"commit":"b0077b3b50e551a10d8ef4fabfe18f9005494b5a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 04 21:11:39 2019"},"message":"[wasm] Move is_growable from JSArrayBuffer object to AllocationData\n\nSome state related to WasmMemories is cached on the JSArrayBuffer\nobject (is_growable, is_wasm_memory). The problem with this is in\nsome PostMessage flows, this information can get lost depending on\nhow JSArrayBuffers are deserialized. In this particular case when\nthe WasmMemory is postMessaged, it goes through the Blink\nDedicatedWorkerMessagingProxy::PostMessageToWorkerGlobalScope flow,\nwhich reconstructs the ArrayBuffer from the backing store, and size,\nand loses the is_growable flag, leading to a failure to grow memory.\n\nMoving the is_growable flag so that AllocationData can be the source\nof truth for all wasm memory state, and is consistently preserved\nacross PostMessage.\n\nChange-Id: I775f66ddeff68b8cafc18b75ca5460dfb0343c8b\nBug: v8:9065\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1549789\nCommit-Queue: Deepti Gandluri <gdeepti@chromium.org>\nReviewed-by: Ben Titzer <titzer@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60641}","milestone":75},{"_id":"8bedd291665aa2f385bc3f2299b3a072b39e779c","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Wed Apr 03 00:07:48 2019"},"commit":"8bedd291665aa2f385bc3f2299b3a072b39e779c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 03 10:35:03 2019"},"message":"[cpu-profiler] Add SourceType field to CpuProfileNode\n\nAdds the notion of a \"source type\" to CpuProfileNode instances, hinting\nat the underlying source of the function or state that resulted in the\ngeneration of the node.\n\nBug: v8:9001\nChange-Id: Ie14c54d41b99eb02f54b423fa5d939e9d7f63785\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1510576\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60590}","milestone":75},{"_id":"fe98ad93e98264ca6a2ad3d95e2f531134289ef2","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Mon Mar 25 13:03:16 2019"},"commit":"fe98ad93e98264ca6a2ad3d95e2f531134289ef2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 26 09:19:31 2019"},"message":"Add V8_EXPORT to TickSample\n\nBug: v8:9020\nChange-Id: Ieeec2b237b0531a84ea71dc53d24444c3425dda7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1538130\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60456}","milestone":75},{"_id":"3cda21de77d098a612eadf44d504b188a599c5f0","author":{"name":"Paolo Severini","email":"paolosev@microsoft.com","time":"Thu Mar 14 15:53:02 2019"},"commit":"3cda21de77d098a612eadf44d504b188a599c5f0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 19 14:36:17 2019"},"message":"V8 x64 backend doesn't emit ABI compliant stack frames\n\nOn 64 bit Windows, the OS stack walking does not work because the V8 x64\nbackend doesn't emit unwinding info and also because it doesn't emit ABI\ncompliant stack frames. See\nhttps://docs.google.com/document/d/1-wf50jFlii0c_Pr52lm2ZU-49m220nhYMrHDi3vXnh0/edit\nfor more details.\n\nThis problem can be fixed by observing that V8 frames usually all have the same\nprolog and epilog:\n\npush rbp,\nmov rbp, rsp\n...\npop rbp\nret N\n\nand that it is possible to define XDATA (UNWIND_CODEs) that specify how Windows\nshould walk through V8 frames. Furthermore, since V8 Code objects are all\nallocated in the same code-range for an Isolate, it is possible to register a\nsingle PDATA/XDATA entry to cover stack walking for all the code generated\ninside that code-range.\n\nThis PR contains changes required to enable stack walking on Win64:\n\nEmbeddedFileWriter now adds assembler directives to the builtins\nsnapshot source file (embedded.cc) to emit additional entries in the .pdata and\nin the .xdata section of the V8 executable. This takes care of stack walking\nfor embedded builtins. (The case of non-embedded builtins is not supported).\nThe x64 Assembler has been modified to collect the information required to emit\nthis unwind info for builtins.\n\nStack walking for jitted code is handled is Isolate.cpp, by registering\ndynamically PDATA/XDATA for the whole code-range address space every time a new\nIsolate is initialized, and by unregistering them when the Isolate is\ndestroyed.\n\nStack walking for WASM jitted code is handled is the same way in\nwasm::NativeModule (wasm/wasm-code-manager.cpp).\n\nIt is important to note that Crashpad and Breakpad are already registering\nPDATA/XDATA to manage and report unhandled exceptions (but not for embedded\nbuiltins). Since it is not possible to register multiple PDATA entries for the\nsame address range, a new function is added to the V8 API:\nSetUnhandledExceptionCallback() can be used by an embedder to register its own\nunhandled exception handler for exceptions that arise in v8-generated code.\nV8 embedders should be modified accordingly (code for this is in a separate PR\nin the Chromium repository:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/1474703).\n\nAll these changes are experimental, behind:\n\nthe 'v8_win64_unwinding_info' build flag, and\nthe '--win64-unwinding-info' runtime flag.\n\nBug: v8:3598\nChange-Id: Iea455ab6d0e2bf1c556aa1cf870841d44ab6e4b1\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1469329\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Paolo Severini <paolosev@microsoft.com>\nCr-Commit-Position: refs/heads/master@{#60330}","milestone":75},{"_id":"0188634ee523aef39ba71732b1ab9d422f449825","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Tue Mar 19 10:36:40 2019"},"commit":"0188634ee523aef39ba71732b1ab9d422f449825","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 19 11:34:31 2019"},"message":"[ptr-compr][ubsan] Use [Read/Write]UnalignedValue for unaligned fields\n\nWhen pointer compression is enabled the [u]intptr_t and double fields are\nonly kTaggedSize aligned so in order to avoid undefined behavior in C++ code\nwe have to access these values in an unaligned pointer friendly way although\nboth x64 and arm64 architectures (where pointer compression is supported)\nallow unaligned access.\n\nThese changes will be removed once v8:8875 is fixed and all the\nkSystemPointerSize fields are properly aligned.\n\nBug: v8:7703\nChange-Id: I4df477cbdeab806303bb4f675d52b61c06342c8e\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1528996\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60321}","milestone":75},{"_id":"d6a60a0ee1921213320ecb4555e5d463406a4ab7","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Mon Mar 18 19:33:46 2019"},"commit":"d6a60a0ee1921213320ecb4555e5d463406a4ab7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 19 10:43:00 2019"},"message":"[turbofan] Significantly improve ConsString creation performance.\n\nThis change significantly improves the performance of string\nconcatenation in optimized code for the case where the resulting string\nis represented as a ConsString. On the relevant test cases we go from\n\n  serializeNaive: 10762 ms.\n  serializeClever: 7813 ms.\n  serializeConcat: 10271 ms.\n\nto\n\n  serializeNaive: 10278 ms.\n  serializeClever: 5533 ms.\n  serializeConcat: 10310 ms.\n\nwhich represents a 30% improvement on the \"clever\" benchmark, which\ntests specifically the ConsString creation performance.\n\nThis was accomplished via a couple of different steps, which are briefly\noutlined here:\n\n  1. The empty_string gets its own map, so that we can easily recognize\n     and handle it appropriately in the TurboFan type system. This\n     allows us to express (and assert) that the inputs to NewConsString\n     are non-empty strings, making sure that TurboFan no longer creates\n     \"crippled ConsStrings\" with empty left or right hand sides.\n  2. Further split the existing String types in TurboFan to be able to\n     distinguish between OneByte and TwoByte strings on the type system\n     level. This allows us to avoid having to dynamically lookup the\n     resulting ConsString map in case of ConsString creation (i.e. when\n     we know that both input strings are OneByte strings or at least\n     one of the input strings is TwoByte).\n  3. We also introduced more finegrained feedback for the Add bytecode\n     in the interpreter, having it collect feedback about ConsStrings,\n     specifically ConsOneByteString and ConsTwoByteString. This feedback\n     can be used by TurboFan to only inline the relevant code for what\n     was seen so far. This allows us to remove the Octane/Splay specific\n     magic in JSTypedLowering to detect ConsString creation, and instead\n     purely rely on the feedback of what was seen so far (also making it\n     possible to change the semantics of NewConsString to be a low-level\n     operator, which is only introduced in SimplifiedLowering by looking\n     at the input types of StringConcat).\n  4. On top of the before mentioned type and interpreter changes we added\n     new operators CheckNonEmptyString, CheckNonEmptyOneByteString, and\n     CheckNonEmptyTwoByteString, which perform the appropriate (dynamic)\n     checks.\n\nThere are several more improvements that are possible based on this, but\nsince the change was already quite big, we decided not to put everything\ninto the first change, but do some follow up tweaks to the type system,\nand builtin optimizations later.\n\nTbr: mstarzinger@chromium.org\nBug: v8:8834, v8:8931, v8:8939, v8:8951\nChange-Id: Ia24e17c6048bf2b04df966d3cd441f0edda05c93\nCq-Include-Trybots: luci.chromium.try:linux-blink-rel\nDoc: https://bit.ly/fast-string-concatenation-in-javascript\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1499497\nCommit-Queue: Michael Achenbach <machenbach@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nReviewed-by: Mythri Alle <mythria@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60318}","milestone":75},{"_id":"efa249a898c49d512349f439d396175eb24b3c6b","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Fri Mar 15 19:42:03 2019"},"commit":"efa249a898c49d512349f439d396175eb24b3c6b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Mar 18 18:23:08 2019"},"message":"[cpu-profiler] Expose parent pointer in a CpuProfileNode\n\nConsumers can use this to derive the full stack from sampled leaf nodes\nwithout having to flatten the tree.\n\nBug: v8:8999\nChange-Id: I42c638dd2c757837b0c03514c204be0182653291\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1525877\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60309}","milestone":75},{"_id":"c8785d1572b8b7d7dc4df3578e249312a30be4b9","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Mar 18 10:31:55 2019"},"commit":"c8785d1572b8b7d7dc4df3578e249312a30be4b9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Mar 18 16:09:18 2019"},"message":"[heap, api] Advance deprecations around global handles\n\nBug: chromium:923361, v8:8834\nChange-Id: I46b6ad9eaa86476963a4e2cb3a5712447f180c20\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1528235\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60303}","milestone":75},{"_id":"f4b860d9b81956fb9d6815932522f4043fef56fa","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Mar 18 10:29:07 2019"},"commit":"f4b860d9b81956fb9d6815932522f4043fef56fa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Mar 18 12:51:22 2019"},"message":"[heap,api] Remove deprecated APIs\n\nBug: chromium:923361, v8:8834\nChange-Id: I6ec42aeb74bea5c0629fcdc3f95c125f5de534a0\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1526195\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nAuto-Submit: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60289}","milestone":75},{"_id":"d82c9afb8c79255efd8ef65257b14bcf9c64a9c2","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Wed Mar 13 15:22:09 2019"},"commit":"d82c9afb8c79255efd8ef65257b14bcf9c64a9c2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 14 09:42:26 2019"},"message":"[api] Add unique_ptr constructor for StreamedSource\n\nSince StreamedSource takes ownership of the ExternalSourceStream\npassed into it, it should take it by unique_ptr rather than raw\npointer to signal this transfer of ownership. The old constructor\nis now deprecated.\n\nChange-Id: I24681926c2f3141f7dd3664f72019a4c6deabfd7\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1520713\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nAuto-Submit: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60232}","milestone":75},{"_id":"de7ab39a018ea107b2bf3d1b111ec4d1f907ff06","author":{"name":"Andrew Comminos","email":"acomminos@fb.com","time":"Thu Mar 07 18:54:37 2019"},"commit":"de7ab39a018ea107b2bf3d1b111ec4d1f907ff06","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 13 08:16:43 2019"},"message":"[cpu-profiler] Expose whether or not a script is shared cross origin in a CpuProfileNode\n\nEnable cross-origin frame filtering by exposing this bit from\nScriptOriginOptions.\n\nBug: v8:8956\nChange-Id: I109eec9db8b3d42d68d32abc5edd437b1c91a9b8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1493294\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60205}","milestone":75},{"_id":"d5f08e4e4fa5beedda1e22c2e16d8da99540574e","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Mon Mar 11 09:22:46 2019"},"commit":"d5f08e4e4fa5beedda1e22c2e16d8da99540574e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 12 13:09:51 2019"},"message":"[api] Remove unowned Extensions interface\n\nExtensions are now always passed via unique_ptr and are owned by V8.\nThis CL removes the deprecated API where the embedder would own the\nExtension, but has no mechanism for deleting it.\n\nR=ulan@chromium.org\n\nBug: v8:8725\nChange-Id: Icb83660fad9d04c66f8db2265091ebabcbb197c4\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1514493\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60186}","milestone":75},{"_id":"6b09d21c8c13051d62ad146099da868fc0c41898","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Mon Mar 11 08:00:13 2019"},"commit":"6b09d21c8c13051d62ad146099da868fc0c41898","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 12 11:50:05 2019"},"message":"[api] Remove deprecated WasmCompiledModule\n\nEmbedders should use WasmModuleObject instead.\n\nR=adamk@chromium.org\n\nChange-Id: Ibe5e4b160bb917bcd9f895be1b954acc40a045d8\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1513616\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60184}","milestone":75},{"_id":"f0bb5d2fcf52cdc4147b0f17ab19f3d10d585f14","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Fri Mar 08 17:01:21 2019"},"commit":"f0bb5d2fcf52cdc4147b0f17ab19f3d10d585f14","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Sat Mar 09 08:38:05 2019"},"message":"[api] remove LegacyBuildEmbedderGraphCallback\n\nThis should not be used anymore (and it definitely is not by Node.js\nor Chromium).\n\nChange-Id: I4a1ce1fda98efd197a64ce0969dae5c8b18f6e97\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1511484\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60139}","milestone":75},{"_id":"803fdb8f2026967d7eacb4fa0c562c4e48ab0eed","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Tue Mar 05 15:34:41 2019"},"commit":"803fdb8f2026967d7eacb4fa0c562c4e48ab0eed","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 07 12:13:30 2019"},"message":"[docs] Change links from old wiki to v8.dev\n\nUpdates a bunch of links from https://github.com/v8/v8/wiki pages to the\nappropriate v8.dev page that it redirected to anyway.\n\nBug: v8:8834\nChange-Id: I5b37996900eb779753d97e487d16e1489f54d391\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1503473\nAuto-Submit: Dan Elphick <delphick@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60086}","milestone":75},{"_id":"5b0510db7c9f6f9f43f322d32fe33a19e3935f89","author":{"name":"tzik","email":"tzik@chromium.org","time":"Wed Mar 06 06:09:04 2019"},"commit":"5b0510db7c9f6f9f43f322d32fe33a19e3935f89","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 07 04:40:37 2019"},"message":"Give the implementation of v8::MicrotaskQueue::New\n\nThis adds the entrypoint to MicrotaskQueue, which used to miss the\nimplementation.\n\nBug: v8:8124\nChange-Id: I114fb69d975ee75c86b19349ca76789e425ea910\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1505232\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Taiju Tsuiki <tzik@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60076}","milestone":75},{"_id":"91f0cd00820a6e8d4567c1ce3a51d48a28165ab5","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Wed Mar 06 01:52:26 2019"},"commit":"91f0cd00820a6e8d4567c1ce3a51d48a28165ab5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 07 00:09:20 2019"},"message":"[ubsan] Fix various ClusterFuzz-found issues\n\nFixing a few float and int overflows.\nDrive-by fix: with --experimental-wasm-bigint, Number values\nmay not be used to initialize i64-typed globals. The existing\ncode for doing that relied on UB; since it's a spec violation\nthe fix is to throw instead.\n\nNo regression test for 933103 because it will OOM anyway.\nNo regression test for 932896 because it would be extremely slow.\n\nBug: chromium:927894, chromium:927996, chromium:930086, chromium:932679, chromium:932896, chromium:933103, chromium:933134\nChange-Id: Iae1c1ff1038af4512a52d3e56b8c4b75f2233314\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1495911\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60075}","milestone":75},{"_id":"392316ddd11104ad759131732dfe0805f3972ab2","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed Mar 06 10:24:13 2019"},"commit":"392316ddd11104ad759131732dfe0805f3972ab2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 06 12:27:39 2019"},"message":"[ptr-compr][x64] Define kTaggedSize as kInt32Size\n\n... when pointer compression is enabled and some number of cleanups.\n\nBug: v8:7703\nChange-Id: If7344abf68a1c4d54e4a79d066dc185f25055d7d\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1477737\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nAuto-Submit: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60056}","milestone":75},{"_id":"2f79d68664ba113b69f62c29ce85fd29dcf87df3","author":{"name":"tzik","email":"tzik@chromium.org","time":"Thu Feb 28 06:56:30 2019"},"commit":"2f79d68664ba113b69f62c29ce85fd29dcf87df3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 06 08:08:09 2019"},"message":"Deprecate MicrotasksCompletedCallback in favor to use *WithData version\n\nThis adds overloads of v8::Isolate::{Add,Remove}MicrotaskCompletedCallback,\nthat use MicrotasksCompletedCallbackWithData, and marks the original one\nas V8_DEPRECATE_SOON for transition.\n\nBug: v8:8124\nChange-Id: I124c3108545e1a2b29cd95620f36901431663c65\nReviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1493766\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Taiju Tsuiki <tzik@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60045}","milestone":75},{"_id":"1744803073948ab7e4ec00e34c62dee779fe7564","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Fri Mar 01 15:34:48 2019"},"commit":"1744803073948ab7e4ec00e34c62dee779fe7564","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Mar 04 15:40:02 2019"},"message":"[ptr-compr] Prepare for changing kTaggedSize, pt.3\n\nThis CL also gives up trying to maintain double and system word\nfields at aligned addresses because currently it's not always\nmaintained (v8:8875) and Torque object definitions do not support\npadding fields (v8:8863).\n\nGiven that both platforms where pointer compression is going to be\nenabled (x64 and arm64) support loading of doubles and full words\nfrom 4-byte aligned addresses we are fine.\n\nBug: v8:7703\nChange-Id: I99fc6da5a0927f4db9b8fb24c7cc0bfc416523bc\nReviewed-on: https://chromium-review.googlesource.com/c/1496974\nAuto-Submit: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60013}","milestone":74},{"_id":"980e0d32d020fdf02a6b1aca64038b13f39046e8","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Fri Mar 01 11:14:25 2019"},"commit":"980e0d32d020fdf02a6b1aca64038b13f39046e8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Mar 04 12:56:51 2019"},"message":"[api] Add new configuration change methods\n\nThis adds a new method Isolate::LocaleConfigurationChangeNotification\nthat clears the cached Locale allowing new Locales to be picked up in\nlater Locale operations.\n\nIt moves Date::DateTimeConfigurationChangeNotification to Isolate\n(deprecating the old one) so that the configuration change methods are\nfound together.\n\nChange-Id: Iffc15e326933c5bc5baf2f0eafdd5c148b8279a8\nReviewed-on: https://chromium-review.googlesource.com/c/1491608\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#60003}","milestone":74},{"_id":"3f8b03164775bc1c966a06d0ecdf3e8afdedb9d8","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Fri Mar 01 08:26:26 2019"},"commit":"3f8b03164775bc1c966a06d0ecdf3e8afdedb9d8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Mar 01 09:25:48 2019"},"message":"[zone] Remove segment pooling from accounting allocator\n\nThis pooling introduces severe lock contention for Liftoff compilation,\nsince each compilation uses its own Zone which does at least one\nsegment allocation.\nIt's also unclear whether pooling improves performance, since {malloc}\nshould implement a similar pooling mechanism, but better optimized for\nmultithreaded uses.\n\nFeel free to revert if this introduces significant regressions.\n\nR=verwaest@chromium.org\n\nBug: v8:8916\nCq-Include-Trybots: luci.v8.try:v8_linux64_tsan_rel\nChange-Id: Iaf988bed898e35700f5f7f3310df8e01918de4c9\nReviewed-on: https://chromium-review.googlesource.com/c/1491632\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59959}","milestone":74},{"_id":"cce33f37528253b47e0e0de34073b096c8d62ac1","author":{"name":"tzik","email":"tzik@chromium.org","time":"Thu Feb 28 06:54:55 2019"},"commit":"cce33f37528253b47e0e0de34073b096c8d62ac1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 28 09:02:26 2019"},"message":"Expose MicrotaskQueue as a V8 API\n\nThis introduces v8::MicrotaskQueue backed by v8::internal::MicrotaskQueue.\n\nThe embedder will get an option to use non-default MicrotaskQueue by creating\nthe instance by v8::MicrotaskQueue::New(). The instance can be attached to\na Context by passing it to Context::New().\n\nBug: v8:8124\nChange-Id: Iee0711785d5748860eb94e30a8d83199a743ffaa\nReviewed-on: https://chromium-review.googlesource.com/c/1414950\nCommit-Queue: Taiju Tsuiki <tzik@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59933}","milestone":74},{"_id":"7b6a7379b612c1c2bd553682c2c1c5d825eecc1e","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Feb 25 15:30:54 2019"},"commit":"7b6a7379b612c1c2bd553682c2c1c5d825eecc1e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 25 16:43:33 2019"},"message":"PersistentValueMapBase: Deprecate outdated marking API\n\nEmbedders should use EmbedderHeapTracer::RegisterEmbedderReference\ninstead.\n\nBug: chromium:923361\nChange-Id: If76c0354475798b09af95bedee0890594b29cd14\nReviewed-on: https://chromium-review.googlesource.com/c/1486472\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59840}","milestone":74},{"_id":"51e80efd1292053afeffe7f8dd7af554171a2990","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Wed Feb 20 09:02:06 2019"},"commit":"51e80efd1292053afeffe7f8dd7af554171a2990","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 21 08:34:16 2019"},"message":"[tracing] Fix races in TracingController implementation\n\nThe default TracingController (used by d8 and Node) has some concurrency\nissues. The new test flushes these out, when a second thread logs trace\nevents while the main thread calls StopTracing().\n\n- Use an acquire load in UpdateCategoryGroupEnabledFlags() because this\n  was racing with GetCategoryGroupEnabled() where a new category is\n  added in the slow path. g_category_groups is append-only, but\n  reads/writes to g_category_index need to be correctly ordered so that\n  new categories are added and only then is the change to the index\n  visible. The relaxed load ignored this and caused unsynchronized\n  read/write.\n- Use a relaxed load in ~ScopedTracer() to access category_group_enabled\n  as this previously used a non-atomic operation which caused a race\n  with UpdateCategoryGroupEnabledFlag() which does a relaxed store.\n- Replace TracingController::mode_ with an atomic bool as read/writes to\n  mode_ were not synchronized and caused TSAN errors. It only has two\n  states and it doesn't seem like we will extend this so just convert it\n  to bool.\n- Take the lock around calling trace_object->Initialize in\n  AddTraceEvent(), and around trace_buffer_->Flush() in StopTracing().\n  These two raced previously as the underlying TraceBufferRingBuffer\n  passes out pointers to TraceObjects in a synchronized way, but the\n  caller (AddTraceEvent) then writes into the object without\n  synchronization. This leads to races when Flush() is called, at which\n  time TraceBufferRingBuffer assumes that all the pointers it handed out\n  are to valid, initialized TraceObjects - which is not true because\n  AddTraceEvent may still be calling Initialize on them. This could be\n  the cause of issues in Node.js where the last line of tracing/logging\n  sometimes gets cut off. This is kind of a band-aid solution - access\n  to the TraceObjects handed out by the ring buffer really needs proper\n  synchronization which at this point would require redesign. It's quite\n  likely we will replace this with Perfetto in the near future so not\n  much point investing in this code right now.\n- Enable TracingCpuProfiler test which was flaky due to these bugs.\n\nBug: v8:8821\nChange-Id: I141296800c6906ac0e7f3f21dd16d861b07dae62\nReviewed-on: https://chromium-review.googlesource.com/c/1477283\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ali Ijaz Sheikh <ofrobots@google.com>\nCr-Commit-Position: refs/heads/master@{#59752}","milestone":74},{"_id":"4868ee165a2e560c19cb925f7cf17b2b14795e6d","author":{"name":"Frank Tang","email":"ftang@chromium.org","time":"Thu Feb 14 21:29:11 2019"},"commit":"4868ee165a2e560c19cb925f7cf17b2b14795e6d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 20 03:41:27 2019"},"message":"[Intl] Track Usage for String.prototype.normalize\n\nBug: v8:8844\nChange-Id: Id0e52a3367d641205e2f1c67d610254708fd4494\nReviewed-on: https://chromium-review.googlesource.com/c/1470813\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Frank Tang <ftang@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59714}","milestone":74},{"_id":"d3308d042c9637958491333831c33335ab9fc734","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Sun Feb 10 17:23:21 2019"},"commit":"d3308d042c9637958491333831c33335ab9fc734","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 19 16:02:42 2019"},"message":"[api] Add `Isolate::GetArrayBufferAllocator()`\n\nThis allows non-monolithic embedders to always allocate memory\nfor ArrayBuffer instances using the right allocation method.\n\nThis is based on a patch that Electron is currently using.\n\nRefs: https://github.com/electron/electron/blob/1898f9162073910c05958295c612deec6121a892/patches/common/v8/array_buffer.patch\nChange-Id: I39a614343118a0594aab48699a99cc2aad5b7ba9\nReviewed-on: https://chromium-review.googlesource.com/c/1462003\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59697}","milestone":74},{"_id":"d342122f265e60e15a8e10774abdd1a526ae7685","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Tue Feb 19 13:01:02 2019"},"commit":"d342122f265e60e15a8e10774abdd1a526ae7685","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 19 14:15:06 2019"},"message":"[heap] Use non-nestable delayed tasks in incremental marking job\n\nBug: chromium:926189\nChange-Id: Ibd90f3cfdb37f07f3668f9ad79cff6e4305dc874\nReviewed-on: https://chromium-review.googlesource.com/c/1477674\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59688}","milestone":74},{"_id":"2f8a5f595f6bf3dd3c3d1974b1ce0019cffa0dda","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Fri Feb 15 11:55:53 2019"},"commit":"2f8a5f595f6bf3dd3c3d1974b1ce0019cffa0dda","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 15 13:08:56 2019"},"message":"[api] Add enum type to RAILMode to allow forward-declaration of enum\n\nThis allows removing some v8.h includes in blink, and replacing them by\nforward declarations.\n\nChange-Id: I3f55669f551e29038918f54a26a0ab032ffb252a\nBug: v8:8788\nReviewed-on: https://chromium-review.googlesource.com/c/1475394\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59630}","milestone":74},{"_id":"f781f522af39fa5d5c84b111e392fe67a9a18296","author":{"name":"Hannu Trey","email":"hannu.trey@gmail.com","time":"Wed Feb 13 23:27:41 2019"},"commit":"f781f522af39fa5d5c84b111e392fe67a9a18296","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 14 23:40:23 2019"},"message":"Re-detect the host time zone if requested by an embedder\n\nAdd an enum argument to DateTimeConfigurationChangeNotification to\ncontrol whether or not to redetect the host time zone. The default value\nkSkip doesn't cause redetecting so that callers do not need to change if\nthey want the current behavior (e.g. Chromium).\n\nNote that the host time zone detection does not work when v8 is run\ninside a sandbox as in Chromium so that Chromium detects the host time\nzone outside the sandbox before calling\nDateTimeConfigurationChangeNotification. OTOH, other v8 embedders may\nfind it more convenient for v8 to do the host time zone detection on\ntheir behalf. In that case, they can call the function with the new\nargument set to value kRedetect.\n\nTest:\nWith PHP+V8Js on linux, execute:\nphp -r '\n  putenv(\"TZ=Europe/Helsinki\");\n  $v8 = new V8Js();\n  $v8->executeString(\"print((new Date(0)).toString()+\\\"\\\\n\\\");\");\n  putenv(\"TZ=America/New_York\");\n  $v8->executeString(\"print((new Date(0)).toString()+\\\"\\\\n\\\");\");'\n\nResult before modification:\nThu Jan 01 1970 02:00:00 GMT+0200 (Eastern European Standard Time)\nThu Jan 01 1970 02:00:00 GMT+0200 (Eastern European Standard Time)\n\nResult after modification:\nThu Jan 01 1970 02:00:00 GMT+0200 (Eastern European Standard Time)\nThu Jan 01 1970 02:00:00 GMT+0200 (Eastern European Standard Time)\n\nResult after V8JS is modified to use value kRedetect when calling\n\nThu Jan 01 1970 02:00:00 GMT+0200 (Eastern European Standard Time)\nWed Dec 31 1969 19:00:00 GMT-0500 (Eastern Standard Time)\n\nDateTimeConfigurationChangeNotification: \nChange-Id: I005192dd42669a94f606a49baa9eafad3475b9fd\nReviewed-on: https://chromium-review.googlesource.com/c/1449637\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jungshik Shin <jshin@chromium.org>\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59613}","milestone":74},{"_id":"4325ebb29d862f5c7597015a2768271ae7b4255a","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Sat Feb 09 22:08:21 2019"},"commit":"4325ebb29d862f5c7597015a2768271ae7b4255a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 13 17:40:18 2019"},"message":"[api] Remove warning about ValueSerializer\n\nThis API has existed for two and a half years now, with no\nAPI changes over the last year, and is widely used in production,\ncode so it makes sense to consider it stable.\n\nChange-Id: I10e38c37fb8c13e22124ef0985f4b0bd8d4615fd\nReviewed-on: https://chromium-review.googlesource.com/c/1461999\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59576}","milestone":74},{"_id":"df95cff9959a732894429672fc503d6a849182a8","author":{"name":"tzik","email":"tzik@chromium.org","time":"Fri Feb 01 04:06:24 2019"},"commit":"df95cff9959a732894429672fc503d6a849182a8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 12 06:06:15 2019"},"message":"Move MicrotasksPolicy management to MicrotaskQueue\n\nThis CL moves MicrotasksPolicy from Isolate's HandleScopeImplementer\nto MicrotaskQueue for better non-default MicrotaskQueue support.\n\nAfter this:\n * MicrotaskPolicy is per-MicrotaskQueue rather than single global one.\n * ENTER_V8 runs MicrotaskQueue associated to the current Context, rather\n   than the default_microtask_queue().\n * SuppressMicrotaskExecutionScope and MicrotasksScope are ready to\n   take MicrotaskQueue parameter, rather than using the default one.\n\nNote that there's no way to use a non-default microtask queue until we\nexpose it as a V8 API.\n\nBug: v8:8124\nChange-Id: I79cbc53d26d9f3f4cfb7c64d303b12e395b76815\nReviewed-on: https://chromium-review.googlesource.com/c/1429720\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Taiju Tsuiki <tzik@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59517}","milestone":74},{"_id":"cbd8f4269f91e8ade38876092b433bda9ddb89a9","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Mon Feb 11 10:05:21 2019"},"commit":"cbd8f4269f91e8ade38876092b433bda9ddb89a9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 11 16:55:11 2019"},"message":"[api] Remove several deprecated methods\n\nRemoves deprecated platform::CreateDefaultPlatform,\nObject::GetPropertNames/GetOwnPropertyNames/HasRealNamedProperty/\nHasRealIndexedProperty/HasRealNamedCallbackProperty,\nFunction::New/Call and Isolate::SetWasmCompileStreamingCallback.\n\nChange-Id: I00c73576bbfbdc6bbe72bad9ac9d7a338a5bf068\nReviewed-on: https://chromium-review.googlesource.com/c/1460952\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59510}","milestone":74},{"_id":"b9af6ad89df746aa8a7c6c9ced11a47679d8a4bc","author":{"name":"Toon Verwaest","email":"verwaest@chromium.org","time":"Fri Feb 08 10:46:49 2019"},"commit":"b9af6ad89df746aa8a7c6c9ced11a47679d8a4bc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 08 14:49:30 2019"},"message":"[api] Mark SetHiddenPrototype as DEPRECATED\n\nChange-Id: Iad53e1a3b6ef0148dc5aa9c5c04c25c446dcdfa2\nReviewed-on: https://chromium-review.googlesource.com/c/1460468\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59464}","milestone":74},{"_id":"9b2bcf57babfbec050b4678de29ebbfe2cfc0df7","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Wed Feb 06 14:40:15 2019"},"commit":"9b2bcf57babfbec050b4678de29ebbfe2cfc0df7","committer":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Fri Feb 08 12:49:19 2019"},"message":"Expose protected v8::Platform::SystemClockTimeMillis\n\nThis allows the embedder to use a shared library build\neven if they use this method.\n\nR=ulan@chromium.org\n\nChange-Id: I613a6e5eb82b494128fb95dc89a0b73639ac5ca2\nReviewed-on: https://chromium-review.googlesource.com/c/1456042\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59455}","milestone":74},{"_id":"c6d21691838833ed5b8ca4ac9f370850ad13999c","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Thu Feb 07 14:04:14 2019"},"commit":"c6d21691838833ed5b8ca4ac9f370850ad13999c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 08 11:33:07 2019"},"message":"[api] Advance deprecation for Value::BooleanValue\n\nMark Context version of BooleanValue as V8_DEPRECATED.\n\nBug: v8:7279, v8:8562\nChange-Id: I152f5080d92a940dadea9e8f2ed3f25338e6f099\nReviewed-on: https://chromium-review.googlesource.com/c/1458245\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59452}","milestone":74},{"_id":"c4411b0be8d81af1bbbe4f9c546cdbc0a521ccfa","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Tue Feb 05 13:11:44 2019"},"commit":"c4411b0be8d81af1bbbe4f9c546cdbc0a521ccfa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 08 10:55:17 2019"},"message":"[api] Deprecate legacy RegisterExtension method\n\nThe new API receives a unique_ptr to avoid leaking the Extension object.\nAll chromium uses were refactored in https://crrev.com/c/1447652.\n\nR=adamk@chromium.org\n\nBug: v8:8725\nCq-Include-Trybots: luci.chromium.try:linux-blink-rel\nChange-Id: I46a931a73e941fe7b78f5390fec74663677e13e4\nReviewed-on: https://chromium-review.googlesource.com/c/1454723\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59451}","milestone":74},{"_id":"648ba1f7dd7a41151983ec93220803ffd84685aa","author":{"name":"Mythri","email":"mythria@chromium.org","time":"Thu Feb 07 13:19:57 2019"},"commit":"648ba1f7dd7a41151983ec93220803ffd84685aa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 08 10:24:27 2019"},"message":"Defer inferring language mode for PropertyCallbackInfo\n\nThis cl: https://chromium-review.googlesource.com/c/v8/v8/+/1421077\nchanged the implementation of SetProperty to infer the language mode.\nLanguage mode is only required when there is an error to decide if we\nhave to throw an error or not. However we used to compute language mode\neagerly for PropertyCallbackInfo. This causes regressions in some\nbenchmarks. This cl changes it by deferring it further by computing\nit only when it is actually required.\n\nBUG: v8:8580, chromium:925289\nChange-Id: Iba70ec5f9bb3deec16414a1ec418b3963f2144f9\nReviewed-on: https://chromium-review.googlesource.com/c/1454608\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Mythri Alle <mythria@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59450}","milestone":74},{"_id":"edef7f1341be3c62d29a4ca8de97bd9e29f9cb57","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Feb 04 19:26:44 2019"},"commit":"edef7f1341be3c62d29a4ca8de97bd9e29f9cb57","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 05 21:46:07 2019"},"message":"[api,global-handle] Introduce TracedGlobal::SetFinalizationCallback\n\nIntroduce a way to set a custom finalization callback that can be used\nto signal and set up destruction of embedder memory.\n\nBug: chromium:923361\nChange-Id: Ifc62ebd534aba3b02511c74b59161ec3edc0ee0d\nReviewed-on: https://chromium-review.googlesource.com/c/1452447\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59381}","milestone":74},{"_id":"96315d1622d0c5e2b5e9773936373b90eaf14124","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Jan 30 10:38:18 2019"},"commit":"96315d1622d0c5e2b5e9773936373b90eaf14124","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 01 14:51:34 2019"},"message":"[api] Mark old method for tracing as soon deprecated\n\nUsers should switch to TracedGlobal and the newly added methods of\nv8::EmbedderHeapTracer.\n\nBug: chromium:923361, v8:8562\nChange-Id: I3e5ed5785a0a49c0b65c7b1d1d103e568dd3e938\nReviewed-on: https://chromium-review.googlesource.com/c/1445752\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59297}","milestone":74},{"_id":"7539549e28d79b83c43771dce0024c7d9fc58b3e","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Thu Jan 31 11:36:20 2019"},"commit":"7539549e28d79b83c43771dce0024c7d9fc58b3e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 01 07:15:18 2019"},"message":"[api] Accept Extensions via unique_ptr\n\nThis way we can remove them correctly and avoid leaks.\n\nR=mstarzinger@chromium.org, ulan@chromium.org\n\nBug: v8:8725\nChange-Id: I52cbbf34a94171aaeb581b55aecb25311465544d\nReviewed-on: https://chromium-review.googlesource.com/c/1446453\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59266}","milestone":74},{"_id":"06193b0b796124eb53bd8779965db61b4f82c770","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Jan 29 19:23:02 2019"},"commit":"06193b0b796124eb53bd8779965db61b4f82c770","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 30 10:13:24 2019"},"message":"[api] Move forward deprecations around Persistent handles\n\nIn future, weak handles will be considered as independent and MarkActive() will\nnot be supported anymore. Users should switch to TracedGlobal, when relying on\nspecial cases for using handles with v8::EmbedderHeapTracer.\n\nBug: chromium:923361, v8:8562\nChange-Id: Ic6e01a1ab59a25c5fb0aa2ebfb8ddb02e454d72d\nReviewed-on: https://chromium-review.googlesource.com/c/1443064\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59194}","milestone":74},{"_id":"4089299494353c5f81af53e3f3b33d3857ccc49a","author":{"name":"Deepti Gandluri","email":"gdeepti@chromium.org","time":"Tue Jan 29 19:06:38 2019"},"commit":"4089299494353c5f81af53e3f3b33d3857ccc49a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 29 20:47:30 2019"},"message":"Add a contents based constructor to the SharedArrayBuffer API\n\nThe motivation of this change was originally to preserve is_growable\nflag over PostMessage in d8. Adding a more general constructor that\nuses SharedArrayBuffer::Contents.\n\nChange-Id: Ib8f6c36d659e91f6cfb6487f56de34fa7e8841a9\nBug: v8:8564\nReviewed-on: https://chromium-review.googlesource.com/c/1383093\nCommit-Queue: Deepti Gandluri <gdeepti@chromium.org>\nReviewed-by: Ben Smith <binji@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59184}","milestone":74},{"_id":"76c93685935b0520cc0059862017d413ac30f4d7","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Jan 29 19:12:21 2019"},"commit":"76c93685935b0520cc0059862017d413ac30f4d7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 29 20:15:39 2019"},"message":"[api, global-handles] Add TracedGlobal\n\nTracedGlobal integrates with the use case of EmbedderHeapTracer and replaces\nregular weak Global or Persistent nodes for such cases. This allows to simplify\nthe case for regular weak handles in a sense that they follow regular weak\nsemantics (if the underlying object is otherwise unreachable the weak handle\nwill be reset).\n\nTracedGlobal requires slightly different semantics in the sense that it can be\nrequired to keep them alive on Scavenge garbage collections because there's a\ntransitive path that is only known when using the EmbedderHeapTracer.\nTracedGlobal accomodates that use case.\n\nTracedGlobal follows move semantics and can thus be used in regular std\ncontainers without wrapping data structure.\n\nThe internal state uses 20% less memory and allows for only iterating those\nnodes when necessary. The design trades the virtual call when iterating\ninteresting persistents in the GC prologue with calling out through the\nEmbedderHeapTracer for each node which is also a virtual call. There is one less\niteration over the set of handles required though and the design is robust\nagainst recursive GCs that mutate the embedder state during the prologue\ncallback.\n\nBug: chromium:923361\nChange-Id: Idbacfbe4723cd12af9de21058a4792e51dc4df74\nReviewed-on: https://chromium-review.googlesource.com/c/1425523\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59183}","milestone":74},{"_id":"5b1c8b6b6374954172a3394ed0b3c2ea6f408deb","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Mon Jan 28 10:23:48 2019"},"commit":"5b1c8b6b6374954172a3394ed0b3c2ea6f408deb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 28 13:14:38 2019"},"message":"[api][wasm] Remove deprecated objects and methods\n\nThe API for serialized modules changed a bit in version 7.3. The old\nAPI is deprecated, hence remove it in 7.4.\n\nR=mstarzinger@chromium.org, ulan@chromium.org\n\nBug: chromium:912031\n\nChange-Id: Ib1a55dc88db9e98aef03006caf8cdc1be4f85b9f\nReviewed-on: https://chromium-review.googlesource.com/c/1436020\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59122}","milestone":74},{"_id":"7613345248f98db31b48111cbbee90b4cbd4c4e1","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Mon Jan 28 10:18:53 2019"},"commit":"7613345248f98db31b48111cbbee90b4cbd4c4e1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 28 11:50:22 2019"},"message":"[api] Remove deprecated PropertyDescriptor constructor\n\nThe implicit constructor is deprecated since version 7.3, hence can be\nremoved in 7.4.\n\nR=ulan@chromium.org\n\nChange-Id: I54a530240648c1721924195d7fccc157d483e6d8\nReviewed-on: https://chromium-review.googlesource.com/c/1436018\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59116}","milestone":74},{"_id":"2452e59835f205fded26955430529d42935479c6","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Jan 25 08:04:29 2019"},"commit":"2452e59835f205fded26955430529d42935479c6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 25 09:08:41 2019"},"message":"[api] Remove deprecated EmbedderHeapTracer::AbortTracing\n\nV8 has no path in calling this API and thus there is no way for the\nembedder to get notified about this event.\n\nBug: chromium:843903\nChange-Id: I938675aed9191a292f21bae0fed0e3ea8acaf936\nReviewed-on: https://chromium-review.googlesource.com/c/1434377\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59087}","milestone":74},{"_id":"ab10dae92927456f11d967dd8a51f00509ca289e","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Tue Jan 22 17:55:52 2019"},"commit":"ab10dae92927456f11d967dd8a51f00509ca289e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 24 16:58:31 2019"},"message":"[heap-profiler] Remove the old RetainerInfo mechanism.\n\nBug: chromium:749490\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I4ae6883dd5ed5f313e21af20c29e560c73c33675\nReviewed-on: https://chromium-review.googlesource.com/c/948903\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59076}","milestone":74},{"_id":"eeef820601f13d5b693a0ac7c2bdf8ff6982976a","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Jan 24 11:57:39 2019"},"commit":"eeef820601f13d5b693a0ac7c2bdf8ff6982976a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 24 12:00:16 2019"},"message":"Update version to 7.4\n\nTBR=machenbach@chromium.org\nNOTRY=true\n\nChange-Id: I2505fb40aa13a361277eaf9ec2c88cea249079da\nReviewed-on: https://chromium-review.googlesource.com/c/1433785\nCommit-Queue: Michael Hablich <hablich@chromium.org>\nReviewed-by: Michael Hablich <hablich@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59060}","milestone":74},{"_id":"584f0b43b2f3016bdee1c3f14f343273402bc2e1","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Jan 23 15:10:01 2019"},"commit":"584f0b43b2f3016bdee1c3f14f343273402bc2e1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 23 16:01:55 2019"},"message":"[api, global-handles] Fix moving weak Global<T>\n\nv8::Global may be used as a weak reference. In the case this reference is a\nsimple phantom reference, we need to update the internal state to be able to\nclear the right slot once the object refered to is dead.\n\nBug: chromium:924220\nChange-Id: I2ab7c3afcbe22988791faef406c284db03a43caf\nReviewed-on: https://chromium-review.googlesource.com/c/1430101\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#59040}","milestone":74},{"_id":"0781f42b67cdcaf0d8246b95bb7a76d43b500a6f","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Jan 21 18:48:25 2019"},"commit":"0781f42b67cdcaf0d8246b95bb7a76d43b500a6f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 21 19:50:04 2019"},"message":"[global-handles] Deprecate unused methods\n\nBug: chromium:923361\nChange-Id: I520b2778b8a2fe3fcd52570f3a91758bc949f374\nReviewed-on: https://chromium-review.googlesource.com/c/1425897\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58975}","milestone":73},{"_id":"48624bc390c0c11c24fe08786171637821610dcc","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Tue Jan 15 13:24:09 2019"},"commit":"48624bc390c0c11c24fe08786171637821610dcc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 16 15:15:52 2019"},"message":"[api] Fix includes in trap handler API header files\n\nR=yangguo@chromium.org\n\nBug: chromium:921971\nChange-Id: Id6715637a883c7606d96d8c4352bae1346cb0ec2\nReviewed-on: https://chromium-review.googlesource.com/c/1411603\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58854}","milestone":73},{"_id":"b121cde9011ac418249e14bf83e3e72349054de8","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Wed Jan 16 13:37:16 2019"},"commit":"b121cde9011ac418249e14bf83e3e72349054de8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 16 14:25:13 2019"},"message":"[api] Add Check method to Maybe\n\nThis new method returns no value and just verifies that the Maybe is not\nEmpty. This is intended to be used for functions like Object::Set that\nreturn a Maybe<bool> but only use \"emptiness\" to indicate its result and\nwhere ToLocalChecked() appears to be discarding information.\n\nAlso comments Object::Set to indicate that Check() is the preferred way\nof asserting that the Set should always succeed.\n\nR=yangguo\n\nBug: v8:8562\nChange-Id: Ic3b45e42fa9ba0b53f1a764660a56041e64f087b\nReviewed-on: https://chromium-review.googlesource.com/c/1414912\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58852}","milestone":73},{"_id":"93283bf04ae3fd96592b4090e90ac75130aa9d52","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Tue Jan 15 17:11:25 2019"},"commit":"93283bf04ae3fd96592b4090e90ac75130aa9d52","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 15 18:08:07 2019"},"message":"[heap, api] Add API for automatically restoring the heap limit.\n\nNow the embedder can instruct V8 to restore the initial heap limit\nonce the heap size drops below the given percentage of the heap limit.\n\nBug: chromium:922038\nChange-Id: Ib668406c5d59c02b45a8eae7de96527ebc3f2b4d\nReviewed-on: https://chromium-review.googlesource.com/c/1411606\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58837}","milestone":73},{"_id":"bc3d7298809cdf990aea2d0755f8263392e1ba7e","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Tue Jan 15 09:54:27 2019"},"commit":"bc3d7298809cdf990aea2d0755f8263392e1ba7e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 15 14:23:46 2019"},"message":"[api] Advance CreateDefaultPlatform deprecation\n\nChange platform::CreateDefaultPlatform from V8_DEPRECATE_SOON to\nV8_DEPRECATED.\n\nBug: v8:8562\nChange-Id: I053ff29b27dcd454960007bfd6597a01e1b2e62a\nReviewed-on: https://chromium-review.googlesource.com/c/1411636\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58831}","milestone":73},{"_id":"a16c1250e03b3ffa8bd8c020c122555f14f88b7f","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Tue Jan 15 09:42:37 2019"},"commit":"a16c1250e03b3ffa8bd8c020c122555f14f88b7f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 15 11:04:56 2019"},"message":"Advance SetWasmCompileStreamingCallback deprecation\n\nChange Isolate::SetWasmCompileStreamingCallback from\nV8_DEPRECATE_SOON to V8_DEPRECATED.\n\nBug: v8:8562\nChange-Id: I57b2e72817fe5b580fe6dc123a2389247010cb43\nReviewed-on: https://chromium-review.googlesource.com/c/1411634\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58819}","milestone":73},{"_id":"75a780920a5810bfccb2ce54d0aa68c92d8fa7b6","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Wed Jan 09 13:09:34 2019"},"commit":"75a780920a5810bfccb2ce54d0aa68c92d8fa7b6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 14 15:45:01 2019"},"message":"[v8][api] Add API function CallLowPriorityTaskOnWorkerThread\n\nWhen we run TurboFan compilation for WebAssembly on worker threads with\ndefault priority, we see in bug reports (https://crbug.com/914757) and\nin experiments that TurboFan compilation can block other, higher\npriority tasks. Therefore we want to post TurboFan compilation tasks\nwith lower priority.\n\nA quick prototype showed that if we run all WebAssembly compilation with\nlow priority, the problem described in https://crbug.com/914757 is\nfixed.\n\nR=adamk@chromium.org\nCC=rmcilroy@chromium.org\n\nBug: chromium:920181\nChange-Id: I85e2c0c6a96ff9ef165a23ef8eb531944b20f2b0\nReviewed-on: https://chromium-review.googlesource.com/c/1402790\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58792}","milestone":73},{"_id":"195686d37c027083c267eceac44e63ffca5c299a","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Wed Jan 02 13:38:34 2019"},"commit":"195686d37c027083c267eceac44e63ffca5c299a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 08 11:59:19 2019"},"message":"Advance GetProperyNames/GetOwnPropertyNames deprecation\n\nChange Object::GetPropertyNames/GetOwnPropertyNames from\nV8_DEPRECATE_SOON to V8_DEPRECATED.\n\nBug: v8:7286, v8:8562\nChange-Id: I2c601e6bf729e8fb68be8bc9a7b1618da61934af\nReviewed-on: https://chromium-review.googlesource.com/c/1393285\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58624}","milestone":73},{"_id":"f49efaef06c468ec7a8bac101f1978f6771c58f5","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Tue Jan 08 09:48:09 2019"},"commit":"f49efaef06c468ec7a8bac101f1978f6771c58f5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 08 10:42:35 2019"},"message":"[ubsan] Drop old NeverReadOnlySpaceObject class\n\nTwo uses in the API needed adaptation; all other uses have already\nbeen subsumed by the new implementation (previously known as\nNeverReadOnlySpaceObjectPtr, here renamed to NeverReadOnlySpaceObject).\n\nBug: v8:3770\nChange-Id: Idf0e4a98a407b9afea22e8790da34cf017b892a5\nReviewed-on: https://chromium-review.googlesource.com/c/1397671\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58620}","milestone":73},{"_id":"90698aee1819ce81c75286b6a42c76a9bb35f121","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Thu Dec 27 09:49:08 2018"},"commit":"90698aee1819ce81c75286b6a42c76a9bb35f121","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Dec 27 11:07:24 2018"},"message":"[ptr-compr] Support decompression in include/v8.h and include/v8-internal.h\n\nBug: v8:7703\nChange-Id: I2cc5ceb7b70a9b53d5bcc90b32276c011f89ffbe\nReviewed-on: https://chromium-review.googlesource.com/c/1388530\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58476}","milestone":73},{"_id":"fc479d516b935615a4317d550d500ed87915ce03","author":{"name":"Bill Budge","email":"bbudge@chromium.org","time":"Fri Dec 21 18:23:40 2018"},"commit":"fc479d516b935615a4317d550d500ed87915ce03","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Dec 21 23:32:29 2018"},"message":"[api] Change Wasm ModuleCompiled notification\n\n- Removes ModuleCompiledCallback typedef and Set function.\n- Adds WasmStreaming::Client abstraction and Set function.\n\nBug: chromium:719172\nChange-Id: I8a207b628394a7660bda73cde560da1e461248a7\nReviewed-on: https://chromium-review.googlesource.com/c/1377450\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Bill Budge <bbudge@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58454}","milestone":73},{"_id":"9302db480e8cd7c88fd948baf0cf05cb5fbb7502","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Thu Dec 20 15:47:47 2018"},"commit":"9302db480e8cd7c88fd948baf0cf05cb5fbb7502","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Dec 20 16:43:49 2018"},"message":"[ubsan] Port HeapObject to the new design\n\nMerging the temporary HeapObjectPtr back into HeapObject.\n\nBug: v8:3770\nChange-Id: I5bcd23ca2f5ba862cf5b52955dca143e531c637b\nReviewed-on: https://chromium-review.googlesource.com/c/1386492\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Stanton <mvstanton@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58410}","milestone":73},{"_id":"14ebea15a4658c569f6301100076e28fec86ed6e","author":{"name":"Mike West","email":"mkwst@chromium.org","time":"Mon Dec 17 12:29:49 2018"},"commit":"14ebea15a4658c569f6301100076e28fec86ed6e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 18 08:15:10 2018"},"message":"Add counter to track `Date::getTimezoneOffset()`.\n\nBug: chromium:915620\nChange-Id: I75579080098632639b125b2252b3ab9615c7ea95\nReviewed-on: https://chromium-review.googlesource.com/c/1379876\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Mike West <mkwst@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58306}","milestone":73},{"_id":"2b2a0ddeac689030ff15737b6e50182bbd02f853","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Mon Dec 17 11:55:19 2018"},"commit":"2b2a0ddeac689030ff15737b6e50182bbd02f853","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Dec 17 16:42:59 2018"},"message":"[c++11] Replace V8_ALIGNOF by alignof\n\nC++ introduces the {alignof} keyword, which evaluates to an integral\nconstant defining the alignment of the given type. This makes\n{V8_ALIGNOF} redundant.\n\nR=ulan@chromium.org\n\nBug: v8:8562\nChange-Id: I15a4022c2c396afba96360f218d8a04b17a9a448\nReviewed-on: https://chromium-review.googlesource.com/c/1379938\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58292}","milestone":73},{"_id":"d637ab914138edd33f4dc08e007b15ce5bbe997c","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Mon Dec 17 11:52:56 2018"},"commit":"d637ab914138edd33f4dc08e007b15ce5bbe997c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Dec 17 16:03:59 2018"},"message":"[c++11] Replace V8_ALIGNAS and V8_ALIGNED by alignas\n\nC++ introduces the {alignas} keyword, which can be used with types or\nintegral constant expressions. Use this instead of the V8_ALIGNAS (for\ntypes) or V8_ALIGNED (for integral constants) macros.\n\nR=ulan@chromium.org\n\nBug: v8:8562\nChange-Id: I54999b56a5715237f88c63d8543ef728a5b2eff5\nReviewed-on: https://chromium-review.googlesource.com/c/1379935\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58290}","milestone":73},{"_id":"b5c757d6b79c695ab4c15de8b5b3fe3643cf1e89","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Wed Dec 12 10:30:24 2018"},"commit":"b5c757d6b79c695ab4c15de8b5b3fe3643cf1e89","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Dec 13 09:02:28 2018"},"message":"[wasm] Deprecate old serialization API\n\nUses of the old API were removed from chromium in\nhttps://crrev.com/c/1373749.\n\nR=adamk@chromium.org\n\nBug: chromium:912031\nChange-Id: I3fed4d72c147ef8e00ec96f869af2134e7ee71c8\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nReviewed-on: https://chromium-review.googlesource.com/c/1373769\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58205}","milestone":73},{"_id":"228b362a5250966b1526b307daaf268504efb621","author":{"name":"Yutaka Hirano","email":"yhirano@chromium.org","time":"Thu Dec 13 03:41:05 2018"},"commit":"228b362a5250966b1526b307daaf268504efb621","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Dec 13 08:41:55 2018"},"message":"Introduce v8::Promise::Then(context, on_fulfilled, on_rejected)\n\nCurrently v8::Promise::Then takes only one handler. It should take two handlers,\non_fulfilled and on_rejected like ECMAScript Promise.\n\nBug: chromium:912848\nChange-Id: I08a20990a27b3f8621225fad42a8de1dad67796f\nReviewed-on: https://chromium-review.googlesource.com/c/1375509\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yutaka Hirano <yhirano@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58204}","milestone":73},{"_id":"4e5008a50dfa8d22fc6e8f49389740ea6cd914f7","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed Dec 12 10:35:55 2018"},"commit":"4e5008a50dfa8d22fc6e8f49389740ea6cd914f7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 12 11:59:50 2018"},"message":"[ptr-compr] Let EmbedderDataSlot store raw data in a non-tagged part\n\nand update visitors to not look at raw part. This will allow to have effecient\naccess to embedder data once kTaggedSize is switched to 32-bit value.\n\nBug: v8:8518\nChange-Id: Ia1875a5ac5f3fb85df5c5555b970fd88d9e8d7a4\nReviewed-on: https://chromium-review.googlesource.com/c/1369957\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58185}","milestone":73},{"_id":"8badfe6e9fad5a525cb845af6830d4f3d1ac2323","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Mon Dec 10 15:36:09 2018"},"commit":"8badfe6e9fad5a525cb845af6830d4f3d1ac2323","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 12 10:28:06 2018"},"message":"[wasm][api] Deprecate WasmCompiledModule\n\nChromium does not use this name any more since\nhttps://crrev.com/c/1369854, so we can deprecate it for the 7.3 branch.\n\nR=adamk@chromium.org\n\nBug: v8:8238, chromium:912031\nChange-Id: I0625f58a893f48d89dec76851af292c9c32af035\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nReviewed-on: https://chromium-review.googlesource.com/c/1370035\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58183}","milestone":73},{"_id":"81060c32da9f9c1a356a238c7d5bd5e614594cdc","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Dec 11 21:02:28 2018"},"commit":"81060c32da9f9c1a356a238c7d5bd5e614594cdc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 12 09:15:26 2018"},"message":"[api] Allow label annotations for PersistentValueMapBase\n\nAllows adding a label to strong retainers in PersistentValueMapBase and\nits subclasses. These labels show up in DevTools and enable identifying\nstrong retainers of objects.\n\nR: ulan@chromium.org\nChange-Id: Id5e19507c40e44688c82a4caec89449b563a0e8b\nReviewed-on: https://chromium-review.googlesource.com/c/1372069\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58177}","milestone":73},{"_id":"c1bf25bb68d30cc0aa346226c899b724513508b3","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Fri Nov 30 13:18:17 2018"},"commit":"c1bf25bb68d30cc0aa346226c899b724513508b3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 11 14:48:56 2018"},"message":"Enable 31bit Smis everywhere\n\nThis is a experiment to see how performance is impacted. If we tank\ntoo much, we can revert this change.\n\nChange-Id: I01be33f5dd78aee6a5beecdc62adbaa6c3850eb1\nBug: v8:8344\nReviewed-on: https://chromium-review.googlesource.com/c/1355279\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58157}","milestone":73},{"_id":"f68ee6e7e49ac33b3ba870f7287555c5dae9051e","author":{"name":"Ben L. Titzer","email":"titzer@chromium.org","time":"Tue Dec 11 10:22:02 2018"},"commit":"f68ee6e7e49ac33b3ba870f7287555c5dae9051e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 11 11:57:30 2018"},"message":"[typedarrays] Use Detach instead of Neuter\n\nThis is purely a renaming change. The ES spec uses the term 'detach'\nfor the process of removing the backing store of a typed array, while\nV8 uses the historical term 'neuter'. Update our internal implementation,\nincluding method names and flag names, to match the spec.\n\nNote that some error messages still use the term 'neuter' since error\nmessages are asserted by some embedder tests, like layout tests.\n\nR=bmeurer@chromium.org, yangguo@chromium.org, mstarzinger@chromium.org, mlippautz@chromium.org\nBUG=chromium:913887\n\nChange-Id: I62f1c3ac9ae67ba01d612a5221afa3d92deae272\nReviewed-on: https://chromium-review.googlesource.com/c/1370036\nCommit-Queue: Ben Titzer <titzer@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58149}","milestone":73},{"_id":"cc636ba7960fd5e0caa0b48faf93e8c2924953f2","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Mon Dec 10 13:00:02 2018"},"commit":"cc636ba7960fd5e0caa0b48faf93e8c2924953f2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 11 08:31:10 2018"},"message":"Fix cpplint errors that were not found so far\n\nThe class declaration regexp in cpplint did not catch classes decorated\nby V8_EXPORT, V8_EXPORT_PRIVATE or any other decorator containing\ndigits.\nThis will be fixed in https://github.com/google/styleguide/pull/422.\nThis CL already prepares the code base by fixing all errors that will\nbe found after that change.\nSome follow-up changes were needed to fix implicit conversion that are\nnot taken any more now.\n\nR=mstarzinger@chromium.org\n\nBug: v8:8562\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I03713bd04dbc3f54b89a6c857a93463139aa5efd\nReviewed-on: https://chromium-review.googlesource.com/c/1367751\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58143}","milestone":73},{"_id":"255048c5e2721fe22922f53c2605aaa03dbed140","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Mon Dec 10 12:22:30 2018"},"commit":"255048c5e2721fe22922f53c2605aaa03dbed140","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 11 07:38:30 2018"},"message":"[api][wasm] Change ModuleCompiledCallback definition\n\nThis callback is not being used by now, so we can just change it\nwithout the deprecation dance.\nInstead of the WasmModuleObject, it now receives the new\nCompiledWasmModule wrapper which contains a shared pointer to the\nNativeModule. This is all that's needed for serialization.\n\nSome classes are pulled out of WasmModuleObject to allow reuse.\n\nR=adamk@chromium.org, mstarzinger@chromium.org\nCC=​bbudge@chromium.org\n\nBug: chromium:912031\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Icedb64efa92e66bec45cf8742942a07ae22f59c8\nReviewed-on: https://chromium-review.googlesource.com/c/1363140\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Bill Budge <bbudge@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58142}","milestone":73},{"_id":"134c67ef8abb2374488c71240347de58dadfe9e0","author":{"name":"Yuki Shiino","email":"yukishiino@chromium.org","time":"Fri Dec 07 13:33:57 2018"},"commit":"134c67ef8abb2374488c71240347de58dadfe9e0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Dec 07 14:52:25 2018"},"message":"Make Isolate::GetIncumbentContext() work well with MSan\n\nhttps://crrev.com/c/1343709 fixed GetIncumbentContext to work\nwith ASan, however, GetIncumbentContext didn't work well with\nMSan because MSan uses a simulator which supports yet another\nseparate stack frame.\n\nThis patch fixes GetIncumbentContext so that it works well\nwith not only ASan but also MSan simply following the same way\nas v8::TryCatch does.\n\ni::GetCurrentStackPosition() solves the issue of ASan and\nSafeStack (native but separate stack frame), and\ni::SimulatorStack solves the issue of MSan (simulator stack\nframe).\n\nBug: chromium:888867, chromium:866610\nChange-Id: Id803cbfd17fb1b1d9b8ee34c4802768f3a2f8e79\nReviewed-on: https://chromium-review.googlesource.com/c/1356691\nCommit-Queue: Yuki Shiino <yukishiino@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58096}","milestone":73},{"_id":"a0858cf0cad01296e7da59072a5919d9c3e8d006","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Wed Dec 05 08:44:30 2018"},"commit":"a0858cf0cad01296e7da59072a5919d9c3e8d006","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Dec 06 08:15:37 2018"},"message":"[regexp] Add use counters for IsRegExp\n\nA spec change to simplify IsRegExp has been proposed:\n\nhttps://github.com/tc39/ecma262/pull/1318\n\nThis CL adds use counters for cases in which the spec change would\nalter behavior:\n\n1. o[@@match] is trueish but o is not a JSRegExp\n2. o[@@match] is falseish (but not undefined) and o is a JSRegExp\n\nThis is the V8 side of required changes.\nThe Chromium-side CL: https://crrev.com/c/1360730\n\nDrive-by: TNodeify IsRegExp.\n\nTbr: yangguo@chromium.org\nBug: v8:8522\nChange-Id: I3766e02977f256a80d0e59472d3bafa9c692af9e\nReviewed-on: https://chromium-review.googlesource.com/c/1360630\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Mathias Bynens <mathias@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58064}","milestone":73},{"_id":"16afa0a226ca6b2ef489117ccd3b61760b37dd85","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Wed Dec 05 15:43:33 2018"},"commit":"16afa0a226ca6b2ef489117ccd3b61760b37dd85","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 05 21:22:12 2018"},"message":"[api][wasm] Rename WasmCompiledModule to WasmModuleObject\n\nA WasmModuleObject represents an instance of WebAssembly.Module. It is\ncalled WasmModuleObject internally, so also use that name externally.\n\nWe still have a typedef for WasmCompiledModule which will be deprecated\nonce chromium has been updated to use WasmModuleObject.\n\nR=titzer@chromium.org, adamk@chromium.org\n\nBug: v8:8238, chromium:912031\nChange-Id: I2d7708d4dc183cb4f4714f741b1ea0c153014430\nReviewed-on: https://chromium-review.googlesource.com/c/1362048\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Ben Titzer <titzer@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58055}","milestone":73},{"_id":"54ded121cea1c12eef90fabf3ac14f83b7e9c15a","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Tue Dec 04 09:57:13 2018"},"commit":"54ded121cea1c12eef90fabf3ac14f83b7e9c15a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 04 15:04:51 2018"},"message":"[unwinder] Add bounds checking to the unwinder API\n\nIt's possible that we encounter incorrect SP or FP values while\nunwinding the stack. One reason is that third-party code like virus\nprotection may change the stack. If we encounter values for SP or FP\nthat don't make sense, we should bail out of unwinding and return false.\n\nBug: v8:8116, chromium:909957\nChange-Id: I630fef3f619382c7035be50b86072be349ed185c\nReviewed-on: https://chromium-review.googlesource.com/c/1358514\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58018}","milestone":73},{"_id":"3d80831d02194f60daf985abf5b778ac2a083a72","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Mon Dec 03 09:28:16 2018"},"commit":"3d80831d02194f60daf985abf5b778ac2a083a72","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 04 14:49:09 2018"},"message":"[api] deprecate old v8::String::NewFromUtf8\n\nR=delphick@chromium.org\n\nBug: v8:7281\nChange-Id: I4af641218d4646d3cdf3a2776e9bc24141164638\nReviewed-on: https://chromium-review.googlesource.com/c/1357054\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58016}","milestone":73},{"_id":"e84b92d7658dee79c34304a67c4fb84c93cd071b","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Mon Dec 03 10:09:05 2018"},"commit":"e84b92d7658dee79c34304a67c4fb84c93cd071b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 04 14:41:12 2018"},"message":"[api] Remove deprecations from before version 7.2\n\nR=delphick@chromium.org\n\nChange-Id: Iad128dc76a8d399bbf18053fc1f32e34fa36c198\nReviewed-on: https://chromium-review.googlesource.com/c/1357056\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#58015}","milestone":73},{"_id":"5b343483f1f9e02f5533c55436dabce55dbef523","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Fri Nov 30 12:51:44 2018"},"commit":"5b343483f1f9e02f5533c55436dabce55dbef523","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 30 14:29:13 2018"},"message":"Remove remaining infrastructure for FunctionEntryHook\n\nBug: v8:8503, v8:7777\nChange-Id: Iadf515cf4735d1046c7c14f44c02d5d5f95df87a\nReviewed-on: https://chromium-review.googlesource.com/c/1356512\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57969}","milestone":73},{"_id":"7a491d032093e61057fdb9811c9f09aee9f4df23","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Fri Nov 30 12:17:47 2018"},"commit":"7a491d032093e61057fdb9811c9f09aee9f4df23","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 30 13:11:07 2018"},"message":"Fix arm64 bug in 31bit Smis\n\nChange-Id: Id73e9e4862d3b7751b6867183a43cfa7a0cdef52\nBug: v8:8344\nReviewed-on: https://chromium-review.googlesource.com/c/1355145\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57966}","milestone":73},{"_id":"d3e406413861582a366cb8eac18687fb47ca9124","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Fri Nov 30 10:03:40 2018"},"commit":"d3e406413861582a366cb8eac18687fb47ca9124","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 30 10:58:43 2018"},"message":"[wasm] Fix linking issues in component builds\n\nBuilding on linux x64 with \"is_component_build = true\" currently fails\nwith linker errors (undefined references). This CL fixes that.\n\nR=ahaas@chromium.org\nTBR=mseaborn@chromium.org,mark@chromium.org\n\nBug: v8:8532\nChange-Id: I6b32c00bd974a22268ad1f161ce06a9ebe47c805\nReviewed-on: https://chromium-review.googlesource.com/c/1356505\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57960}","milestone":73},{"_id":"29ad898c886e9ff817634e9cf3e1df5c0ecf16ed","author":{"name":"tzik","email":"tzik@chromium.org","time":"Thu Nov 29 04:13:40 2018"},"commit":"29ad898c886e9ff817634e9cf3e1df5c0ecf16ed","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 29 08:21:14 2018"},"message":"Deprecate v8::Isolate::GetEnteredContext\n\nThis CL marks v8::Isolate::GetEnteredContext as deprecated in favor of\nreplacing it with GetEnteredOrMicrotaskContext. Blink no longer uses it,\nand Node.js does not use this too.\n\nGetEnteredOrMicrotaskContext() is relevant for all known cases over\nGetEnteredContext(), and it costs 2% of a benchmark score to maintain\nthe entered contexts under the nestable microtask context.\nhttps://crrev.com/c/1322290 is a context for the bencmark and nestable\nmicrotask contexts.\n\nBug: v8:8124\nChange-Id: I260e32daadf34dc587926a1e20ab950ff2e31699\nReviewed-on: https://chromium-review.googlesource.com/c/1353025\nCommit-Queue: Taiju Tsuiki <tzik@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57927}","milestone":73},{"_id":"9436e8a817fde725425eb1dd95cc245205154569","author":{"name":"Aseem Garg","email":"aseemgarg@chromium.org","time":"Tue Nov 27 23:24:52 2018"},"commit":"9436e8a817fde725425eb1dd95cc245205154569","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 28 20:03:04 2018"},"message":"[wasm] Add I64AtomicWait implementation\n\nBug=v8:8075\nR=adamk@chromium.org,binji@chromium.org\n\nChange-Id: I11ef5daccd043123b23e60c93ee0df79cabe9ccd\nReviewed-on: https://chromium-review.googlesource.com/c/1342948\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Ben Smith <binji@chromium.org>\nCommit-Queue: Aseem Garg <aseemgarg@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57917}","milestone":73},{"_id":"3f8c6e0143e7ab74b5dbfcfa439bfe96c1867429","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Thu Oct 04 14:27:45 2018"},"commit":"3f8c6e0143e7ab74b5dbfcfa439bfe96c1867429","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 05 08:38:09 2018"},"message":"[api][cleanup] Mark Call*OnForegroundThread as V8_DEPRECATE_SOON\n\nThese functions got replaced the the taskrunner API. The new way to\npost tasks is as follows:\n\nv8::Platform* platform = ...; // e.g. V8::GetCurrentPlatform();\nv8::Isolate* = ...;\n\nstd::shared_ptr<v8::TaskRunner> taskrunner = platform->GetForegroundTaskRunner(isolate);\nstd::unique_ptr<v8::Task> task = ...;\n\ntaskrunner->PostTask(std::move(task));\n\nR=ulan@chromium.org\n\nBug: v8:8238\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I44a70fc530daae581ee31e54fd09e776ba648406\nReviewed-on: https://chromium-review.googlesource.com/c/1261936\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56400}","milestone":71},{"_id":"6029498ea8e8a0253683e824fa7283e7567fbc5d","author":{"name":"Frank Tang","email":"ftang@chromium.org","time":"Wed Oct 03 20:59:09 2018"},"commit":"6029498ea8e8a0253683e824fa7283e7567fbc5d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 03 22:36:55 2018"},"message":"[Intl] Add CountUsage for intl objects/functions\n\nChrome side changes in https://chromium-review.googlesource.com/c/chromium/src/+/1255629\n\nBug: v8:8250\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;luci.v8.try:v8_linux_noi18n_rel_ng\nChange-Id: Icba3e73217919c71925774d0cfbab69a7ffa1bba\nReviewed-on: https://chromium-review.googlesource.com/c/1255628\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Frank Tang <ftang@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56358}","milestone":71},{"_id":"5fb5509786d0ae08177bd230fdb3cac26f871fa9","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Wed Sep 26 11:25:24 2018"},"commit":"5fb5509786d0ae08177bd230fdb3cac26f871fa9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 26 13:16:58 2018"},"message":"[API] Change GetCodeRange to match the style of GetEmbeddedCodeRange\n\nDeprecate GetCodeRange(void** start, size_t* length_in_bytes) in favor\nof a new signature MemoryRange GetCodeRange() which is consistent with\nthat of GetEmbeddedCodeRange.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ic5e244981422a2c75485c851ca768e54914cc539\nReviewed-on: https://chromium-review.googlesource.com/1245741\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56241}","milestone":71},{"_id":"31228a69c36c65f1f2c9e7f2f5b433ff40bcd5a6","author":{"name":"Ross McIlroy","email":"rmcilroy@chromium.org","time":"Fri Sep 21 21:40:51 2018"},"commit":"31228a69c36c65f1f2c9e7f2f5b433ff40bcd5a6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Sep 24 20:15:50 2018"},"message":"[Compile] Refactor BackgroundCompileTask to enable its use by CompilerDispatcher\n\nSplits background compilation data out of ScriptStreamingData and into\nBackgroundCompileTask. Also makes BackgroundCompileTask no longer a sub-class\nof ScriptStreamingTask, and instead have ScriptStreamingTask delegate to a\nBackgroundCompileTask.\n\nAs part of this change, we now create the CharacterStream on the main thread,\nand therefore have to set the (thread-local) runtime_call_stats on the already\ncreated CharacterStream when the BackgroundCompileTask is run on the background\nthread. As such, changes to CharacterStream were needed to feed the\nruntime_call_stats through appropriately.\n\nDeprecates Source::GetCachedData and StreamedSource::GetCachedData since they are\nno longer used, and the streamed source never has cached data (streaming is\nsuppressed if cached data is available). Also removes Utf8ChunkedStream which\nis dead code.\n\nBUG=v8:8041, v8:8015\nTBR=yangguo@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ifcc723ebf930a1dc01135fcb70929d6168471cb3\nReviewed-on: https://chromium-review.googlesource.com/1236353\nCommit-Queue: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56182}","milestone":71},{"_id":"a0c48e1daa6f4c17be4d19a0ac3fed882eb8d22c","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Mon Sep 24 12:26:36 2018"},"commit":"a0c48e1daa6f4c17be4d19a0ac3fed882eb8d22c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Sep 24 14:05:46 2018"},"message":"[API] Rename GetBuiltinsCodeRange to GetEmbeddedCodeRange.\n\nThis is more generic as it doesn't restrict embedded code to just\nbuiltins. Also, some builtins are still on-heap so the name was not\ntotally accurate.\n\nBug: v8:8116\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I44cd24d6baf2bce0e5d914d36a2bae98e77bdc6d\nReviewed-on: https://chromium-review.googlesource.com/1238919\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56170}","milestone":71},{"_id":"d235f550ab1a25b9c9fc2af6aee6ebfe64ecd936","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Mon Sep 24 11:05:31 2018"},"commit":"d235f550ab1a25b9c9fc2af6aee6ebfe64ecd936","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Sep 24 12:02:09 2018"},"message":"[deprecation] Deprecate ToBoolean(Local<Context>)\n\nToBoolean and BooleanValue cannot throw exceptions so the Maybe versions\nof the functions don't make sense. As such this deprecates the Maybe\nversions and undeprecates ToBoolean(Isolate*). It also adds\nBooleanValue(Isolate*).\n\nFix up all of the v8 code to not use the deprecated functions.\n\nBug: v8:7279, v8:8015\nCq-Include-Trybots: luci.chromium.try:linux_chromium_headless_rel;luci.chromium.try:linux_chromium_rel_ng;master.tryserver.blink:linux_trusty_blink_rel\nChange-Id: I50e7474d205c75baa153f0dea7f02dcf60232d1d\nReviewed-on: https://chromium-review.googlesource.com/1238476\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56163}","milestone":71},{"_id":"81c9e3936beaf761f2b57f879766b9aed875ed05","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Wed Sep 19 19:23:29 2018"},"commit":"81c9e3936beaf761f2b57f879766b9aed875ed05","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 20 21:31:33 2018"},"message":"[Atomics] Add use counter for Atomics.{wake, notify}\n\nPreviously, Atomics.notify was just an alias to Atomics.wake, which\ndoesn't quite let us add a use counter for these individual builtins.\n\nThis patch refactors the existing Atomics.wake into a separate\nfunction that is called from two separate builtins.\n\nBug: v8:7883\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: If54c8f769b7949d88d327cfb2f70db394f32a0b7\nReviewed-on: https://chromium-review.googlesource.com/1234581\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Ben Smith <binji@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56105}","milestone":71},{"_id":"261cd2f5396bbe54104ecbaa5ae1f98e2f8f43e6","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Sep 20 13:10:01 2018"},"commit":"261cd2f5396bbe54104ecbaa5ae1f98e2f8f43e6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 20 19:20:35 2018"},"message":"[api] Add getter for EmbedderHeapTracer\n\nBug: chromium:843903\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I93fffd197d1742d0b00e69e0967a9efb47921208\nReviewed-on: https://chromium-review.googlesource.com/1236253\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56102}","milestone":71},{"_id":"1f3802a1e718e8315c826cc7cd43a100f896e1ec","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Mon Sep 17 12:22:34 2018"},"commit":"1f3802a1e718e8315c826cc7cd43a100f896e1ec","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 19 05:17:21 2018"},"message":"[heap] Remove obsolete AbortTracing calls and deprecate interface\n\nV8 does not abort incremental marking anymore.\n\nBug: chromium:843903\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Id39e9cf8ef2afc388bab2bbad1d458ee2649f8e8\nReviewed-on: https://chromium-review.googlesource.com/1226889\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56009}","milestone":71},{"_id":"c7a0049e1b70e8f455229c8a470df605ea064f70","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Thu Sep 13 12:08:32 2018"},"commit":"c7a0049e1b70e8f455229c8a470df605ea064f70","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 13 13:07:08 2018"},"message":"[objects] Change String::length field to uint32_t.\n\nThis changes the Name::hash_field and Symbol::flags to uint32_t as\nwell, so that both Symbols and Strings consume one fewer word on 64-bit\narchitectures now. More importantly the access to String::length is\nalways a 32-bit field load now, even with 31-bit Smis (i.e. on ARM or\non 64-bit with pointer compression), so the access should be faster.\n\nBug: v8:7065, v8:8171\nChange-Id: I1a38f4470d62fbeba2b3bc5fcf4ecdbada7d6b8a\nTbr: ulan@chromium.org, yangguo@chromium.org, ishell@chromium.org\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;luci.v8.try:v8_linux_noi18n_rel_ng\nReviewed-on: https://chromium-review.googlesource.com/1224432\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55861}","milestone":71},{"_id":"18380a3c1529af45d0b23b137b192c2945e39bb4","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Thu Sep 13 10:55:39 2018"},"commit":"18380a3c1529af45d0b23b137b192c2945e39bb4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 13 11:47:03 2018"},"message":"[api] introduce PrepareStackTraceCallback\n\nAdds a new stack trace API which overrides Error.prepareStackTrace.\n\nBug: v8:7637,v8:6974\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ie09e74485d81264359c264b2f4a05e9bfd76b2d9\nReviewed-on: https://chromium-review.googlesource.com/1119768\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55858}","milestone":71},{"_id":"1f1eb625a8088168ec88538c48bf0cc1ebdbdd97","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Wed Sep 12 11:48:38 2018"},"commit":"1f1eb625a8088168ec88538c48bf0cc1ebdbdd97","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 12 12:28:56 2018"},"message":"[objects] Change String::length field to uint32_t.\n\nThis changes the Name::hash_field and Symbol::flags to uint32_t as\nwell, so that both Symbols and Strings consume one fewer word on 64-bit\narchitectures now. More importantly the access to String::length is\nalways a 32-bit field load now, even with 31-bit Smis (i.e. on ARM or\non 64-bit with pointer compression), so the access should be faster.\n\nBug: v8:7065, v8:8171\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;luci.v8.try:v8_linux_noi18n_rel_ng\nChange-Id: I5523deb1f84ece91fa2fea775d50318bd1300493\nReviewed-on: https://chromium-review.googlesource.com/1221288\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Tobias Tebbi <tebbi@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55825}","milestone":71},{"_id":"b0af30948505b68c843b538e109ab378d3750e37","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Thu Sep 06 09:21:29 2018"},"commit":"b0af30948505b68c843b538e109ab378d3750e37","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 06 16:47:02 2018"},"message":"[api] Remove deprecated wasm methods\n\nThese methods were deprecated in 7.0, now we can remove them.\n\nR=adamk@chromium.org\n\nBug: v8:7868\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I60badb378a055152bdd27aed67d11ddf74fce174\nReviewed-on: https://chromium-review.googlesource.com/1209283\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55695}","milestone":71},{"_id":"ad832c4145ba5a9accc219123d7d307fda0e5c09","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Sep 06 14:04:07 2018"},"commit":"ad832c4145ba5a9accc219123d7d307fda0e5c09","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Sep 06 15:44:37 2018"},"message":"[heap, api] Keep lower limit when adjusting external memory\n\nPreviously explicit calls to external memory adjustment could yield in lowering\nthe limit below the initial default limit. The consequence is repeated useless\ngarbage collections when e.g. passing around ArrayBuffers.\n\nBug: chromium:880036\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I429f5adcd9ae523e5ac7621cf7976686b0dec71b\nReviewed-on: https://chromium-review.googlesource.com/1209784\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55694}","milestone":71},{"_id":"a1da383fb3257e13912f4b10ea398d05bf221b56","author":{"name":"Benoît Lizé","email":"lizeb@chromium.org","time":"Tue Sep 04 13:13:02 2018"},"commit":"a1da383fb3257e13912f4b10ea398d05bf221b56","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 04 14:09:04 2018"},"message":"parsing: Lock ExternalStrings in the ExternalStringStream.\n\nUtf*Characterstream caches the data pointer of ExternalStrings through\nExternalStringStream, so lock the strings in ExternalStringStream.\n\nBug: chromium:877044\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I241caaf64e109b33e2f9982573e11c514410509c\nReviewed-on: https://chromium-review.googlesource.com/1194003\nCommit-Queue: Benoit L <lizeb@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55613}","milestone":71},{"_id":"1c2aa60520653a7a94ff0e5709438040783011d7","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Tue Sep 04 08:53:13 2018"},"commit":"1c2aa60520653a7a94ff0e5709438040783011d7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 04 11:24:50 2018"},"message":"[debug-evaluate] extend accessors by runtime receiver checks\n\nAlso extend the API to reflect this new feature.\n\n\nR=jgruber@chromium.org, szuend@google.com, ulan@chromium.org\n\nBug: v8:8125\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ic7a7604a8c663ba04b324eb8902ff325a25654e7\nReviewed-on: https://chromium-review.googlesource.com/1202087\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55604}","milestone":71},{"_id":"3cc682ba5ab16ba591f6ebb93cbaaab5662d4eee","author":{"name":"Marijn Kruisselbrink","email":"mek@chromium.org","time":"Fri Aug 31 18:02:42 2018"},"commit":"3cc682ba5ab16ba591f6ebb93cbaaab5662d4eee","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 31 19:31:58 2018"},"message":"Add AsyncIterator to well-known symbols.\n\nBug: chromium:872465\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I75eccab304405569b40c5dcc18177354372a02c9\nReviewed-on: https://chromium-review.googlesource.com/1199464\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Marijn Kruisselbrink <mek@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55563}","milestone":71},{"_id":"2d62067879d21afcd775b7effdafba2fa6ac878d","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Thu Aug 30 14:23:30 2018"},"commit":"2d62067879d21afcd775b7effdafba2fa6ac878d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 30 15:17:17 2018"},"message":"[tools] Add an API that exposes the location of builtins.\n\nWe have an API (GetCodeRange) which gives the location of V8 code on the\nheap, but builtin code no longer lives on the heap.\n\nThe upcoming work on the V8 stack unwinder requires the embedder to\nprovide the code ranges for both the heap and builtins, so this API will\nbe used there.\n\nBug: v8:8116\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I15e900716e68256b9732be0ea1a5cda24878eccf\nReviewed-on: https://chromium-review.googlesource.com/1196551\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55532}","milestone":71},{"_id":"2616df737d79efe33a2b804ee63dc6defb8325c3","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Aug 30 09:48:19 2018"},"commit":"2616df737d79efe33a2b804ee63dc6defb8325c3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 30 12:33:48 2018"},"message":"[embedder-tracing] Fully deprecate old APIs\n\nEmbedders should use the mentioned replacements.\n\nBug: chromium:843903\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I7b7d6a086fd5fe5df3b6d0c4a91bb834c699600d\nReviewed-on: https://chromium-review.googlesource.com/1196444\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55522}","milestone":71},{"_id":"4a97d53301e46d9a6bfb32d2517424a6bc29ae7f","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Mon Nov 26 09:39:30 2018"},"commit":"4a97d53301e46d9a6bfb32d2517424a6bc29ae7f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 26 13:58:43 2018"},"message":"[nojit] Remove the ProfileEntryHookStub\n\nThe ProfileEntryHookStub is no longer used and can be removed.\n\nBug: v8:7777, v8:8503\nChange-Id: I4ccd75d38cfee3e7963338d5d8213915db9be4a9\nReviewed-on: https://chromium-review.googlesource.com/c/1349191\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57823}","milestone":72},{"_id":"26b145ab12993b1585396a3f346b3c3aca093204","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Fri Nov 23 12:21:04 2018"},"commit":"26b145ab12993b1585396a3f346b3c3aca093204","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 23 13:43:48 2018"},"message":"[api] Deprecate ExternalStringResourceBase::IsCompressible\n\nR=yangguo@chromium.org\n\nBug: v8:8238\nChange-Id: Ia59aefc54c2e9f4fa3348c42fb45e7fadab8ee76\nReviewed-on: https://chromium-review.googlesource.com/c/1349231\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57788}","milestone":72},{"_id":"a921d89e5fea24e7fa4c9db98a229caabb2d60b1","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Fri Nov 23 11:53:53 2018"},"commit":"a921d89e5fea24e7fa4c9db98a229caabb2d60b1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 23 13:42:42 2018"},"message":"[api] Promote RegisterDefaultSignalHandler to DEPRECATED\n\nR=yangguo@chromium.org\n\nBug: v8:8238\nChange-Id: I657ec92031ffe8241eaac67ba207bddc989c73a7\nReviewed-on: https://chromium-review.googlesource.com/c/1349234\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57787}","milestone":72},{"_id":"63960f7b1ce255fb7b6c36a669279d56420759f0","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Fri Nov 23 11:51:29 2018"},"commit":"63960f7b1ce255fb7b6c36a669279d56420759f0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 23 12:56:24 2018"},"message":"[api] Promote ExternalOneByteStringResourceImpl to DEPRECATED\n\nR=yangguo@chromium.org\n\nBug: v8:8238\nChange-Id: I37acbc2b7f14d16a57a27cc235769f8a7c18e3a1\nReviewed-on: https://chromium-review.googlesource.com/c/1349232\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57784}","milestone":72},{"_id":"1624b5c679014c6454080207f2c21cc577b5d584","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Wed Nov 21 08:10:24 2018"},"commit":"1624b5c679014c6454080207f2c21cc577b5d584","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 23 12:51:02 2018"},"message":"[api][wasm] Mark all streaming compilation callback as DEPRECATE_SOON\n\nThe callback set with this function is already not used anymore.\n\nR=yangguo@chromium.org\n\nBug: chromium:860637, v8:8238\nChange-Id: I26f4528720e936dcc9b7b244dff7db97a4b43273\nReviewed-on: https://chromium-review.googlesource.com/c/1345989\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57783}","milestone":72},{"_id":"f4bb38c32124933cabaf78bc5d40e5e205107d7a","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Thu Nov 22 15:23:05 2018"},"commit":"f4bb38c32124933cabaf78bc5d40e5e205107d7a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 22 16:36:26 2018"},"message":"[tools] Add an API for unwinding the V8 stack\n\nThis API allows the embedder to provide a stack and PC, FP and\nSP registers. V8 will then attempt to unwind the stack to the C++ frame\nthat called into JS. This API is signal-safe, meaning it does not call\nany signal-unsafe OS functions or read/write any V8 state.\n\nBug: v8:8116\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I7e3e73753b711737020b6a5f11946096658afa6f\nReviewed-on: https://chromium-review.googlesource.com/c/1186724\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57749}","milestone":72},{"_id":"21c415735c74e47942987aa033bbf66bb2ee0aa7","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed Nov 21 15:10:14 2018"},"commit":"21c415735c74e47942987aa033bbf66bb2ee0aa7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 21 16:11:03 2018"},"message":"[ptr-compr] Use EmbedderDataSlot for accessing embedder fields in JSObjects\n\nand make the slot occupy two tagged words when pointer compression is enabled.\n\nTbr: bmeurer@chromium.org\nBug: v8:7703\nChange-Id: Idcd3385cc7d5299d9bdaf6a69c7bd0591099f0bb\nReviewed-on: https://chromium-review.googlesource.com/c/1346489\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57693}","milestone":72},{"_id":"ea9f847d36a60036e1eff2bdf610b35a9ab2a1a7","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed Nov 21 11:30:49 2018"},"commit":"ea9f847d36a60036e1eff2bdf610b35a9ab2a1a7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 21 12:30:13 2018"},"message":"[ptr-compr] Introduce EmbedderDataSlot\n\nan abstraction that hides the details about how embedder data fields are\nencoded in EmbedderDataArrays and JSObjects.\n\nBug: v8:7703\nChange-Id: Ic9f6d9511bec557c6671aa6488b9545e353f968c\nReviewed-on: https://chromium-review.googlesource.com/c/1344155\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57679}","milestone":72},{"_id":"81a654e7a0d8dc86896dd94773ad839b6ffc2383","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Tue Nov 20 16:03:16 2018"},"commit":"81a654e7a0d8dc86896dd94773ad839b6ffc2383","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 20 17:13:36 2018"},"message":"[api][cleanup] Replace kApiPointerSize with kApiTaggedSize or kApiSystemPointerSize\n\nThis CL also disables fast access to the embedder fields when pointer compression is enabled.\n\nBug: v8:8477, v8:8238\nChange-Id: I368bd87184590f8befdc882817497f75f0024569\nReviewed-on: https://chromium-review.googlesource.com/c/1344117\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57659}","milestone":72},{"_id":"d469fec064da93b4ba3753bbdb4e8f4fd1691a73","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Mon Nov 19 14:40:05 2018"},"commit":"d469fec064da93b4ba3753bbdb4e8f4fd1691a73","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 20 11:51:15 2018"},"message":"[ptr-compr] Introduce EmbedderDataArray\n\nfor storing embedder data in native context. We can't use FixedArray because\nwith enabled pointer compression it would not be possible to fit raw aligned\npointer into 32-bits of a tagged value so we will need to store both tagged\nand raw data in this array and therefore custom visitor is required.\n\nBug: v8:7703\nChange-Id: Iae23d9aa76c79a572d5f0f1f3c0f924e8e407dd0\nReviewed-on: https://chromium-review.googlesource.com/c/1340295\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57639}","milestone":72},{"_id":"7303633b1ce11ca6ee84e90dae53a8c6a57e1cf0","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Fri Nov 16 10:36:58 2018"},"commit":"7303633b1ce11ca6ee84e90dae53a8c6a57e1cf0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 16 12:15:00 2018"},"message":"[api] Introduce Object::New() pendant of Object.create().\n\nThis adds a new C++ API method\n\n```cpp\nLocal<Object> Object::New(\n  Isolate* isolate,\n  Local<Value> prototype_or_null,\n  Local<Name>* keys,\n  Local<Value>* values,\n  size_t size);\n```\n\nwhich is similar to the `Object.create()` builtin exposed by JavaScript.\nThis new API is supposed to be used by the `http2` (in Node.js) to speed\nup the creation of the HTTP header object.\n\nBug: v8:8422\nChange-Id: I9910e88de0af2cbd8ce8a1d6cb6caa9451fb8cb4\nDesign-Document: http://bit.ly/v8-fast-object-create-cpp\nReviewed-on: https://chromium-review.googlesource.com/c/1337569\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57570}","milestone":72},{"_id":"1e9ead8ac66ba08804771aec183aea001e6a4e9c","author":{"name":"Mythri","email":"mythria@chromium.org","time":"Fri Oct 05 12:25:34 2018"},"commit":"1e9ead8ac66ba08804771aec183aea001e6a4e9c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 09 15:22:19 2018"},"message":"Deprecate unsupported ScriptCompiler::CompileOptions\n\nAfter adding an explicit API to create code caches the compile\noptions related to producing code caches are no longer supported.\nParser caches are also no longer supported.\n\nBug: v8:8015\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I6eb5d7cf6b03437834eb1a1d326374f09fbce5a9\nReviewed-on: https://chromium-review.googlesource.com/c/1238493\nCommit-Queue: Mythri Alle <mythria@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57399}","milestone":72},{"_id":"073073b4f12b683fc0406cd15b3cb284633fe18e","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Fri Nov 09 10:52:50 2018"},"commit":"073073b4f12b683fc0406cd15b3cb284633fe18e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 09 11:44:22 2018"},"message":"[profiler] introduce API to enable detailed source positions\n\nThis allows Node.js to enable detailed source positions for optimized code\nearly on, without having to pass a flag string.\n\nR=petermarshall@chromium.org\n\nChange-Id: Ie74ea41f600cf6e31acbe802116df4976ccf1c75\nReviewed-on: https://chromium-review.googlesource.com/c/1319757\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57380}","milestone":72},{"_id":"e2f0a90ec6e47284f1cb14290b79b137369de3cd","author":{"name":"Yutaka Hirano","email":"yhirano@chromium.org","time":"Thu Nov 08 14:41:16 2018"},"commit":"e2f0a90ec6e47284f1cb14290b79b137369de3cd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 08 21:18:36 2018"},"message":"Introduce Promise::MarkAsHandled\n\nWe are migrating streams implementation from JavaScript (v8Extra) to\nC++. One of missing features is an ability to set\npromise.[[PromiseIsHandled]] to true, used for example in\nhttps://streams.spec.whatwg.org/#rs-pipe-through. This CL introduces\nthe feature.\n\nBug: chromium:894357, chromium:888154, chromium:902633\nChange-Id: If6487b29a74a212761e6d2ef04ef3ca0e6957dce\nReviewed-on: https://chromium-review.googlesource.com/c/1322296\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nCommit-Queue: Yutaka Hirano <yhirano@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57370}","milestone":72},{"_id":"cff29e8dc0088748131475bbded56d2b3edddd43","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Tue Nov 06 14:15:53 2018"},"commit":"cff29e8dc0088748131475bbded56d2b3edddd43","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 07 08:53:58 2018"},"message":"[api] Fix typo in comment\n\nR=adamk@chromium.org\n\nChange-Id: I1299b91df21f20120c74405d3b995981368380e8\nReviewed-on: https://chromium-review.googlesource.com/c/1319762\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57308}","milestone":72},{"_id":"4495cba3d689e9ee136850550fd864ddf011b81e","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Tue Nov 06 10:59:57 2018"},"commit":"4495cba3d689e9ee136850550fd864ddf011b81e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 06 11:48:19 2018"},"message":"[snapshot] clear internal fields that are serialized by callback\n\nThis is to ensure the snapshot is deterministic.\n\nInternal fields can contain:\n- reference to heap object\n- embedder-defined aligned pointer\n- a smi\n\nThe latter two are not distinguishable by V8, so if the serializer\ncallback returns non-zero value, we consider it to be an aligned pointer\nand clear it to ensure that the snapshot does not contain memory\naddresses that may not be deterministic. If the callback returns\n{ nullptr, 0 } as result, we consider it to be a smi or some in-place\ndata that we then serialize verbatim.\n\n\nR=jgruber@chromium.org\n\nBug: chromium:870584\nChange-Id: I3cf9abf135ffd28d8138fa32636b12596b076e13\nReviewed-on: https://chromium-review.googlesource.com/c/1304441\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57272}","milestone":72},{"_id":"0483e9a9abe77a73632fd85b9c0cd608efa9aa0d","author":{"name":"Joyee Cheung","email":"joyee@igalia.com","time":"Sun Nov 04 18:40:10 2018"},"commit":"0483e9a9abe77a73632fd85b9c0cd608efa9aa0d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 06 08:17:08 2018"},"message":"[api] Allow embedder to construct an Array from Local<Value>*\n\nCurrently to obtain a v8::Array out of a C array or a std::vector,\none needs to loop through the elements and call array->Set() multiple\ntimes, and these calls go into v8::Object::Set() which can be slow.\nThis patch adds a new Array::New overload that converts a\nLocal<Value>* with known size into a Local<Array>.\n\nChange-Id: I0a768f0e18eec51e78d58be455482ec6425ca188\nReviewed-on: https://chromium-review.googlesource.com/c/1317049\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Joyee Cheung <joyee@igalia.com>\nCr-Commit-Position: refs/heads/master@{#57261}","milestone":72},{"_id":"6d706ae3a0153cf0272760132b775ae06ef13b1a","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Sat Nov 03 00:13:22 2018"},"commit":"6d706ae3a0153cf0272760132b775ae06ef13b1a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 05 20:52:51 2018"},"message":"[ubsan] Port Smi to the new design\n\nand split Smi out of objects.h into smi.h.\n\nBug: v8:3770, v8:5402\nChange-Id: I5ff7461495d29c785a76c79aca2616816a29ab1e\nReviewed-on: https://chromium-review.googlesource.com/c/1313035\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Deepti Gandluri <gdeepti@chromium.org>\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57252}","milestone":72},{"_id":"2995df7d3002ab28ca844f89f3c6906d10e7cd6e","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Oct 30 18:47:29 2018"},"commit":"2995df7d3002ab28ca844f89f3c6906d10e7cd6e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 30 20:51:37 2018"},"message":"[api] Fix AdjustAmountOfExternalAllocatedMemory memory reducer\n\nThe reduer should only fire on increasing memory.\n\nR=ulan@chromium.org\n\nChange-Id: I4abd956ea14730b223724a01af819be574b1aa3a\nReviewed-on: https://chromium-review.googlesource.com/c/1308354\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57149}","milestone":72},{"_id":"2e2604b9670825a94a3f6faa9c8712b724c9b8ad","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Tue Oct 30 12:48:12 2018"},"commit":"2e2604b9670825a94a3f6faa9c8712b724c9b8ad","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 30 14:38:07 2018"},"message":"[ptr-compr] Introduce IsolateAllocator\n\nto control how the memory for Isolate object is allocated.\nThis is the support for pointer-compression friendly heap layout.\n\nBug: v8:8182\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ida36b81ee22bd865005c394748b62d4c0897d746\nReviewed-on: https://chromium-review.googlesource.com/c/1251548\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57131}","milestone":72},{"_id":"a600594d5a8f75f89ebbc48bbbda3114393c6630","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Tue Oct 30 09:35:14 2018"},"commit":"a600594d5a8f75f89ebbc48bbbda3114393c6630","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 30 10:25:37 2018"},"message":"[wasm] Implement trap handler on Windows\n\nThis is the V8 side of the implementation. You can take a look at a\nprototype of the Chrome side changes in https://crrev.com/c/1273043.\nChrome could also use V8's default implementation of the trap handler,\nsee https://crrev.com/c/1290952.\n\nBug: v8:6743\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I9bb3e717db17a4f30bbb8acfd80a1f6510d463ff\nReviewed-on: https://chromium-review.googlesource.com/c/1283111\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57117}","milestone":72},{"_id":"3421ad20d8e82c88902183f7444ee4f28e3f7d6e","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Fri Oct 26 13:30:12 2018"},"commit":"3421ad20d8e82c88902183f7444ee4f28e3f7d6e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 26 14:27:57 2018"},"message":"[ptr-compr] Move IsolateData from Heap to Isolate\n\nand also move embedder fields from Isolate to IsolateData.\n\nThe external memory counter fields are temporarily moved to IsolateData in\norder to avoid unexpected Node JS bot failures which happen if the fields\nare left in the Heap class.\n\nBug: v8:8182\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I9d58f235c0ce40e110f595addd03b80b3617aa77\nReviewed-on: https://chromium-review.googlesource.com/c/1278793\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57037}","milestone":72},{"_id":"4fc90a2597787670baebdc3574fc4dd659b2653d","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Fri Oct 26 11:04:26 2018"},"commit":"4fc90a2597787670baebdc3574fc4dd659b2653d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 26 12:02:41 2018"},"message":"[wasm] Refactor trap-handler to allow an extension to windows\n\nThis CL refactors the existing trap handler code for Linux to allow a\ncleaner extension to Windows.\n\n1) The CL extracts platform-specific code into separate files, see\nhttps://docs.google.com/document/d/1HCgKIpdjy_CEodTLvZ5VuykDI6gGTHrTtau2j0zwm28.\nSpecifically this means:\n* Move posix-specific API functions from v8.h to v8-wasm-trap-handler-posix.h.\n  Deprecate the existing TryHandleSignal API function.\n* Move posix-specific function declarations from trap-handler-internal.h to\n  handler-inside-posix.h\n* Move posix-specific function definitions from handler-shared.cc to\n  handler-outside-posix.cc\n\n2) The CL changes filenames from *-linux.* to *-posix.*. I expect that\nmost of the implementation for MacOS will be the same as for Linux.\n\nBug: v8:6743\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I4bb7f199564a2f01042084d15a82311d11a93c7b\nReviewed-on: https://chromium-review.googlesource.com/c/1280324\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ben Titzer <titzer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57028}","milestone":72},{"_id":"ae45472b6c7e5cce7c0979bbeafbf5c098b77221","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Oct 26 08:15:10 2018"},"commit":"ae45472b6c7e5cce7c0979bbeafbf5c098b77221","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 26 10:33:09 2018"},"message":"AdjustAmountOfExternalAllocatedMemory: Do not trigger GCs when reducing amount\n\nGCs should only trigger only trigger when growing external memory but\nnot when removing it.\n\n- The limit is already lowered when removing memory, so possible future\n  allocations check against a lowered limit.\n- Memory pressure signals are already handled via an explicit V8 API.\n\nBug: chromium:899035\nChange-Id: I96da5862400e06edb8c9fa47357070b3b48560a1\nReviewed-on: https://chromium-review.googlesource.com/c/1301473\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#57024}","milestone":72},{"_id":"961125b7d0ec0412044186a01a0e362cffa1dae7","author":{"name":"Sergiy Byelozyorov","email":"sergiyb@chromium.org","time":"Wed Oct 24 13:41:32 2018"},"commit":"961125b7d0ec0412044186a01a0e362cffa1dae7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 24 13:52:21 2018"},"message":"[tools] Move path-specific try-builders to the CQ config\n\nR=machenbach@chromium.org\n\nNo-Try: true\nNo-Tree-Checks: true\nBug: chromium:892433\nChange-Id: Id323739be44ea55d73c712059520d7f5e684c97e\nReviewed-on: https://chromium-review.googlesource.com/c/1280304\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCommit-Queue: Sergiy Byelozyorov <sergiyb@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56949}","milestone":72},{"_id":"a124f0da9b15509ae56dc9ad15b1e798ec71982a","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Wed Oct 24 12:29:33 2018"},"commit":"a124f0da9b15509ae56dc9ad15b1e798ec71982a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 24 13:26:35 2018"},"message":"[ptr-compr] Add gn arg for 31bit Smis on 64bit arch\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I44e62d53bc7b341a685eeca5691a86e915fcce44\nBug: v8:8344\nReviewed-on: https://chromium-review.googlesource.com/c/1292064\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56940}","milestone":72},{"_id":"1e7588617b842ca77a8e85a3b705a058cb1c9216","author":{"name":"Gus Caplan","email":"me@gus.host","time":"Thu Oct 11 17:13:35 2018"},"commit":"1e7588617b842ca77a8e85a3b705a058cb1c9216","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 23 08:30:02 2018"},"message":"[api] Redesign the Isolate PrepareStackTrace API\n\nThis CL replaces the stack trace parameter with a the array that is\nusually passed to the JS prepareStackTrace callback. This allows two\nimportant goals to be realized: 1) we can easily stringify individual\nframes and 2) we can (if needed) call back into JS from this callback\nwith a usable structure. If, as is sometimes the case, a v8::StackTrace\nis needed, |v8::Exception::GetStackTrace| can be used on the exception\nthat is passed to PrepareStackTraceCallback.\n\nBug: v8:7637\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I57fa1f2b4552cc7f69351fe0918f4e59e3f5fce1\nReviewed-on: https://chromium-review.googlesource.com/c/1266698\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56880}","milestone":72},{"_id":"c2021a857a23c2b3860479bf954ce0105db6722a","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Fri Oct 19 12:24:11 2018"},"commit":"c2021a857a23c2b3860479bf954ce0105db6722a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 22 16:10:57 2018"},"message":"Add counter to track number compiled functiond with one-shot bytecodes.\n\nTypically compiler does not have to compile one-shot code but, there\nare some cases where user can capture IIFEs and execute it multiple times.\nAdding counter to track number of such closures compiled with one-shot\nbytecodes.\n\nBug: v8:8072\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I752a12cff6ee9bb751323f4d58897cdd41c6890c\nReviewed-on: https://chromium-review.googlesource.com/c/1237679\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56862}","milestone":72},{"_id":"581192aab92bc5729975cfac0441696e113d9d99","author":{"name":"Hannes Payer","email":"hpayer@chromium.org","time":"Mon Oct 22 09:35:11 2018"},"commit":"581192aab92bc5729975cfac0441696e113d9d99","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 22 10:21:57 2018"},"message":"[heap] Reclaim inaccessible memory.\n\nBug: chromium:897074\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I728572cda9a8914ee689eeee68a060b5713e4c6b\nReviewed-on: https://chromium-review.googlesource.com/c/1290972\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56845}","milestone":72},{"_id":"1a6517622f744d0b744545dee90e2418cda77600","author":{"name":"Hajime Hoshi","email":"hajimehoshi@chromium.org","time":"Mon Oct 15 12:13:54 2018"},"commit":"1a6517622f744d0b744545dee90e2418cda77600","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 22 06:33:25 2018"},"message":"Add DUMP_ON_FAILURE and Platform::DumpWithoutCrash\n\nThis CL adds OnFailure::DUMP_ON_FAILURE representing a scope where base::\nDumpWithoutCrash is called when V8 execution is detected. As V8 can't call base\nfunctions, this CL also adds Platform::DumpWithoutCrash.\n\nDoc: https://docs.google.com/document/d/1PStT6dPlSM7QfGUJQD6t6LNLTv_48gNMhY5RdEpt3XQ/edit?disco=AAAACJ6Xg0o&ts=5bc0be1b\n\nBUG=chromium:870606\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I5df62fd99ed78adb4e2505aeaee3d526d6786e59\nReviewed-on: https://chromium-review.googlesource.com/c/1276325\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Kentaro Hara <haraken@chromium.org>\nCommit-Queue: Hajime Hoshi <hajimehoshi@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56838}","milestone":72},{"_id":"e5b4229bd1167c26a5013a1f793dc1fc3b5324f4","author":{"name":"Alexei Filippov","email":"alph@chromium.org","time":"Thu Oct 18 16:50:33 2018"},"commit":"e5b4229bd1167c26a5013a1f793dc1fc3b5324f4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Oct 18 20:50:15 2018"},"message":"[heap profiler] Provide detailed samples information in heap profiler\n\nMake heap profiler provide information about each sample currently\nalive. That information can be used to build diagrams of memory\nallocations over time.\n\nBUG=chromium:889545\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ibcbe2f5302263d0b3976ee4cd3601eff11375cae\nReviewed-on: https://chromium-review.googlesource.com/c/1285130\nCommit-Queue: Alexei Filippov <alph@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56793}","milestone":72},{"_id":"63ca293dcf23a997ebc7940ecf39af1df99c6a90","author":{"name":"Hans Wennborg","email":"hans@chromium.org","time":"Tue Oct 16 22:32:45 2018"},"commit":"63ca293dcf23a997ebc7940ecf39af1df99c6a90","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 17 14:51:20 2018"},"message":"Remove PersistentContainerCallbackType::kWeak\n\nFrom what I understand, it's been slated for removal for a long time, and\nmore accutely, Clang recently started warning about it being shadowed by\nanother kWeak enum:\n\n../../v8/include/v8-profiler.h:369:5: warning: declaration shadows a variable\nin namespace 'v8' [-Wshadow]\n    kWeak = 6              // A weak reference (ignored by the GC).\n    ^\n../../v8/include/v8-util.h:29:3: note: previous declaration is here\n  kWeak = kWeakWithParameter  // For backwards compatibility.  Deprecate.\n  ^\n\nBug: chromium:895475\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I07de1418aea2d68ef5641ece4ab13f71b6d5ec7f\nReviewed-on: https://chromium-review.googlesource.com/c/1285189\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Hans Wennborg <hans@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56743}","milestone":72},{"_id":"4d07af1a3461a682361d58b928c02eae5dccadf9","author":{"name":"Caitlin Potter","email":"caitp@igalia.com","time":"Tue Oct 16 19:44:34 2018"},"commit":"4d07af1a3461a682361d58b928c02eae5dccadf9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 16 21:34:23 2018"},"message":"[counters] add use count for the \"override mistake\"\n\nAdds 2 counts to see how often this occurs on the web, both the throwing\nversion (strict mode), and the no-op sloppy mode case, to help determine\nif the proposal at https://github.com/tc39/ecma262/pull/1307 is web\ncompatible.\n\nThis is the V8 side of required changes.\nThe Chromium-side CL: https://crrev.com/c/1280618\n\nBUG=v8:8175\nR=littledan@chromium.org, cbruni@chromium.org, jkummerow@chromium.org, yangguo@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Id12336c2e566093bb554b6d4624c9301fbc4a0f7\nReviewed-on: https://chromium-review.googlesource.com/c/1255549\nCommit-Queue: Caitlin Potter <caitp@igalia.com>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56706}","milestone":72},{"_id":"a2f182483929c58ebcf9d5667d8ef19ad2db2f26","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Thu Oct 11 23:23:33 2018"},"commit":"a2f182483929c58ebcf9d5667d8ef19ad2db2f26","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 16 19:02:21 2018"},"message":"[ubsan] Replace internal::Object references in v8.h\n\nwith internal::Address. This is in preparation for the upcoming\nchanges to internal::Object. The public API is unchanged, and\nthere should be no change in behavior either.\n\nMost of the casts newly introduced here will disappear again once\nthe migration is complete.\n\nBug: v8:3770\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I2990b06a2511ccc5de3f98fd95a805f30ed589ab\nReviewed-on: https://chromium-review.googlesource.com/c/1036612\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56705}","milestone":72},{"_id":"e11053a96fd51b4815476e37a08905856c4b953d","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Oct 12 10:45:09 2018"},"commit":"e11053a96fd51b4815476e37a08905856c4b953d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 15 16:37:49 2018"},"message":"[api] Remove deprecated EmbedderHeapTracer APIs\n\nAlso fully deprecate AbortTracing.\n\nBug: chromium:843903\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I852d28d8ce0f02b3a048b1061de29c9fce71ce62\nReviewed-on: https://chromium-review.googlesource.com/c/1278811\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56655}","milestone":72},{"_id":"9ecd4545fe424146f0a5fa5dbcaccd775048131a","author":{"name":"Bill Budge","email":"bbudge@chromium.org","time":"Fri Oct 12 15:16:19 2018"},"commit":"9ecd4545fe424146f0a5fa5dbcaccd775048131a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 12 21:34:45 2018"},"message":"[api] Add WebAssembly caching API\n\n- Adds embedder callback to notify fully tiered compilation is finished,\n  returning a WasmCompiledModule for serialization.\n- Adds function to pass previously compiled bytes into WASM streaming\n  compilation, for deserialization.\n- Plumbs this API through StreamingDecoder.\n\nBug: chromium:719172\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ibe376f3a8ccfa90fda730ef4ff6628a1532da45c\nReviewed-on: https://chromium-review.googlesource.com/c/1252884\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nCommit-Queue: Bill Budge <bbudge@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56617}","milestone":72},{"_id":"e8faae72c59beb6ca234313830d8cb5239772d7d","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Oct 10 11:25:41 2018"},"commit":"e8faae72c59beb6ca234313830d8cb5239772d7d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 10 13:41:09 2018"},"message":"[platform] Add TaskRunner::PostNonNestableTask\n\nThe API will be used to post GC tasks that benefit from being executed\nat top level.\n\nBug: chromium:843903\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I062855e810ca9a8d8af8ae8b66e02c85e108798b\nReviewed-on: https://chromium-review.googlesource.com/c/1273045\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56528}","milestone":72},{"_id":"c47de2934a6b5ea8402df55b4e908d67c5445eec","author":{"name":"Mythri","email":"mythria@chromium.org","time":"Fri Oct 05 13:36:17 2018"},"commit":"c47de2934a6b5ea8402df55b4e908d67c5445eec","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 09 13:07:33 2018"},"message":"Deprecate Object::Has and Object::Delete\n\n\n\nBug: v8:7284\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;luci.chromium.try:linux-chromeos-dbg;luci.chromium.try:linux-chromeos-rel\nChange-Id: I2a652fd99caaf04201da45c485b670cc2c35c2e7\nReviewed-on: https://chromium-review.googlesource.com/c/1264755\nCommit-Queue: Mythri Alle <mythria@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#56482}","milestone":72},{"_id":"9136dd8088a95484b059a0301b25235510fc2882","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Fri Sep 28 14:17:10 2018"},"commit":"9136dd8088a95484b059a0301b25235510fc2882","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 02 08:55:20 2018"},"message":"Put back deleted V8_DEPRECATE_SOON methods\n\nThis partially reverts\nhttps://chromium-review.googlesource.com/c/v8/v8/+/1177861,\nwhich deleted many V8_DEPRECATE_SOON methods rather than moving them to\nV8_DEPRECATED first. This puts them back and marks them V8_DEPRECATED.\n\nNote V8_DEPRECATED that were deleted in the same CL stay deleted.\n\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\n\nBug: v8:7786, v8:8240\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I00330036d957f98dab403465b25e30d8382aac22\nReviewed-on: https://chromium-review.googlesource.com/1251422\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Michael Hablich <hablich@chromium.org>\nCr-Commit-Position: refs/branch-heads/7.0@{#49}\nCr-Branched-From: 6e2adae6f7f8e891cfd01f3280482b20590427a6-refs/heads/7.0.276@{#1}\nCr-Branched-From: bc08a8624cbbea7a2d30071472bc73ad9544eadf-refs/heads/master@{#55424}","milestone":70},{"_id":"faa6cfbbf1e3d1ad9428f896370e00ccf5b32726","author":{"name":"Ben L. Titzer","email":"titzer@chromium.org","time":"Thu Aug 23 13:41:26 2018"},"commit":"faa6cfbbf1e3d1ad9428f896370e00ccf5b32726","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 23 14:30:40 2018"},"message":"[api] Counters for WASM shared memory and threads opcodes\n\nNote that this splits off counters added in\nhttps://chromium-review.googlesource.com/c/v8/v8/+/1186343\n\nR=ahaas@chromium.org\n\nBug: chromium:868844\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I263c63a51d8ce3418eacabb6beb11fa1b3dfaa96\nReviewed-on: https://chromium-review.googlesource.com/1186721\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Ben Titzer <titzer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55357}","milestone":70},{"_id":"c74babee50c31464a27fb49fc825260f92c28620","author":{"name":"Stephan Herhut","email":"herhut@chromium.org","time":"Thu Aug 23 09:32:13 2018"},"commit":"c74babee50c31464a27fb49fc825260f92c28620","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 23 11:44:38 2018"},"message":"Add custom deleter for externalized arraybuffers\n\nCurrently, we use an AllocationKind to signal to the embedder how v8\nhas allocated the backingstore of an array buffer. The embedder then has\nto implement matching logic to free an exernalized buffer. By Using\ncustom deleters v8 can communicate how to free an externalized array\nbuffer without requiring all embedders to implement corresponding\nfreeing logic.\n\nBug: v8:8073\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I553dec31ba167d6a7b342ded50d685be7dffd1c5\nReviewed-on: https://chromium-review.googlesource.com/1183484\nCommit-Queue: Stephan Herhut <herhut@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55347}","milestone":70},{"_id":"b10a967f4b88e397728a8eda47d548a049911370","author":{"name":"Ben L. Titzer","email":"titzer@chromium.org","time":"Thu Aug 23 08:47:18 2018"},"commit":"b10a967f4b88e397728a8eda47d548a049911370","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 23 09:48:00 2018"},"message":"[wasm] Add feature counter for threads and shared memory\n\nThis adds a feature counter for WASM shared memory (i.e. the presence\nof the \"shared\" bit in a WASM module's memory section) and the usage\nof WASM threads opcodes (i.e. wake/wait and atomics).\n\nThis CL also plumbs the WasmFeatures through the compilation pipeline\nto detect features as functions are being compiled.\n\nR=ahaas@chromium.org, ulan@chromium.org\nBUG=chromium:868844\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I854f932d3adb16e4fd87196fe2a193950295b856\nReviewed-on: https://chromium-review.googlesource.com/1186329\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Ben Titzer <titzer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55337}","milestone":70},{"_id":"a6938128f49f9a88c6065bf2c226bad8be2936d4","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Aug 21 17:14:19 2018"},"commit":"a6938128f49f9a88c6065bf2c226bad8be2936d4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 21 18:42:05 2018"},"message":"[embedder-tracing] Add GarbageCollectionForTesting call\n\nThis call can be used by embedder to request a GC for testing reasons.\nThe GC also takes the current embedder stack state as an argument that\nis forwarded to the embedder when entering the atomic pause.\n\nThis way embedders can request garbage collections for testing and set\nhow the embedder should treat the stack.\n\nBug: chromium:843903\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Id10604565b4457dd0fca402afeb5f8e592fa0bae\nReviewed-on: https://chromium-review.googlesource.com/1183431\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55285}","milestone":70},{"_id":"bf1e47e6ff10734045b2d6a501da49d20980f742","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Mon Aug 20 14:19:05 2018"},"commit":"bf1e47e6ff10734045b2d6a501da49d20980f742","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 21 13:06:31 2018"},"message":"[ptr-compr] Switch Smis to 31-bit on 64-bit platforms.\n\nThis is prerequisite for V8 heap pointer compression.\n\nBug: v8:7703\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I2cdf02bd4cd535beb78a5db5b7cbdf67433a6d16\nReviewed-on: https://chromium-review.googlesource.com/1181136\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55269}","milestone":70},{"_id":"8c6415471b869304efdad136ca112a7e0a8b9729","author":{"name":"Alexei Filippov","email":"alph@chromium.org","time":"Thu Aug 09 20:06:25 2018"},"commit":"8c6415471b869304efdad136ca112a7e0a8b9729","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 17 19:46:56 2018"},"message":"[profiler] Remove deprecated TracingCpuProfiler from API.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I99b98fc131e90788902662e6cb837d93168c93fc\nReviewed-on: https://chromium-review.googlesource.com/1169921\nReviewed-by: Ali Ijaz Sheikh <ofrobots@google.com>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Alexei Filippov <alph@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55198}","milestone":70},{"_id":"e1a76995ef311eb3ca66e12ef1941ed596034d59","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Thu Aug 09 09:18:08 2018"},"commit":"e1a76995ef311eb3ca66e12ef1941ed596034d59","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Aug 15 21:28:09 2018"},"message":"[api][runtime]  Support all-in ctors of {Named,Indexed}PropertyHandlerConfiguration\n\n- Explicitly allows construction of\n{Named,Indexed}PropertyHandlerConfiguration with all the members filled.\n\nBug: v8:7612\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I426ea33846b5dbf2b3482c722c963a6e4b0abded\nReviewed-on: https://chromium-review.googlesource.com/1163882\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55142}","milestone":70},{"_id":"71805cab16718636506c3ef83ff15caed19bd7a7","author":{"name":"Alexey Kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Tue Aug 14 20:35:13 2018"},"commit":"71805cab16718636506c3ef83ff15caed19bd7a7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 14 21:51:13 2018"},"message":"[inspector] added kozyatinskiy to v8-inspector.h OWNERS\n\nR=pfeldman@chromium.org\n\nChange-Id: I6ffa0aa357bc296a5b6fc2b20fb10e2e806dae56\nReviewed-on: https://chromium-review.googlesource.com/1175080\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55134}","milestone":70},{"_id":"22cb8d45c341289a79b551284325ed75b93a70f0","author":{"name":"Andrey Lushnikov","email":"lushnikov@chromium.org","time":"Tue Aug 14 20:03:04 2018"},"commit":"22cb8d45c341289a79b551284325ed75b93a70f0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 14 21:00:17 2018"},"message":"inspector: teach v8Inspector to return default context\n\nThis is a follow-up to https://chromium-review.googlesource.com/c/v8/v8/+/1173718\n\nR=kozy, pfeldman\nTBR=pfeldman\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_headless_rel;luci.chromium.try:linux_chromium_rel_ng;master.tryserver.blink:linux_trusty_blink_rel\nChange-Id: I48b4ca5589505d03773477623654fa54703f0714\nReviewed-on: https://chromium-review.googlesource.com/1175061\nCommit-Queue: Andrey Lushnikov <lushnikov@chromium.org>\nReviewed-by: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55133}","milestone":70},{"_id":"fba8c5ecc24e33643448ad9f2340ab99deb3b1d9","author":{"name":"Andrey Lushnikov","email":"lushnikov@chromium.org","time":"Tue Aug 14 02:21:11 2018"},"commit":"fba8c5ecc24e33643448ad9f2340ab99deb3b1d9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 14 18:21:47 2018"},"message":"inspector: introduce V8Inspector::contextById(contextId)\n\nThis is a pre-requisite for https://chromium-review.googlesource.com/c/chromium/src/+/1134430\n\nR=kozy\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_headless_rel;luci.chromium.try:linux_chromium_rel_ng;master.tryserver.blink:linux_trusty_blink_rel\nChange-Id: Ic437eaffd0870e1ce6b16e4992e9232515e091ec\nReviewed-on: https://chromium-review.googlesource.com/1173718\nReviewed-by: Pavel Feldman <pfeldman@chromium.org>\nReviewed-by: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCommit-Queue: Andrey Lushnikov <lushnikov@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55131}","milestone":70},{"_id":"ba735dde20869a2ae4781c880184dcf8f1a1a5fd","author":{"name":"Rodrigo Bruno","email":"rfbpb@google.com","time":"Tue Aug 14 15:24:15 2018"},"commit":"ba735dde20869a2ae4781c880184dcf8f1a1a5fd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 14 16:31:32 2018"},"message":"[heap] Attempt to incorporate backing store counters into heap sizing and GC trigger stragery.\n\nBug: chromium:845409\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ic62a4339110e3dd2a6b1961a246e2bee0c07c03b\nReviewed-on: https://chromium-review.googlesource.com/1160162\nCommit-Queue: Rodrigo Bruno <rfbpb@google.com>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55128}","milestone":70},{"_id":"dbfcc4878afda13babffbc0faa8e59cafa7ed4b8","author":{"name":"Alexey Kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Thu Aug 09 17:27:00 2018"},"commit":"dbfcc4878afda13babffbc0faa8e59cafa7ed4b8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 09 21:36:24 2018"},"message":"[inspector] added V8InspectorClient::resourceNameToUrl\n\nSome clients (see Node.js) use platform path as ScriptOrigin.\nReporting platform path in protocol makes using protocol much harder.\nThis CL introduced V8InspectorClient::resourceNameToUrl method that\nis called for any reported using protocol url.\nV8Inspector uses url internally as well so protocol client may generate\npattern for blackboxing with file urls only and does not need to build\ncomplicated regexp that covers files urls and platform paths on\ndifferent platforms.\n\nR=lushnikov@chromium.org\nTBR=yangguo@chromium.org\n\nBug: none\nCq-Include-Trybots: luci.chromium.try:linux_chromium_headless_rel;luci.chromium.try:linux_chromium_rel_ng;master.tryserver.blink:linux_trusty_blink_rel\nChange-Id: Iff302e7441df922fa5d689fe510f5a9bfd470b9b\nReviewed-on: https://chromium-review.googlesource.com/1164624\nCommit-Queue: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55029}","milestone":70},{"_id":"5012e883ddc8d7a045b4f7148e76099df3518535","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Tue Aug 07 13:18:42 2018"},"commit":"5012e883ddc8d7a045b4f7148e76099df3518535","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 09 10:05:19 2018"},"message":"[api] Add API callback setter for the wasm thread origin trial\n\nWith the callback we can check if the origin trial is turned on for a\ngiven context.\n\nI will not land the other CL which added a flag to the isolate. The\ninformation if the origin trial is on is context-specific and not\nisolate-specific, and it's hard on the embedder side to track all\ncreations of a context.\n\nWith the API proposed in this CL we will ask the embedder every time we\nstart compilation whether the origin trial is on or off.\n\nR=yangguo@chromium.org\n\nBug:868844\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I8822f40ab12582a5b0bd6640790a269107fc085a\nReviewed-on: https://chromium-review.googlesource.com/1163621\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ben Titzer <titzer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#55011}","milestone":70},{"_id":"9f3170dad5395739422bd37321b22ca13369005d","author":{"name":"Rodrigo Bruno","email":"rfbpb@google.com","time":"Fri Aug 03 11:54:05 2018"},"commit":"9f3170dad5395739422bd37321b22ca13369005d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 06 12:11:15 2018"},"message":"[heap] Add external memory counter to HeapStatistics.\n\nNode.js is using AdjustAmountOfExternalAllocatedMemory to get\nexternal memory from V8 [1]. In addition, they have a unittest\nthat verifies that AdjustAmountOfExternalAllocatedMemory returns\nthe correct value [2]. This CL proposes a new way to report\nexternal memory through HeapStatistics.\n\n[1]https://github.com/nodejs/node/blob/07cb69720bec251a1c450b3770db2136ac009778/src/node_process.cc#L187\n[2]https://github.com/nodejs/node/blob/master/test/parallel/test-memory-usage.js\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ia58ed0bab1c1d4ee23672e1347b9a00b6705a43c\nReviewed-on: https://chromium-review.googlesource.com/1162156\nCommit-Queue: Rodrigo Bruno <rfbpb@google.com>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54919}","milestone":70},{"_id":"5414884aec08a936fbdb51eb699933523c1a2780","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Fri Aug 03 13:01:52 2018"},"commit":"5414884aec08a936fbdb51eb699933523c1a2780","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 06 09:49:56 2018"},"message":"[api] Remove deprecated functions\n\nRemoves all V8_DEPRECATED functions that weren't recently marked as well\nany V8_DEPRECATE_SOON function that relied on using the address of\nan object to get hold of the Isolate.\n\nNormally we would have advanced the V8_DEPRECATE_SOON methods to\nV8_DEPRECATE in this release and removed them in the follow release, but\ntheir continuing presence blocks the work on creating a shared\nRead-Only space where some objects would not belong to any single\nIsolate. In preparation chromium and node.js (via the v8/node github)\nhave been modified in advance.\n\nBug: v8:7786\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I8b4b06189896d94aff908ebcd121b3b38f9b482a\nReviewed-on: https://chromium-review.googlesource.com/1154915\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54915}","milestone":70},{"_id":"497f5a710fec4997e403bd2882acfde26a1c9d60","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Fri Aug 03 11:24:55 2018"},"commit":"497f5a710fec4997e403bd2882acfde26a1c9d60","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 06 08:46:10 2018"},"message":"[heap-profiler] Mark SetBuildEmbedderGraphCallback with `V8_DEPRECATED`\n\nThis is not used in Chrome or Node anymore.\n(This could also potentially be just removed at this point.)\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I59ecc216faeb3d56d3a52c548a863544570b6173\nReviewed-on: https://chromium-review.googlesource.com/1161936\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54913}","milestone":70},{"_id":"842569eb4b5680f0fa7d8b85f8aa88cfbf23c3d5","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Thu Aug 02 11:33:47 2018"},"commit":"842569eb4b5680f0fa7d8b85f8aa88cfbf23c3d5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 03 10:35:25 2018"},"message":"[arrays] Increase max size of FixedDoubleArray by 2x on 64 bit\n\nFixedArray max size is currently 1024 MB on 64 bit and 512 MB on 32 bit.\nUpdate the max size of FixedDoubleArray to match. This doubles the max\nsize for arrays of doubles.\n\nBug: chromium:814599\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I3ac1b4caaf5b6428fe8a8c848fffdf84af8a9ae9\nReviewed-on: https://chromium-review.googlesource.com/1160235\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54892}","milestone":70},{"_id":"5d411aef293e1005f3292a7f1683ec0d97224c50","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Aug 02 13:14:23 2018"},"commit":"5d411aef293e1005f3292a7f1683ec0d97224c50","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 03 07:56:40 2018"},"message":"[api] Make dtor of v8::EmbedderHeapTracer public\n\nThis enables direct uses in e.g.\n  unique_ptr<v8::EmbedderHeapTracer>\n\nBug: chromium:843903\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I11f86c916dca5c31413866d9972178fccda7df9c\nReviewed-on: https://chromium-review.googlesource.com/1160538\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54883}","milestone":70},{"_id":"85cef38d2a42fb0b8c73535198fafce2d218d54a","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Tue Jul 31 10:34:09 2018"},"commit":"85cef38d2a42fb0b8c73535198fafce2d218d54a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 31 11:22:57 2018"},"message":"Add v8::String::StringEquals to API\n\nThis new method only compares Strings and so doesn't need a Context. It\nalso can't throw so it returns bool. Can be used in place of the\ndeprecated Equals method and many Equals call currently taking a\nContext.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I4cfe7747aa140e5a55d9513681ee4704414e1545\nReviewed-on: https://chromium-review.googlesource.com/1151321\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ben Titzer <titzer@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54812}","milestone":70},{"_id":"30ce1ba66080c2450ac7510f6daecd903f17aaaa","author":{"name":"Michael Starzinger","email":"mstarzinger@chromium.org","time":"Tue Jul 31 08:16:22 2018"},"commit":"30ce1ba66080c2450ac7510f6daecd903f17aaaa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 31 09:17:39 2018"},"message":"[wasm] Avoid serializing {TransferrableModule} if possible.\n\nThis avoids serializing and deserializing the sharable part of a module\nwhen it is transferred via {TransferrableModule}, which is possible when\nall Isolates run off the same engine via the --wasm-shared-engine flag.\n\nThis adds a new --wasm-shared-code flag to enable this feature.\n\nR=ahaas@chromium.org\nBUG=v8:7424\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I099d581d7ccc4d058a4646f545a011745fd84eb4\nReviewed-on: https://chromium-review.googlesource.com/1142144\nCommit-Queue: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54806}","milestone":70},{"_id":"0fc61ecae54ebaa7328157607cc98ea025cdca13","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Wed Jul 25 11:22:29 2018"},"commit":"0fc61ecae54ebaa7328157607cc98ea025cdca13","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 31 08:55:27 2018"},"message":"[api] Deprecate some wasm methods\n\nThey were marked V8_DEPRECATE_SOON for the 6.9 branch, so we deprecate\nthem for the 7.0 branch.\n\nR=yangguo@chromium.org\n\nBug: v8:7868\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Idc42affd4d1b103e9946e3b77a93720694eb2dfd\nReviewed-on: https://chromium-review.googlesource.com/1150024\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54803}","milestone":70},{"_id":"765c1eac1f0377dc133eecf25e623b8d68b69376","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Tue Jul 24 13:36:55 2018"},"commit":"765c1eac1f0377dc133eecf25e623b8d68b69376","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 24 13:37:04 2018"},"message":"Speculatively Revert \"Reland \"Avoiding re-externalization of strings.\"\"\n\nThis reverts commit f34158c9d2abec367ec3930732fdf294cd1ca188.\n\nReason for revert: Seems to trigger DCHECKS. Two CLs in range; this one seemed more likely.\nhttps://ci.chromium.org/p/v8/builders/luci.v8.ci/V8-Blink%20Linux%2064%20(dbg)/12787\nhttps://ci.chromium.org/p/v8/builders/luci.v8.ci/V8-Blink%20Linux%2064%20(dbg)/12788\n\n\nOriginal change's description:\n> Reland \"Avoiding re-externalization of strings.\"\n> \n> This is a reland of 2c4c2ad694dfd4e852039644c7bfe22e594587c6\n> \n> Original change's description:\n> > Avoiding re-externalization of strings.\n> >\n> > Bug: chromium:845409\n> > Cq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\n> > Change-Id: I75bddcf0e8879d2161486f24d1cd4e46d8fe008d\n> > Reviewed-on: https://chromium-review.googlesource.com/1139056\n> > Commit-Queue: Rodrigo Bruno <rfbpb@google.com>\n> > Reviewed-by: Jakob Kummerow <jkummerow@chromium.org>\n> > Reviewed-by: Ulan Degenbaev <ulan@chromium.org>\n> > Cr-Commit-Position: refs/heads/master@{#54599}\n> \n> Bug: chromium:866208\n> Change-Id: I7714bfc695ebeaf55b9ccbbc6b11368416ce7fec\n> Cq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\n> Reviewed-on: https://chromium-review.googlesource.com/1146583\n> Reviewed-by: Ulan Degenbaev <ulan@chromium.org>\n> Reviewed-by: Michael Lippautz <mlippautz@chromium.org>\n> Commit-Queue: Rodrigo Bruno <rfbpb@google.com>\n> Cr-Commit-Position: refs/heads/master@{#54637}\n\nTBR=ulan@chromium.org,jkummerow@chromium.org,hpayer@chromium.org,mlippautz@chromium.org,rfbpb@google.com\n\nChange-Id: Id12382d66bc5c9b5c76d73b06a6b421dd4d7be66\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBug: chromium:866208\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nReviewed-on: https://chromium-review.googlesource.com/1148400\nReviewed-by: Sigurd Schneider <sigurds@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54645}","milestone":70},{"_id":"2c4c2ad694dfd4e852039644c7bfe22e594587c6","author":{"name":"Rodrigo Bruno","email":"rfbpb@google.com","time":"Fri Jul 20 17:06:19 2018"},"commit":"2c4c2ad694dfd4e852039644c7bfe22e594587c6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 20 18:02:59 2018"},"message":"Avoiding re-externalization of strings.\n\nBug: chromium:845409\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I75bddcf0e8879d2161486f24d1cd4e46d8fe008d\nReviewed-on: https://chromium-review.googlesource.com/1139056\nCommit-Queue: Rodrigo Bruno <rfbpb@google.com>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54599}","milestone":70},{"_id":"54723da77150699df42c9fc21f47d4013b52cd7f","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Fri Jul 20 08:16:25 2018"},"commit":"54723da77150699df42c9fc21f47d4013b52cd7f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 20 10:28:36 2018"},"message":"[api] Remove the deprecated function EnsureEventLoopInitialized\n\nThis function has been deprecated for month by now.\n\nR=ulan@chromium.org\n\nBug: v8:7754\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I19d1b41bad2849b7f3d4d6684dc6f0f80af081f0\nReviewed-on: https://chromium-review.googlesource.com/1144922\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54575}","milestone":70},{"_id":"ed9ea21661a88a0d876c9f36fdaa1697d60ffbd6","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Wed Jul 18 13:39:48 2018"},"commit":"ed9ea21661a88a0d876c9f36fdaa1697d60ffbd6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 18 18:32:09 2018"},"message":"Fix uses of V8_DEPRECATE_SOON in v8.h\n\nMove brackets enclosing declarator in a couple of V8_DEPRECATE_SOON\ncases so that the attribute is correctly placed.\n\nI.e. should come after the class keyword and after a function signature\nbut before the body.\n\nAlso adds suppressions for a case where a replacement method calls\nthe deprecated method it replaces.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I490ff07a13552cf335186d64ca061f21ac4e8afc\nReviewed-on: https://chromium-review.googlesource.com/1140593\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54527}","milestone":70},{"_id":"ff0a979333408f544f081489411814b84df6e2d9","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Mon May 14 12:07:29 2018"},"commit":"ff0a979333408f544f081489411814b84df6e2d9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 17 08:04:33 2018"},"message":"[api] Expose PreviewEntries as public API\n\nTurn `debug::EntriesPreview` into a public API.\nThis is a straightforward approach to addressing\nhttps://github.com/nodejs/node/issues/20409\n(not relying on functionality behind `--allow-natives-syntax`)\nin Node.js.\n\nRefs: https://github.com/nodejs/node/issues/20409\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;master.tryserver.blink:linux_trusty_blink_rel\nChange-Id: I7021e5846012a55a82c488408ded6591f6b139e7\nReviewed-on: https://chromium-review.googlesource.com/1057467\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53226}","milestone":68},{"_id":"1e8d963fb355093545a995415732bd9e1207d17f","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Sun May 13 16:05:28 2018"},"commit":"1e8d963fb355093545a995415732bd9e1207d17f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 17 08:01:32 2018"},"message":"[api] Slightly improve ValueSerializer documentation\n\nWithout specifying what the default allocator does, using\nthe buffer returned from `Release()` means that one basically\nhad to make an educated guess on how to free it\n(and that ownership actually was transferred to the caller).\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ie2ac0c91d9bdafbe91f6bce9b2263e304b2336ea\nReviewed-on: https://chromium-review.googlesource.com/1056369\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53225}","milestone":68},{"_id":"8f6ffbfca7fc09473ae551148e0a0b7b01b10b61","author":{"name":"Gabriel Charette","email":"gab@chromium.org","time":"Tue May 08 19:14:50 2018"},"commit":"8f6ffbfca7fc09473ae551148e0a0b7b01b10b61","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 16 23:27:02 2018"},"message":"[V8Platform] Remove deprecated Background threads APIs and make new APIs pure virtual.\n\nAlso fixup some implementations that were lagging behind per the lack of\npure virtual not having enforced everything yet.\n\nAlso fixed recently introduced\nPredictablePlatform::CallDelayedOnWorkerThread() to ignore delayed tasks\nafter realizing the intent is to intercept worker tasks instead of\nsending them to |platform_|.\n\nNode.js migrated off these APIs @\nhttps://github.com/v8/node/pull/69\n\nR=ahaas@chromium.org, yangguo@chromium.org\n\nBug: chromium:817421\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I92171f213b5fc64ab1f21e8eec72738f5ce228bd\nReviewed-on: https://chromium-review.googlesource.com/1045310\nCommit-Queue: Gabriel Charette <gab@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53223}","milestone":68},{"_id":"8ec92f5118ea58a60e40c1794bf4337046b8b334","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Tue May 08 11:19:30 2018"},"commit":"8ec92f5118ea58a60e40c1794bf4337046b8b334","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 14 11:48:51 2018"},"message":"[api] Add a dedicated UnboundModuleScript type\n\nModule and script SharedFunctionInfos can't be used interchangeably\n(e.g.: it should not be possible to bind a Module's SFI to a Context).\n\nThe dedicated type disambiguates the two.\n\nThis also adds an overload for CreateCodeCache which takes an unbound\nmodule script instead of an unbound script. Both are just a SFI\nunderneath, so their behavior is identical.\n\nBug: v8:7685\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Iab519d0d50b6b41c95abdb6397f5622e292da4d8\nReviewed-on: https://chromium-review.googlesource.com/1047107\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53150}","milestone":68},{"_id":"8f1c90d2ee7dcbad54bce813e2b18dc27895228e","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Wed May 09 14:01:39 2018"},"commit":"8f1c90d2ee7dcbad54bce813e2b18dc27895228e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 09 14:57:59 2018"},"message":"[api] Add better documentation to Isolate::Allocate\n\nR=ulan@chromium.org\nCC=​jbroman@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I606a182774188b953247b62e5426ee7feadd1a74\nReviewed-on: https://chromium-review.googlesource.com/1047206\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53105}","milestone":68},{"_id":"d0a034a26442496bf93616af79bb677475cf83cc","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Mon May 07 14:05:15 2018"},"commit":"d0a034a26442496bf93616af79bb677475cf83cc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 09 14:56:54 2018"},"message":"[libplatform] Deprecate EnsureEventLoopInitialized\n\nR=ulan@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Iaa9968945ce8196de75b4c4a637bda9ee57c0509\nReviewed-on: https://chromium-review.googlesource.com/1047207\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53104}","milestone":68},{"_id":"18f2636ac7c2eb0a0b5e883813c8cf786bc10119","author":{"name":"Simon Zünd","email":"szuend@google.com","time":"Wed May 09 12:19:28 2018"},"commit":"18f2636ac7c2eb0a0b5e883813c8cf786bc10119","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 09 13:35:10 2018"},"message":"[array] Add counter for sorting non-packed JSArrays.\n\nThis CL adds a counter for sorting non-packed JSArrays where\nObject.prototype was modified, or the prototype of the instance\ndiffers from Array.prototype.\n\nThis is the V8 side of the change.\nThe Chromium-side CL: https://crrev.com/c/1051651\n\nR=jgruber@chromium.org\n\nBug: v8:7382\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I3ce9789a5df4bb9af5d1bfc89681fcd112e28e83\nReviewed-on: https://chromium-review.googlesource.com/1051650\nCommit-Queue: Simon Zünd <szuend@google.com>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53101}","milestone":68},{"_id":"11aaf0fb84f979a4f09e63c65f500350e053e221","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Fri May 04 14:19:03 2018"},"commit":"11aaf0fb84f979a4f09e63c65f500350e053e221","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 09 13:17:07 2018"},"message":"[api] Move tagging scheme definition up in include/v8.h\n\n... in order to be able to use it in other constants definitions in the header.\n\nBug: v8:7570\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Id5d6ae34ab401ecf063bf5897b87b6bb87c24960\nReviewed-on: https://chromium-review.googlesource.com/1032782\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53097}","milestone":68},{"_id":"8aee014194a42c358946836fbeb355802f6e7852","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Tue May 08 12:57:40 2018"},"commit":"8aee014194a42c358946836fbeb355802f6e7852","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 08 14:13:29 2018"},"message":"[wasm] Remove the wasm-stream-compilation flag\n\nIn addition to a git grep I ran the\nvirtual/enable_wasm_streaming/http/tests/wasm_streaming/wasm_response_apis.html\nlayout test locally to confirm that the flag is not used in Chrome.\n\nR=titzer@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I00d013b85b585d26e50aacaeb82fb0b1ce1ff56c\nReviewed-on: https://chromium-review.googlesource.com/1049965\nReviewed-by: Ben Titzer <titzer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53072}","milestone":68},{"_id":"9a49396c7c5ad0a4355ccf8c715af4f8270808dc","author":{"name":"Hidy Han","email":"hidyhan@chromium.org","time":"Fri May 04 18:10:36 2018"},"commit":"9a49396c7c5ad0a4355ccf8c715af4f8270808dc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 07 20:47:19 2018"},"message":"Provide API to expose non-empty top source url.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;master.tryserver.blink:linux_trusty_blink_rel\nChange-Id: I6390806935ada277db965718a804ab090b3be5dd\nReviewed-on: https://chromium-review.googlesource.com/1041157\nReviewed-by: Pavel Feldman <pfeldman@chromium.org>\nReviewed-by: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCommit-Queue: Hidy Han <hidyhan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53047}","milestone":68},{"_id":"23652c5f4cd07dd6304f78b407541c6a02caf60e","author":{"name":"Eugene Ostroukhov","email":"eostroukhov@chromium.org","time":"Fri May 04 16:37:50 2018"},"commit":"23652c5f4cd07dd6304f78b407541c6a02caf60e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 07 16:54:59 2018"},"message":"[tracing] Custom tag for the traceEvents array\n\nThis API will be used by Node.js to provide output compatible with\nChrome devtools.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I265495f8af39bfc78d7fdbe43ac308f0920e817d\nReviewed-on: https://chromium-review.googlesource.com/1044491\nReviewed-by: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Eugene Ostroukhov <eostroukhov@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53041}","milestone":68},{"_id":"4b52f964807c269bbede2b390109cc7fa6d16729","author":{"name":"Erik Luo","email":"luoe@chromium.org","time":"Fri May 04 15:55:12 2018"},"commit":"4b52f964807c269bbede2b390109cc7fa6d16729","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri May 04 16:47:24 2018"},"message":"[debug] add ability to do side-effect-free call to NewInstance\n\nCreating a new instance from a v8::Function will invoke its\nconstructor. If it is an API callback that has not been marked as\nkHasNoSideEffect, this CL introduces a way to invoke it without\nthrowing.\n\nCalls within the constructor are still checked for side effects.\n\nBug: chromium:829571\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ia4e410d487e2847bc511cb96f0be30a3563991f6\nReviewed-on: https://chromium-review.googlesource.com/1034116\nCommit-Queue: Erik Luo <luoe@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53003}","milestone":68},{"_id":"2d3f6f9103518ae57509f2e94ce89aaf7923504e","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Fri May 04 13:16:23 2018"},"commit":"2d3f6f9103518ae57509f2e94ce89aaf7923504e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri May 04 14:52:29 2018"},"message":"[api] Add Module::GetUnboundScript()\n\nThis method is intended for use by code caching as follows:\n\n1. The module is compiled (and perhaps instantiated).\n2. The embedder fetches and stores the module's unbound script (i.e.\n   the shared function info).\n3. Module evaluation, maybe triggering lazy compilation.\n4. Generated code for the module (which hangs off the shared function\n   info) is inserted into the code cache.\n\nSubsequent module loads can load from the code cache prior to\nevaluation.\n\nBug: v8:7685\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I80018cd921ab1a18323906a548b249e19d9f9509\nReviewed-on: https://chromium-review.googlesource.com/1041745\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52998}","milestone":68},{"_id":"1a0efd803ae80e4b6caa1e501a7fc3d955d2396d","author":{"name":"Benoît Lizé","email":"lizeb@chromium.org","time":"Wed May 02 12:46:45 2018"},"commit":"1a0efd803ae80e4b6caa1e501a7fc3d955d2396d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 03 13:43:55 2018"},"message":"Report the per-isolate total size of scripts source.\n\nAs with other code size stats, this doesn't distinguish between live and\ndead objects, and doesn't scan the young generation.\n\nAlso make ExternalString::is_short() const.\n\nBug: chromium:837659\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I72815edb719ba61d9727e226ff1da0fc4af22a24\nReviewed-on: https://chromium-review.googlesource.com/1032994\nCommit-Queue: Benoit L <lizeb@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52955}","milestone":68},{"_id":"fd2d5314c66db8033139c07cd6e3e11776457fb5","author":{"name":"Michaël Zasso","email":"mic.besace@gmail.com","time":"Wed May 02 14:25:19 2018"},"commit":"fd2d5314c66db8033139c07cd6e3e11776457fb5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 03 07:30:37 2018"},"message":"[V8 Platform] Include missing header for abort()\n\nAdd an include of stdlib.h for the abort function. Compilation fails\non FreeBSD without it. See Node.js issue:\nhttps://github.com/nodejs/node-v8/issues/56\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I67ac21fdc9bc1072d5aaf4f7180dcf4000a938c9\nReviewed-on: https://chromium-review.googlesource.com/1039705\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Michaël Zasso <mic.besace@gmail.com>\nCr-Commit-Position: refs/heads/master@{#52934}","milestone":68},{"_id":"4ac96190f74f94f6950c3c8c817ae444efc22b6b","author":{"name":"Gabriel Charette","email":"gab@chromium.org","time":"Mon Apr 30 16:52:06 2018"},"commit":"4ac96190f74f94f6950c3c8c817ae444efc22b6b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 30 19:05:40 2018"},"message":"[V8 Platform] Better WorkerThreads APIs.\n\nAs discussed @ https://chromium-review.googlesource.com/c/chromium/src/+/957761#message-4ba6c1bf637f91507544efc89a31e3e4dd407715\nand again @ https://chromium-review.googlesource.com/c/chromium/src/+/957761#message-6d0430e640c82f2d5463259fecdc7fabf945b958\n\nGet rid of task runners for WorkerThreads API (use case is always a\none-off task in which case a static call is fine -- just like in\nChromium's base/task_scheduler/post_task.h)\n\nCalling into V8Platform* from any worker thread is safe, what was previously\nunsafe was using an Isolate* from worker threads but Isolate* was dropped\nfrom the new worker threads APIs so this is now irrelevant.\n\nBug: chromium:817421\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Idd2dbc081edfbcb8985eeb45eb64ffb2555fcf7c\nReviewed-on: https://chromium-review.googlesource.com/978443\nCommit-Queue: Gabriel Charette <gab@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52893}","milestone":68},{"_id":"4b13a22ff477d56ead2ee452ac4bba52d8f05e92","author":{"name":"Gabriel Charette","email":"gab@chromium.org","time":"Mon Apr 30 16:50:03 2018"},"commit":"4b13a22ff477d56ead2ee452ac4bba52d8f05e92","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 30 18:39:51 2018"},"message":"[V8 Platform] Introduce CallDelayedOnWorkerThread()\n\nGetWorkerThreadsTaskRunner() was about to be phased out [1] but v8\nr52818 landed ahead  of it.\n\nAdd CallDelayedOnWorkerThread() to the new worker thread API to support\nthis use case before phasing out GetWorkerThreadsTaskRunner()\n\n[1] https://chromium-review.googlesource.com/c/v8/v8/+/978443\n\nImplemented it in d8+cctest+default-platform right away to avoid\nrequiring a non-null Isolate* (and yet another transitional API).\n\nR=ahaas@chromium.org, kozyatinskiy@chromium.org\n\nBug: chromium:817421\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;master.tryserver.blink:linux_trusty_blink_rel\nChange-Id: I2bee08fee08cf15a664d31cc6817e21cebe1d140\nReviewed-on: https://chromium-review.googlesource.com/1033584\nCommit-Queue: Gabriel Charette <gab@chromium.org>\nReviewed-by: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52892}","milestone":68},{"_id":"afd73a4856b69eea1ae1576a1d813e5b1f97acf7","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Mon Apr 16 10:32:04 2018"},"commit":"afd73a4856b69eea1ae1576a1d813e5b1f97acf7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 26 14:53:22 2018"},"message":"[api] deprecate old code caching APIs that require source string.\n\nR=jgruber@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I62955f95812a2c6ac04599c437971863a73af66d\nReviewed-on: https://chromium-review.googlesource.com/1014103\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52817}","milestone":68},{"_id":"e81b0db78744b8d3b8cd35af160280e82bb74d35","author":{"name":"Alexey Kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Wed Apr 25 16:35:56 2018"},"commit":"e81b0db78744b8d3b8cd35af160280e82bb74d35","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 25 18:11:58 2018"},"message":"[runtime] added v8::Isolate::SafeForTerminationScope and isolate flag\n\nWhen only_terminate_in_safe_scope flag is passed as CreateParams for\nv8::Isolate, V8 does not trigger intrruption for termination if there\nis no explicit SafeForTerminationeScope.\nScope enables termination only in direct v8 calls, any recursive calls\nrequire explicit SafeForTerminationScope.\n\nR=yangguo@chromium.org\n\nBug: chromium:820640\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Iac17e30a4b47aa84e70e9218ca0adca9d07f726e\nReviewed-on: https://chromium-review.googlesource.com/1025390\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52793}","milestone":68},{"_id":"2393710a27afdb6e9eba99a8160d851543821783","author":{"name":"Predrag Rudic","email":"predrag.rudic@mips.com","time":"Wed Apr 25 06:28:35 2018"},"commit":"2393710a27afdb6e9eba99a8160d851543821783","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 25 08:29:20 2018"},"message":"[bigint] Add big endian support for BigInts serialization\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I3fc1b53c43e53e12e041178912f372f33068d67c\nReviewed-on: https://chromium-review.googlesource.com/1023418\nCommit-Queue: Ivica Bogosavljevic <ivica.bogosavljevic@mips.com>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52775}","milestone":68},{"_id":"9b3dafb99a1c0ed272c90e776b17a23f1acda0d9","author":{"name":"Erik Luo","email":"luoe@chromium.org","time":"Thu Apr 19 18:08:02 2018"},"commit":"9b3dafb99a1c0ed272c90e776b17a23f1acda0d9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 24 22:52:48 2018"},"message":"[debug] expose SideEffectType when setting template accessors\n\nThis expands the SideEffectType flag to cover whitelisting embedder\ncallbacks that are setup with Template accessors.\n\n- v8::ObjectTemplate::SetNativeDataProperty\n- v8::ObjectTemplate::SetLazyDataProperty\n- v8::ObjectTemplate::SetAccessor\n\nBug: v8:7515\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ieda6c793141ab249c4f41d00e6572fe2a29ac629\nReviewed-on: https://chromium-review.googlesource.com/1015896\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Erik Luo <luoe@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52770}","milestone":68},{"_id":"5c9b30ae38101d89ea4d643b9b1dc087f184976e","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Tue Apr 17 14:35:13 2018"},"commit":"5c9b30ae38101d89ea4d643b9b1dc087f184976e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 23 14:48:46 2018"},"message":"[api] Split isolate allocation and initialization\n\nAt the moment, the isolate is allocated and initialized in a single\nstep. This has the downside that the platform cannot register the\nisolate before the isolate gets initialized, and therefore the platform\nis not available for the isolate during initialization. With this CL we\nregister the uninitialized isolate on the platform and initialize the\nisolate after that.\n\nThis change is needed to allow the creation of task runners already\nduring the initialization of the isolate.\n\nThe related chromium CL: https://crrev.com/c/1015020\n\nR=yangguo@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I52e89388a757f2693d1a800e7aa7701aa0080795\nReviewed-on: https://chromium-review.googlesource.com/1014044\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52731}","milestone":68},{"_id":"b3738e658345adabaa958b9f9a94ca01fc87d5e4","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Thu Apr 19 13:45:52 2018"},"commit":"b3738e658345adabaa958b9f9a94ca01fc87d5e4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 19 14:58:30 2018"},"message":"[api] Deprecate {Create,WarmUp}SnapshotDataBlob\n\nThese functions are now unused within V8, as we need tighter control in\nmksnapshot for creating embedded.cc.\n\nEmbedders should switch to using SnapshotCreator directly.\n\nBug: v8:6666\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Id231b3d1fdf50e06c9278f13d095186364264b86\nReviewed-on: https://chromium-review.googlesource.com/1019442\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52692}","milestone":68},{"_id":"7d291c7286dfb74fea631d94ac45b020b3a3dd88","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Mon Apr 16 12:06:11 2018"},"commit":"7d291c7286dfb74fea631d94ac45b020b3a3dd88","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 17 08:26:43 2018"},"message":"[heap] Add a read-only permission\n\nAdd a new permission kRead to PageAllocator::Permission and\nOS::MemoryPermission and implement it in platform-*.\n\nNot used yet, because it needs corresponding changes in chromium.\n\nBug: v8:7464\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I9f84251eff593536cbcc1cde04641d696c79d65c\nReviewed-on: https://chromium-review.googlesource.com/1006756\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52636}","milestone":68},{"_id":"55110038a121062f514374eaaed946547f0efed1","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Tue Apr 17 00:43:12 2018"},"commit":"55110038a121062f514374eaaed946547f0efed1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 17 03:19:02 2018"},"message":"[bigint] API: Implement missing Big{Int,Uint}64Array::Cast\n\nThis doesn't change the API, it just makes it functional: the\nfunctions were declared already, but they lacked an implementation\nso far. Trying to use them in Blink detects that issue.\n\nBug: v8:6791\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I48902a5bba4a42f2922eafd22858d584731fc777\nReviewed-on: https://chromium-review.googlesource.com/1014668\nReviewed-by: Daniel Clifford <danno@chromium.org>\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52632}","milestone":68},{"_id":"f7d6b19f6c674c056496b6995d2df5ef2684b9ae","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Tue Apr 17 00:59:05 2018"},"commit":"f7d6b19f6c674c056496b6995d2df5ef2684b9ae","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 17 02:02:18 2018"},"message":"[ubsan] Fix many static_cast<int32_t> with undefined behavior\n\nCasting from a floating-point type to an integer type is undefined behavior\nif the integral part of the float cannot be represented in the range of the\nint.\n\nBug: v8:3770, chromium:831145\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;luci.v8.try:v8_linux_noi18n_rel_ng\nChange-Id: I2e85ea8b0f09bbeeb3e0dcc1135fc747fa312f6d\nReviewed-on: https://chromium-review.googlesource.com/1011651\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52631}","milestone":68},{"_id":"a440efb27f5b6e27bbc00d8e0f29d0c395cab00e","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Mon Apr 16 07:56:17 2018"},"commit":"a440efb27f5b6e27bbc00d8e0f29d0c395cab00e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Apr 16 09:10:44 2018"},"message":"[api] do not require source string for producing code cache.\n\nThe embedder should not need to keep track of the source string.\n\nR=jgruber@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ie27df755a22fbcae7b6e87a435419d2d8f545558\nReviewed-on: https://chromium-review.googlesource.com/1013482\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52614}","milestone":68},{"_id":"39d546a24022b62b00aedf7b556ac6c9e2306aab","author":{"name":"Gus Caplan","email":"me@gus.host","time":"Fri Apr 13 02:56:48 2018"},"commit":"39d546a24022b62b00aedf7b556ac6c9e2306aab","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Apr 13 18:26:36 2018"},"message":"[api] introduce v8::Value::IsModuleNamespaceObject\n\nThis allows an embedder to check if a Value is a module namespace object.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Idffceff451dd5f5c6a53d4cb3ce02c1c2c5b653c\nReviewed-on: https://chromium-review.googlesource.com/1011762\nReviewed-by: Georg Neis <neis@chromium.org>\nCommit-Queue: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52597}","milestone":68},{"_id":"c6e3e1c0a8ef03aa928c8caad352b13ab84eb611","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Apr 12 10:55:22 2018"},"commit":"c6e3e1c0a8ef03aa928c8caad352b13ab84eb611","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 12 10:58:04 2018"},"message":"Update version to 6.8\n\nTBR=machenbach@chromium.org\nNOTRY=true\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ifd0eee86da0bf8b8e234b6f55ddce77239d0a3a5\nReviewed-on: https://chromium-review.googlesource.com/1009905\nCommit-Queue: Michael Hablich <hablich@chromium.org>\nReviewed-by: Michael Hablich <hablich@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52570}","milestone":68},{"_id":"1def6cd4a340c66e88efb7584215abcd1b732bbf","author":{"name":"Alexei Filippov","email":"alph@chromium.org","time":"Wed Apr 11 20:43:03 2018"},"commit":"1def6cd4a340c66e88efb7584215abcd1b732bbf","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 11 21:31:07 2018"},"message":"[cpu-profiler] Automatically create TracingCpuProfiler\n\nPreviously embedder had to create an instance of TracingCpuProfiler explicitly.\nThe patch makes the profiler created automatically for every isolate.\nThe profiler has no overhead unless tracing with v8.cpu_profiler category is enabled.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I9369c2c56bcddc72093eda33dc2bc185c9253b4a\nReviewed-on: https://chromium-review.googlesource.com/1006049\nCommit-Queue: Alexei Filippov <alph@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52552}","milestone":68},{"_id":"3dd5c6fe38355b8323597341409b37f931de5a85","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Mon Jul 16 21:01:31 2018"},"commit":"3dd5c6fe38355b8323597341409b37f931de5a85","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 16 21:53:26 2018"},"message":"[string] deprecate String::Utf8Length\n\nDeprecate String::Utf8Length in favor of a new, similar function that\ntakes the Isolate used for the String::Flatten call as an argument.\n\nBUG: v8:7786\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Icaf04b272679fd853e9cdbe6c7088f63e9aacb95\nReviewed-on: https://chromium-review.googlesource.com/1124724\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54476}","milestone":69},{"_id":"8a011b57d8b26e9cfe1c20a2ef26adb14be6ecc2","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Mon Jul 16 13:28:49 2018"},"commit":"8a011b57d8b26e9cfe1c20a2ef26adb14be6ecc2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 16 14:33:24 2018"},"message":"[explicit isolates] Remove nearly all GetIsolates in api.cc\n\nThis marks the following methods as V8_DEPRECATE_SOON and adds new\nversions that take Isolate* as their first parameter:\nPrimitiveArray::Set\nPrimitiveArray::Get\nStackTrace::GetFrame\nString::Write\nString::WriteOneByte\nString::WriteUtf8\nString::Concat\nStringObject::New\n\nAdditionally StackFrameInfo, Module and TemplateInfo are marked as\nNeverReadOnlySpaceObject so their GetIsolates calls are safe.\n\nIn api.cc, ContextFromHeapObject is split into\nContextFromNeverReadOnlySpaceObject and UnsafeContextFromHeapObject,\nwhere the latter uses the deprecated methods but is only called from\nmethods that were themselves already marked V8_DEPRECATE_SOON.\n\nDeprecation warnings for using HeapObject::GetHeap/GetIsolate are\nsuppressed for all the uses in V8_DEPRECATE_SOON methods so that stats\nproduced using tools/collect_deprecation_stats.sh don't show them.\n\nBug: v8:7786\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I48799b5599711661b14d0cd04f21a0a00322da4a\nReviewed-on: https://chromium-review.googlesource.com/1136641\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54469}","milestone":69},{"_id":"6ee834532d6f924f6057584085fa79b4777c396a","author":{"name":"Joyee Cheung","email":"joyee@igalia.com","time":"Thu Jul 12 07:52:20 2018"},"commit":"6ee834532d6f924f6057584085fa79b4777c396a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 12 13:42:18 2018"},"message":"[heap-profiler] Allow embedder to specify edge names\n\nThis patch adds a variant of EmbedderGraph::AddEdge() which\nallows the embedder to specify the name of an edge. The edges\nadded without name are element edges with auto-incremented indexes\nwhile the edges added with names will be internal edges with\nthe specified names for more meaningful output in the heap\nsnapshot.\n\nRefs: https://github.com/nodejs/node/pull/21741\nBug: v8:7938\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I8feefa2cf6911743e24b3b2024e0e849b0c65cd3\nReviewed-on: https://chromium-review.googlesource.com/1133299\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54412}","milestone":69},{"_id":"7971f9d6f747708b2847aa5a485cbff1f7a446ea","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Fri Jul 06 10:42:15 2018"},"commit":"7971f9d6f747708b2847aa5a485cbff1f7a446ea","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 12 09:06:28 2018"},"message":"[wasm] Prepare API changes for WebAssembly.instantiateStreaming\n\nThis is the first CL to refactor WebAssembly.instantiateStreaming to\nmake it spec compliant again. The design doc where the whole change is\ndiscussed is available in the tracking bug. The tracking bug also\nreferences prototype implementations of the whole change, which includes\nthe changes in this CL.\n\nTests for the new API functions will be added with the second V8 CL\nwhich adds the implementation of the API functions.\n\nR=ulan@chromium.org\n\nBug: chromium:860637\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ia1048b7ca0291c824ef4212ebde2c6054e102069\nReviewed-on: https://chromium-review.googlesource.com/1127667\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54393}","milestone":69},{"_id":"8de19ddbcf872c2c0928ea2d02d4f086bee0eafa","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Jul 11 11:23:10 2018"},"commit":"8de19ddbcf872c2c0928ea2d02d4f086bee0eafa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 11 12:25:40 2018"},"message":"[unified-heap] Add finalization trigger\n\nAllows embedders using the EmbedderHeapTracer to synchronously finalize\nan already running garbage collection\n\nBug: chromium:843903\nTbr: ulan@chromium.org\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Iea01451ea2c1204c34dc7904732abae6b63e1704\nReviewed-on: https://chromium-review.googlesource.com/1128971\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54378}","milestone":69},{"_id":"848f989e3d5e77f8ff8ab463dba94b1ba631be3e","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Jul 06 12:25:51 2018"},"commit":"848f989e3d5e77f8ff8ab463dba94b1ba631be3e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 09 08:06:49 2018"},"message":"[embedder-tracing] Deprecate NumberOfWrappersToTrace\n\nDeprecates EmbedderHeapTracer::NumberOfWrappersToTrace and replaces it\nwith EmbedderHeapTracer::IsTracingDone.\n\nV8 only really cares about the final state (emptiness) here and\nembedders may choose implementations that have a hard time determinining\nexact size for their work queues.\n\nBug: chromium:843903\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I1e141c47771ef08aab7dbe204e8175cfee99cf92\nReviewed-on: https://chromium-review.googlesource.com/1127599\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54311}","milestone":69},{"_id":"907d7bcd18c13a04a14eea6699e54167494bf9f9","author":{"name":"Benedikt Meurer","email":"bmeurer@chromium.org","time":"Thu Jul 05 13:18:34 2018"},"commit":"907d7bcd18c13a04a14eea6699e54167494bf9f9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 09 06:06:39 2018"},"message":"[promise] Implement Swallowed Rejection Hook.\n\nThis extends the current Promise Rejection Hook with two new events\n\n  kPromiseRejectAfterResolved\n  kPromiseResolveAfterResolved\n\nwhich are used to detect (and signal) misuse of the Promise constructor.\nSpecifically the common bug like\n\n  new Promise((res, rej) => {\n    res(1);\n    throw new Error(\"something\")\n  });\n\nwhere the error is silently swallowed by the Promise constructor without\nthe user ever noticing can be caught via this hook.\n\nDoc: https://goo.gl/2stLUY\nBug: v8:7919\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I890a7e766cdd1be88db94844fb744f72823dba33\nReviewed-on: https://chromium-review.googlesource.com/1126099\nReviewed-by: Maya Lekova <mslekova@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54309}","milestone":69},{"_id":"c7ad1ddd44e2f1424be75f032232ac826c88c7bc","author":{"name":"Toon Verwaest","email":"verwaest@chromium.org","time":"Thu Jul 05 13:09:58 2018"},"commit":"c7ad1ddd44e2f1424be75f032232ac826c88c7bc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 05 14:22:44 2018"},"message":"[scanner] Drop lonely byte support as it's unused by blink anyway.\n\nThe embedder should ultimately be responsible for handling this since they\nanyway give us a copy of the data. They can easily make sure that the chunks we\nget do not have lonely bytes.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ie862107bbbdd00c4d904fbb457a206c2fd52e5d0\nReviewed-on: https://chromium-review.googlesource.com/1127044\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54262}","milestone":69},{"_id":"ce409375b3d2a179508a5dfe4d50d9fdf052c803","author":{"name":"Ross McIlroy","email":"rmcilroy@chromium.org","time":"Wed Jul 04 15:21:47 2018"},"commit":"ce409375b3d2a179508a5dfe4d50d9fdf052c803","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 04 16:53:37 2018"},"message":"[sfi] Reduce FunctionTokenPosition and ExpectedNofProperties to 16 bits.\n\nChanges SharedFunctionInfo to store a function_token_offset, relative\nto the start_position, instead of the full function_token_position.\nThis enables us to reduce both FunctionTokenPosition and\nExpectedNofProperties to 16 bits each, saving 32 bits per SFI.\n\nBUG=chromium:818642,chromium:783853\nTBR=yangguo@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I45aefcec605c1da502053c23c73564ceaed6c9b5\nReviewed-on: https://chromium-review.googlesource.com/1122982\nCommit-Queue: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54220}","milestone":69},{"_id":"c5c4b588f18900a6c9659690a71b0affcf7bc33a","author":{"name":"Rodrigo Bruno","email":"rfbpb@google.com","time":"Wed Jul 04 09:31:54 2018"},"commit":"c5c4b588f18900a6c9659690a71b0affcf7bc33a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 04 10:55:26 2018"},"message":"[heap] Forcing external strings to be registered in the external string table.\n\nBug: chromium:845409\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I2ab1ca18a900828e4e116f1b087925319d41bf97\nReviewed-on: https://chromium-review.googlesource.com/1124845\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Rodrigo Bruno <rfbpb@google.com>\nCr-Commit-Position: refs/heads/master@{#54203}","milestone":69},{"_id":"477df066dbb82c86ac9edbc037a84896fd9b3dea","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Thu Jun 28 17:13:40 2018"},"commit":"477df066dbb82c86ac9edbc037a84896fd9b3dea","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jul 02 05:39:36 2018"},"message":"[API] Expand BigInt API\n\nProvide a more complete BigInt API.\n\nBug: v8:7712\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ic8562d616f3125deabdf8b52c7019b191bef0e07\nReviewed-on: https://chromium-review.googlesource.com/1101198\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#54122}","milestone":69},{"_id":"9635e1a3037bbc9355eb4cbb84b9f2415c270fc1","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Fri Jun 22 14:34:47 2018"},"commit":"9635e1a3037bbc9355eb4cbb84b9f2415c270fc1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jun 22 15:45:59 2018"},"message":"[wasm] Move wire bytes to the NativeModule\n\nThe wire bytes are currently stored as {SeqOneByteString} on the JS\nheap. In order to make the {NativeModule} isolate independent, and to\nensure fast access to the wire bytes, they should move to the native\nheap.\n\nR=titzer@chromium.org\n\nBug: chromium:854794, v8:7868, v8:7424\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I36811ec87f780c5b1f6863cd6de89a165aa0b7d5\nReviewed-on: https://chromium-review.googlesource.com/1108208\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ben Titzer <titzer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53977}","milestone":69},{"_id":"e90af2c7026aa28dbfe80924e3517316dd1c3f46","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Thu Jun 21 10:27:53 2018"},"commit":"e90af2c7026aa28dbfe80924e3517316dd1c3f46","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 21 13:17:18 2018"},"message":"[api] Properly define BufferReference instead of CallerOwnedBuffer\n\nThe name {CallerOwnedBuffer} does not make sense in all situations,\nespecially if such an object is returned instead of being passed as\nargument.\nI am working on moving the wasm wire bytes off the JS heap, and hence\nwill return unowned references via the API. To prepare this change, I\ndeprecate the existing {CallerOwnedBuffer} and introduce a new\n{BufferReference} struct with proper field names.\n\nR=titzer@chromium.org, adamk@chromium.org\n\nBug: v8:7868\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ic8953951447038a831b15a336a52a199bfbeafd5\nReviewed-on: https://chromium-review.googlesource.com/1108207\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ben Titzer <titzer@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53929}","milestone":69},{"_id":"4da05e97ad419fe924f5d18cc16b57c387434f38","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Mon Jun 11 22:10:25 2018"},"commit":"4da05e97ad419fe924f5d18cc16b57c387434f38","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 12 15:46:37 2018"},"message":"[SAB] Fix flake in Atomics.wait\n\nAs specified in https://tc39.github.io/ecma262/#sec-atomics-wait, the\ncritical section must occur before the load and comparison.\n\nThis slightly changes the `AtomicsWaitCallback` API, but in a\ndirection that arguably makes it more consistent.\n\nAs a drive-by fix, reset `node->waiting_` in case there\nwas an exception from the first callback.\n\nRefs: https://chromium-review.googlesource.com/c/v8/v8/+/1095814\nBug: v8:7836\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I577cdf76cedfe39bc61f783203b543c7c68fc238\nReviewed-on: https://chromium-review.googlesource.com/1096236\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Ben Smith <binji@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53673}","milestone":69},{"_id":"555c811c0d44d9aaaccf8e76059ed24537b3f012","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Fri Jun 01 20:27:43 2018"},"commit":"555c811c0d44d9aaaccf8e76059ed24537b3f012","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jun 06 09:46:57 2018"},"message":"[api] Switch from `SetBuildEmbedderGraphCallback` to `AddBuildEmbedderGraphCallback`\n\n`SetBuildEmbedderGraphCallback`, unlike `SetWrapperClassInfoProvider`,\nassumes a monolithic embedder that can provide all necessary information.\nThat is not the case for e.g. Node.js, which can e.g. provide multiple Node.js\ninstances per V8 Isolate, as well as native addons that may allocate resources\non their own.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ib53dfde82416dd69934b08623e27d674a483ac2d\nReviewed-on: https://chromium-review.googlesource.com/1082441\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53545}","milestone":69},{"_id":"d123f30b6df5507b2acda8e85ad63e05de8ca8a7","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Tue Jun 05 10:45:41 2018"},"commit":"d123f30b6df5507b2acda8e85ad63e05de8ca8a7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 05 11:37:35 2018"},"message":"[ptr-compr] Support 31-bit Smis in lower half-word on 64-bit architectures.\n\nThis CL introduces a new gn argument: v8_enable_pointer_compression which is\nfalse by default. All the changes done in this CL are made under this flag.\n\nUpper half-word of a Smi word must be properly sign-extended according to the\nsign of the lower-half containing the actual Smi value.\n\nBug: v8:7703\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I2b52ab49cd18c7c613130705de445fef44c30ac5\nReviewed-on: https://chromium-review.googlesource.com/1061175\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nReviewed-by: Ben Titzer <titzer@chromium.org>\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53519}","milestone":69},{"_id":"5eaa03b2d3f9ff743173de030416dae16094ef39","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Fri Jun 01 08:47:41 2018"},"commit":"5eaa03b2d3f9ff743173de030416dae16094ef39","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 05 10:11:13 2018"},"message":"[api] Add `AtomicsWaitCallback` for diagnostics\n\nAdd an inspection callback for embedders that allows tracking\nof `Atomics.wait()` calls in order to enable diagnostic tooling\naround it, as well as providing a way to break out of an\n`Atomics.wait()` call without having to fully terminate execution.\n\nThe motivation here is that this allows embedders to perform\nsomewhat customizable deadlock detection.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ib6346747aa3cbffb07cf6abd12645e2d98584f0f\nReviewed-on: https://chromium-review.googlesource.com/1080788\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ben Smith <binji@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53517}","milestone":69},{"_id":"60a858deb189f1013f721219d1459d46f8da53b4","author":{"name":"Alexei Filippov","email":"alph@chromium.org","time":"Wed May 30 21:08:03 2018"},"commit":"60a858deb189f1013f721219d1459d46f8da53b4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 31 23:34:43 2018"},"message":"[cpu-profiler] Deprecate v8::TracingCpuProfiler\n\nIt is created automatically for each isolate.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: If366becb2fe4c02b150cbbe9a2d425f4de63687b\nReviewed-on: https://chromium-review.googlesource.com/1079900\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Alexei Filippov <alph@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53465}","milestone":69},{"_id":"90569cb053f8f9e49fc9cb9351a22a36f3680c90","author":{"name":"Alexei Filippov","email":"alph@chromium.org","time":"Wed May 30 20:51:23 2018"},"commit":"90569cb053f8f9e49fc9cb9351a22a36f3680c90","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 30 22:16:28 2018"},"message":"[cpu-profiler] Remove deprecated Isolate::GetCpuProfiler method.\n\nDo not create a CPU profiler for each isolate implicitly.\n\nBUG=v8:7070\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I6ddd93c58f56591477d8fe4249103a74b7698904\nReviewed-on: https://chromium-review.googlesource.com/1043449\nCommit-Queue: Alexei Filippov <alph@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53449}","milestone":69},{"_id":"70b5fd3b6ec1281e8502c1304cffa70c8558c706","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Wed May 30 06:41:11 2018"},"commit":"70b5fd3b6ec1281e8502c1304cffa70c8558c706","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 30 07:32:48 2018"},"message":"[api] Add option to consume code cache on module compilation\n\nThis extends the ScriptCompiler::CompileModule function with a\nCompileOptions argument. Accepted values are kNoCompileOptions (in\nwhich case, behavior remains unmodified) and kConsumeCodeCache. If the\nlatter is passed, we try to fetch the given module from the code\ncache.\n\nSince it is possible to compile the same source code as both a script\nand a module (and different code is generated for the two cases), a\nnew is_module bit is added to the SerializedCodeData header to\ndisambiguate between the two cases.\n\nBug: v8:7685\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I34b3642505577ed9ed0caedbee5876308c5a53ea\nReviewed-on: https://chromium-review.googlesource.com/1073327\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53432}","milestone":69},{"_id":"0fd549f88545ddeea46e53e6446586825fbfcd3f","author":{"name":"Anna Henningsen","email":"anna@addaleax.net","time":"Wed May 23 15:19:45 2018"},"commit":"0fd549f88545ddeea46e53e6446586825fbfcd3f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 29 14:51:18 2018"},"message":"[api] Allow escaping `MaybeLocal` handles on `EscapableHandleScope`\n\nThis adds a convenience overload for `EscapableHandleScope::Escape()`\nwhich moves `MaybeLocal<T>`s into the outer scope, like a regular\n`Local<T>`.\n\nThis basically moves the syntactic clutter of having to write\n`maybe_local.FromMaybe(Local<Foo>())` instead of just `maybe_local`\nto a central location.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I1d87d75c6564b10e8ec34957bdd3eac46ffea917\nReviewed-on: https://chromium-review.googlesource.com/1056529\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53415}","milestone":69},{"_id":"aa6ce3ee617b2f324bea3a5d8e3263aee4cde6d7","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Mon May 28 08:33:07 2018"},"commit":"aa6ce3ee617b2f324bea3a5d8e3263aee4cde6d7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 28 09:27:24 2018"},"message":"[log][api] introduce public CodeEventListener API\n\nIntroduce a new public API called CodeEventListener to allow embedders\nto better support external profilers and other diagnostic tools without\nrelying on unsupported methods like --perf-basic-prof.\n\nBug: v8:7694\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I063cc965394d59401358757634c9ea84c11517e9\nCo-authored-by: Daniel Beckert <daniel@sthima.com.br>\nReviewed-on: https://chromium-review.googlesource.com/1028770\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53382}","milestone":69},{"_id":"fb436a5e153876c55b725d04db582ad37b225d83","author":{"name":"Hannes Payer","email":"hpayer@chromium.org","time":"Thu May 24 17:18:34 2018"},"commit":"fb436a5e153876c55b725d04db582ad37b225d83","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 24 18:25:32 2018"},"message":"Adding an API to enable and disable the memory savings mode.\n\nBug: chromium:846360\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I5376d4f6f9c8df768d60c63e0a767bf41b51b8b3\nReviewed-on: https://chromium-review.googlesource.com/1071531\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53345}","milestone":69},{"_id":"ecae80cdb350dde1e654c531b56f5b6c44dc8c77","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Wed May 23 08:26:10 2018"},"commit":"ecae80cdb350dde1e654c531b56f5b6c44dc8c77","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 23 09:23:40 2018"},"message":"[cpu-profiler] Add a new profiling mode with a more detailed call tree.\n\nThe current profiling mode (called kLeafNodeLineNumbers in this CL)\nproduces a tree, with each node representing a stack frame that is seen\nin one or more samples taken during profiling. These nodes refer to a\nparticular function in a stack trace, but not to a particular line or\ncallsite within that function.\n\nThis CL adds a new more (called kCallerLineNumbers) which produces a\ndifferent profile tree, where each stack trace seen during profiling,\nincluding the line number, has a unique path in the tree.\n\nThe profile tree was previously keyed on CodeEntry*. Now it is keyed on\nthe pair of CodeEntry* and line_number, meaning it has distinct nodes\nfor those combinations which exist, and each distinct stack trace that\nwas sampled is represented in the tree.\n\nFor optimized code where we have inline frames, there are no line\nnumbers for the inline frames in the stack trace, causing duplicate\nbranches in the tree with kNoLineNumberInfo as the reported line number.\nThis will be addressed in follow-ups.\n\nBug: v8:7018\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I512e221508f5b50ec028306d212263b514a9fb24\nReviewed-on: https://chromium-review.googlesource.com/1013493\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#53298}","milestone":69},{"_id":"c41e3e277c84f3e082d5c20bd0350f44330da72b","author":{"name":"Michaël Zasso","email":"targos@protonmail.com","time":"Wed May 16 18:56:05 2018"},"commit":"c41e3e277c84f3e082d5c20bd0350f44330da72b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri May 18 18:21:41 2018"},"message":"Merged: [V8 Platform] Include missing header for abort()\n\nRevision: fd2d5314c66db8033139c07cd6e3e11776457fb5\n\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=hablich@chromium.org\n\nBug: v8:7764\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I63a7061099c8300ec0a2dfca07fa142466bd32d5\nReviewed-on: https://chromium-review.googlesource.com/1062267\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/branch-heads/6.7@{#77}\nCr-Branched-From: 8457e810efd34381448d51d93f50079cf1f6a812-refs/heads/6.7.288@{#2}\nCr-Branched-From: e921be5c4f2c6407936bde750992dedbf47c1016-refs/heads/master@{#52547}","milestone":67},{"_id":"0da04f78c8626e38c8950d5e659f7fbe1d980091","author":{"name":"Ivica Bogosavljevic","email":"ivica.bogosavljevic@mips.com","time":"Thu Apr 26 08:12:45 2018"},"commit":"0da04f78c8626e38c8950d5e659f7fbe1d980091","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Apr 27 08:16:11 2018"},"message":"Merged: [bigint] Add big endian support for BigInts serialization\n\nRevision: 2393710a27afdb6e9eba99a8160d851543821783\n\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I2856c92fc840d394187a0bffaed0ed7023068d4b\nBug: v8:7696\nReviewed-on: https://chromium-review.googlesource.com/1029855\nReviewed-by: Junliang Yan <jyan@ca.ibm.com>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Ivica Bogosavljevic <ivica.bogosavljevic@mips.com>\nCr-Commit-Position: refs/branch-heads/6.7@{#41}\nCr-Branched-From: 8457e810efd34381448d51d93f50079cf1f6a812-refs/heads/6.7.288@{#2}\nCr-Branched-From: e921be5c4f2c6407936bde750992dedbf47c1016-refs/heads/master@{#52547}","milestone":67},{"_id":"0e511c42c8a4a250618512395cb918bef6f11bf9","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Thu Apr 26 21:12:44 2018"},"commit":"0e511c42c8a4a250618512395cb918bef6f11bf9","committer":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Thu Apr 26 21:19:38 2018"},"message":"Merged: [bigint] API: Implement missing Big{Int,Uint}64Array::Cast\n\nRevision: 55110038a121062f514374eaaed946547f0efed1\n\nBUG=v8:6791, v8:7692\nLOG=N\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=gsathya@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ia16dcd8808e212562db044dfcb6981ef15b6c339\nReviewed-on: https://chromium-review.googlesource.com/1031298\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/branch-heads/6.7@{#39}\nCr-Branched-From: 8457e810efd34381448d51d93f50079cf1f6a812-refs/heads/6.7.288@{#2}\nCr-Branched-From: e921be5c4f2c6407936bde750992dedbf47c1016-refs/heads/master@{#52547}","milestone":67},{"_id":"609c8059b2fc90ea7608f2b9eb809b155f8cc2f0","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Fri Apr 06 09:37:52 2018"},"commit":"609c8059b2fc90ea7608f2b9eb809b155f8cc2f0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Apr 06 16:06:15 2018"},"message":"Remove redundant WARN_UNUSED_RESULT macro\n\nReplace all uses with V8_WARN_UNUSED_RESULT.\nWARN_UNUSED_RESULT was defined in src/base/compiler-specific.h, which\nincludes include/v8config.h, which already defined\nV8_WARN_UNUSED_RESULT.\n\nR=mstarzinger@chromium.org\n\nBug: v8:7570\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I662072294605036ca5aa0c8fdaa0218ac5d95f23\nReviewed-on: https://chromium-review.googlesource.com/998893\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52457}","milestone":67},{"_id":"6da12d420a3cb90c4ba22fd5041602782000f38b","author":{"name":"Erik Luo","email":"luoe@chromium.org","time":"Wed Apr 04 19:04:12 2018"},"commit":"6da12d420a3cb90c4ba22fd5041602782000f38b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 04 20:08:00 2018"},"message":"[debug] expose SideEffectType for whitelisting embedder callbacks\n\nThis exposes new flags to allow embedders to whitelist callbacks as\nside-effect-free during evaluation with throwOnSideEffect.\n\nAccessors and Functions/FunctionTemplates can take a new param on:\n- v8::Object::SetNativeDataProperty\n- v8::Object::SetLazyDataProperty\n- v8::Object::SetAccessor\n- v8::FunctionTemplate::New\n- v8::FunctionTemplate::NewWithCache\n- v8::Function::New\n\nWhile Interceptors can be created with an additional flag:\nPropertyHandlerFlag::kHasNoSideEffect\n\nBug: v8:7515\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I14823316bdd6de6d362a1104b65f13504d0db056\nReviewed-on: https://chromium-review.googlesource.com/994550\nCommit-Queue: Erik Luo <luoe@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52367}","milestone":67},{"_id":"34cf25855ccd925a9caf8614a8bfd6ac78614df9","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Thu Mar 29 15:39:08 2018"},"commit":"34cf25855ccd925a9caf8614a8bfd6ac78614df9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Apr 03 09:41:11 2018"},"message":"Add Ulan to API owners and make it noparent.\n\nThis ensures that we have gatekeepers for API changes.\n\nR=adamk@chromium.org\n\nChange-Id: I7a78f9590dfc444a20044fe323b9470f4f9004a3\nReviewed-on: https://chromium-review.googlesource.com/986267\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52318}","milestone":67},{"_id":"e71055211c11d498c3a415715b0454e430caa0a6","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Tue Mar 27 10:44:13 2018"},"commit":"e71055211c11d498c3a415715b0454e430caa0a6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 29 12:53:41 2018"},"message":"[snapshot] extend code caching support to CompileFunctionInContext.\n\nR=leszeks@chromium.org, mythria@chromium.org\n\nBug: v8:7554\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I3eb29d67dfa64887fb52ac706d069e15dd2d0e85\nReviewed-on: https://chromium-review.googlesource.com/980944\nReviewed-by: Mythri Alle <mythria@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52299}","milestone":67},{"_id":"84a80e103b090f35334fe2d168ece17489395417","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Mon Mar 26 11:33:00 2018"},"commit":"84a80e103b090f35334fe2d168ece17489395417","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 27 08:29:56 2018"},"message":"[heap,api] Introduce near-heap-limit callbacks.\n\nThe embedder can get notification when V8 heap size approaches the heap limit\nand can extend the heap limit if needed using\n- v8::Isolate::AddNearHeapLimitCallback\n- v8::Isolate::RemoveNearHeapLimitCallback\n\nThis generalizes the exiting v8::debug::SetOutOfMemoryCallback API.\n\nBug: chromium:824214\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;master.tryserver.blink:linux_trusty_blink_rel\nChange-Id: Ia444cb7efb6fe85c57fa3785e8fd1d8b654a5224\nReviewed-on: https://chromium-review.googlesource.com/979447\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52238}","milestone":67},{"_id":"64dbd26e1ca19eb2af5680b611a12e8602994c01","author":{"name":"Franziska Hinkelmann","email":"franzih@chromium.org","time":"Mon Mar 26 13:51:14 2018"},"commit":"64dbd26e1ca19eb2af5680b611a12e8602994c01","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 27 04:15:04 2018"},"message":"[api] Deprecate SetNamedPropertyHandler\n\nI replaced usages in Chromium and other embedders. I think we can safely\ndeprecate and soon remove.\n\nDrive-by fix: Fixed some typos.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ia8e35adb2abebed3966403af61eda1ede319e5c3\nReviewed-on: https://chromium-review.googlesource.com/980452\nReviewed-by: Peter Marshall <petermarshall@chromium.org>\nCommit-Queue: Franziska Hinkelmann <franzih@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52236}","milestone":67},{"_id":"1983f3055d48275cfbf8a1d7c842c4224ecd3125","author":{"name":"Gabriel Charette","email":"gab@chromium.org","time":"Mon Mar 26 16:44:23 2018"},"commit":"1983f3055d48275cfbf8a1d7c842c4224ecd3125","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Mar 26 17:43:22 2018"},"message":"[V8 Platform] Make CallOnWorkerThread use std::unique_ptr\n\nThis is done now while embedders have yet to adapt to the new API before\nit becomes hard to migrate.\n\nAlso renamed variable/methods to use \"worker threads\" rather than\n\"background\" nomenclature.\n\nExtracted from https://chromium-review.googlesource.com/c/v8/v8/+/978443/7\nwhile resolving the more contentious bits around using task runners.\n\nTBR=rmcilroy@chromium.org\n\nBug: chromium:817421\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ie3ddf15a708e829c0f718d89bebf3e96d1990c16\nReviewed-on: https://chromium-review.googlesource.com/980953\nCommit-Queue: Gabriel Charette <gab@chromium.org>\nReviewed-by: Gabriel Charette <gab@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52231}","milestone":67},{"_id":"c69b03baec74e0b0c69e9bbedac40b8a7e4377cf","author":{"name":"Daniel Clifford","email":"danno@chromium.org","time":"Thu Mar 22 20:12:42 2018"},"commit":"c69b03baec74e0b0c69e9bbedac40b8a7e4377cf","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Mar 23 16:26:01 2018"},"message":"Fix support for Builtin names for --gdbjit-full\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ib76185e7b6bc893460b97b43cc385412485da20c\nReviewed-on: https://chromium-review.googlesource.com/956464\nCommit-Queue: Daniel Clifford <danno@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52188}","milestone":67},{"_id":"69040ced454e2c8928bc5df49feeceed53896f3d","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Fri Mar 23 10:21:03 2018"},"commit":"69040ced454e2c8928bc5df49feeceed53896f3d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Mar 23 15:26:30 2018"},"message":"[api] Disable in_process_stack_dumping in DefaultPlatform by default.\n\nThis flips the default value of in_process_stack_dumping from enabled\nto disabled. For many embedders the V8 signal handler produces worse\nstack trace than the defaul signal handler.\n\nChange-Id: Idb5ec30dc4b3cefe243be7304d10a02f1dcda167\nReviewed-on: https://chromium-review.googlesource.com/977903\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52186}","milestone":67},{"_id":"79e6f35e80d9e9b51cc590df24cb74bb8a0435ad","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Mon Mar 19 13:53:31 2018"},"commit":"79e6f35e80d9e9b51cc590df24cb74bb8a0435ad","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 21 08:57:17 2018"},"message":"[in-place weak refs] Move weak object tag away from v8.h.\n\nExposing it inside Internals was a hack. The downside of this CL is that heap\nobject tagging is in two places now (v8.h and globals.h).\n\nBUG=v8:7308\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ic7115ab20d67109dd2b62c772d52eeb84fa7d9f7\nReviewed-on: https://chromium-review.googlesource.com/968423\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52093}","milestone":67},{"_id":"7c61c3ce6e9e66182b03217c8f2e6273de20b444","author":{"name":"Eric Holk","email":"eholk@chromium.org","time":"Tue Mar 20 18:03:51 2018"},"commit":"7c61c3ce6e9e66182b03217c8f2e6273de20b444","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 20 18:06:38 2018"},"message":"[wasm] Add new API for enabling trap handler\n\nThe new API supersedes the old `RegisterDefaultSignalHandler` and flag\ncombination. Now the embedder must explicitly call\n`EnableWebAssemblyTrapHandler` to activate the trap handler and optionally\ninstall the default signal handler. The old flag is now used only by D8 to\ndecide whether to call this function.\n\nBug: v8:5277\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I05fbb2138138bfc95b14361aabd712db84789b4a\nReviewed-on: https://chromium-review.googlesource.com/963179\nCommit-Queue: Eric Holk <eholk@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Ben Titzer <titzer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52081}","milestone":67},{"_id":"23a593b9d86a32b6a72094b36080baa29cde7526","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Mon Mar 05 14:34:36 2018"},"commit":"23a593b9d86a32b6a72094b36080baa29cde7526","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 20 13:53:43 2018"},"message":"[api] Deprecate HeapProfiler::SetWrapperClassInfoProvider.\n\nThe embedders should use the EmbedderGraph API. The similar structure\ncan be created with the following steps:\n1) Create a root node for each retainer info group.\n2) Iterate all handles using Isolate::VisitHandlesWithClassIds.\n3) Add an edge from the retainer info node to the v8 wrapper node.\n4) Add an edge from the v8 wrapper node to the retainer info node.\n\nSee how HeapSnapshotRetainedObjectInfo is converted to the new API.\n\nBug: chromium:749490\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I124ae3853354863b4f888e6aa2ea13777dcaa37d\nReviewed-on: https://chromium-review.googlesource.com/948842\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52067}","milestone":67},{"_id":"747d198cad7471e3a007a4acf4fe1b962856802f","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Mon Mar 05 12:10:11 2018"},"commit":"747d198cad7471e3a007a4acf4fe1b962856802f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 20 12:26:43 2018"},"message":"[api] Deprecate HeapProfiler::SetGetRetainerInfosCallback.\n\nThe embedders should use the new EmbedderGraph API to provide retainer\ninfo.\n\nBug: chromium:749490\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Iac8dc1e749ef14277b027f43e799357c5bd413ea\nReviewed-on: https://chromium-review.googlesource.com/948489\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#52059}","milestone":67},{"_id":"6ad63309ed535f318108cef31721d216e7baa3a5","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Thu Mar 15 10:24:37 2018"},"commit":"6ad63309ed535f318108cef31721d216e7baa3a5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 15 12:32:21 2018"},"message":"[api] Restore v8::V8::InitializeICU API.\n\nThis function re-uses the implementation of InitializeICUDefaultLocation.\n\nRemoval of the API breaks embedders' code without providing any benefit.\n\nBug: v8:7561\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I006cd307887ac132f574af26ca9cd1d5e5317644\nReviewed-on: https://chromium-review.googlesource.com/963024\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51956}","milestone":67},{"_id":"9fe417cb7f5ccd915a26afd929d2f5e4e811466d","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Thu Mar 15 09:20:59 2018"},"commit":"9fe417cb7f5ccd915a26afd929d2f5e4e811466d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 15 12:16:38 2018"},"message":"[api] Restore the simple version of Message::GetEndColumn API.\n\nThis also undeprecates Message::GetStartColumn API.\n\nThe simple versions are easier to use for the embedders and have the\nsame implementation as the complex versions.\n\nBug: v8:7560\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I656161b04c5d9de6d1de9435b7825009f96572a5\nReviewed-on: https://chromium-review.googlesource.com/963322\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51951}","milestone":67},{"_id":"bf9ab7294d5db31e54d06ee75371b9ec2e6b5663","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Tue Mar 13 08:28:40 2018"},"commit":"bf9ab7294d5db31e54d06ee75371b9ec2e6b5663","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 13 09:22:30 2018"},"message":"[in-place weak refs] Use WeakArray in Script::shared_function_infos.\n\nFor serializer changes, see goo.gl/Kh2eop\n\nBUG=v8:7308\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I2b790413a4c0d8c8cc0c07ba7b901c965d64eb11\nReviewed-on: https://chromium-review.googlesource.com/955593\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51895}","milestone":67},{"_id":"bf505e6065d2b66a367bb7d9a8f3e187838c7fd8","author":{"name":"Erik Luo","email":"luoe@chromium.org","time":"Fri Mar 09 18:23:37 2018"},"commit":"bf505e6065d2b66a367bb7d9a8f3e187838c7fd8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Mar 09 21:28:00 2018"},"message":"[inspector] support BigInt in inspector\n\n- Label as \"bigint\" in DevTools heap snapshot viewer\n- Treat as new primitive in injected-script-source\n- Show primitive value as property for BigIntObject\n- Adds the \"n\" suffix onto description, both with/without inspector\n  being present\n\nBug: v8:7486\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I47a02e32f9bdd9124a6c91056965574ecd443867\nReviewed-on: https://chromium-review.googlesource.com/940804\nCommit-Queue: Erik Luo <luoe@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51855}","milestone":67},{"_id":"1b9f518d21e89501ec10af913480e75b41384498","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Thu Mar 08 11:40:04 2018"},"commit":"1b9f518d21e89501ec10af913480e75b41384498","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 08 18:18:35 2018"},"message":"[api] introduce v8::Context::GetNumberOfEmbedderDataFields.\n\nThe number of embedder fields grows dynamically, but reading these\nfields do not perform bounds checks. The naming is taken from a similar\nmethod on v8::Isolate.\n\nAlso changed the growing strategy for the backing store to not\nover-allocate.\n\nR=adamk@chromium.org, bmeurer@chromium.org\n\nBug: v8:7533\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I70beab124a32296c940ffabd897a7790bc8ff47a\nReviewed-on: https://chromium-review.googlesource.com/952923\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51822}","milestone":67},{"_id":"e089566716c6f2c5bca71c131dba72c39af66e86","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Wed Mar 07 09:17:47 2018"},"commit":"e089566716c6f2c5bca71c131dba72c39af66e86","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 07 19:21:36 2018"},"message":"[api] unschedule deprecation for v8::Object::GetIsolate.\n\nR=adamk@chromium.org\n\nBug: v8:7288\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: If8e2416a0e9b0915572c2ad37a45e3ea8ca3a75a\nReviewed-on: https://chromium-review.googlesource.com/952924\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51793}","milestone":67},{"_id":"308d4e28f354a84fe9ec0a98c2229ad9fbe72b24","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Tue Mar 06 13:52:53 2018"},"commit":"308d4e28f354a84fe9ec0a98c2229ad9fbe72b24","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 07 06:16:08 2018"},"message":"[cpu-profiler] Move SetIdle() to v8::Isolate\n\nThe VM state is a property of the isolate, not the CPU profiler.\nHaving to create a v8::CpuProfiler instance in order to change\nthe property is somewhat inefficient.\n\nSee https://github.com/nodejs/node/issues/18039 and\nhttps://github.com/nodejs/node/pull/18534 for context.\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I70e31deca6529bccc05a0f4ed500ee268fb63cb8\nReviewed-on: https://chromium-review.googlesource.com/900622\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51779}","milestone":67},{"_id":"58e15ee246974f9bc572d866b726316e61c962e0","author":{"name":"Dan Elphick","email":"delphick@chromium.org","time":"Thu Feb 22 17:53:07 2018"},"commit":"58e15ee246974f9bc572d866b726316e61c962e0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 06 12:07:45 2018"},"message":"Remove ObjectSpace and AllocationAction enums\n\nObjectSpace was only referred to in static_asserts and was otherwise\nremoved in http://codereview.chromium.org/7945009.\n\nAllocationActions's last usage was removed in\nhttps://codereview.chromium.org/1991293002.\n\nBug: v8:7310\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I2ccbf3b674517bc698b4c92754cd0b251229d342\nReviewed-on: https://chromium-review.googlesource.com/931887\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCommit-Queue: Dan Elphick <delphick@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51763}","milestone":67},{"_id":"21b984be72631b1375c2e03fa14c2955ae8c42e8","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Fri Mar 02 20:13:12 2018"},"commit":"21b984be72631b1375c2e03fa14c2955ae8c42e8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 06 07:37:11 2018"},"message":"[api] Add yangguo@ to include/OWNERS\n\nChange-Id: I9854c151c9de636ba1d9ac3733c34485831e6cc4\nReviewed-on: https://chromium-review.googlesource.com/946858\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51752}","milestone":67},{"_id":"07c1e641d9864cb2de9692cf69bccca4b49a6f6a","author":{"name":"Marja Hölttä","email":"marja@chromium.org","time":"Mon Mar 05 09:59:16 2018"},"commit":"07c1e641d9864cb2de9692cf69bccca4b49a6f6a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Mar 05 11:11:48 2018"},"message":"[in-place weak refs] Add in-place weak references & migrate one WeakCell to it.\n\nImplement in-place weak reference handling in GC.\n\nTurn FeedbackVector::optimized_code_or_smi into an in-place weak reference (this\nis the only in-place weak reference at this point).\n\n(See bug for design doc.)\n\nBUG=v8:7308\n\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I0f9f992cb4ee0457c40b7c868317dfb607bfb906\nReviewed-on: https://chromium-review.googlesource.com/873638\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51722}","milestone":67},{"_id":"9568cea8bf422c5cff5555eb8d9a6b4d02d5876d","author":{"name":"Bill Budge","email":"bbudge@chromium.org","time":"Sat Feb 17 14:40:26 2018"},"commit":"9568cea8bf422c5cff5555eb8d9a6b4d02d5876d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Sat Mar 03 12:00:24 2018"},"message":"[API] Remove ArrayBuffer::Allocator virtual memory methods.\n\n- Removes Reserve, Free (overload) and SetProtection methods.\n- Updates comment on enum which we still need to distinguish\n  between allocated and reserved ArrayBuffers.\n\nBug: chromium:799573\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I1b4e08f97c22ae6b6af847fbcdde047be62fecf8\nReviewed-on: https://chromium-review.googlesource.com/924603\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Eric Holk <eholk@chromium.org>\nCommit-Queue: Bill Budge <bbudge@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51714}","milestone":67},{"_id":"ed2e7dc6187b2fe3291be1de5ca3e77e4925d9b8","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Thu Mar 01 00:16:37 2018"},"commit":"ed2e7dc6187b2fe3291be1de5ca3e77e4925d9b8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 01 18:58:38 2018"},"message":"[bigint] Expose BigInt on the API\n\nBug: v8:6791, v8:7486\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I733d0fb886c42928816fe570712ed23f41c8e751\nReviewed-on: https://chromium-review.googlesource.com/938945\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51664}","milestone":67},{"_id":"70222a9d032193d12455d9a1a2c72fa0eda70fa2","author":{"name":"Gabriel Charette","email":"gab@chromium.org","time":"Thu Mar 01 12:05:15 2018"},"commit":"70222a9d032193d12455d9a1a2c72fa0eda70fa2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 01 15:30:35 2018"},"message":"[v8 platform] Rename BackgroundThread methods to WorkerThreads method.\n\nFollow-up to https://chromium-review.googlesource.com/c/v8/v8/+/941442.\n\n\"background\" refers to a priority and is inappropriate to refer to\nworker threads as many tasks posted to worker threads by v8 are in\nfact high priority.\n\nAlso took advantage of this rename to make NumberOfWorkerThreads()\nreturn an int instead of size_t. While it is never negative, int is\nsimpler and Google C++ style guide states to avoid unsigned integers in\nsuch cases (ref. \"On Unsigned Integers\" @\nhttps://google.github.io/styleguide/cppguide.html#Integer_Types).\n\nThe Chromium embedder for that call provided an int which was converted\nto size_t for this override and most often casted back down to int on the\nv8 side, adding churn, and readability overhead.\n\nR=ahaas@chromium.org\n\nBug: v8:7310\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: Ib5280df73d2846b111d985be65a10b049995ea6a\nReviewed-on: https://chromium-review.googlesource.com/941944\nCommit-Queue: Gabriel Charette <gab@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51662}","milestone":67},{"_id":"ce1cc81468c73a3d0a44a0065fbc69f80fa9c429","author":{"name":"Gabriel Charette","email":"gab@chromium.org","time":"Thu Mar 01 11:40:55 2018"},"commit":"ce1cc81468c73a3d0a44a0065fbc69f80fa9c429","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 01 14:32:04 2018"},"message":"[v8 platform] Use V8_DEPRECATED macro for CallOnBackgroundThread().\n\nFollow-up to https://chromium-review.googlesource.com/c/v8/v8/+/941442#message-bc46157bdd4667cb44c2533bfd3201b45c32fe75\n\nTBR=rmcilroy@chromium.org\n\nBug: v8:7310\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: If3afbdca1393e7f3bb264abadd99f83f5a2b554a\nReviewed-on: https://chromium-review.googlesource.com/942823\nCommit-Queue: Gabriel Charette <gab@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Gabriel Charette <gab@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51656}","milestone":67},{"_id":"2600038ddbca59d1b706ada5da5707d9d84f5e78","author":{"name":"Gabriel Charette","email":"gab@chromium.org","time":"Thu Mar 01 09:01:50 2018"},"commit":"2600038ddbca59d1b706ada5da5707d9d84f5e78","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 01 13:00:07 2018"},"message":"[v8 platform] Introduce CallBlockingTaskFromBackgroundThread()\n\nand use it for parallel GC as it blocks the main thread.\n\nOn Chromium this will result in a TaskPriority::USER_BLOCKING task,\nallowing TaskScheduler to prioritize them above all other async work.\n\nR=ahaas@chromium.org\n\nBug: chromium:817421\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng\nChange-Id: I8c782eb045035ce2899214528deae5a45f0e6600\nReviewed-on: https://chromium-review.googlesource.com/941946\nCommit-Queue: Gabriel Charette <gab@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51650}","milestone":67},{"_id":"86b4b5345afc541e920caf3c09cf2c0dcf96de9e","author":{"name":"Gabriel Charette","email":"gab@chromium.org","time":"Thu Mar 01 08:45:52 2018"},"commit":"86b4b5345afc541e920caf3c09cf2c0dcf96de9e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 01 10:35:42 2018"},"message":"[v8 platform] Get rid of unused ExpectedRuntime parameter.\n\nWith a temporary intermediate step to allow adapting embedders before\ngetting rid of the ExpectedRuntime method altogether.\n\nThe method is being renamed to CallOnWorkerThread() as an effort to\ngo away from \"background\" nomenclature for worker threads (\"background\"\nusually refers to a priority but worker threads are commonly used for\nhigh priority tasks in v8).\nOther CLs will follow to rename other \"background\" APIs.\n\nBug: v8:7310\nCq-Include-Trybots: luci.chromium.try:linux_chromium_rel_ng;master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I2fd4eac7458708d4eacb0f4871c982a567a3865e\nReviewed-on: https://chromium-review.googlesource.com/941442\nCommit-Queue: Gabriel Charette <gab@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51645}","milestone":67},{"_id":"4f6df6e346810b60ab6675877079378525f51af6","author":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Tue Feb 27 23:01:53 2018"},"commit":"4f6df6e346810b60ab6675877079378525f51af6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 27 23:26:51 2018"},"message":"[CQ] Let presubmit scripts point to correct LUCI bots\n\nTBR=iannucci@chromium.org\nNOTRY=true\n\nChange-Id: I6bee8db469b43a01402798953a1bcdaf3dc06cf7\nReviewed-on: https://chromium-review.googlesource.com/940421\nCommit-Queue: Michael Achenbach <machenbach@chromium.org>\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51618}","milestone":66},{"_id":"91d87dd70c93e1855c69edfa87d0fb8e78af0586","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Thu Feb 22 14:01:32 2018"},"commit":"91d87dd70c93e1855c69edfa87d0fb8e78af0586","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 22 15:15:29 2018"},"message":"[api] Use consistent comments for WebAssembly API functions\n\nR=adamk@chromium.org\n\nBug: v8:7310\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I5571802230b28cbe272190ef05d42323c592a4ee\nReviewed-on: https://chromium-review.googlesource.com/921062\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51476}","milestone":66},{"_id":"5da78ea40b5f4c013d73f6d3f790f4de61c38404","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Tue Feb 20 13:52:38 2018"},"commit":"5da78ea40b5f4c013d73f6d3f790f4de61c38404","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 22 10:48:03 2018"},"message":"[heap-profiler] Allow embedder to specify node name prefix.\n\nThis patch adds EmbedderGraph::Node::NamePrefix method that will be used\nby Chrome for detached DOM nodes.\n\nBug: chromium:811925\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I89d3b88a3b90ed85addb1d34f08dd15e0559aa9a\nReviewed-on: https://chromium-review.googlesource.com/926362\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51464}","milestone":66},{"_id":"46c4979e860a9aaf4444616955e896e70e72afbf","author":{"name":"Ben Noordhuis","email":"info@bnoordhuis.nl","time":"Wed Feb 21 13:53:53 2018"},"commit":"46c4979e860a9aaf4444616955e896e70e72afbf","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 21 15:04:12 2018"},"message":"Use wider types for max_old_space_size and co.\n\nMake --max_old_space_size and friends work with values >= 2**31.\nSuch values did not work reliably (or sometimes not all) due to\nsigned integer overflow in size computations, which is UB.\n\nFixes https://github.com/nodejs/node/issues/18786.\n\nBug: chromium:814138\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ibe23cef2417fd5b4a727022b8b0d4b50f1417182\nReviewed-on: https://chromium-review.googlesource.com/927063\nCommit-Queue: Ben Noordhuis <info@bnoordhuis.nl>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51433}","milestone":66},{"_id":"d2a370494e737c4ec2b99ca8d7dbe97b4e87d861","author":{"name":"Ross McIlroy","email":"rmcilroy@chromium.org","time":"Thu Feb 15 16:05:21 2018"},"commit":"d2a370494e737c4ec2b99ca8d7dbe97b4e87d861","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Feb 21 11:18:22 2018"},"message":"[Compiler] Move BackgroundParsingTask to compiler.cc\n\nMoves BackgroundParsingTask to compiler.cc and renames as BackgroundCompileTask.\nThis moves code out api.cc and parsing/ into compiler.cc where it belongs.\n\nBUG=v8:7311,v8:5203\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I08a72ab8a6bdb480f519d42b36875d347b801ddc\nReviewed-on: https://chromium-review.googlesource.com/919481\nCommit-Queue: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Mythri Alle <mythria@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51421}","milestone":66},{"_id":"252e8a1c2d629ef5300a3b4610e626b71e75973b","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Tue Feb 20 13:16:34 2018"},"commit":"252e8a1c2d629ef5300a3b4610e626b71e75973b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 20 15:04:48 2018"},"message":"[heap-profiler] Merge embedder nodes and V8 wrapper nodes.\n\nEach DOM node has the corresponding V8 wrapper object. This leads to\napparent duplication in the heap snapshot and may confuse the users.\n\nThis patch allows the embedder to specify V8 wrapper for each embedder\nnode. In the heap snapshot the wrapper node will be merged into the\nembedder node. The resulting node will have the same properties as\nthe embedder node. If the wrapper node name has a tag, then the tag\nis also added to the merged node.\n\nBug: chromium:811925\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I2492f5b28163a78aee707b9ced1b09ac4b203e3f\nReviewed-on: https://chromium-review.googlesource.com/919482\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51394}","milestone":66},{"_id":"466d157cb7f947763126798a374a533f535b35f8","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Mon Feb 19 10:53:00 2018"},"commit":"466d157cb7f947763126798a374a533f535b35f8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 19 11:42:03 2018"},"message":"[api] Add API for annotating retainer of a strong global handle.\n\nThis adds PersistentBase::AnnotateStrongRetainer(const char*) function.\n\nThe annotation is used by the heap snapshot generator to show the edges\nfrom the (Global handles) root to the global handles.\n\nBug: chromium:811842\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I1a9e3e53a53aeaf2b590709fab8dd4ecf7e8f252\nReviewed-on: https://chromium-review.googlesource.com/916788\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Alexei Filippov <alph@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51358}","milestone":66},{"_id":"dda0419ecd14eb8fee094edf184b1283b1a3b419","author":{"name":"Jakob Kummerow","email":"jkummerow@chromium.org","time":"Sat Feb 17 04:01:35 2018"},"commit":"dda0419ecd14eb8fee094edf184b1283b1a3b419","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Sat Feb 17 04:52:29 2018"},"message":"[bigint] Add BigInt64Array, BigUint64Array\n\nBug: v8:6791\nTbr: hpayer@chromium.org\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I637e9084d2fe4869ad0be2fb996149ab9940f346\nReviewed-on: https://chromium-review.googlesource.com/914513\nCommit-Queue: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51342}","milestone":66},{"_id":"1de6157f0afabd2a2588c1bd2ba5fa63cef0f413","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Thu Feb 15 18:11:37 2018"},"commit":"1de6157f0afabd2a2588c1bd2ba5fa63cef0f413","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 15 19:32:35 2018"},"message":"[api] Make all one-arg constructors `explicit`\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I5fc71633f2412c2bec3a4363a40da9920a3e25e2\nReviewed-on: https://chromium-review.googlesource.com/922386\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51315}","milestone":66},{"_id":"0ee594ddfc154afb370749fe7df6ffc8a2b4eb42","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Mon Feb 12 15:25:32 2018"},"commit":"0ee594ddfc154afb370749fe7df6ffc8a2b4eb42","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 15 09:24:28 2018"},"message":"[wasm][api] Remove the WasmModuleObjectBuilder\n\nThe WasmModuleObjectBuilder was the first interface for streaming\ncompilation of WebAssembly. Over time we realized that the interface\nis insufficient, and we introduced the WasmModuleObjectBuilderStreaming\nclass, which is used now for streaming compilation. Since the\nWasmModuleObjectBuilder was never fully functional, I think it is okay\nto remove it without a deprecation period.\n\nR=clemensh@chromium.org, adamk@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ia3ac5f150fdad7bc1ad04ba89aee53538d43ce01\nReviewed-on: https://chromium-review.googlesource.com/913614\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51305}","milestone":66},{"_id":"9009d21b9e372f038b1df20085586eb9f43d6d3b","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Mon Feb 12 12:50:50 2018"},"commit":"9009d21b9e372f038b1df20085586eb9f43d6d3b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 12 19:02:14 2018"},"message":"[api] GetOwnPropertyNames and GetPropertyNames should return Strings\n\nMost of the users of these api methods manually ensure that the returned\nvalues are Strings. With an additional flag we can easily ensure that already\nin V8 and avoid needless api roundtrips.\n\nBug: v8:7358\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I62165d44084abc9f07f5bdaace5105847edca60a\nReviewed-on: https://chromium-review.googlesource.com/901248\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Franziska Hinkelmann <franzih@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51250}","milestone":66},{"_id":"4128082eb181cd1da391c24d1481ffa1c1848da1","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Fri Feb 09 12:38:11 2018"},"commit":"4128082eb181cd1da391c24d1481ffa1c1848da1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 12 14:49:29 2018"},"message":"[api] remove legacy debug API.\n\nR=jgruber@chromium.org\n\nBug: v8:5510\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ic0ba012ed7ff66f034c5a54554b2ab36d1d70d2c\nReviewed-on: https://chromium-review.googlesource.com/911110\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCommit-Queue: ปอ คับ <misspor061853@gmail.com>\nCr-Commit-Position: refs/heads/master@{#51245}","milestone":66},{"_id":"6004c53da337dec12141cb0c53d55fe24179cb27","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Thu Feb 08 10:43:27 2018"},"commit":"6004c53da337dec12141cb0c53d55fe24179cb27","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 09 14:47:49 2018"},"message":"[wasm][streaming] Change the signature of the Abort API function to MaybeLocal\n\nWhen streaming compilation for WebAssembly gets aborted, we reject the\npromise associated with the compilation. However, in some circumstances,\ne.g. when streaming comilation gets aborted because the browser tab gets\nrefreshed, then we want to omit rejecting the promise. In an older CL\n(https://crrev.com/c/876103) we omit rejecting the promise when the\nexception value is null. With this CL the exception value is a MaybeLocal\nso that we document properly that the value can be null. In addition, I\nadded documentation to say that in that case we do not reject the promise.\n\nR=adamk@chromium.org\n\nBug: chromium:803838\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I6a093e61c8ec63f7ae385a7f77ae6178e7b34a06\nReviewed-on: https://chromium-review.googlesource.com/897647\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51211}","milestone":66},{"_id":"239dd8124b9afea52f2983d37c7ac63262a9329f","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Wed Jan 31 19:55:31 2018"},"commit":"239dd8124b9afea52f2983d37c7ac63262a9329f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Feb 01 08:05:14 2018"},"message":"New API for capturing embedder object graph in heap snapshot.\n\nThat patch introduces EmbedderGraph interface that embedders can use to\nrepresent C++ objects that retain or are retained by V8 JS objects.\n\nThe heap snapshot generator adds nodes and edges of the EmbedderGraph to\nthe heap snapshot, allowing arbitrarily complex retaining paths that\ncross V8/Embedder boundary.\n\nThe new functionality is enabled only if the embedder sets the\nBuildEmbedderGraph callback.\n\n\nBug: chromium:749490\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I10a1fa000d6d4ba47fc19d84c7cfc2c619d496fc\nReviewed-on: https://chromium-review.googlesource.com/890521\nReviewed-by: Alexei Filippov <alph@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#51016}","milestone":66},{"_id":"85a13975ab24e8b7a056c272a632a3f194fb3c47","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Tue Jan 30 09:47:35 2018"},"commit":"85a13975ab24e8b7a056c272a632a3f194fb3c47","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 31 06:53:58 2018"},"message":"[api] advance deprecation for ScriptCompiler::CompileFunctionInContext.\n\nR=adamk@chromium.org\n\nBug: v8:7275\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iada634ab275a1a348d14400b3138ac9e5cc08de7\nReviewed-on: https://chromium-review.googlesource.com/892441\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50973}","milestone":66},{"_id":"480aed5595e41baa351dfba3b0d58e1ac2f9a4aa","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Fri Jan 26 23:00:20 2018"},"commit":"480aed5595e41baa351dfba3b0d58e1ac2f9a4aa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 29 21:36:08 2018"},"message":"[api] Advance deprecation of v8::Script APIs\n\nThis is a reland of 7dbfec50e3f2f66a3d0035f2eff91c5bdf472a0e, now that\npdfium has been updated to avoid libfuzzer build failures. I've tested\nthis change locally in pdfium xfa and non-xfa builds.\n\nThe calls in chromium were removed in https://crrev.com/c/865160,\nwhile pdfium was updated in https://pdfium-review.googlesource.com/c/pdfium/+/23270.\n\nBug: v8:7269, v8:7273, v8:7274\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I2d49033fcb305eeba87cca1e27840f278220d15e\nReviewed-on: https://chromium-review.googlesource.com/890051\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50938}","milestone":66},{"_id":"2dc69c102d16b3ccc0a6a7ae5c824eafa1e9c835","author":{"name":"Georg Neis","email":"neis@chromium.org","time":"Thu Jan 25 08:22:08 2018"},"commit":"2dc69c102d16b3ccc0a6a7ae5c824eafa1e9c835","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 25 09:23:48 2018"},"message":"[modules] Various minor cleanups.\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I0ecc0af1668f5036bb591e8236d9a28fba61cea5\nReviewed-on: https://chromium-review.googlesource.com/881782\nCommit-Queue: Georg Neis <neis@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50861}","milestone":66},{"_id":"47104429415c4c580cea8da4a3e3e7bf32338775","author":{"name":"Jeremy Roman","email":"jbroman@chromium.org","time":"Tue Jan 16 19:00:27 2018"},"commit":"47104429415c4c580cea8da4a3e3e7bf32338775","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 24 15:48:45 2018"},"message":"Implement v8::Object::SetLazyDataProperty.\n\nIt is analogous to Template::SetLazyDataProperty, but for a single\nexisting object. Similar to how SetNativeDataProperty exists on both.\n\nBug: v8:7303\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I634358ee455e28150198bd87a2bd79dc59e3e449\nReviewed-on: https://chromium-review.googlesource.com/867474\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Jeremy Roman <jbroman@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50841}","milestone":66},{"_id":"d023c696206b135cc1ce0f0ee05d8c6d06a8d2d0","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Thu Jan 18 23:28:10 2018"},"commit":"d023c696206b135cc1ce0f0ee05d8c6d06a8d2d0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 24 01:16:44 2018"},"message":"[api] Advance deprecation of String::{Utf8,}Value\n\nThe chromium callers were updated in https://crrev.com/c/868287,\nwhile the pdfium callers were updated in\nhttps://pdfium-review.googlesource.com/c/pdfium/+/23058.\n\nAs a precaution to avoid a repeat of https://crbug.com/803330,\nI've manually built pdfium, along with the additional gn flag\n\"pdf_enable_xfa = true\".\n\nBug: v8:7269, v8:7282\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I5b8cfb629c2b78627447c940a133d75d7ef7c6e9\nReviewed-on: https://chromium-review.googlesource.com/875252\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50821}","milestone":66},{"_id":"7278b5afb781fe7ddf01af1c1cbc28e764f24d19","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Wed Jan 17 00:13:56 2018"},"commit":"7278b5afb781fe7ddf01af1c1cbc28e764f24d19","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 24 01:14:44 2018"},"message":"[api] Advance deprecation of v8::Message APIs\n\nThe calls in Chromium were removed in https://crrev.com/c/865535.\n\nBug: v8:7269, v8:7276\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iae9fadead1167363893b258ba2a21710a1e080a8\nReviewed-on: https://chromium-review.googlesource.com/869146\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50820}","milestone":66},{"_id":"bf19e60cc564f0cacd345f3191a6f860bf36c9f8","author":{"name":"Michael Starzinger","email":"mstarzinger@chromium.org","time":"Mon Jan 22 15:22:33 2018"},"commit":"bf19e60cc564f0cacd345f3191a6f860bf36c9f8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jan 22 16:39:05 2018"},"message":"[platform] Remove {PageAllocator::kReadWriteExecute}.\n\nNow that write-protection of code memory is enabled everywhere and V8 is\nfully W^X compliant, we can remove the permission mode in question.\n\nR=hpayer@chromium.org\nBUG=v8:6792\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I80fe95ac6bb0e2d1ad6d993154ce45d492d941be\nReviewed-on: https://chromium-review.googlesource.com/866855\nCommit-Queue: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Bill Budge <bbudge@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50770}","milestone":66},{"_id":"40eeaefb79a4b4617854f5b59cc80123ba8c0754","author":{"name":"ccyongwang","email":"ccyongwang@tencent.com","time":"Mon Dec 25 03:14:28 2017"},"commit":"40eeaefb79a4b4617854f5b59cc80123ba8c0754","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 19 13:40:51 2018"},"message":"remove SetReference from PersistentValueMapBase.\n\nBug: v8:5828\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I5aabd10a76cd50fefe0ab50ccf239f562cad1522\nReviewed-on: https://chromium-review.googlesource.com/844038\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50718}","milestone":66},{"_id":"982c3164033d3afd51c0d765fc4af98f22b5ccd4","author":{"name":"Malcolm White","email":"malcolmwhite@google.com","time":"Wed Jan 10 21:16:56 2018"},"commit":"982c3164033d3afd51c0d765fc4af98f22b5ccd4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 18 19:55:48 2018"},"message":"De/serializes SharedArrayBuffers.\n\nThis is the v8 side of changes; blink changes are at https://chromium-review.googlesource.com/c/chromium/src/+/809228\n\nBUG=chromium:716320\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ia77764aed09dd609bf2304fe3c392a0e8ee16334\nReviewed-on: https://chromium-review.googlesource.com/847337\nReviewed-by: v8 autoroll <v8-autoroll@chromium.org>\nCr-Original-Commit-Position: refs/heads/6.5.123@{#1}\nCr-Original-Branched-From: 2a8e1e4a9470bc3a92c58fde069901497a3f3fed-refs/heads/master@{#50331}\nReviewed-on: https://chromium-review.googlesource.com/854395\nCommit-Queue: Malcolm White <malcolmwhite@google.com>\nReviewed-by: Ben Smith <binji@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50699}","milestone":66},{"_id":"9026c6e95608dcfbc7a6d7d33af2e792841d9aea","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Fri Jan 12 13:43:10 2018"},"commit":"9026c6e95608dcfbc7a6d7d33af2e792841d9aea","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 18 13:43:45 2018"},"message":"[api] Advance old variant of v8::RegExp::New to deprecated.\n\nR=adamk@chromium.org\n\nBug: v8:7293\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I308fb8e87e6760664a33f3216af7a484ad1404c4\nReviewed-on: https://chromium-review.googlesource.com/864148\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50681}","milestone":66},{"_id":"7dbfec50e3f2f66a3d0035f2eff91c5bdf472a0e","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Wed Jan 17 00:53:50 2018"},"commit":"7dbfec50e3f2f66a3d0035f2eff91c5bdf472a0e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 17 18:48:54 2018"},"message":"[api] Advance deprecation of v8::Script APIs\n\nThe calls in Chromium were removed in https://crrev.com/c/865160.\n\nBug: v8:7269, v8:7273, v8:7274\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Id68649c479483679bf97bc66c14ce8dfa3f7d05c\nReviewed-on: https://chromium-review.googlesource.com/868459\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50663}","milestone":65},{"_id":"25b2116770aa63a0f41d2b80d1e360c92739594d","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Fri Jan 12 22:59:18 2018"},"commit":"25b2116770aa63a0f41d2b80d1e360c92739594d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 16 21:01:58 2018"},"message":"[api] Advance deprecation for several APIs not called by Chromium\n\nBug: v8:7269, v8:7276, v8:7291, v8:7297, v8:7298\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I20770e049171db158973fab7bc58eb819fe2371c\nReviewed-on: https://chromium-review.googlesource.com/865797\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50631}","milestone":65},{"_id":"473d747dbe385f522fb585aa46f03fa67146eb1b","author":{"name":"Qingyan Li","email":"qingyan.liqy@alibaba-inc.com","time":"Tue Jan 16 09:18:05 2018"},"commit":"473d747dbe385f522fb585aa46f03fa67146eb1b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 16 12:07:41 2018"},"message":"[snapshot]: Fix missing Cast in {Private, Signature, AccessorSignature}\n\nR=yangguo@chromium.org\n\nBug: v8:7306\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I40037ebb66a856b52454c50d17b4c8a51aab7a84\nReviewed-on: https://chromium-review.googlesource.com/866215\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50618}","milestone":65},{"_id":"c3bb73f6b95c280cee3a4d6b03c87fce93d617c7","author":{"name":"Ali Ijaz Sheikh","email":"ofrobots@google.com","time":"Thu Jan 11 21:20:24 2018"},"commit":"c3bb73f6b95c280cee3a4d6b03c87fce93d617c7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jan 12 16:27:25 2018"},"message":"[tracing] implement TRACE_EVENT_ADD_WITH_TIMESTAMP\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Icb3cf7b7f96704e1eaa4c5fbf773b94b70cddc85\nReviewed-on: https://chromium-review.googlesource.com/861302\nReviewed-by: Fadi Meawad <fmeawad@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Ali Ijaz Sheikh <ofrobots@google.com>\nCr-Commit-Position: refs/heads/master@{#50549}","milestone":65},{"_id":"814577e3fd097ef772fd6d92a1ad3abd934506e6","author":{"name":"Ali Ijaz Sheikh","email":"ofrobots@google.com","time":"Fri Jan 05 01:20:36 2018"},"commit":"814577e3fd097ef772fd6d92a1ad3abd934506e6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 10 19:36:23 2018"},"message":"[tracing] allow embedders to provide own tracing timestamps\n\nMake it possible for embedders to provide their own tracing timetamps by\nproviding an overridable virtual function on V8's tracing controller.\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I727e633cb7f63d4b41c2e427ecca3c9174c90bfe\nReviewed-on: https://chromium-review.googlesource.com/847690\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Fadi Meawad <fmeawad@chromium.org>\nCommit-Queue: Ali Ijaz Sheikh <ofrobots@google.com>\nCr-Commit-Position: refs/heads/master@{#50489}","milestone":65},{"_id":"5b9adade648b6d4fb717bb0348cdee27d15b6355","author":{"name":"Timothy Gu","email":"timothygu99@gmail.com","time":"Wed Jan 10 10:16:23 2018"},"commit":"5b9adade648b6d4fb717bb0348cdee27d15b6355","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 10 11:23:54 2018"},"message":"[proxy] Set [[ProxyTarget]] to null during revocation\n\nBefore this, only the [[ProxyHandler]] was set to null during revocation\nof the Proxy through either the v8::Proxy::Revoke() or the\nProxy.revocable() API. To be consistent with the spec, the Proxy's\ntarget is set to null as well. This change should not be observable\nthrough JS, since the check for if the Proxy is revoked should always\nuse the handler. But the changed value is exposed through the public\nv8::Proxy::GetTarget() API, which is used by the inspector API and\nNode.js.\n\nAlso included is a much more comprehensive test for Inspector's support\nfor Proxy, which prior to this commit did not work as intended.\n\nBug: \nCq-Include-Trybots: master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I727607ec2b3cea8642cd636573932c1e6bb5cc07\nReviewed-on: https://chromium-review.googlesource.com/854676\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50476}","milestone":65},{"_id":"1300f51ff637051a075d7fe283a782466bc8d0e9","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Tue Jan 09 22:22:06 2018"},"commit":"1300f51ff637051a075d7fe283a782466bc8d0e9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 09 23:36:19 2018"},"message":"[api] Remove \"experimental\" comments for microtasks\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ida22cec17a93b160c64f3ba9e66788e2a621828c\nReviewed-on: https://chromium-review.googlesource.com/744589\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50467}","milestone":65},{"_id":"11e80a350972d0f407e4af55be198cd543569673","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Mon Jan 08 20:32:18 2018"},"commit":"11e80a350972d0f407e4af55be198cd543569673","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jan 09 12:06:40 2018"},"message":"[snapshot] support attaching arbitrary v8::Data.\n\nIn collaboration with Qingyan Li <qingyan.liqy@alibaba-inc.com>.\n\nR=jgruber@chromium.org, mlippautz@chromium.org\n\nBug: v8:7249\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I87f62103ec5b31de274fa22ad275f1c1bcb3ed86\nReviewed-on: https://chromium-review.googlesource.com/846750\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50433}","milestone":65},{"_id":"b822d3e17f30b74489422dbb455db9e1de898a8d","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Thu Jan 04 07:27:19 2018"},"commit":"b822d3e17f30b74489422dbb455db9e1de898a8d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jan 04 20:48:45 2018"},"message":"[api] remove old deprecated APIs.\n\nThese APIs have been marked as deprecated for more than 6 months.\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I4f05a8904c367f335be7e159709f564362c8bbd9\nReviewed-on: https://chromium-review.googlesource.com/848782\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50368}","milestone":65},{"_id":"c5eb79e6aab8d320eb6481dfdf6c463ec8bf5472","author":{"name":"Mythri","email":"mythria@chromium.org","time":"Mon Dec 18 10:18:34 2017"},"commit":"c5eb79e6aab8d320eb6481dfdf6c463ec8bf5472","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jan 03 11:20:24 2018"},"message":"Add new options to CompileOptions and NoCacheReason\n\nNow that we have an API to request code cache, we want to decouple\ncompilation from serialization. As a first step, we will add CompileEager\noption (used when we want to produce full code cache) and\nDeferredProduceCodeOption to NoCacheReason. This is so that we can\nproperly bucket the compilation time and collect statistics about the\ncache behaviour. Once, blink and node start using the new API, we can\nremove the code to produce code cache from the compilation.\n\nBug: chromium:783124\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I35dbb6b0af39940450d412ff75b769603398b2f6\nReviewed-on: https://chromium-review.googlesource.com/828977\nCommit-Queue: Mythri Alle <mythria@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50336}","milestone":65},{"_id":"29bb707e9b5d27110efadb22bad115d9ab356cfb","author":{"name":"Bill Budge","email":"bbudge@chromium.org","time":"Fri Dec 22 17:45:45 2017"},"commit":"29bb707e9b5d27110efadb22bad115d9ab356cfb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Dec 22 19:28:48 2017"},"message":"[Memory] Add OnCriticalMemoryPressure overload to v8::Platform.\n\n- Adds overload to v8::Platform that will make it easier for embedders to\n  maintain a reserve of address space for large, contiguous allocations.\n- Rewrites retry logic using loops.\n- Moves retry logic from some VirtualMemory allocation functions to AllocPages.\n\nBug: chromium:756050\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I52e66f9f8b15b6ce2a2f36e74783f178b8cd5cf7\nReviewed-on: https://chromium-review.googlesource.com/840724\nCommit-Queue: Bill Budge <bbudge@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50303}","milestone":65},{"_id":"c8736f689967c38afe940baa7839cc0b4afd888c","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Fri Dec 22 17:20:47 2017"},"commit":"c8736f689967c38afe940baa7839cc0b4afd888c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Dec 22 19:08:18 2017"},"message":"Reduce max instance type enum value.\n\nWe collect instance type statistics in FatalProcessOutOfMemory into an\narray, which is allocated to the max instance type value. While we want\nto leave space to ensure new instance types do not affect constants in\nthe API, we can be more frugal.\n\nWe currently serialize 350 maps into the startup/context snapshot.  Even\nif we assign a distinct instance type to each of these maps, we would\nstill have more than enough to spare with this change.\n\nR=ulan@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I3e583c2c8da3342e9132d96046b5d80cd41afd72\nReviewed-on: https://chromium-review.googlesource.com/842542\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50302}","milestone":65},{"_id":"a067281d3910a64303dfa8ed7fdd2c9604df3149","author":{"name":"Georg Neis","email":"neis@chromium.org","time":"Fri Dec 08 08:46:01 2017"},"commit":"a067281d3910a64303dfa8ed7fdd2c9604df3149","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Dec 22 17:56:03 2017"},"message":"[modules] Implement recent ES revisions.\n\n- Instantiation errors are no longer recorded. If instantiation fails,\n  the module(s) are reset to \"uninstantiated\". When instantiation is\n  re-attempted, the thrown exception will be fresh.\n- Instantiation can succeed even where there are modules in the graph\n  that previously failed evaluation.\n\nBug: v8:1569\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I429f616918afe5f8ab1a956024f0a22f464b8c44\nReviewed-on: https://chromium-review.googlesource.com/763369\nCommit-Queue: Georg Neis <neis@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50301}","milestone":65},{"_id":"699144a2258c15cb79aae4ca4b82ea5467f12b8f","author":{"name":"Bill Budge","email":"bbudge@chromium.org","time":"Thu Dec 21 18:09:26 2017"},"commit":"699144a2258c15cb79aae4ca4b82ea5467f12b8f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Dec 21 19:46:23 2017"},"message":"[Memory] Add PageAllocator concept to v8::Platform.\n\n- Adds abstract base class PageAllocator, defined in v8-platform.h. Adds\n  GetPageAllocator method to v8::Platform.\n- Implements a DefaultPageAllocator, implemented in terms of base::OS\n  page allocation methods.\n\nBug: chromium:756050\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iece0b261a07294a49c30ac25e848dc39cb1a32e2\nReviewed-on: https://chromium-review.googlesource.com/809778\nCommit-Queue: Bill Budge <bbudge@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50282}","milestone":65},{"_id":"7821aadc535174e195a88d3aa318be9a8feacdff","author":{"name":"Eugene Ostroukhov","email":"eostroukhov@chromium.org","time":"Wed Dec 20 18:47:27 2017"},"commit":"7821aadc535174e195a88d3aa318be9a8feacdff","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 20 20:17:21 2017"},"message":"[inspector] remove wrapObject overload\n\nBug: \nCq-Include-Trybots: master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I8ca7bf33fb848caedce101876316832a1e9cf58f\nReviewed-on: https://chromium-review.googlesource.com/836735\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nReviewed-by: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCommit-Queue: Eugene Ostroukhov <eostroukhov@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50248}","milestone":65},{"_id":"9c6bc7afc0f8a62e24df92d72e41f2f9d590e023","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Tue Dec 19 13:21:23 2017"},"commit":"9c6bc7afc0f8a62e24df92d72e41f2f9d590e023","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 20 07:34:39 2017"},"message":"Leave spaces between instance types.\n\nWe used to frequently break the ABI when we introduced new instance\ntypes because some instance types are hard-coded in v8.h.\n\nNow that we have more instance types available, we can leave some\nroom to anticipate future new instance types.\n\nAlso take this opportunity to reorder some instance types.\n\nAlso see: https://github.com/nodejs/node/issues/17754\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I9b59eeab9dfcdf11d779f0b700fc5dce30d3eebe\nReviewed-on: https://chromium-review.googlesource.com/833874\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50223}","milestone":65},{"_id":"a0b9a235d557e0bfdd9c31f7e309e57308e3213f","author":{"name":"Sigurd Schneider","email":"sigurds@chromium.org","time":"Thu Dec 14 12:57:04 2017"},"commit":"a0b9a235d557e0bfdd9c31f7e309e57308e3213f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Dec 14 15:00:56 2017"},"message":"[turbofan] Add counter for disabling of speculation bit\n\nThis CL adds a performace counter similar to\nhttps://www.chromestatus.com/metrics/feature/timeline/popularity/2238\nto estimate how often speculation is disabled in the wild.\n\nBug: v8:7216, v8:7127\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I421637b386534da4a3aed549a9665870e3b97eb1\nReviewed-on: https://chromium-review.googlesource.com/827012\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Michael Hablich <hablich@chromium.org>\nCommit-Queue: Sigurd Schneider <sigurds@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50112}","milestone":65},{"_id":"64d145534c3ce97adcc8ce9d41f5ba7e69e13fcd","author":{"name":"Eugene Ostroukhov","email":"eostroukhov@chromium.org","time":"Tue Dec 12 01:39:28 2017"},"commit":"64d145534c3ce97adcc8ce9d41f5ba7e69e13fcd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Dec 12 18:02:13 2017"},"message":"[inspector] allow generatePreview for wrapObject\n\nThis method is needed by some Blink agents to generate object previews.\n\nBug: \nCq-Include-Trybots: master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I2304a6e44ea65ec469f3a3216b8bed789f706d0c\nReviewed-on: https://chromium-review.googlesource.com/821596\nReviewed-by: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCommit-Queue: Eugene Ostroukhov <eostroukhov@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50049}","milestone":65},{"_id":"298f0cd4389654e36a878410fe5ff92da255e32a","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Mon Dec 11 16:51:59 2017"},"commit":"298f0cd4389654e36a878410fe5ff92da255e32a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Dec 11 18:14:31 2017"},"message":"[heap] Provide the number of native and detached context via Heap API.\n\nThis adds two fields to the HeapStatistics struct:\n- number_of_native_contexts,\n- number_of_detached_contexts.\n\nBug: chromium:793789\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: If6942a97fd22a9e70781eed2aa286aba4c0e7f70\nReviewed-on: https://chromium-review.googlesource.com/819730\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#50007}","milestone":65},{"_id":"42a7c0be4c8ea44e4d1661860d2cf6c1f90cb655","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed Dec 06 16:52:26 2017"},"commit":"42a7c0be4c8ea44e4d1661860d2cf6c1f90cb655","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Dec 06 18:19:07 2017"},"message":"[runtime] Introduce Load/StoreHandler heap objects.\n\nThey will eventually be used instead of Tuple3/FixedArray by the IC system.\n\nBug: v8:5561, v8:7159\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I39faad1b2dc10ce7d42cb7477ea87b64d1e0b44c\nReviewed-on: https://chromium-review.googlesource.com/806178\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49908}","milestone":65},{"_id":"5275c3c41c83426360a68d172b0eec4d109e63c7","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Fri Dec 01 12:48:23 2017"},"commit":"5275c3c41c83426360a68d172b0eec4d109e63c7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Dec 04 11:06:50 2017"},"message":"[api] Mark SetNamedPropertyHandler as soon to be deprecated\n\nEventually we should migrate to new new-style callbacks which take Names\ninstead of Strings as first arguments everywhere. Internally we don't really\nhandler NamedPropertyCallbackXX differently from the newer\nGenericNamedPropertyCallbackXX.\n\nBug: v8:7109\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I827182f447427c222d5144f1a3e27bf543226e51\nReviewed-on: https://chromium-review.googlesource.com/803340\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49824}","milestone":65},{"_id":"bb23ab834659bed92987ef020d1e1ff2cbfe75df","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Nov 30 12:51:28 2017"},"commit":"bb23ab834659bed92987ef020d1e1ff2cbfe75df","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 30 12:54:29 2017"},"message":"Updated version to 6.5\n\nTBR=machenbach@chromium.org\nNOTRY=true\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I9d074745843b550603c0b68f2b397a121a494504\nReviewed-on: https://chromium-review.googlesource.com/800173\nCommit-Queue: Michael Hablich <hablich@chromium.org>\nReviewed-by: Michael Hablich <hablich@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49750}","milestone":65},{"_id":"5d4a090377978b881215c8575b063250a69dc406","author":{"name":"Mythri","email":"mythria@chromium.org","time":"Tue Nov 28 17:22:33 2017"},"commit":"5d4a090377978b881215c8575b063250a69dc406","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 29 13:38:03 2017"},"message":"Add support to produce code cache after execute.\n\nAdds new API function to request code cache. Earlier code cache was\nproduced along with compile requests. This new API allows us to request\ncode cache after executing. Also adds support in the code serializer to\nserialize after executing the script.\n\nBug: chromium:783124\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Id7b972a2b4c8dcf7a6d9f5ea210890ae968320bd\nReviewed-on: https://chromium-review.googlesource.com/781767\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Mythri Alle <mythria@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49717}","milestone":64},{"_id":"6381c541fa93e44a69295e5d1cdc1c2c5e1dede9","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Fri Nov 24 10:52:48 2017"},"commit":"6381c541fa93e44a69295e5d1cdc1c2c5e1dede9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 24 11:48:53 2017"},"message":"[api] Remove deprecated GC callback functions.\n\nThis removes:\n- V8::AddGCPrologueCallback\n- V8::RemoveGCPrologueCallback\n- V8::AddGCEpilogueCallback\n- V8::RemoveGCEpilogueCallback\n\nThe emebedder should use the Isolate versions of these functions.\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I7974bc7478e542f29483cf939b33dbb872a3b41d\nReviewed-on: https://chromium-review.googlesource.com/788053\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49617}","milestone":64},{"_id":"932aafb91f6f53e3c9dd2d2420ea9901c6a33718","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Thu Nov 23 10:45:46 2017"},"commit":"932aafb91f6f53e3c9dd2d2420ea9901c6a33718","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 23 11:42:29 2017"},"message":"[runtime] Introduce instance type for descriptor arrays.\n\nThis simplifies handling of DescriptorArray objects in deserializer.\n\nBug: v8:5799\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ie4f9c6903afd8273d6320e6b0e0b05231db6cc00\nReviewed-on: https://chromium-review.googlesource.com/785676\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49605}","milestone":64},{"_id":"cb46310a799eb0d60a613ead0af8c8200c5338b1","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Wed Nov 22 18:04:36 2017"},"commit":"cb46310a799eb0d60a613ead0af8c8200c5338b1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 22 19:14:09 2017"},"message":"[runtime] Extend InstanceType to uint16_t range of values.\n\nBug: v8:5799\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iff62cf07d85b48975d7a21da388bbf6addeb56f1\nReviewed-on: https://chromium-review.googlesource.com/781633\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49589}","milestone":64},{"_id":"3a41b697cd9ba043b670a063f595a85c904d3878","author":{"name":"Alexey Kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Tue Nov 21 19:27:58 2017"},"commit":"3a41b697cd9ba043b670a063f595a85c904d3878","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 22 16:33:06 2017"},"message":"[inspector] introduced stackTraceId and externalAsyncTask API\n\nSometimes we need to capture stack trace on one debugger and use it\nlater as a parent stack on another debugger (e.g. worker.postMessage).\n\nThis CL includes following addition to our protocol and v8-inspector.h:\n  - added Runtime.StackTraceId, this id represents stack trace captured\n    on debugger with given id,\n  - protocol client can fetch Runtime.StackTrace by\n    Runtime.StacKTraceId using Debugger.getStackTrace method,\n  - externalParent field is added to Debugger.paused event, it may\n    contain external parent stack trace,\n  - V8Inspector::storeCurrentStackTrace captures current stack trace\n    and returns V8StackTraceId for embedder this id can be used as\n    argument for V8Inspector::externalAsyncTaskStarted and\n    V8Inspector::externalAsyncTaskFinished method. Any async stack\n    trace captured between these calls will get passed external stack\n    trace as external parent. These methods are designed to be called\n    on different debuggers. If async task is scheduled and started on\n    one debugger user should continue to use asyncTask* API,\n  - Debugger.enable methods returns unique debuggerId.\n\nBug: chromium:778796\nCq-Include-Trybots: master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I16aba0d04bfcea90f3e187e635a0588c92354539\nReviewed-on: https://chromium-review.googlesource.com/754183\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCommit-Queue: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49582}","milestone":64},{"_id":"0d7a870b27846a63cd2425cb3e22edca6e9e4c28","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Wed Nov 22 10:40:11 2017"},"commit":"0d7a870b27846a63cd2425cb3e22edca6e9e4c28","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 22 11:43:32 2017"},"message":"[heap] Fix V8::AddGCPrologueCallback and V8::AddGCEpilogueCallback\n\nBug: v8:7113\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I64d41ac2344d1974867647b8c32a9fae384b724a\nReviewed-on: https://chromium-review.googlesource.com/784833\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49569}","milestone":64},{"_id":"0944553ee8498bda5b9897871e29c70e9c5ae00e","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Nov 21 17:49:10 2017"},"commit":"0944553ee8498bda5b9897871e29c70e9c5ae00e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 22 11:40:32 2017"},"message":"Global handles: Remove independent handle infrastructure\n\nBug: chromium:780749\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I4c993e2147494795402f141049eed30801dfb913\nReviewed-on: https://chromium-review.googlesource.com/782519\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49568}","milestone":64},{"_id":"ffa30ced179f6723ee955bc531cafec05d526472","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Nov 22 08:38:55 2017"},"commit":"ffa30ced179f6723ee955bc531cafec05d526472","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 22 09:45:10 2017"},"message":"[api] Remove long-deprecated static APIs to iterate persistent handles\n\nUsers should migrate to using the versions on Isolate.\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I4fe956a4210308701f343a3a681d9d6f1b1f2d2b\nReviewed-on: https://chromium-review.googlesource.com/784832\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49566}","milestone":64},{"_id":"65cd9669edd7088a821202d8a664e071447bbb25","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Tue Nov 21 17:30:03 2017"},"commit":"65cd9669edd7088a821202d8a664e071447bbb25","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 21 19:18:42 2017"},"message":"[api] Remove long-deprecated getters on WeakCallbackInfo\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I986e3d3a54a07b5082a52e2bc7b5505e12589d98\nReviewed-on: https://chromium-review.googlesource.com/782324\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49557}","milestone":64},{"_id":"8c5e2d758d7846127e3368165cb9f9e19f7c73ae","author":{"name":"Alexei Filippov","email":"alph@chromium.org","time":"Tue Nov 14 20:23:15 2017"},"commit":"8c5e2d758d7846127e3368165cb9f9e19f7c73ae","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 21 00:56:56 2017"},"message":"[cpu-profiler] Deprecate Isolate::GetCpuProfiler and CpuProfiler::CollectSample functions.\n\nBUG=v8:7070\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I92d7c61afa88e0a52c8eed0c2a44a4e49847e83b\nReviewed-on: https://chromium-review.googlesource.com/767618\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Alexei Filippov <alph@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49514}","milestone":64},{"_id":"25820bdab9c1092dcde6dbfdfeaeafcaba188e67","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Fri Nov 17 16:32:12 2017"},"commit":"25820bdab9c1092dcde6dbfdfeaeafcaba188e67","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 17 18:16:44 2017"},"message":"[code-cache] Log resources with no cache handler\n\nAdd another entry to the NoCacheReason enum, reporting that the chromium\nScriptResource has no cache handler.\n\nAlso, the amount of chromium-specific entries in this enum is getting\ntoo high. So, added a TODO for removing them -- possibly in the future\nwe want to do this no-cache reason logging in Chromium after all,\npropagating isolate cache hits and consume failures back up the API with\nan out parameter.\n\nBug: chromium:769203\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I63ca863cfef61e04e7104318eb79810796b61a9c\nReviewed-on: https://chromium-review.googlesource.com/776893\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49458}","milestone":64},{"_id":"71ad48fb8f214e80518ba0419796e4c571351255","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Wed Nov 15 10:00:49 2017"},"commit":"71ad48fb8f214e80518ba0419796e4c571351255","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 17 18:14:29 2017"},"message":"[api] Mark MarkIndependent as soon deprecated\n\nPersistent handles are always independent these days. Users should mark\nweak handles as active using MarkActive if they want to keep weak\nhandles that are otherwise unreachable alive across scavenges.\n\nBug: chromium:780749\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I116e984ce14a035d1cef491d49f11a388fa8169d\nReviewed-on: https://chromium-review.googlesource.com/759794\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49456}","milestone":64},{"_id":"d51f4c82682b1f0747e85b4aca876135f60813bc","author":{"name":"Brad Nelson","email":"bradnelson@chromium.org","time":"Fri Nov 10 18:34:14 2017"},"commit":"d51f4c82682b1f0747e85b4aca876135f60813bc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 16 20:31:15 2017"},"message":"[wasm] Adding public usage metric for WebAssembly.\n\nBUG=v8:7068\nR=kschimpf@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iaf29d3696094722853fb67b29c697860752e256e\nReviewed-on: https://chromium-review.googlesource.com/763995\nCommit-Queue: Eric Holk <eholk@chromium.org>\nReviewed-by: Eric Holk <eholk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49431}","milestone":64},{"_id":"f576902c99845b21880a1681dd76acd61ddde9fa","author":{"name":"Yuki Shiino","email":"yukishiino@chromium.org","time":"Thu Nov 16 13:54:38 2017"},"commit":"f576902c99845b21880a1681dd76acd61ddde9fa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 16 15:29:26 2017"},"message":"Add support of Maybe<void> as a template specialization.\n\nBlink wants to use Maybe<T> as a return type of (author) callback\nfunctions, where T can be type void.  So, this patch adds support\nof Maybe<void>.\n\nBug: chromium:778580, chromium:779036\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Id654bafc5ceac8ef6f755902418f250c353a8837\nReviewed-on: https://chromium-review.googlesource.com/771730\nCommit-Queue: Yuki Shiino <yukishiino@chromium.org>\nReviewed-by: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49416}","milestone":64},{"_id":"61e04e2867d5057ae594316112ad48d4e9407d4f","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Tue Nov 14 16:48:34 2017"},"commit":"61e04e2867d5057ae594316112ad48d4e9407d4f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 14 19:46:45 2017"},"message":"[compiler] Add new \"no cache reason\" enum values\n\nAdd enum values to the \"no cache reason\" API which reflect new types of\nno-cache reason we will want to distinguish.\n\nAlso, renames one of the enum values (BecauseExtension ->\nBecauseV8Extension) because it was confusing. It's a V8-only type of no\ncache reason, so it shouldn't affect embedders.\n\nBug: chromium:769203\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I41d4ecfb35b2e91b71562b4f23b15d20f16a943c\nReviewed-on: https://chromium-review.googlesource.com/769010\nReviewed-by: Mythri Alle <mythria@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49367}","milestone":64},{"_id":"98c40a4bae915a9762c73de3307300c61e4fd91a","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Tue Nov 14 18:21:58 2017"},"commit":"98c40a4bae915a9762c73de3307300c61e4fd91a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 14 19:26:34 2017"},"message":"[platform] Return task runners as shared_ptr\n\nAt the moment, task runners are returned as unique_ptr. This is\ninconvenient, however. In all implementations I did, the platform holds\na shared pointer of the task runner and wraps it in a wrapper class just\nto return it as a unique_ptr. With this CL the platform API is changed\nto return a shared_ptr directly.\n\nR=rmcilroy@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ide278db855199ea239ad0ae14d97fd17349dac8c\nReviewed-on: https://chromium-review.googlesource.com/768867\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49366}","milestone":64},{"_id":"c00bb6da1cef9f7e9dab842904232255717f8291","author":{"name":"Igor Sheludko","email":"ishell@chromium.org","time":"Tue Nov 14 14:50:16 2017"},"commit":"c00bb6da1cef9f7e9dab842904232255717f8291","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 14 16:21:54 2017"},"message":"[runtime] Prepare Map fields definition for extending instance type field.\n\nBug: v8:5799\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I2c412f40aba6135dd0dafc7daa57420071ffee1c\nReviewed-on: https://chromium-review.googlesource.com/768414\nCommit-Queue: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49361}","milestone":64},{"_id":"81931e726be5c8a1bbf0c422a992a096b0fc4db6","author":{"name":"peterwmwong","email":"peter.wm.wong@gmail.com","time":"Mon Nov 13 13:47:15 2017"},"commit":"81931e726be5c8a1bbf0c422a992a096b0fc4db6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Nov 14 09:23:08 2017"},"message":"Remove NativeWeakMap\n\nBug: v8:7016\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I5a509fb91a337eec4a58ab4a13d7104e8ba3ff23\nReviewed-on: https://chromium-review.googlesource.com/760677\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49346}","milestone":64},{"_id":"c44da6c271f5ff686bd4e2e45410763456ce528d","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Fri Nov 10 13:07:04 2017"},"commit":"c44da6c271f5ff686bd4e2e45410763456ce528d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 13 13:19:42 2017"},"message":"[api] Refine description for PersistentBase::MarkActive\n\nBug: chromium:780749\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ifd7da70dd9adffe5de7f126539c4780799d55673\nReviewed-on: https://chromium-review.googlesource.com/763528\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49323}","milestone":64},{"_id":"84ad1f7c7113f5e4fcd037f2dd5c76caab7f6abb","author":{"name":"Yuki Shiino","email":"yukishiino@chromium.org","time":"Fri Nov 10 13:57:24 2017"},"commit":"84ad1f7c7113f5e4fcd037f2dd5c76caab7f6abb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 13 07:32:47 2017"},"message":"Export Context::BackupIncumbentScope.\n\nThis patch adds a missing V8_EXPORT to Context::BackupIncumbentScope.\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ic4146ee1dad2f84222671fc54b4a463282356417\nReviewed-on: https://chromium-review.googlesource.com/762834\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Yuki Shiino <yukishiino@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49316}","milestone":64},{"_id":"1719ecb9dc5209d0c77c2b84d76d17aebf1ba1f6","author":{"name":"Karl Schimpf","email":"kschimpf@google.com","time":"Wed Nov 08 23:33:46 2017"},"commit":"1719ecb9dc5209d0c77c2b84d76d17aebf1ba1f6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Nov 09 00:40:42 2017"},"message":"Add capability to handle CSP 'wasm-eval' in V8\n\nLike CSP flag 'unsafe-eval', which communicates if both JS source\nfiles and WASM binary files may be compiled, this CL adds a similar\nflag for the compilation of WASM binary files.\n\nThat is, a WASM binary file will be compiled only if the new flag is\ndefined, or the flag for 'unsafe-eval' allows it. These flags are\nimplemented as callback functions on the isolate. The callbacks get a\n(CSP) context, and a string, and returns the corresponding value of\nthe flag.\n\nBoth callbacks are initialized with the nullptr, and is used to\ncommunicate that no CSP policy is defined. This allows this concept to\nwork, independent of it running in Chrome.\n\nIt also does a small clean up in api.cc to use macro CALLER_SETTERS,\ninstead of explicit code when appropriate.\n\nBug: v8:7041\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Idb3356574ae2a298057e6b7bccbd3492831952ae\nReviewed-on: https://chromium-review.googlesource.com/759162\nReviewed-by: Bill Budge <bbudge@chromium.org>\nReviewed-by: Eric Holk <eholk@chromium.org>\nCommit-Queue: Karl Schimpf <kschimpf@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49243}","milestone":64},{"_id":"295c9cc643a2a5e410207fd1f4634ad9c8c83405","author":{"name":"Alexei Filippov","email":"alph@chromium.org","time":"Tue Nov 07 01:39:59 2017"},"commit":"295c9cc643a2a5e410207fd1f4634ad9c8c83405","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 08 19:48:40 2017"},"message":"[cpu-profiler] Add static CollectSample method to the CpuProfiler API.\n\nThe method forces all running profilers attached to the provided isolate\nto collect a sample with the current stack.\n\nIt is going to be used to synchronize trace events generated by embedder with the samples\ncollected by the profiler.\n\nAlso it will finally allow us to break dependency of isolate on CPU profiler.\n\nBUG=chromium:721099\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I81a0f8a463f837b5201bc8edaf2eb4f3761e3ff8\nReviewed-on: https://chromium-review.googlesource.com/750264\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Alexei Filippov <alph@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49236}","milestone":64},{"_id":"5b0a753d2aa8498c6f44d187dd6fe64c18c02efc","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Mon Nov 06 17:05:09 2017"},"commit":"5b0a753d2aa8498c6f44d187dd6fe64c18c02efc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Nov 06 20:07:38 2017"},"message":"[code-cache] Keep track of extensions not caching\n\nBug: chromium:769203\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iffb7e92fb9c08c42f03ad28c8defb516454a2d3d\nReviewed-on: https://chromium-review.googlesource.com/753740\nReviewed-by: Mythri Alle <mythria@chromium.org>\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49158}","milestone":64},{"_id":"91ec9872fb7590068bca76f5dcc281702ce27d8d","author":{"name":"Jakob Gruber","email":"jgruber@chromium.org","time":"Fri Nov 03 15:12:46 2017"},"commit":"91ec9872fb7590068bca76f5dcc281702ce27d8d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Nov 03 18:32:02 2017"},"message":"[error] Add use counters for non-standard Error features\n\nV8 provides non-standard Error API through:\n\nError.captureStackTrace\nError.prepareStackTrace\nError.stackTraceLimit\n\nLet's add use counters to gauge how wide-spread these are used.\n\nThis is the V8 side of required changes.\nThe Chromium-side CL: https://crrev.com/c/753446\n\nBug: v8:6975\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I917cd6344a01670799f6cbf88a4bfff8e8d0d6ad\nReviewed-on: https://chromium-review.googlesource.com/753443\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49113}","milestone":64},{"_id":"f571da954cbb0f8881f4d9da6a8dcdf219ee4dce","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Wed Nov 01 16:16:35 2017"},"commit":"f571da954cbb0f8881f4d9da6a8dcdf219ee4dce","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Nov 01 17:10:45 2017"},"message":"[compiler] Split compilation timer on caching decision\n\nRather than having a single script compilation timer, split it into\nmultiple timers depending on the state of the (blink-owned) code cache\nand (v8-owned) complation cache. This is intended to replace both the\nscript compilation time timer, and the compilation heuristic enum.\n\nAlso keep track of why blink might not want us to produce (or consume) a\ncode cache, and split the compilation timer on this as well.\n\nNote, there is currently no timer for streaming sources, so these won't\nshow up in the histograms.\n\nBug: chromium:582873\nBug: chromium:769203\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ia32fff044f919e20e3cec73329e62e01e421b72a\nReviewed-on: https://chromium-review.googlesource.com/746922\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49065}","milestone":64},{"_id":"d521a1e26106804c86758320db8544b53f934804","author":{"name":"Natalie Silvanovich","email":"natashenka@google.com","time":"Sat Oct 28 01:19:22 2017"},"commit":"d521a1e26106804c86758320db8544b53f934804","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 31 22:20:02 2017"},"message":"Adding index accessor counter\n\nChange-Id: I7e833c3b06cfb3ff9eda663c2bee4981013744b0\n\nAdding index accessor counter\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ic353c11fa0f430537819387d17eedeec5466d9cc\nBug: \nReviewed-on: https://chromium-review.googlesource.com/741169\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Natalie Silvanovich <natashenka@google.com>\nCr-Commit-Position: refs/heads/master@{#49061}","milestone":64},{"_id":"67aae25f61b8fd116dd6ba9c67ff7be2ae6de175","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Mon Oct 30 21:35:30 2017"},"commit":"67aae25f61b8fd116dd6ba9c67ff7be2ae6de175","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Oct 31 00:33:36 2017"},"message":"[module] Remove experimental status for dynamic import API\n\nBug: v8:5785\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ia386725996beb8f47f97930c9dfc8a9639887fea\nReviewed-on: https://chromium-review.googlesource.com/744739\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49045}","milestone":64},{"_id":"c690f54d9580243c53f7d892fcff1ce6bae4bfc0","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Mon Oct 30 15:17:57 2017"},"commit":"c690f54d9580243c53f7d892fcff1ce6bae4bfc0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 30 16:17:08 2017"},"message":"[platform] Add TaskRunner to the platform API\n\nWith the existing platform API it is not possible to post foreground\ntasks from background tasks. This is, however, required to implement\nasynchronous compilation for WebAssembly. With this CL we add the\nconcept of a TaskRunner to the platform API. The TaskRunner contains\nall data needed to post a foreground task and can be used both from a\nforeground task and a background task. Eventually the TaskRunner should\nreplace the existing API.\n\nIn addition, this CL contains a default implementation of the\nTaskRunner. This implementation has tempory workaround for platforms\nwhich do not provide a TaskRunner implementation yet. This default\nimplementation should be deleted again when all platforms provide a\nTaskRunner implementation.\n\nR=rmcilroy@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I6ea4a1c9da1eb9a19e8ce8f2163000dbc2598802\nReviewed-on: https://chromium-review.googlesource.com/741588\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49041}","milestone":64},{"_id":"bc8c97c72a4f5a72015f06ea60cc78e23bd5d300","author":{"name":"Toon Verwaest","email":"verwaest@chromium.org","time":"Fri Oct 27 13:00:42 2017"},"commit":"bc8c97c72a4f5a72015f06ea60cc78e23bd5d300","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 27 14:16:49 2017"},"message":"[api] Remove deprecated FunctionCallbackInfo::Callee\n\nThis especially simplifies arm64 CallApiCallbackStub alignemnt handling.\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I26e9c075702161a3f1c70f94ec83d149d2d8f33a\nReviewed-on: https://chromium-review.googlesource.com/741600\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#49004}","milestone":64},{"_id":"07de62ca185ebd36df0687e7b6208633a67e41bd","author":{"name":"Toon Verwaest","email":"verwaest@chromium.org","time":"Fri Oct 27 10:01:49 2017"},"commit":"07de62ca185ebd36df0687e7b6208633a67e41bd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 27 11:31:34 2017"},"message":"[lazy-accessor-pairs] Don't take the fast paths if the context needs to be switched\n\n(This is a reland of cb84b6f624f5ac96318dfaa9878606dff4b1369c)\n\nThis works in the ICs since compiled handlers are not shared anymore.\n\nBug: chromium:759734\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I3b7d6ae34bb4cfa213f679354fac56fb51bfd5ed\nReviewed-on: https://chromium-review.googlesource.com/739822\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@chromium.org>\nCr-Commit-Position: refs/heads/master@{#48999}","milestone":64},{"_id":"f65251be3c7c6b70c974e537d06e05228dc524d9","author":{"name":"Adithya Srinivasan","email":"adithyas@chromium.org","time":"Wed Oct 18 18:57:27 2017"},"commit":"f65251be3c7c6b70c974e537d06e05228dc524d9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Oct 19 17:30:52 2017"},"message":"Add JSSpecialApiObjectType to fast path\n\nHTMLCollection and NodeList have InstanceType\nJS_SPECIAL_API_OBJECT_TYPE, and therefore always run the slow case\nof GetAlignedPropertyFromInternalField. This slows down the performance\nof indexedPropertyGetter for both types, which are very commonly used\nin websites.\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I36bd2cd7d9bbc19149e15174f6868b8a1f1658c8\nReviewed-on: https://chromium-review.googlesource.com/726529\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Adithya Srinivasan <adithyas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#48760}","milestone":64},{"_id":"b1cd96ec4b836348bcffba357cd29076ab3ae48b","author":{"name":"Alexey Kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Wed Oct 18 18:47:30 2017"},"commit":"b1cd96ec4b836348bcffba357cd29076ab3ae48b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Oct 18 19:49:57 2017"},"message":"[inspector] added V8InspectorClient::maxAsyncCallStackDepthChanged\n\nR=dgozman@chromium.org\n\nBug: none\nCq-Include-Trybots: master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I0fa10978266feb3c3907ce1f3386ae7a34a33582\nReviewed-on: https://chromium-review.googlesource.com/726490\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCommit-Queue: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#48705}","milestone":64},{"_id":"39b2227bbdcf8ae5c6a488884d5d526955677ca3","author":{"name":"ccyongwang","email":"ccyongwang@tencent.com","time":"Fri Oct 13 08:32:23 2017"},"commit":"39b2227bbdcf8ae5c6a488884d5d526955677ca3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Oct 13 10:23:57 2017"},"message":"fix compile error when use PersistentValueMap.\n\nIn PersistentValueMap, SetWeak function should supply WeakCallbackType arguments.\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I70a59e90b7ea0a10f695419e57ae9bfb8d5ba852\nReviewed-on: https://chromium-review.googlesource.com/684002\nCommit-Queue: Marja Hölttä <marja@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#48529}","milestone":64},{"_id":"ed6f00fb8e19c541f0a8927222be13eeee89a82c","author":{"name":"Jan Krems","email":"jan.krems@groupon.com","time":"Tue Oct 10 19:57:40 2017"},"commit":"ed6f00fb8e19c541f0a8927222be13eeee89a82c","committer":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Tue Oct 10 23:56:35 2017"},"message":"[modules] Implement import.meta proposal\n\nRewrites references to import.meta to a new GetImportMetaObject runtime\ncall. Embedders can define a callback for creating the meta object using\nv8::Isolate::SetHostGetImportMetaObjectCallback. If no callback has been\nprovided, an empty object with null prototype is created.\n\nThis adds an example implementation to d8 that sets meta.url.\n\nBug: v8:6693\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I6871eec79da45bba81bbbc84b1ffff48534c368d\nReviewed-on: https://chromium-review.googlesource.com/707902\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#48433}","milestone":64},{"_id":"a2ebf86f8e596593716e6c8f3870be1ec306ab67","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Fri Nov 24 08:42:38 2017"},"commit":"a2ebf86f8e596593716e6c8f3870be1ec306ab67","committer":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Fri Nov 24 08:46:04 2017"},"message":"Merged: [heap] Fix V8::AddGCPrologueCallback and V8::AddGCEpilogueCallback\n\nRevision: 0d7a870b27846a63cd\n\nBUG=v8:7113\nLOG=N\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=mlippautz@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Id2bc4df87ee505fae879ed250fe70f118564acb0\nReviewed-on: https://chromium-review.googlesource.com/787895\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/branch-heads/6.3@{#89}\nCr-Branched-From: 094a7c93dcdcd921de3883ba4674b7e1a0feffbe-refs/heads/6.3.292@{#1}\nCr-Branched-From: 18b8fbb528a8021e04a029e06eafee50b918bce0-refs/heads/master@{#48432}","milestone":63},{"_id":"e0ab5dd8a81ef1252fc91a6252b25424feddf034","author":{"name":"Ali Ijaz Sheikh","email":"ofrobots@google.com","time":"Wed Oct 25 20:40:32 2017"},"commit":"e0ab5dd8a81ef1252fc91a6252b25424feddf034","committer":{"name":"Ali Ijaz Sheikh","email":"ofrobots@google.com","time":"Wed Oct 25 21:03:36 2017"},"message":"Merged: [inspector] added V8InspectorClient::maxAsyncCallStackDepthChanged\n\nRevision: b1cd96ec4b836348bcffba357cd29076ab3ae48b\n\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=hablich@chromium.org, kozyatinskiy@chromium.org\n\nBug: v8:6983\nCq-Include-Trybots: master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I83c3fcebfaed47f744cb8bf6eb7a6e1e397c7502\nReviewed-on: https://chromium-review.googlesource.com/737668\nReviewed-by: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCr-Commit-Position: refs/branch-heads/6.3@{#40}\nCr-Branched-From: 094a7c93dcdcd921de3883ba4674b7e1a0feffbe-refs/heads/6.3.292@{#1}\nCr-Branched-From: 18b8fbb528a8021e04a029e06eafee50b918bce0-refs/heads/master@{#48432}","milestone":63},{"_id":"d3c9812143f14fa616ebe2581f8b0a14f725d92e","author":{"name":"Mathias Bynens","email":"mathias@chromium.org","time":"Fri Sep 29 19:52:15 2017"},"commit":"d3c9812143f14fa616ebe2581f8b0a14f725d92e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Oct 02 11:46:36 2017"},"message":"[parser] Add use counter for U+2028 & U+2029\n\nThe context is the following proposal to make JSON a subset of\nJavaScript: https://github.com/tc39/proposal-json-superset\n\nThere’s interest in performing a side investigation to answer the\nquestion of what would happen if we stopped treating U+2028 and U+2029\nas `LineTerminator`s *entirely*. (Note that this is separate from the\nproposal, which just changes how these characters are handled in\nECMAScript strings.) This is technically a breaking change, and IMHO it\nwould be wonderful if we could get away with it, but no one really has\nany data on whether or not we could. Adding this use counter lets us get\nthat data.\n\nBUG=v8:6827\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ia22e8db1634df4d3f965bec8e1cfa11cc7b5e9aa\nReviewed-on: https://chromium-review.googlesource.com/693155\nCommit-Queue: Mathias Bynens <mathias@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#48260}","milestone":63},{"_id":"7f9de3dce97ca4ec252de3eb8b2e2de7da615789","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Tue Sep 26 08:48:52 2017"},"commit":"7f9de3dce97ca4ec252de3eb8b2e2de7da615789","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 26 09:53:53 2017"},"message":"[snapshot] add kProduceExhaustiveCodeCache option.\n\n- Add kProduceExhaustiveCodeCache to v8::ScriptCompiler::CompileOptions\n  to request eager compilation to add as much as possible to the code\n  cache for the script.\n- Repurpose ParseInfo::kLazy flag.\n- Remove ParseInfo::kDebug flag.\n- Remove --serialize-toplevel as it has become obsolete.\n\nR=marja@chromium.org\n\nBug: chromium:768705\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ife14f7a1d1c02e525f0b9dbfd2452013d67c7167\nReviewed-on: https://chromium-review.googlesource.com/684019\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#48160}","milestone":63},{"_id":"a787c3f9e12d8f392f56d7116dbf1fac09b12123","author":{"name":"Sigurdur Asgeirsson","email":"siggi@chromium.org","time":"Thu Sep 14 18:24:23 2017"},"commit":"a787c3f9e12d8f392f56d7116dbf1fac09b12123","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Sep 15 11:48:16 2017"},"message":"Allow overriding DCHECK handling and make it non-fatal.\n\nBug: chromium:763010\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I7d479f8abb16ffd7ffc19d3a6b58da01f5feddd0\nReviewed-on: https://chromium-review.googlesource.com/661054\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCommit-Queue: Sigurður Ásgeirsson <siggi@chromium.org>\nCr-Commit-Position: refs/heads/master@{#48038}","milestone":63},{"_id":"549692cbc0ab4e9929e6e5f13db879072b119fb0","author":{"name":"Andreas Haas","email":"ahaas@chromium.org","time":"Thu Sep 14 17:34:15 2017"},"commit":"549692cbc0ab4e9929e6e5f13db879072b119fb0","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Sep 15 06:36:25 2017"},"message":"[wasm] Streaming compilation for WebAssembly.\n\nIn this CL I implement streaming compilation for WebAssembly,\nas described in the design doc I have sent out already.\n\nIn this implementation the decoding of sections other than the\ncode section is done immediately on the foreground thread.\nEventually all decoding should happen in the background. I\nthink it is acceptable to do the decoding on the foreground\nthread for now because I have finished it already, and\ndecoding in the background would add even more complexity to\nthis CL.\n\nBug:v8:6785\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I285e1e5e1a5a243113c92571b25ee9bae551d0ed\nReviewed-on: https://chromium-review.googlesource.com/631721\nReviewed-by: Mircea Trofin <mtrofin@chromium.org>\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCommit-Queue: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#48022}","milestone":63},{"_id":"0c246c33a36f613078a086fa4f9918b05e665963","author":{"name":"Georg Neis","email":"neis@chromium.org","time":"Mon Sep 11 13:16:27 2017"},"commit":"0c246c33a36f613078a086fa4f9918b05e665963","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Sep 11 18:55:48 2017"},"message":"[bigint] Introduce BigInt type.\n\nBigInt is a new primitive type of arbitrary precision integers,\nproposed in https://tc39.github.io/proposal-bigint.\n\nThis CL introduces a corresponding instance type, map, and C++\nclass to V8 and adds BigInt support to a few operations (see the\ntest file). Much more is to come. Also, the concrete representation\nof BigInts is not yet fixed, currently a BigInt is simply a wrapped\nSmi.\n\nBug: v8:6791\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ia2901948efd7808f17cfc945f0d56e23e8ae0b45\nReviewed-on: https://chromium-review.googlesource.com/657022\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCommit-Queue: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47956}","milestone":63},{"_id":"6716a7f641fbd520fde38d84daef4121ea978897","author":{"name":"Jeremy Roman","email":"jbroman@chromium.org","time":"Mon Sep 11 02:22:47 2017"},"commit":"6716a7f641fbd520fde38d84daef4121ea978897","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Sep 11 05:17:28 2017"},"message":"Make v8::JSON::Stringify take Local<Value> instead of Local<Object>.\n\nIt is legal to stringify other kinds of values, like strings and numbers.\nSince Local<Object> is convertible to Local<Value>, this is unlikely to\nbreak callers.\n\nBug: v8:6810\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ie8e97c86308d62cdf0a2a17490a6e20de58fc76e\nReviewed-on: https://chromium-review.googlesource.com/657633\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Jeremy Roman <jbroman@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47935}","milestone":63},{"_id":"9b218658222434f1fd85c95569d3ebbb6c2f1531","author":{"name":"Anna Henningsen","email":"addaleax@gmail.com","time":"Wed Sep 06 18:43:47 2017"},"commit":"9b218658222434f1fd85c95569d3ebbb6c2f1531","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Sep 08 13:07:24 2017"},"message":"[api] Add optional data pointer to GC callbacks\n\nThis can be useful when there may be multiple callbacks attached by\ncode that's not directly tied to a single isolate, e.g. working\non a per-context basis.\n\nThis also allows rephrasing the global non-isolate APIs in terms\nof this new API, rather than working around it inside `src/heap`.\n\nTBR=hpayer@chromium.org\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I2e490ec40d1a34ea812f25f41ef9741d2116d965\nReviewed-on: https://chromium-review.googlesource.com/647548\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47923}","milestone":63},{"_id":"ba145b32b43047a727ab0ec86d3b5ac2a8f6a92b","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Wed Sep 06 05:57:21 2017"},"commit":"ba145b32b43047a727ab0ec86d3b5ac2a8f6a92b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Sep 06 16:57:44 2017"},"message":"[api] Fix typo in comment\n\nR=adamk@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ie59cc231e130fad391508e5c47e01d32d0a78806\nReviewed-on: https://chromium-review.googlesource.com/651357\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47857}","milestone":63},{"_id":"43bb27789891c51b331e354f5c48e0d674d1077d","author":{"name":"Franziska Hinkelmann","email":"franzih@chromium.org","time":"Mon Sep 04 16:45:36 2017"},"commit":"43bb27789891c51b331e354f5c48e0d674d1077d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Sep 05 17:28:29 2017"},"message":"[api] Use query interceptor in Object.keys().\n\nThe V8 API provides interceptors. They are not part of the\nEcmaScript specification. But their behavior should be consistent.\nFor example, when an EnumeratorInterceptor is defined, Object.keys(),\nObject.entries(), and Object.values() should all have the\nsame number of entries.\n\nThis CL creates consistent behavior among these\nfunctions. If a QueryCallback is present, it is used to\nfilter the result from the EnumeratorCallback for\nenumerable properties.\n\nBug: v8:6627\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I4f4271ddeb99a5e85918148c5033923c149b9468\nReviewed-on: https://chromium-review.googlesource.com/649786\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Franziska Hinkelmann <franzih@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47831}","milestone":63},{"_id":"88212a2a8456bfa5d099d3a21703f2899b5f6c25","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Aug 31 11:18:41 2017"},"commit":"88212a2a8456bfa5d099d3a21703f2899b5f6c25","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 31 11:21:35 2017"},"message":"Updated version to 6.3\n\nTBR=machenbach@chromium.org\nNOTRY=true\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I59e5a30a469fa1a397ef55d2bc2bce550c5eed2f\nReviewed-on: https://chromium-review.googlesource.com/645706\nCommit-Queue: Michael Hablich <hablich@chromium.org>\nReviewed-by: Michael Hablich <hablich@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47740}","milestone":63},{"_id":"d138f8d7ef6bb1021c4b7ddce51374a10eef2061","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Wed Aug 30 17:03:38 2017"},"commit":"d138f8d7ef6bb1021c4b7ddce51374a10eef2061","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 31 04:20:16 2017"},"message":"[promise] Reduce size of PromiseCapability by making it a struct\n\nBug: v8:5046\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I586dad351c950c119ec4d16693ce2a82395a8272\nReviewed-on: https://chromium-review.googlesource.com/640011\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47726}","milestone":63},{"_id":"dbfe4a49d88f6655ed31285a40b63786ab1e8e49","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Wed Aug 30 21:21:13 2017"},"commit":"dbfe4a49d88f6655ed31285a40b63786ab1e8e49","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 31 00:28:56 2017"},"message":"[Modules] Introduce ScriptOrModule and HostDefinedOptions\n\nThis patch introduces a new container type ScriptOrModule which\nprovides the name and the host defined options of the script/module.\n\nThis patch also introduces a new PrimitivesArray that can hold\nPrimitive values, which the embedder can use to store metadata.\n\nThe HostDefinedOptions is passed to V8 through the ScriptOrigin, and\npassed back to the embedder through HostImportModuleDynamically for\nmodule loading.\n\nBug: v8:5785, v8:6658, v8:6683\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I56c26fc9a680b273ac0a6691e5ad75f15b8dc80a\nReviewed-on: https://chromium-review.googlesource.com/622158\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47724}","milestone":63},{"_id":"11ba497cd887b6cdedba403d540094433082b33b","author":{"name":"Sergei D","email":"dats@chromium.org","time":"Fri Aug 25 07:12:51 2017"},"commit":"11ba497cd887b6cdedba403d540094433082b33b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Aug 30 06:28:09 2017"},"message":"Delegate getting current wall-clock time to the Platform interface.\n\nTo enable executing code in a context of a particular time or date (e.g. when\ncodepath depends on whether it's say evening or New Year) there is a need for\na way to provide it bypassing actual system time.\n\nBug: chromium:751993\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iee35d97b74345f63fff814a65a6f134d7c970341\nReviewed-on: https://chromium-review.googlesource.com/598666\nCommit-Queue: Sergei Datsenko <dats@chromium.org>\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nReviewed-by: Igor Sheludko <ishell@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47700}","milestone":63},{"_id":"ce05578aa6606cf662984a968cc99d421cea30d8","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Tue Aug 29 00:17:03 2017"},"commit":"ce05578aa6606cf662984a968cc99d421cea30d8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 29 17:42:34 2017"},"message":"[api] Mark non-Isolate constructors of String::Utf8Value/Value for deprecation\n\nAlso remove last internal callers of the to-be-deprecated APIs.\n\nBug: v8:2487\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng;master.tryserver.v8:v8_linux_noi18n_rel_ng\nChange-Id: Id72cf363eac86e4b4dbf7df83bdb848071260b90\nReviewed-on: https://chromium-review.googlesource.com/639326\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47690}","milestone":62},{"_id":"779bb1b1724c02a7b88480db857d8d4c3f5ede74","author":{"name":"Jeremy Roman","email":"jbroman@chromium.org","time":"Mon Aug 28 21:07:45 2017"},"commit":"779bb1b1724c02a7b88480db857d8d4c3f5ede74","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 29 14:15:10 2017"},"message":"[snapshot] Make the API external reference table const.\n\nChromium side: https://chromium-review.googlesource.com/c/chromium/src/+/639552\n\nBug: chromium:759831\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I1b217c4fa4c930733dcfab982879bf41936a3a83\nReviewed-on: https://chromium-review.googlesource.com/639551\nCommit-Queue: Jeremy Roman <jbroman@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47683}","milestone":62},{"_id":"fe598532ec1317e8b85343133be9fb708e07bd2e","author":{"name":"Mateusz Czeladka","email":"mateusz.szczap@gmail.com","time":"Thu Aug 24 21:49:48 2017"},"commit":"fe598532ec1317e8b85343133be9fb708e07bd2e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 28 18:17:08 2017"},"message":"Pass Isolate pointer to String::Utf8Value/Value constructors\n\nAs part of J2V8 development (https://github.com/eclipsesource/J2V8),\nwe realized that we had a subtle bug in how Isolate scope was created\nand it's lifetime managed, see:\nhttps://github.com/eclipsesource/J2V8/issues/313.\n\nMentioned above bug was fixed, however, what we also noticed is that\nV8 API has been constantly and slowly moving to such an API, in which\none has to pass Isolate explicitly to methods and/or constructors. We\nfound two more places that might have been overlooked. This contribution\nadds passing of Isolate pointer explicitly to constructors of\nString::Utf8Value and String::Value classes.\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng;master.tryserver.v8:v8_linux_noi18n_rel_ng\nChange-Id: I61984285f152aba5ca922100cf3df913a9cb2cea\nReviewed-on: https://chromium-review.googlesource.com/593309\nCommit-Queue: Adam Klein <adamk@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47656}","milestone":62},{"_id":"837b80166689d91d758355a73a507d5d603a91c8","author":{"name":"Sergei D","email":"dats@chromium.org","time":"Mon Aug 28 00:52:46 2017"},"commit":"837b80166689d91d758355a73a507d5d603a91c8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Aug 28 09:28:23 2017"},"message":"Export default implementation of getting wall-clock time.\n\nDerived projects need easy access to the original V8's implementation of\ntime to implement Platform interface.\n\nBug: chromium:751993\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I97ee77929fda5930e7d75ca8609797673485cec3\nReviewed-on: https://chromium-review.googlesource.com/636884\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Sergei Datsenko <dats@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47638}","milestone":62},{"_id":"03850446dc17f2183387627c2585d395e9ab281a","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Thu Jun 29 07:58:34 2017"},"commit":"03850446dc17f2183387627c2585d395e9ab281a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Aug 23 13:31:30 2017"},"message":"Remove deprecated tracing methods from v8::Platform\n\nEmbedders should implement them via the v8::TracingController interface\nand return a pointer to an instance of that interface from\nv8::Platform::GetTracingController\n\nBUG=v8:6511\nR=fmeawad@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: If17b013c7ce4cf540a186767fd6e1b5e00e0dab2\nReviewed-on: https://chromium-review.googlesource.com/554770\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47549}","milestone":62},{"_id":"749b9c062ea20eaf4fa5701b2c0da67d3c2d939b","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Wed Jun 21 12:58:02 2017"},"commit":"749b9c062ea20eaf4fa5701b2c0da67d3c2d939b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 22 13:42:56 2017"},"message":"Remove deprecated allow code-gen callback\n\nBUG=chromium:732736\nR=marja@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I2c0a96b76ae977e53a418d22175bcc487f548786\nReviewed-on: https://chromium-review.googlesource.com/543238\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47509}","milestone":62},{"_id":"b6059a67cae1c3eb1d3c6698c61042efca68a3bc","author":{"name":"Franziska Hinkelmann","email":"franzih@chromium.org","time":"Fri Aug 18 08:15:37 2017"},"commit":"b6059a67cae1c3eb1d3c6698c61042efca68a3bc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 18 17:56:44 2017"},"message":"[api] Use query interceptor in Object.keys().\n\nThe V8 API provides interceptors. They are not part of the\nEcmaScript specification. But their behavior should be consistent.\nFor example, when an EnumeratorInterceptor is defined, Object.keys(),\nObject.entries(), and Object.values() should all have the\nsame number of entries.\n\nThis CL creates consistent behavior among these\nfunctions. If a QueryCallback is present, it is used to\nfilter the result from the EnumeratorCallback for\nenumerable properties.\n\nBug: v8:6627\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ie51e69bb77099d9fafc4b1ea02671eced610edba\nReviewed-on: https://chromium-review.googlesource.com/609068\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Franziska Hinkelmann <franzih@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47442}","milestone":62},{"_id":"7e15bf819cce5770ee525d3e7e4e15a0781abd04","author":{"name":"Georg Neis","email":"neis@chromium.org","time":"Mon Aug 14 14:18:54 2017"},"commit":"7e15bf819cce5770ee525d3e7e4e15a0781abd04","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Aug 16 08:30:48 2017"},"message":"[modules, api] Restrict GetModuleNamespace to evaluated modules.\n\nAllowing GetModuleNamespace on a not-yet-evaluated module does not make a\nlot of sense because accessing the namespace object before evaluation\ncan lead to surprising behavior.\n\nR=adamk@chromium.org\n\nBug: v8:1569\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I3e3feb344f6399bf92b3dabc97c571a61b38bd41\nReviewed-on: https://chromium-review.googlesource.com/613268\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47365}","milestone":62},{"_id":"c19547f690ea024000a99a4c52c6afc2d437ee4d","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Thu Aug 10 21:30:22 2017"},"commit":"c19547f690ea024000a99a4c52c6afc2d437ee4d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 10 23:01:24 2017"},"message":"[api] Remove experimental tag for PromiseHooks\n\nBug: v8:4643\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Id82365d20830e5efd33a8d066f5aab4b999807d7\nReviewed-on: https://chromium-review.googlesource.com/611180\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47297}","milestone":62},{"_id":"dadbde038d9526bb08195bfa5ef2a87d036da046","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Thu Aug 10 14:39:55 2017"},"commit":"dadbde038d9526bb08195bfa5ef2a87d036da046","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 10 15:44:36 2017"},"message":"[profview] Distinguish between parse/opt/unopt compile\n\nRather than lumping in parsing, bytecode compilation and optimized\ncompilation all into the same VM \"compile\" state, seperate them out\ninto individual states.  Additionally, add support for these states\nto tickprocessor and profview.\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I5be943e23cae042e32e9ccb24415c67c18658b4b\nReviewed-on: https://chromium-review.googlesource.com/608973\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47283}","milestone":62},{"_id":"a5f321cd9bfe93e5b097969d02cb759f2c7ae9fb","author":{"name":"Peter Marshall","email":"petermarshall@chromium.org","time":"Wed Aug 09 09:08:20 2017"},"commit":"a5f321cd9bfe93e5b097969d02cb759f2c7ae9fb","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Aug 10 07:49:14 2017"},"message":"[serializer] Enable TypedArrays and ArrayBuffers in the snapshot.\n\nPreviously we could not support these due to their unique memory layout\nincluding off-heap backing store allocations. We now serialize these\nallocations and then fix-up references to them in the PostProcess step\nof deserialization.\n\nBug: v8:6691\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ic215049c06e6ee655bd17c11dfab0d8630568a84\nReviewed-on: https://chromium-review.googlesource.com/597709\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Peter Marshall <petermarshall@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47271}","milestone":62},{"_id":"b8d4ce2b9955ebd08159a522c834a9a8d31dcd4c","author":{"name":"Sergei D","email":"dats@chromium.org","time":"Tue Aug 08 00:48:33 2017"},"commit":"b8d4ce2b9955ebd08159a522c834a9a8d31dcd4c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Aug 09 05:55:23 2017"},"message":"Add get current wall-clock time to the Platform\n\nTo avoid breaking Chromium we expose a stub method first, and will start\nusing it only when V8 rolls into Chromium and we implement it there.\n\nBug: chromium:751993\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ida1f96f2dfa833552e7adfa36a580a6ef1bdd1aa\nReviewed-on: https://chromium-review.googlesource.com/604812\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nCommit-Queue: Sergei Datsenko <dats@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47233}","milestone":62},{"_id":"946f78a0ad8b2e6f4d9b70d82c8d47637b5e8ead","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Fri Aug 04 17:51:58 2017"},"commit":"946f78a0ad8b2e6f4d9b70d82c8d47637b5e8ead","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Aug 04 18:51:54 2017"},"message":"[parsing] Add a UseCounter for labeled expression statements\n\nThis was suggested by bmeurer after running into the confusing\nexample of:\n\n  x => {x:x}\n\nwhich might appear to be an arrow function that returns an object\nliteral containing its argument, but instead is an arrow function\nthat does nothing.\n\nWhile it's unclear whether the language would change to make this\nprobable programmer error an actual syntax error, we can at least\ngather some data on the question of whether we see any such code\nin the wild.\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I08202039ecf7a7a4c71ad95ecd839436b4ec2af8\nReviewed-on: https://chromium-review.googlesource.com/600888\nCommit-Queue: Adam Klein <adamk@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47171}","milestone":62},{"_id":"19fee8b24b2f1580a92910635e0ca02cbdf615af","author":{"name":"Jeremy Roman","email":"jbroman@chromium.org","time":"Mon Jul 31 20:57:14 2017"},"commit":"19fee8b24b2f1580a92910635e0ca02cbdf615af","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Aug 02 22:15:57 2017"},"message":"Expose v8::TypedArray::kMaxLength.\n\nThere is an API check failure if values larger than i::Smi::kMaxValue are\nprovided, but it is inconvenient for API users to know what this value is\n(and SIZE_MAX and INT_MAX are both incorrect).\n\nThis is analogous to v8::String::kMaxLength.\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nBug: chromium:750788\nChange-Id: Ic3e0da62aeacfeb996122595232aa0ea8744517e\nReviewed-on: https://chromium-review.googlesource.com/594677\nReviewed-by: Jakob Kummerow <jkummerow@chromium.org>\nCommit-Queue: Jeremy Roman <jbroman@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47099}","milestone":62},{"_id":"b41f857b9eeb89f16120bb036ece9d249b3aa413","author":{"name":"Julien Brianceau","email":"jbriance@cisco.com","time":"Wed Aug 02 08:23:36 2017"},"commit":"b41f857b9eeb89f16120bb036ece9d249b3aa413","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Aug 02 09:35:28 2017"},"message":"Fix common misspellings\n\nBug: chromium:750830\nCq-Include-Trybots: master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_chromium_rel_ng;master.tryserver.v8:v8_linux_noi18n_rel_ng\nChange-Id: Icab7b5a1c469d5e77d04df8bfca8319784e92af4\nReviewed-on: https://chromium-review.googlesource.com/595655\nCommit-Queue: Julien Brianceau <jbriance@cisco.com>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Clemens Hammacher <clemensh@chromium.org>\nReviewed-by: Daniel Ehrenberg <littledan@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47072}","milestone":62},{"_id":"7ff6471c481d0200b2026f5c41f68308d313d30b","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Tue Aug 01 17:36:09 2017"},"commit":"7ff6471c481d0200b2026f5c41f68308d313d30b","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Aug 01 18:37:13 2017"},"message":"[modules] Add comment explaining synchronous error handling\n\nBug: v8:5785\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I1792c57c37bac996079d5ecce5b61a13b327fb54\nReviewed-on: https://chromium-review.googlesource.com/596467\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#47056}","milestone":62},{"_id":"3f90d9f994671a0f8aaa666f43bafd67ba369bad","author":{"name":"Bill Budge","email":"bbudge@chromium.org","time":"Thu Jul 27 18:14:36 2017"},"commit":"3f90d9f994671a0f8aaa666f43bafd67ba369bad","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Sat Jul 29 02:49:44 2017"},"message":"[Memory] Add an OnCriticalMemoryPressure method to V8::Platform.\n\nAdds virtual V8::Platform::OnCriticalMemoryPressure method, default\nimplementation does nothing.\n\nCalls this method on first allocation failures in NewArray, Malloced,\nand zone AccountingAllocator and adds retry logic.\n\nAdds utility functions for allocating base::VirtualMemory to functions\nin allocation.h, which call this method and add retry logic.\n\nCalls these utility functions in heap CodeRange, Spaces, StoreBuffer\nand SequentialMarkingDeque.\n\nBug: v8:6635\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I38afd394f3be556aca037d16675e9884658158cb\nReviewed-on: https://chromium-review.googlesource.com/583543\nCommit-Queue: Bill Budge <bbudge@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46988}","milestone":62},{"_id":"920025f523c4754064089f6a5398e0d320c05d32","author":{"name":"Alexei Filippov","email":"alph@chromium.org","time":"Thu Jul 27 22:41:37 2017"},"commit":"920025f523c4754064089f6a5398e0d320c05d32","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 28 20:56:24 2017"},"message":"[heap-profiler] Remove unused methods from Heap Profiler.\n\nRemove GetProfilerMemorySize from HeapProfiler API.\nRemove HeapObjectsMap::FindUntrackedObjects\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I32a9a0676485c17c08c068a8ca501525b0d2670e\nReviewed-on: https://chromium-review.googlesource.com/590651\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Alexei Filippov <alph@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46984}","milestone":62},{"_id":"13532c0869de0903e91082eea7ab8ae628333822","author":{"name":"Mircea Trofin","email":"mtrofin@chromium.org","time":"Fri Jul 28 05:45:39 2017"},"commit":"13532c0869de0903e91082eea7ab8ae628333822","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 28 14:51:16 2017"},"message":"[wasm] Streaming API: own the promise.\n\nAvoid leaking because the persistent handle isn't released. To further\nclarify ownership, the v8 side owns now completely the promise.\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ief9e44e60235fe6199fc4884ad1ccbd9e34cce8a\nReviewed-on: https://chromium-review.googlesource.com/591067\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCommit-Queue: Mircea Trofin <mtrofin@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46978}","milestone":62},{"_id":"37680d6563275f92ed78eb883dec0d5309c64668","author":{"name":"Leszek Swirski","email":"leszeks@chromium.org","time":"Thu Jul 27 12:45:00 2017"},"commit":"37680d6563275f92ed78eb883dec0d5309c64668","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 27 13:31:55 2017"},"message":"[objects] Make feedback vector a first-class object\n\nInstead of having feedback vector as a subtype of FixedArray with\nreserved slots, make it a first-class variable-sized object with a\nfixed-size header. This allows us to compress counters to ints in the\nheader, rather than forcing them to be Smis.\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Icc5f088ffbc2e2651b845bc71ea42060639e3e48\nReviewed-on: https://chromium-review.googlesource.com/585129\nCommit-Queue: Leszek Swirski <leszeks@chromium.org>\nReviewed-by: Michael Stanton <mvstanton@chromium.org>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46935}","milestone":62},{"_id":"832e5b9f479bff2b5a171c32e6c25c542b8c8036","author":{"name":"Mircea Trofin","email":"mtrofin@chromium.org","time":"Tue Jul 25 07:51:09 2017"},"commit":"832e5b9f479bff2b5a171c32e6c25c542b8c8036","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 25 18:27:22 2017"},"message":"[wasm] Add an explicit Abort to wasm streaming builder.\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iae6942cf2b223a296dda479af26a978576d0c58a\nReviewed-on: https://chromium-review.googlesource.com/584367\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCommit-Queue: Mircea Trofin <mtrofin@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46882}","milestone":62},{"_id":"ddec1c4f57a94f5e0450e70c98c1b5d2d5f0d46e","author":{"name":"Georg Neis","email":"neis@chromium.org","time":"Tue Jul 25 11:09:35 2017"},"commit":"ddec1c4f57a94f5e0450e70c98c1b5d2d5f0d46e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jul 25 12:09:41 2017"},"message":"[modules] Fix Object.prototype.hasOwnProperty on namespace objects.\n\nThis must throw for uninitialized properties.\n\nR=adamk@chromium.org\n\nBug: v8:1569, v8:5487\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng;master.tryserver.v8:v8_linux_noi18n_rel_ng\nChange-Id: I8beb8bf6a197870eb5c038102ab474dd12f6b6eb\nReviewed-on: https://chromium-review.googlesource.com/582013\nCommit-Queue: Georg Neis <neis@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46870}","milestone":62},{"_id":"d77e98e8dfb3555e7d0553621d88e800f3581af9","author":{"name":"Mircea Trofin","email":"mtrofin@chromium.org","time":"Fri Jul 21 16:05:38 2017"},"commit":"d77e98e8dfb3555e7d0553621d88e800f3581af9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 21 18:03:27 2017"},"message":"[wasm] Use async compilation in streaming API\n\nThis change gets the streaming compile APIs closer to their final shape,\nby moving to a promise-based design.\n\nBug: chromium:747396\nBug: v8:6619\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ifd22ff83c79391a0f2a8ec2e5af39f71df1ea1c2\nReviewed-on: https://chromium-review.googlesource.com/581412\nCommit-Queue: Brad Nelson <bradnelson@chromium.org>\nReviewed-by: Brad Nelson <bradnelson@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46821}","milestone":62},{"_id":"4037ad6bdb37d6afc71fd780f38e8837690de5fd","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Jul 20 12:06:10 2017"},"commit":"4037ad6bdb37d6afc71fd780f38e8837690de5fd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 20 12:21:52 2017"},"message":"Update version to 6.2\n\nTBR=machenbach@chromium.org\nNOTRY=true\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iead81c633b9c0712524a348b106f267ddede24ff\nReviewed-on: https://chromium-review.googlesource.com/579427\nCommit-Queue: Michael Hablich <hablich@chromium.org>\nReviewed-by: Michael Hablich <hablich@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46790}","milestone":62},{"_id":"bb29f9a4d6fb5e3277aa5b58bc532cd90f687f0c","author":{"name":"Ulan Degenbaev","email":"ulan@chromium.org","time":"Wed Jul 19 09:53:06 2017"},"commit":"bb29f9a4d6fb5e3277aa5b58bc532cd90f687f0c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 19 12:53:27 2017"},"message":"[heap] Add API to set heap semi-space limits in KB.\n\nThis relands parts of \"[heap] Allow a minimum semi-space size of 512K.\"\nexcluding the actual semi-space size change.\n\nThis partially reverts commit f341bb0f623821e56349735e47e1a9094f65d9a3\n\n> Original commit message:\n> Revert \"[heap] Allow a minimum semi-space size of 512K.\"\n> This reverts commit 0d2ed6c3287ec48ee06ec1b69287ed4bf0dd60d7.\n> The CL introduced perf regressions: crbug.com/735649.\n> We are going to reland the CL in an isolated V8 roll to ensure\n> that perf regressions are attributed correctly.\n\n> Original commit message:\n> > [heap] Allow a minimum semi-space size of 512K.\n> > This CL also reduces the minimum semi-space size to 512K.\n> > BUG=chromium:716032\n> BUG=chromium:735649\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I5ed66b72104aa877d67fcd20bdadc807ea1551c3\nReviewed-on: https://chromium-review.googlesource.com/575065\nCommit-Queue: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46762}","milestone":62},{"_id":"33ad95682c7576410fd02f73d50ec429bcac4acf","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Thu Jul 13 06:57:09 2017"},"commit":"33ad95682c7576410fd02f73d50ec429bcac4acf","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 13 14:48:56 2017"},"message":"Remove padding instance types.\n\nThis also makes sure 6.0 and 6.1 have the same constants exposed\nin v8.h.\n\nBug: v8:6592\n\nR=bmeurer@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I3afc0e5e4495594c76229555aab148ac78388f80\nReviewed-on: https://chromium-review.googlesource.com/569618\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46642}","milestone":61},{"_id":"7d02925ee6b8b6d52037c08a6de89fd5d11e7712","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Thu Jul 13 07:49:11 2017"},"commit":"7d02925ee6b8b6d52037c08a6de89fd5d11e7712","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 13 09:52:46 2017"},"message":"[api] Reorder fields in {SharedArrayBuffer,ArrayBuffer}::Contents.\n\nThis is for backwards ABI compatibility to version 6.0.\n\nR=bmeurer@chromium.org\n\nBug: v8:6592\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I20f3fa79324511c6e393ddaad50880f22ef6df77\nReviewed-on: https://chromium-review.googlesource.com/569758\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46625}","milestone":61},{"_id":"ea632716d72cb87904e3d78ddb55a6c0c5f1d59f","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Wed Jul 12 22:15:39 2017"},"commit":"ea632716d72cb87904e3d78ddb55a6c0c5f1d59f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jul 12 23:39:51 2017"},"message":"[d8] Fix stack overflow when importing modules\n\nBug: chromium:740694\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ib23bca1942c25d8a9f32e12be3f7b50fc3ab55c8\nReviewed-on: https://chromium-review.googlesource.com/568222\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46611}","milestone":61},{"_id":"cf466f72b3ad31bb7f863902b48bdc8525e6fdcd","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Thu Jun 29 09:20:11 2017"},"commit":"cf466f72b3ad31bb7f863902b48bdc8525e6fdcd","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 07 15:32:00 2017"},"message":"Add myself to include/OWNERS\n\nR=danno@chromium.org\n\nChange-Id: Ib4f672b5e773772278553126912b596e6b28b476\nReviewed-on: https://chromium-review.googlesource.com/554756\nReviewed-by: Daniel Clifford <danno@chromium.org>\nCommit-Queue: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46485}","milestone":61},{"_id":"b9b8cc9bad0128bf07638c138d709a50433884f1","author":{"name":"Raphael Kubo da Costa","email":"raphael.kubo.da.costa@intel.com","time":"Tue Jul 04 13:46:27 2017"},"commit":"b9b8cc9bad0128bf07638c138d709a50433884f1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jul 07 06:42:59 2017"},"message":"Expose %ErrorPrototype% as an intrinsic in the public API.\n\nBlink needs %ErrorPrototype% in order to properly set up the inheritance\nchain from DOMException, as specified in WebIDL:\nhttps://heycam.github.io/webidl/#es-DOMException-specialness\n\nThis patch is similar to commit 5ec1cddcd (\"Expose %IteratorPrototype% as an\nintrinsic in the public API\"), with the difference that there was no entry\nfor %ErrorPrototype% in any of the mappings in contexts.h.\n\nBug: chromium:556950, chromium:737497\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iadc5b2b844f29f6c9640b6a89769d233931366e9\nReviewed-on: https://chromium-review.googlesource.com/559058\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Raphael Kubo da Costa (rakuco) <raphael.kubo.da.costa@intel.com>\nCr-Commit-Position: refs/heads/master@{#46464}","milestone":61},{"_id":"28bc6998a8e29a40499460c563b06df169843cdc","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Wed Jul 05 21:52:22 2017"},"commit":"28bc6998a8e29a40499460c563b06df169843cdc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jul 06 17:06:17 2017"},"message":"[ESnext] Add use counter for non undefined primitive returning constructor\n\nBug: v8:5536\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Icec1f77c6073e1e89210e71ad20044e09594209e\nReviewed-on: https://chromium-review.googlesource.com/548987\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46451}","milestone":61},{"_id":"22e95814a86037332d1d8d75b49fd71b28182592","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Thu Jun 29 21:22:11 2017"},"commit":"22e95814a86037332d1d8d75b49fd71b28182592","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 29 22:34:41 2017"},"message":"[ESnext] Change dynamic import API to return a promise\n\nPreviously V8 created a promise to return to userland,\nbut instead we let the embedder create and track the promise.\n\nBug: v8:5785\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I8903ffbabf3a256f1c8df844a656a873da304586\nReviewed-on: https://chromium-review.googlesource.com/492646\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nReviewed-by: Daniel Clifford <danno@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46333}","milestone":61},{"_id":"3d8e87aa7d3c66c14cc0d87dea2c4759765d0236","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Thu Jun 29 07:55:40 2017"},"commit":"3d8e87aa7d3c66c14cc0d87dea2c4759765d0236","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 29 08:40:35 2017"},"message":"Switch tracing to use v8::TracingController\n\nBUG=v8:6511\nR=fmeawad@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I4961e4b61a9ddc98385ed97c3ffcbcaef2d9cba7\nReviewed-on: https://chromium-review.googlesource.com/543144\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Fadi Meawad <fmeawad@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46307}","milestone":61},{"_id":"a209dcf6a151b0bc26aace1b49507af255b948b2","author":{"name":"Georg Neis","email":"neis@chromium.org","time":"Wed Jun 28 14:19:39 2017"},"commit":"a209dcf6a151b0bc26aace1b49507af255b948b2","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jun 28 15:54:57 2017"},"message":"[api] Expose a module's status and exception.\n\nV8 now takes care of recording a module's status, as proposed\nin https://github.com/tc39/ecma262/pull/916.\n\nR=adamk@chromium.org\n\nBug: v8:1569, chromium:594639\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Id884f1c817e1dc3eea79a5d5a7f5cd996db1dbb0\nReviewed-on: https://chromium-review.googlesource.com/548500\nCommit-Queue: Georg Neis <neis@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46293}","milestone":61},{"_id":"e9de55d595d9713d109851459ca7d7232033f864","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Wed Jun 28 08:07:45 2017"},"commit":"e9de55d595d9713d109851459ca7d7232033f864","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jun 28 10:00:48 2017"},"message":"Remove myself from non-toplevel owners files\n\nSpecifically for base and libplatform I was the only owner. Adding mlippautz@\nthere.\n\nR=danno@chromium.org\n\nChange-Id: I246b72141abc932d9caf7dcb7485e458283d4a9f\nReviewed-on: https://chromium-review.googlesource.com/551899\nReviewed-by: Daniel Clifford <danno@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46275}","milestone":61},{"_id":"7a02ba0df5b6049820cee45a13b4d86438b50872","author":{"name":"Yuki Shiino","email":"yukishiino@chromium.org","time":"Tue Jun 27 09:43:00 2017"},"commit":"7a02ba0df5b6049820cee45a13b4d86438b50872","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 27 11:33:05 2017"},"message":"Supports the Incumbent realm (Isolate::GetIncumbentContext).\n\nAdds new APIs Isolate::GetIncumbentContext() and\nContext::BackupIncumbentScope to support\n\"the backup incumbent settings object stack\" [1].\n\n[1] https://html.spec.whatwg.org/multipage/webappapis.html#backup-incumbent-settings-object-stack\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I1ccea0e6fe2743fe5f3072b9e1236111ce2b1a42\nReviewed-on: https://chromium-review.googlesource.com/536728\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Yuki Shiino <yukishiino@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46246}","milestone":61},{"_id":"6bd8f99925ee09c9388575386d641dfc55719a29","author":{"name":"Michaël Zasso","email":"mic.besace@gmail.com","time":"Mon Jun 26 13:29:31 2017"},"commit":"6bd8f99925ee09c9388575386d641dfc55719a29","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 27 10:38:32 2017"},"message":"Fix ArrayBuffer::Allocator::AllocationMode lookup\n\nCL https://chromium-review.googlesource.com/c/523271/6 introduced a\nwrong lookup of ArrayBuffer::Allocator::Allocator::AllocationMode that\nbreaks compilation with Visual Studio 2013.\n\nR=jochen@chromium.org\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I160242bc24ef8c23574d3ec3734be822a681b408\nReviewed-on: https://chromium-review.googlesource.com/548399\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46240}","milestone":61},{"_id":"5152d97870ddd7d4e18ef2e0616c42a5fb95974c","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Mon Jun 26 15:49:09 2017"},"commit":"5152d97870ddd7d4e18ef2e0616c42a5fb95974c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jun 26 17:17:38 2017"},"message":"Add API to create a platform with a tracing controller\n\nBUG=v8:6511\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ie6b62df693d3b847837c071e1f985b7ce3b420c8\nReviewed-on: https://chromium-review.googlesource.com/548499\nReviewed-by: Fadi Meawad <fmeawad@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46227}","milestone":61},{"_id":"c4852ea94c9b30bdca647cb53650931894233fe9","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Thu Jun 22 07:25:30 2017"},"commit":"c4852ea94c9b30bdca647cb53650931894233fe9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 22 08:58:40 2017"},"message":"Pull tracing related methods out of Platform\n\nThis will allow for embedders to easily implement their own Platform\nwithout duplicating the tracing controller code.\n\nBUG=v8:6511\nR=fmeawad@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I7c64933d12b2cf53f0636fbc87f6ad5d22019f5c\nReviewed-on: https://chromium-review.googlesource.com/543015\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Fadi Meawad <fmeawad@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46118}","milestone":61},{"_id":"417123dd4f43c13bb8e6f6f763cfe809b65a7913","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Wed Jun 21 12:53:54 2017"},"commit":"417123dd4f43c13bb8e6f6f763cfe809b65a7913","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 22 07:25:08 2017"},"message":"Deprecate old-style allow code-gen callback\n\nBUG=chromium:732736\nR=marja@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I3b3dfdd0c55a7ec267ae26765901497611d39d29\nReviewed-on: https://chromium-review.googlesource.com/543158\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46112}","milestone":61},{"_id":"d9be9fd88d9ee86288c966a4091ef56868e7d5f7","author":{"name":"Alexey Kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Wed Jun 21 12:30:56 2017"},"commit":"d9be9fd88d9ee86288c966a4091ef56868e7d5f7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jun 21 16:00:14 2017"},"message":"Added v8::Module::GetModuleRequestPosition method\n\nThis method returns position of importing stmt in module source.\n\nR=neis@chromium.org\n\nBug: chromium:721589\nChange-Id: I8639796a001fdfec7cf5aa1bf1a27493f7a757a9\nReviewed-on: https://chromium-review.googlesource.com/541322\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Aleksey Kozyatinskiy <kozyatinskiy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46105}","milestone":61},{"_id":"4cf144dc2e1ba011d99f026880cee6e1346f3d4a","author":{"name":"Sathya Gunasekaran","email":"gsathya@chromium.org","time":"Mon Jun 19 23:19:16 2017"},"commit":"4cf144dc2e1ba011d99f026880cee6e1346f3d4a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 20 10:25:15 2017"},"message":"[Collections] Implement SmallOrderedHashMap\n\nBug: v8:6443\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I20b1006a5c5ff24a730f15286cf0f340ba047b78\nReviewed-on: https://chromium-review.googlesource.com/526001\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#46034}","milestone":61},{"_id":"0d2ed6c3287ec48ee06ec1b69287ed4bf0dd60d7","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Mon Jun 19 10:16:13 2017"},"commit":"0d2ed6c3287ec48ee06ec1b69287ed4bf0dd60d7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jun 19 10:16:13 2017"},"message":"[heap] Allow a minimum semi-space size of 512K.\n\nThis CL also reduces the minimum semi-space size to 512K.\n\nBUG=chromium:716032\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_chromium_rel_ng\n\nReview-Url: https://codereview.chromium.org/2942543002\nCr-Commit-Position: refs/heads/master@{#45992}\n","milestone":61},{"_id":"322b2d7d14cdf1d6d53fb763e14b9b058f29a020","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Tue Jun 13 12:43:18 2017"},"commit":"322b2d7d14cdf1d6d53fb763e14b9b058f29a020","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 13 13:39:27 2017"},"message":"Pass the string we're about to compile to embedder\n\nThis gives the embedder more context for deciding whether code\ngeneration should be allowed or not, or they can chose to include the\ncode in a report.\n\nBUG=chromium:732736\nR=ahaas@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ibbaa3d0574319d290f15565be3eed2ee4d3dda36\nReviewed-on: https://chromium-review.googlesource.com/532875\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45905}","milestone":61},{"_id":"ee596af2502cd5e7ef2940989ce61677a2f9603d","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Mon Jun 12 08:48:38 2017"},"commit":"ee596af2502cd5e7ef2940989ce61677a2f9603d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Jun 12 10:09:12 2017"},"message":"Replace <> with &lt;&gt; in md docs\n\nTBR=mvstanton@chromium.org\n\nChange-Id: I1f348a050c321968cb20c783ebe4b55f6beed27c\nReviewed-on: https://chromium-review.googlesource.com/530826\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45841}","milestone":61},{"_id":"c72a612667a104ac5ce989ae210b53c8f87add23","author":{"name":"scottmg","email":"scottmg@chromium.org","time":"Sun Jun 11 06:31:33 2017"},"commit":"c72a612667a104ac5ce989ae210b53c8f87add23","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Sun Jun 11 06:31:33 2017"},"message":"Basic compilation on Fuchsia\n\nSufficient to compile //v8 in Chrome with target_os=\"fuchsia\". Doesn't\nlink yet, due to missing implementations (primarily VirtualMemory, as\nwell as a few utility functions).\n\nBUG=chromium:731217\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_chromium_rel_ng\n\nReview-Url: https://codereview.chromium.org/2931143002\nCr-Commit-Position: refs/heads/master@{#45831}\n","milestone":61},{"_id":"be1135132aeb951a82008d295250a22ba358a8a7","author":{"name":"Clemens Hammacher","email":"clemensh@chromium.org","time":"Fri Jun 09 12:21:52 2017"},"commit":"be1135132aeb951a82008d295250a22ba358a8a7","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jun 09 16:24:19 2017"},"message":"[wasm] [cleanup] Avoid shouting WASM\n\nThis CL removes most occurences of \"WASM\" from outputs and comments in\nthe code. They are replaced either by \"WebAssembly\" or (especially in\ncomments) \"wasm\". These are the spellings officially proposed on\nhttp://webassembly.org/.\n\nR=ahaas@chromium.org\nBUG=v8:6474\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Id39fa5e25591678263745a4eab266db546e65983\nReviewed-on: https://chromium-review.googlesource.com/529085\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Andreas Haas <ahaas@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nCommit-Queue: Clemens Hammacher <clemensh@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45824}","milestone":61},{"_id":"8f39e07d80f689eda04c176e9cb33dce1471f7d1","author":{"name":"Eric Holk","email":"eholk@chromium.org","time":"Thu Jun 08 02:04:12 2017"},"commit":"8f39e07d80f689eda04c176e9cb33dce1471f7d1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 08 02:51:13 2017"},"message":"Add allocation information to ArrayBuffer::Contents\n\nArray buffers can now have an allocation that is larger than the actual\nbuffer, such as when WebAssembly guard regions are enabled. Embedders\nneed to know the actual allocation start and length when externalizing\na buffer so they can deallocate it properly.\n\nBug: chromium:720302, v8:5277\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ifc184fdd59d77af01c07a64d2c0229ca859a01b0\nReviewed-on: https://chromium-review.googlesource.com/523271\nCommit-Queue: Eric Holk <eholk@chromium.org>\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45777}","milestone":61},{"_id":"cf8f7bdc9d5ee314a10fe043e421ec95604d4eca","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Wed Jun 07 13:21:28 2017"},"commit":"cf8f7bdc9d5ee314a10fe043e421ec95604d4eca","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Jun 07 13:21:28 2017"},"message":"[heap] Increase memory reducer activation limit for external memory changes.\n\nBUG=chromium:729521\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_chromium_rel_ng\n\nReview-Url: https://codereview.chromium.org/2923563006\nCr-Commit-Position: refs/heads/master@{#45763}\n","milestone":61},{"_id":"5ebd6fcd269de6ac85d6805049882e75e298ddb3","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Tue Jun 06 12:04:01 2017"},"commit":"5ebd6fcd269de6ac85d6805049882e75e298ddb3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 06 12:04:01 2017"},"message":"[heap] Lower external allocation limit when external memory shrinks.\n\nBUG=chromium:728228\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_chromium_rel_ng\n\nReview-Url: https://codereview.chromium.org/2921883002\nCr-Commit-Position: refs/heads/master@{#45726}\n","milestone":61},{"_id":"fc3cc3bc3083ca14d1ec9c9db2401053e594a36e","author":{"name":"Mircea Trofin","email":"mtrofin@chromium.org","time":"Tue Jun 06 04:10:53 2017"},"commit":"fc3cc3bc3083ca14d1ec9c9db2401053e594a36e","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 06 05:47:03 2017"},"message":"[wasm] Remove support for overloading async APIs.\n\nThis wraps up the move to explicit APIs, i.e.\ninstantiateStreaming/compileStreaming.\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Icc8280b2b3ad35acb90cc0beebe3acd7581179d7\nReviewed-on: https://chromium-review.googlesource.com/525141\nCommit-Queue: Mircea Trofin <mtrofin@chromium.org>\nCommit-Queue: Brad Nelson <bradnelson@chromium.org>\nReviewed-by: Brad Nelson <bradnelson@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45719}","milestone":61},{"_id":"fb096eea4102e679aebec4b158bf3447de1cd592","author":{"name":"Mircea Trofin","email":"mtrofin@chromium.org","time":"Wed May 31 23:12:09 2017"},"commit":"fb096eea4102e679aebec4b158bf3447de1cd592","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jun 02 17:45:53 2017"},"message":"[wasm] Refactor implementation of {instantiate|compile}Streaming\n\nThis places in the scaffolding for completely relying on the embedder\nfor these APIs. Once Chrome uses these instead of the old APIs,\nwe can cleanup further by removing the old callback insertion points\nand not exposing the streaming APIs if callbacks aren't provided.\n\nBug: \nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I15abd257257be512674b18aa4af2e0a0153612a5\nReviewed-on: https://chromium-review.googlesource.com/520602\nCommit-Queue: Brad Nelson <bradnelson@chromium.org>\nReviewed-by: Brad Nelson <bradnelson@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45696}","milestone":61},{"_id":"502c6ae6a03979efbd3e006e6a0b8c3369ca2bbc","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Fri Jun 02 09:40:16 2017"},"commit":"502c6ae6a03979efbd3e006e6a0b8c3369ca2bbc","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Jun 02 09:40:16 2017"},"message":"[heap] Activate memory reducer on external memory activity.\n\nBUG=chromium:728228,chromium:626082\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_chromium_rel_ng\n\nReview-Url: https://codereview.chromium.org/2917853004\nCr-Commit-Position: refs/heads/master@{#45671}\n","milestone":61},{"_id":"fc0fccd0dbbf29c53f5e1fced69ec49863ebaffa","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Wed May 31 09:06:42 2017"},"commit":"fc0fccd0dbbf29c53f5e1fced69ec49863ebaffa","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Jun 01 10:08:37 2017"},"message":"Mark old Module::Instantiate method as deprecated\n\nEmbedders should use Module::InstantiateModule\n\nR=neis@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Iebd5beeeeb9ea7025c61b97b666827e0a6ec89ad\nReviewed-on: https://chromium-review.googlesource.com/519162\nReviewed-by: Georg Neis <neis@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45655}","milestone":61},{"_id":"b21bc232aacd8bc3b4bbee8e96545caa99a1c4c3","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Wed May 31 13:52:43 2017"},"commit":"b21bc232aacd8bc3b4bbee8e96545caa99a1c4c3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 31 14:15:18 2017"},"message":"Add layout test bots to changes to api.cc\n\nAlso restrict include/ rules to only add bots for changes affecting\nheaders\n\nR=machenbach@chromium.org\n\nChange-Id: I97dc3c6249994566912a82ac9fbf8c7d3a57890c\nReviewed-on: https://chromium-review.googlesource.com/519342\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45638}","milestone":61},{"_id":"e73825fec4d9ab3de7d7c9a274c01198c79cd2a5","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Wed May 31 09:33:43 2017"},"commit":"e73825fec4d9ab3de7d7c9a274c01198c79cd2a5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 31 10:01:46 2017"},"message":"Start a document about the V8 C++ API design\n\nR=mvstanton@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: Ib45a1d12f2ef869d8b07754d234ff0eedd542188\nReviewed-on: https://chromium-review.googlesource.com/517495\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Michael Stanton <mvstanton@chromium.org>\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45622}","milestone":61},{"_id":"f314b3cdb9766eb1ba6efe1243ac89b3d0295f63","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Tue May 30 13:18:17 2017"},"commit":"f314b3cdb9766eb1ba6efe1243ac89b3d0295f63","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 30 13:18:17 2017"},"message":"[api] Add an API function to set the GetExternallyAllocatedMemoryInBytesCallback.\n\nBUG=chromium:727569\n\nReview-Url: https://codereview.chromium.org/2910203002\nCr-Commit-Position: refs/heads/master@{#45599}\n","milestone":61},{"_id":"697f1bdae3cdb4f9351d87a420e53d4c3f337df1","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Tue May 30 09:22:29 2017"},"commit":"697f1bdae3cdb4f9351d87a420e53d4c3f337df1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 30 11:44:34 2017"},"message":"Remove unused presubmit hooks\n\nWe add the bot via the post-upload step, that's good enough\n\nR=machenbach@chromium.org,tandrii@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I8d582d101b4d2f308829da75df56e04a3dabadbf\nReviewed-on: https://chromium-review.googlesource.com/518114\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45594}","milestone":61},{"_id":"74df916bc4febaa23f5e336e6724fba6988e1f79","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Tue May 30 08:26:21 2017"},"commit":"74df916bc4febaa23f5e336e6724fba6988e1f79","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 30 09:31:18 2017"},"message":"Change presubmit to reference actually existing bot\n\nAlso enable post-upload-hooks\n\nR=machenbach@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_chromium_rel_ng\nChange-Id: I8001394454f5d71d48a5e6261c891d6c7c2c3825\nReviewed-on: https://chromium-review.googlesource.com/518167\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45590}","milestone":61},{"_id":"74681db644dd3dbd662e900f56caf411a2e546e6","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Mon May 29 12:47:21 2017"},"commit":"74681db644dd3dbd662e900f56caf411a2e546e6","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 29 13:17:07 2017"},"message":"Automatically add a layout test running bots for api changes\n\nR=machenbach@chromium.org\n\nChange-Id: I48b6bda0bfb3c8aef117616015ee4225d4bdecfc\nReviewed-on: https://chromium-review.googlesource.com/517486\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45562}","milestone":61},{"_id":"68aa1ab38879e30b0f07c7766ed387e0605faf99","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Mon May 29 11:57:50 2017"},"commit":"68aa1ab38879e30b0f07c7766ed387e0605faf99","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 29 12:29:43 2017"},"message":"Update module APIs to return Maybe<bool>\n\nAll APIs that can throw exceptions should return Maybe<> values\n\nBUG=none\nR=neis@chromium.org,gsathya@chromium.org\n\nChange-Id: I6a6e5888cd71257bb02bdcfcc587c909d0c1d8f4\nReviewed-on: https://chromium-review.googlesource.com/517785\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Georg Neis <neis@chromium.org>\nReviewed-by: Sathya Gunasekaran <gsathya@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45557}","milestone":61},{"_id":"70de12b73c150b368520334b7dcb38a9dc229202","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Mon May 29 10:42:14 2017"},"commit":"70de12b73c150b368520334b7dcb38a9dc229202","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 29 11:13:23 2017"},"message":"Remove deprecated ForceSet\n\nAlso move the soon-to-be-deprecated version to deprecated\n\nBUG=none\nR=ulan@chromium.org\n\nChange-Id: I2252404f63e25ac35c7798daf66b36144bef6a7e\nReviewed-on: https://chromium-review.googlesource.com/518162\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45554}","milestone":61},{"_id":"f4664d0257e23bb5d79612c2aeb283c6f7e411be","author":{"name":"Sathya Gunasekaran","email":"gunasekaran@google.com","time":"Mon May 29 09:29:19 2017"},"commit":"f4664d0257e23bb5d79612c2aeb283c6f7e411be","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 29 10:04:22 2017"},"message":"[runtime] Implement SmallOrderedHashTable\n\nImplements the Allocate, Add, and HasKey operations. Also, adds GC\nsupport for this new instance type.\n\nBug: v8:6443\nChange-Id: I1cc7ba2faead2a11f7b0381a57858629e123aee6\nReviewed-on: https://chromium-review.googlesource.com/500447\nCommit-Queue: Sathya Gunasekaran <gsathya@chromium.org>\nReviewed-by: Michael Starzinger <mstarzinger@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45551}","milestone":61},{"_id":"a2cbab1bf4ade784e1ee9cf4407b5f6f2223b59c","author":{"name":"jan.krems","email":"jan.krems@gmail.com","time":"Sat May 27 08:02:34 2017"},"commit":"a2cbab1bf4ade784e1ee9cf4407b5f6f2223b59c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sat May 27 08:02:34 2017"},"message":"[api] Expose Isolate::SetHostImportModuleDynamicallyCallback\n\nThis allows embedders to delay initialization of the module system until after\nthe isolate was created.\n\nBUG=v8:6428\nR=gsathya@chromium.org\n\nReview-Url: https://codereview.chromium.org/2897103002\nCr-Commit-Position: refs/heads/master@{#45546}\n","milestone":61},{"_id":"cdd9ed0879a6a33ab88278bdd6aafbf5e850d04f","author":{"name":"Daniel Vogelheim","email":"vogelheim@chromium.org","time":"Wed May 24 15:51:28 2017"},"commit":"cdd9ed0879a6a33ab88278bdd6aafbf5e850d04f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed May 24 16:24:22 2017"},"message":"Updated version to 6.1\n\nTBR=machenbach@chromium.org\n\nBug: \nChange-Id: I916d52297bd81c5015fcd3185105dcb0d0a3d78f\nReviewed-on: https://chromium-review.googlesource.com/513906\nReviewed-by: Daniel Vogelheim <vogelheim@chromium.org>\nCommit-Queue: Daniel Vogelheim <vogelheim@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45520}","milestone":61},{"_id":"6803eef1424979ff787aaf4e3b604594f535c384","author":{"name":"mattloring","email":"mattloring@google.com","time":"Tue May 23 17:54:12 2017"},"commit":"6803eef1424979ff787aaf4e3b604594f535c384","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 23 17:54:12 2017"},"message":"Allow embedder to set promise internal field count\n\nAsynchronous context tracking mechanisms in Node.js need to store some\nstate on all promise objects. This change will allow embedders to\nconfigure the number of internal fields on promises as is already done\nfor ArrayBuffers.\n\nBUG=v8:6435\n\nReview-Url: https://codereview.chromium.org/2889863002\nCr-Commit-Position: refs/heads/master@{#45496}\n","milestone":61},{"_id":"381d7b1c748e837f8472c052fdcfe454dc87dc6d","author":{"name":"Eric Holk","email":"eholk@chromium.org","time":"Fri May 19 20:14:49 2017"},"commit":"381d7b1c748e837f8472c052fdcfe454dc87dc6d","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 22 16:40:56 2017"},"message":"Make TryHandleSignal available on all POSIX platforms\n\nTryHandleSignal was originally limited by conditional compilation to only\nplatforms where the WebAssembly trap handler is supported. This caused build\nproblems, because not all the macros we needed were defined everywhere.\n\nInstead, we make TryHandleSignal available on all POSIX platforms, but it\nunconditionally returns false if the trap handler is not supported.\n\nBug: \nChange-Id: Iab4baf39b1708989edecc4ecfb51b926d8f7fe8d\nReviewed-on: https://chromium-review.googlesource.com/508838\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nCommit-Queue: Eric Holk <eholk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45468}","milestone":61},{"_id":"b5e610c19208ef854755eec67011ca7aff008bf4","author":{"name":"Raphael Kubo da Costa","email":"raphael.kubo.da.costa@intel.com","time":"Fri May 19 16:22:00 2017"},"commit":"b5e610c19208ef854755eec67011ca7aff008bf4","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 22 12:02:26 2017"},"message":"Make Object::GetOwnPropertyDescriptor() take a Name, not a String.\n\nMost of the plumbing is already present in the non-public API. According to\nES2016, Symbols are also accepted in calls to getOwnProperty(), and taking\nthem is required in Blink for proper record<K,V> WebIDL conversions.\n\nR=jochen@chromium.org,verwaest@chromium.org\n\nBug: chromium:724481\nChange-Id: I0dfe0e57f6d811f04ecbfd8ec0c97e44c9f02c96\nReviewed-on: https://chromium-review.googlesource.com/509611\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nCommit-Queue: Raphael Kubo da Costa (rakuco) <raphael.kubo.da.costa@intel.com>\nCr-Commit-Position: refs/heads/master@{#45454}","milestone":61},{"_id":"536a5cd2a9cd493e1d0d815e7fb3ad695ee3596c","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Fri May 19 08:30:54 2017"},"commit":"536a5cd2a9cd493e1d0d815e7fb3ad695ee3596c","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 22 10:15:28 2017"},"message":"Add COMPONENT tags to OWNERS files where appropriate\n\nR=danno@chromium.org\nCC=sshruthi@chromium.org\nTBR=verwaest@chromium.org,bmeurer@chromium.org,yangguo@chromium.org,rossberg@chromium.org\n\nChange-Id: I32e09193fa6e847ac3336eab62b6d85c46d71164\nReviewed-on: https://chromium-review.googlesource.com/509508\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Daniel Clifford <danno@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45447}","milestone":61},{"_id":"184c9833705d7c18a8a8112e49a2c0b5346c778d","author":{"name":"Ali Ijaz Sheikh","email":"ofrobots@google.com","time":"Fri Jun 02 19:01:52 2017"},"commit":"184c9833705d7c18a8a8112e49a2c0b5346c778d","committer":{"name":"Ali Ijaz Sheikh","email":"ofrobots@google.com","time":"Fri Jun 02 20:02:27 2017"},"message":"Merged: Allow embedder to set promise internal field count\n\nRevision: 6803eef1424979ff787aaf4e3b604594f535c384\n\nBUG=v8:6435\nLOG=N\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=adamk@chromium.org, eisinger@chromium.org\n\nChange-Id: Ib4a9c711413f616163fa0d508c063dc5fb561aa7\nReviewed-on: https://chromium-review.googlesource.com/522987\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs/branch-heads/6.0@{#17}\nCr-Branched-From: 97dbf624a5eeffb3a8df36d24cdb2a883137385f-refs/heads/6.0.286@{#1}\nCr-Branched-From: 12e6f1cb5cd9616da7b9d4a7655c088778a6d415-refs/heads/master@{#45439}","milestone":60},{"_id":"bd59e7452beddbae7d2455ff56c8ea9f652b2181","author":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Wed May 24 13:44:34 2017"},"commit":"bd59e7452beddbae7d2455ff56c8ea9f652b2181","committer":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Wed May 24 13:45:39 2017"},"message":"Merged: Make Object::GetOwnPropertyDescriptor() take a Name, not a String.\n\nRevision: b5e610c19208ef854755eec67011ca7aff008bf4\n\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nTBR=vogelheim@chromium.org\n\nBug: \nChange-Id: I396b559b28aab6afa138db747711e50cd0da3da7\nReviewed-on: https://chromium-review.googlesource.com/513927\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/branch-heads/6.0@{#5}\nCr-Branched-From: 97dbf624a5eeffb3a8df36d24cdb2a883137385f-refs/heads/6.0.286@{#1}\nCr-Branched-From: 12e6f1cb5cd9616da7b9d4a7655c088778a6d415-refs/heads/master@{#45439}","milestone":60},{"_id":"ceb2bb3b9b437597c0d22793645508c5c7d1161f","author":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Wed May 24 13:40:26 2017"},"commit":"ceb2bb3b9b437597c0d22793645508c5c7d1161f","committer":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Wed May 24 13:41:17 2017"},"message":"Manually bump version\n\nTBR=vogelheim@chromium.org\n\nChange-Id: I61dfaaacdbdcb2f36946f28b197124f17ede11c9\nReviewed-on: https://chromium-review.googlesource.com/514005\nReviewed-by: Michael Achenbach <machenbach@chromium.org>\nCr-Commit-Position: refs/branch-heads/6.0@{#4}\nCr-Branched-From: 97dbf624a5eeffb3a8df36d24cdb2a883137385f-refs/heads/6.0.286@{#1}\nCr-Branched-From: 12e6f1cb5cd9616da7b9d4a7655c088778a6d415-refs/heads/master@{#45439}","milestone":60},{"_id":"18a26cfe17419633856e614577a84cc1e8385e14","author":{"name":"Eric Holk","email":"eholk@chromium.org","time":"Wed May 17 21:22:05 2017"},"commit":"18a26cfe17419633856e614577a84cc1e8385e14","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 18 20:35:09 2017"},"message":"Add memory protection API to ArrayBuffer::Allocator\n\nWebAssembly needs to be able to allocate memory with guard regions, which\nrequires more functionality from the array buffer allocator. This change adds\nfunctions for reserving memory regions and changing the memory protection.\n\nThis CL also includes some minor refactoring of the code to free array buffers.\n\nBug: chromium:720302\nChange-Id: Iab9a266003043b0d36592a79668d1eea53952abf\nReviewed-on: https://chromium-review.googlesource.com/506377\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Michael Lippautz <mlippautz@chromium.org>\nCommit-Queue: Eric Holk <eholk@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45407}","milestone":60},{"_id":"a9e56f4f36d70d16a956367133dda258c4f52bf4","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Thu May 18 17:37:57 2017"},"commit":"a9e56f4f36d70d16a956367133dda258c4f52bf4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu May 18 17:37:57 2017"},"message":"[heap] Remove max_executable_size resource constraint.\n\nBUG=chromium:716032\n\nReview-Url: https://codereview.chromium.org/2890603007\nCr-Commit-Position: refs/heads/master@{#45400}\n","milestone":60},{"_id":"ce538f70c12864fe700c716b991fa57c5693ff4f","author":{"name":"Wiktor Garbacz","email":"wiktorg@google.com","time":"Fri Apr 28 08:54:52 2017"},"commit":"ce538f70c12864fe700c716b991fa57c5693ff4f","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue May 16 11:34:41 2017"},"message":"[parser] Refactor streaming scanner streams.\n\nUnify, simplify logic, reduce UTF8 specific handling.\n\nIntend of this is also to have stream views.\nStream views can be used concurrently by multiple threads, but\nonly one thread may fetch new data from the underlying source.\nThis together with unified stream view creation is intended to be\nused for parse tasks.\n\nBUG=v8:6093\n\nChange-Id: Ied8e93090c506d4735080298f0fdaeed32043915\nReviewed-on: https://chromium-review.googlesource.com/501789\nCommit-Queue: Wiktor Garbacz <wiktorg@google.com>\nReviewed-by: Daniel Vogelheim <vogelheim@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45336}","milestone":60},{"_id":"cea359906a97b408e1154e5793fa31bfc62bb4ad","author":{"name":"Wiktor Garbacz","email":"wiktorg@google.com","time":"Fri May 12 13:58:08 2017"},"commit":"cea359906a97b408e1154e5793fa31bfc62bb4ad","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 15 13:33:59 2017"},"message":"Fix V8_NORETURN for MSVC\n\nChange-Id: Ie141097c12ad578c752f51393bd5a5df176b3cad\nReviewed-on: https://chromium-review.googlesource.com/504528\nCommit-Queue: Wiktor Garbacz <wiktorg@google.com>\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45301}","milestone":60},{"_id":"4f82f1d948cf4b431e695c05caab84c6e4ddc102","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Mon May 08 20:36:17 2017"},"commit":"4f82f1d948cf4b431e695c05caab84c6e4ddc102","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 08 20:36:17 2017"},"message":"Rename idle garbage collection callback flag.\n\nTBR=mlippautz@chromium.org\n\nReview-Url: https://codereview.chromium.org/2867863002\nCr-Commit-Position: refs/heads/master@{#45173}\n","milestone":60},{"_id":"448501f6875f8c9c97c69d0cfae50b4b9dd801d1","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Mon May 08 18:09:39 2017"},"commit":"448501f6875f8c9c97c69d0cfae50b4b9dd801d1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 08 18:09:39 2017"},"message":"[Api] Add an idle time garbage collection callback flag to GCCallbackFlags.\n\nBUG=chromium:718484\n\nReview-Url: https://codereview.chromium.org/2867073002\nCr-Commit-Position: refs/heads/master@{#45167}\n","milestone":60},{"_id":"de964dbe57a40fb7d4e3a9bb50a135f8fdcb23e1","author":{"name":"Mircea Trofin","email":"mtrofin@google.com","time":"Fri May 05 19:36:45 2017"},"commit":"de964dbe57a40fb7d4e3a9bb50a135f8fdcb23e1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon May 08 15:35:42 2017"},"message":"Introducing an event loop mechanism for d8.\n\nThis mechanism ensures APIs like wasm async complete their work, \nwithout requiring use of natives (%APIs).\n\nThe mechanism is similar to the one used in content_shell,\nwhich should allow us to easily port tests in that environment.\n\nReview-Url: https://codereview.chromium.org/2842843005\nCr-Original-Commit-Position: refs/heads/master@{#44908}\nBug: \nChange-Id: I9deee0d256a600c60b42902fc8ef8478e5546344\nReviewed-on: https://chromium-review.googlesource.com/494968\nCommit-Queue: Mircea Trofin <mtrofin@google.com>\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45165}","milestone":60},{"_id":"3f4536894ac3001c53256d08d1e85aa442eb0f02","author":{"name":"ochang","email":"ochang@chromium.org","time":"Fri May 05 16:00:27 2017"},"commit":"3f4536894ac3001c53256d08d1e85aa442eb0f02","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 05 16:00:27 2017"},"message":"d8: Make in process stack dumping optional\n\nAdds a flag (--disable-in-process-stack-traces) to not install\nsignal handlers so that e.g. ASan signal handlers will work.\n\nThis flag mirrors chromium's one.\n\nR=jochen@chromium.org\nBUG=chromium:716235\n\nReview-Url: https://codereview.chromium.org/2854173002\nCr-Commit-Position: refs/heads/master@{#45142}\n","milestone":60},{"_id":"0733add072bdb3e5e95f8c4dda192fc799e31e04","author":{"name":"Ross McIlroy","email":"rmcilroy@chromium.org","time":"Thu May 04 09:51:00 2017"},"commit":"0733add072bdb3e5e95f8c4dda192fc799e31e04","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu May 04 10:49:11 2017"},"message":"[Deopt] Always patch deopted code to fail hard if entered.\n\nRemove the --zap_code_space flag and always patch deopted code to hard fail\nif called.\n\nAlso, as a drive-by add deopt code patching for Arm64.\n\nBUG=v8:6246\n\nChange-Id: Ibf1bc53692dbbe618132100a66c56a88c97fd62b\nReviewed-on: https://chromium-review.googlesource.com/496127\nReviewed-by: Jaroslav Sevcik <jarin@chromium.org>\nCommit-Queue: Ross McIlroy <rmcilroy@chromium.org>\nCr-Commit-Position: refs/heads/master@{#45082}","milestone":60},{"_id":"f5fad6d9b85d31fd5d05b5c86bf2f2162391c589","author":{"name":"daniel.bevenius","email":"daniel.bevenius@gmail.com","time":"Tue May 02 10:28:17 2017"},"commit":"f5fad6d9b85d31fd5d05b5c86bf2f2162391c589","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 02 10:28:17 2017"},"message":"Expose TryCatch is_verbose_\n\nThis commit adds a getter for the private is_verbose_ member.\nThe use case for this comes from Node.js where the ability to avoid\ncalling FatalException if the TryCatch is verbose would be nice to have.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2840803002\nCr-Commit-Position: refs/heads/master@{#45018}\n","milestone":60},{"_id":"a16c3c910548e37eb62bb467fea706a21f6a2d46","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Thu Apr 27 15:14:41 2017"},"commit":"a16c3c910548e37eb62bb467fea706a21f6a2d46","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 27 15:14:41 2017"},"message":"Expose the ValueSerializer data format version as a compile-time constant.\n\nBUG=chromium:704293\n\nReview-Url: https://codereview.chromium.org/2804643006\nCr-Commit-Position: refs/heads/master@{#44945}\n","milestone":60},{"_id":"4fdf9fd481350ed258d44c48e149d365dd83d076","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Fri Apr 21 16:07:04 2017"},"commit":"4fdf9fd481350ed258d44c48e149d365dd83d076","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Apr 27 11:51:25 2017"},"message":"Add documentation for FunctionCallbackInfo\n\nR=verwaest@chromium.org,haraken@chromium.org,yukishiino@chromium.org\nBUG=\n\nChange-Id: I273f5ce305f80b2aa5e9c8c42a6e8e5afc51a0a7\nReviewed-on: https://chromium-review.googlesource.com/484422\nReviewed-by: Kentaro Hara <haraken@chromium.org>\nReviewed-by: Toon Verwaest <verwaest@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#44927}","milestone":60},{"_id":"3cc88456804ebe0f989f12353202b9dc768f6669","author":{"name":"binji","email":"binji@chromium.org","time":"Mon Apr 24 19:08:22 2017"},"commit":"3cc88456804ebe0f989f12353202b9dc768f6669","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 24 19:08:22 2017"},"message":"Add setter to Isolate for allowing Atomics.wait\n\nThis makes it easier to set the value for embedders where it is\ndifficult to plumb through to the Isolate constructor.\n\nBUG=chromium:711809\nR=jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/2829223002\nCr-Commit-Position: refs/heads/master@{#44813}\n","milestone":60},{"_id":"486cd04f3d9a75acb4d9f929b333954b8f59cec0","author":{"name":"neis","email":"neis@chromium.org","time":"Wed Apr 19 18:28:09 2017"},"commit":"486cd04f3d9a75acb4d9f929b333954b8f59cec0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 19 18:28:09 2017"},"message":"[modules] Allow resolve-callback to signal failure.\n\nWhen asked for a module that previously failed to compile or\ninstantiate, the embedder necessarily has to signal failure.  In this\ncase, we expect an exception to be scheduled, which we will rethrow.\n\nBUG=v8:1569\n\nReview-Url: https://codereview.chromium.org/2827733002\nCr-Commit-Position: refs/heads/master@{#44729}\n","milestone":60},{"_id":"1da951ad0bd1a3c2247863060b87adeaef68fbd8","author":{"name":"Hitoshi Yoshida","email":"peria@chromium.org","time":"Wed Apr 19 03:26:11 2017"},"commit":"1da951ad0bd1a3c2247863060b87adeaef68fbd8","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Apr 19 09:51:22 2017"},"message":"Create a new API Object::SetNativeDataProperty\n\nThis new API sets a native data property on an object\ndirectly, as Template::SetNativeDataProperty does.\nIt is similar to Object::SetAccessor, but properties\nset by SetNativeDataProperty without kReadOnly flag\ncan be replaced.\n\n\nBug:chromium:617892\n\nChange-Id: I32973f7190906d76be6802da9a0489edce0bd93e\nReviewed-on: https://chromium-review.googlesource.com/479474\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nCommit-Queue: Hitoshi Yoshida <peria@chromium.org>\nCr-Commit-Position: refs/heads/master@{#44716}","milestone":60},{"_id":"54271c21e2860273abd6018c398b04f672ef2615","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Tue Apr 18 20:50:30 2017"},"commit":"54271c21e2860273abd6018c398b04f672ef2615","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 18 20:50:30 2017"},"message":"[inspector] move console to builtins\n\nWhat will we get:\n- console would be included into snapshot and allow us to reduce time that we spent in contextCreated function (~5 times faster),\n- it allows us to make further small improvement of console methods, e.g. we can implement super quick return from console.assert if first argument is true,\n- console calls are ~ 15% faster.\n\nCQ_INCLUDE_TRYBOTS=master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_chromium_rel_ng\n\nBUG=v8:6175\nR=dgozman@chromium.org\n\nReview-Url: https://codereview.chromium.org/2785293002\nCr-Original-Original-Original-Commit-Position: refs/heads/master@{#44353}\nCommitted: https://chromium.googlesource.com/v8/v8/+/55905f85d63d75aaa9313e51eb7bede754a8e41c\nReview-Url: https://codereview.chromium.org/2785293002\nCr-Original-Original-Commit-Position: refs/heads/master@{#44355}\nCommitted: https://chromium.googlesource.com/v8/v8/+/cc74ea0bc4fe4a71fa53d08b62cc18d15e01fbb3\nReview-Url: https://codereview.chromium.org/2785293002\nCr-Original-Commit-Position: refs/heads/master@{#44416}\nCommitted: https://chromium.googlesource.com/v8/v8/+/f5dc738cda0336929dcb8eb73b87fdcd01b7c685\nReview-Url: https://codereview.chromium.org/2785293002\nCr-Commit-Position: refs/heads/master@{#44702}\n","milestone":60},{"_id":"c80c0f11f4c14d7ede75b79efccab1d4d1fc86ab","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Apr 13 12:40:39 2017"},"commit":"c80c0f11f4c14d7ede75b79efccab1d4d1fc86ab","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 13 12:40:39 2017"},"message":"[api] consistently expose all well-known symbols.\n\nR=jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/2812603002\nCr-Commit-Position: refs/heads/master@{#44643}\n","milestone":60},{"_id":"a011e2b83fa089f625e5842a7f5d37126cb50b8e","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Apr 13 12:39:02 2017"},"commit":"a011e2b83fa089f625e5842a7f5d37126cb50b8e","committer":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Apr 13 12:39:05 2017"},"message":"Updated version to 6.0\n\nTBR=machenbach@chromium.org,vogelheim@chromium.org\nNOTRY=true\n\nReview-Url: https://codereview.chromium.org/2814993006 .\nCr-Commit-Position: refs/heads/master@{#44642}\n","milestone":60},{"_id":"768c5e2143830f4538765b24381908670028c32d","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Apr 13 12:37:21 2017"},"commit":"768c5e2143830f4538765b24381908670028c32d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 13 12:37:21 2017"},"message":"[api] Expose instanceof through v8::Value::InstanceOf.\n\nThis is requested for Node.js N-API. Tests to be added.\n\nReview-Url: https://codereview.chromium.org/2812613002\nCr-Commit-Position: refs/heads/master@{#44641}\n","milestone":60},{"_id":"5f90a6eb0675b79f2bc29ebfa05d30051d3bd23e","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Apr 12 11:24:44 2017"},"commit":"5f90a6eb0675b79f2bc29ebfa05d30051d3bd23e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 12 11:24:44 2017"},"message":"[debug,api] Do not use embedder field for debug context id.\n\nWe used to reserve the 0-th embedder data field for the debug\ncontext id. This is no longer necessary since the inspector\nhas migrated to be part of V8. This makes the API a bit simpler.\n\nR=clemensh@chromium.org, jochen@chromium.org, kozyatinskiy@chromium.org\nBUG=v8:5530\n\nReview-Url: https://codereview.chromium.org/2806303002\nCr-Commit-Position: refs/heads/master@{#44607}\n","milestone":60},{"_id":"b17bdfee2966154603e4882f1622a00f31ac59f9","author":{"name":"Ali Ijaz Sheikh","email":"ofrobots@google.com","time":"Fri Jun 02 20:04:26 2017"},"commit":"b17bdfee2966154603e4882f1622a00f31ac59f9","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Jun 06 00:56:46 2017"},"message":"Merged: Allow embedder to set promise internal field count\n\nRevision: 6803eef1424979ff787aaf4e3b604594f535c384\n\nBUG=v8:6435\nLOG=N\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=adamk@chromium.org, eisinger@chromium.org\n\nChange-Id: I36d1c19324f51dde6356a8db2383036cc5f77c24\nReviewed-on: https://chromium-review.googlesource.com/523006\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Ali Ijaz Sheikh <ofrobots@google.com>\nCr-Commit-Position: refs/branch-heads/5.9@{#67}\nCr-Branched-From: fe9bb7e6e251159852770160cfb21dad3cf03523-refs/heads/5.9.211@{#1}\nCr-Branched-From: 70ad23791a21c0dd7ecef8d4d8dd30ff6fc291f6-refs/heads/master@{#44591}","milestone":59},{"_id":"2e4a68733803222274b1e029081ecd650b4344d6","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Tue Apr 11 15:30:50 2017"},"commit":"2e4a68733803222274b1e029081ecd650b4344d6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 11 15:30:50 2017"},"message":"[v8] v8::StackTrace::AsArray returns correct array\n\nAfter [1] we return JSArray with internal structs, we should return JSObjects instead.\n\n[1] https://codereview.chromium.org/2789073002\n\nBUG=v8:6189\nR=yangguo@chromium.org\n\nReview-Url: https://codereview.chromium.org/2806373005\nCr-Commit-Position: refs/heads/master@{#44581}\n","milestone":59},{"_id":"94283dcf4459fac0ef404d67898e2ba2012b32e6","author":{"name":"gsathya","email":"gsathya@chromium.org","time":"Tue Apr 11 09:33:11 2017"},"commit":"94283dcf4459fac0ef404d67898e2ba2012b32e6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 11 09:33:11 2017"},"message":"[ESNext] Implement DynamicImportCall\n\nThis patch implements the runtime semantics of dynamic import.\n\nWe create a new ASTNode so that we can pass the JSFunction closure() to\nthe runtime function from which we get the script_url.\n\nd8 implements the embedder logic required to load and evaluate the modules.\n\nThe API is mostly implemented as specified.\n\nBUG=8:5785\n\nReview-Url: https://codereview.chromium.org/2703563002\nCr-Commit-Position: refs/heads/master@{#44551}\n","milestone":59},{"_id":"c0c1d760283a52918ac0cbf5237e010930ffb734","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Sat Apr 08 22:26:22 2017"},"commit":"c0c1d760283a52918ac0cbf5237e010930ffb734","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sat Apr 08 22:26:22 2017"},"message":"[inspector] introduced StackFrame::IsWasm flag\n\nWe don't need to do any kind of translation for non-wasm frames. And we need this knowledge for lazy symbolization.\nCapturing stack trace is ~7% faster.\n\nBUG=v8:6189\nR=dgozman@chromium.org,yangguo@chromium.org\n\nReview-Url: https://codereview.chromium.org/2795103004\nCr-Commit-Position: refs/heads/master@{#44502}\n","milestone":59},{"_id":"5ec1cddcdd0c599b00ae8f4fbb54987f92867b12","author":{"name":"raphael.kubo.da.costa","email":"raphael.kubo.da.costa@intel.com","time":"Fri Apr 07 08:33:57 2017"},"commit":"5ec1cddcdd0c599b00ae8f4fbb54987f92867b12","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 07 08:33:57 2017"},"message":"Expose %IteratorPrototype% as an intrinsic in the public API.\n\nThe WebIDL spec expects iterator objects from interfaces that declare pair\niterators to ultimately inherit from %IteratorPrototype%. Expose the\nintrinsic object in the public API so we can use it in Blink's bindings\ncode.\n\nBUG=chromium:689576\nR=caitp@igalia.com,jkummerow@chromium.org,jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/2784543004\nCr-Commit-Position: refs/heads/master@{#44472}\n","milestone":59},{"_id":"f5dc738cda0336929dcb8eb73b87fdcd01b7c685","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Wed Apr 05 16:55:19 2017"},"commit":"f5dc738cda0336929dcb8eb73b87fdcd01b7c685","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 05 16:55:19 2017"},"message":"[inspector] move console to builtins\n\nWhat will we get:\n- console would be included into snapshot and allow us to reduce time that we spent in contextCreated function (~5 times faster),\n- it allows us to make further small improvement of console methods, e.g. we can implement super quick return from console.assert if first argument is true,\n- console calls are ~ 15% faster.\n\nBUG=v8:6175\nR=dgozman@chromium.org\n\nReview-Url: https://codereview.chromium.org/2785293002\nCr-Original-Original-Commit-Position: refs/heads/master@{#44353}\nCommitted: https://chromium.googlesource.com/v8/v8/+/55905f85d63d75aaa9313e51eb7bede754a8e41c\nReview-Url: https://codereview.chromium.org/2785293002\nCr-Original-Commit-Position: refs/heads/master@{#44355}\nCommitted: https://chromium.googlesource.com/v8/v8/+/cc74ea0bc4fe4a71fa53d08b62cc18d15e01fbb3\nReview-Url: https://codereview.chromium.org/2785293002\nCr-Commit-Position: refs/heads/master@{#44416}\n","milestone":59},{"_id":"e46f841849ef541e31c2cc4891c1ce44e57285b1","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Tue Apr 04 19:26:32 2017"},"commit":"e46f841849ef541e31c2cc4891c1ce44e57285b1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 04 19:26:32 2017"},"message":"Export the current data format version used by ValueSerializer.\n\nThis enables clients like IndexedDB to know when the data format version has\ndecreased (i.e. the user has switched to an earlier version) and deal with the\nresulting incompatibility up front.\n\nBUG=chromium:704293\n\nReview-Url: https://codereview.chromium.org/2772723005\nCr-Commit-Position: refs/heads/master@{#44391}\n","milestone":59},{"_id":"0bd9f1b8e60466fcfbbb01b5d048c72e3d01d361","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Tue Apr 04 16:22:46 2017"},"commit":"0bd9f1b8e60466fcfbbb01b5d048c72e3d01d361","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 04 16:22:46 2017"},"message":"[wasm] Module Builder v8 API: bytes passed in are owned by caller.\n\nThis reflects both the contract in blink, as well as what we\nplan to do in streamed compilation, where we'll want to lay out\nbytes received such that each section and each function body is\ncontiguous, but they may all be separate - which entails a copy.\n\nBUG=chromium:697028\n\nReview-Url: https://codereview.chromium.org/2797653002\nCr-Commit-Position: refs/heads/master@{#44387}\n","milestone":59},{"_id":"cc74ea0bc4fe4a71fa53d08b62cc18d15e01fbb3","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Tue Apr 04 00:38:38 2017"},"commit":"cc74ea0bc4fe4a71fa53d08b62cc18d15e01fbb3","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 04 00:38:38 2017"},"message":"[inspector] move console to builtins\n\nWhat will we get:\n- console would be included into snapshot and allow us to reduce time that we spent in contextCreated function (~5 times faster),\n- it allows us to make further small improvement of console methods, e.g. we can implement super quick return from console.assert if first argument is true,\n- console calls are ~ 15% faster.\n\nBUG=v8:6175\nR=dgozman@chromium.org\n\nReview-Url: https://codereview.chromium.org/2785293002\nCr-Original-Commit-Position: refs/heads/master@{#44353}\nCommitted: https://chromium.googlesource.com/v8/v8/+/55905f85d63d75aaa9313e51eb7bede754a8e41c\nReview-Url: https://codereview.chromium.org/2785293002\nCr-Commit-Position: refs/heads/master@{#44355}\n","milestone":59},{"_id":"55905f85d63d75aaa9313e51eb7bede754a8e41c","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Mon Apr 03 23:00:49 2017"},"commit":"55905f85d63d75aaa9313e51eb7bede754a8e41c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 03 23:00:49 2017"},"message":"[inspector] move console to builtins\n\nWhat will we get:\n- console would be included into snapshot and allow us to reduce time that we spent in contextCreated function (~5 times faster),\n- it allows us to make further small improvement of console methods, e.g. we can implement super quick return from console.assert if first argument is true,\n- console calls are ~ 15% faster.\n\nBUG=v8:6175\nR=dgozman@chromium.org\n\nReview-Url: https://codereview.chromium.org/2785293002\nCr-Commit-Position: refs/heads/master@{#44353}\n","milestone":59},{"_id":"dc662e5b740c46dc6350485efd64bccd4a4d7630","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Mon Apr 03 14:58:49 2017"},"commit":"dc662e5b740c46dc6350485efd64bccd4a4d7630","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 03 14:58:49 2017"},"message":"[inspector] store stack frame in struct instead of JSObject\n\nJSObject is slow: creating strings for keys and storing values by these keys after takes significant amount of time.\nWith this CL console methods (most of them collect top stack frame to calculate source location) are ~33% faster.\nV8Debugger::captureStackTrace is ~50% faster.\n\nBUG=v8:6189\nR=yangguo@chromium.org\nTBR=bmeurer@chromium.org\n\nReview-Url: https://codereview.chromium.org/2789073002\nCr-Commit-Position: refs/heads/master@{#44344}\n","milestone":59},{"_id":"cec39ad1ade5b38a7b203e9cc64cca867196f33a","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Fri Mar 31 09:20:13 2017"},"commit":"cec39ad1ade5b38a7b203e9cc64cca867196f33a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 31 09:20:13 2017"},"message":"[regexp] Add support for dotAll flag\n\nThe dotAll flag changes behavior of the dot '.' character to match every\npossible single character instead of excluding certain line terminators.\n\nThe implementation is staged behind --harmony-regexp-dotall.\n\nSpec proposal: https://github.com/mathiasbynens/es-regexp-dotall-flag\n\nBUG=v8:6172\n\nReview-Url: https://codereview.chromium.org/2780173002\nCr-Commit-Position: refs/heads/master@{#44295}\n","milestone":59},{"_id":"a63744d50d0e8ee64446acc042b07708e69ec2ab","author":{"name":"addaleax","email":"addaleax@gmail.com","time":"Wed Mar 29 18:50:44 2017"},"commit":"a63744d50d0e8ee64446acc042b07708e69ec2ab","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 29 18:50:44 2017"},"message":"[api] Improve documentation for API handle types.\n\nAdd a few explanations to the documentation several methods and classes,\nin particular Local, MaybeLocal, the HandleScopes.\n\nDrive-by-fix: turn a few regular comments into documentation comments.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2783843002\nCr-Commit-Position: refs/heads/master@{#44243}\n","milestone":59},{"_id":"bf463c4dc080abb1ae39c6f0a93e6a95867b0ca3","author":{"name":"Caitlin Potter","email":"caitp@igalia.com","time":"Wed Mar 29 13:41:45 2017"},"commit":"bf463c4dc080abb1ae39c6f0a93e6a95867b0ca3","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 29 17:33:12 2017"},"message":"[async-iteration] implement AsyncGenerator\n\n- Introduce new struct AsyncGeneratorRequest, which holds\n  information pertinent to resuming execution of an\n  AsyncGenerator, such as the Promise associated with the async\n  generator request. It is intended to be used as a singly\n  linked list, and holds a pointer to the next item in te queue.\n\n- Introduce JSAsyncGeneratorObject (subclass of\n  JSGeneratorObject), which includes several new internal fields\n  (`queue` which contains a singly linked list of\n  AsyncGeneratorRequest objects, and `await_input` which\n  contains the sent value from an Await expression (This is\n  necessary to prevent function.sent (used by yield*) from\n  having the sent value observably overwritten during\n  execution).\n\n- Modify SuspendGenerator to accept a set of Flags, which\n  indicate whether the suspend is for a Yield or Await, and\n  whether it takes place on an async generator or ES6\n  generator.\n\n- Introduce interpreter intrinsics and TF intrinsic lowering for\n  accessing the await input of an async generator\n\n- Modify the JSGeneratorStore operator to understand whether or\n  not it's suspending for a normal yield, or an AsyncGenerator\n  Await. This ensures appropriate registers are stored.\n\n- Add versions of ResumeGeneratorTrampoline which store the\n  input value in a different field depending on wether it's an\n  AsyncGenerator Await resume, or an ordinary resume. Also modifies\n  whether debug code will assert that the generator object is a\n  JSGeneratorObject or a JSAsyncGeneratorObject depending on the\n  resume type.\n\nBUG=v8:5855\nR=bmeurer@chromium.org, rmcilroy@chromium.org, jgruber@chromium.org,\nlittledan@chromium.org, neis@chromium.org\nTBR=marja@chromium.org\n\nChange-Id: I9d58df1d344465fc937fe7eed322424204497187\nReviewed-on: https://chromium-review.googlesource.com/446961\nCommit-Queue: Caitlin Potter <caitp@igalia.com>\nReviewed-by: Ross McIlroy <rmcilroy@chromium.org>\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nReviewed-by: Jakob Gruber <jgruber@chromium.org>\nCr-Commit-Position: refs/heads/master@{#44240}","milestone":59},{"_id":"da5b745dba387d0afdb99cd385ba1467a3ca2831","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Wed Mar 29 09:07:48 2017"},"commit":"da5b745dba387d0afdb99cd385ba1467a3ca2831","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Wed Mar 29 09:56:22 2017"},"message":"[api] deprecate unused context size estimate.\n\nChange-Id: I8de170892f061a8b30d1e39d1a7d3b4e2fe9230d\nReviewed-on: https://chromium-review.googlesource.com/461823\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#44222}","milestone":59},{"_id":"4c78e4bbad6ff4686d041c34a1ee30103fc49e52","author":{"name":"gsathya","email":"gsathya@chromium.org","time":"Wed Mar 29 06:51:02 2017"},"commit":"4c78e4bbad6ff4686d041c34a1ee30103fc49e52","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 29 06:51:02 2017"},"message":"[api] Remove duplicate forward declaration\n\nReview-Url: https://codereview.chromium.org/2784653003\nCr-Commit-Position: refs/heads/master@{#44214}\n","milestone":59},{"_id":"6226576efa82ee8748e0711af2f98dbda031b8c7","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Tue Mar 28 06:24:35 2017"},"commit":"6226576efa82ee8748e0711af2f98dbda031b8c7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 28 06:24:35 2017"},"message":"[wasm] Deleted old way of checking embedder limits on wasm size.\n\nBUG=v8:6027\n\nReview-Url: https://codereview.chromium.org/2772203005\nCr-Commit-Position: refs/heads/master@{#44168}\n","milestone":59},{"_id":"43791ce02c8bb566915c948fd6f48d3fe8bb99fa","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Mon Mar 27 19:26:18 2017"},"commit":"43791ce02c8bb566915c948fd6f48d3fe8bb99fa","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 27 19:26:18 2017"},"message":"[inspector] finally removed *ExecuteScript from inspector\n\nWe don't need hints from embedder any more.\n\nBUG=none\nR=dgozman@chromium.org\n\nReview-Url: https://codereview.chromium.org/2773143002\nCr-Commit-Position: refs/heads/master@{#44158}\n","milestone":59},{"_id":"5fdb5a148e7759b89d09ca5eac5a24af63bdd125","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Fri Mar 24 18:26:07 2017"},"commit":"5fdb5a148e7759b89d09ca5eac5a24af63bdd125","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 24 18:26:07 2017"},"message":"[wasm] Override mechanism for wasm js APIs\n\nV8 side mechanism for overriding the wasm js APIs.\n\nWe will use these to:\n- implement the Chrome-side constraints on module size, and throw with more\nactionable error messages, while preserving layering.\nThe old mechansms will be deleted once we update the Chrome side with\nthis new mechanism.\n\n- implement Chrome-side .compile and .instantiate overrides accepting\nResponse objects.\n\nWe may want to evolve this mechanism into something more general, not\nrequiring V8 preparation, by replacing the v8-definition with embedder\nprovided definitions. We're currently exploring if we can expand\n\"Extras\", for instance.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2773063002\nCr-Commit-Position: refs/heads/master@{#44119}\n","milestone":59},{"_id":"78905107d3a6465f346d909fa7f1c22ffec144c2","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Thu Mar 23 01:47:17 2017"},"commit":"78905107d3a6465f346d909fa7f1c22ffec144c2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 23 01:47:17 2017"},"message":"[wasm] Skeleton WasmModuleObjectBuilder for streamed compilation\n\nAPIs and trivial implementation, to unblock Chrome side dev.\n\nBUG=chromium:697028\n\nReview-Url: https://codereview.chromium.org/2763413003\nCr-Commit-Position: refs/heads/master@{#44053}\n","milestone":59},{"_id":"4e92e124858c56bd0c99533395c9c2333d954e5f","author":{"name":"daniel.bevenius","email":"daniel.bevenius@gmail.com","time":"Wed Mar 22 10:24:28 2017"},"commit":"4e92e124858c56bd0c99533395c9c2333d954e5f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 22 10:24:28 2017"},"message":"Adding V8_WARN_UNUSED_RESULT for specified TODOs\n\nCurrently there are a number of comment in src/v8.h which look like\nthis: TODO(dcarney): mark V8_WARN_UNUSED_RESULT.\n\nThis commit attempts to remove these comments and add the\nV8_WARN_UNUSED_RESULT macro to the methods in question.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2135973002\nCr-Commit-Position: refs/heads/master@{#44010}\n","milestone":59},{"_id":"99743ad460ea5b9795ba9d70a074e75d7362a3d1","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Mon Mar 20 19:03:23 2017"},"commit":"99743ad460ea5b9795ba9d70a074e75d7362a3d1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 20 19:03:23 2017"},"message":"[wasm] Transferrable modules\n\nWe want to restrict structured cloning in Chrome to:\n- postMessage senders and receivers that are co-located\nin the same process\n- indexedDB (just https).\n\nFor context, on the Chrome side, we will achieve the postMessage part\nby using a mechanism similar to transferrables: the\nSerializedScriptValue will have a list of wasm modules, separate from\nthe serialized data stream; and this list won't be copied cross\nprocess boundaries. The IDB part is achieved by explicitly opting in\nreading/writing to the serialization stream. To block attack vectors\nin IPC cases, the default for deserialization will be to expect data\nin the wasm transfers list.\n\nThis change is the V8 side necessary to enabling this design. We\nintroduce TransferrableModule, an opaque datatype exposed to the\nembedder. Internally, TransferrableModules are just serialized data,\nbecause we don't have a better mechanism, at the moment, for\nde-contextualizing/re-contextualizing wasm modules (wrt Isolate and\nContext).\n\nThe chrome defaults will be implemented in the\nserialization/deserialization delegates on that side. For the v8 side\nof things, in the absence of a serialization delegate, the V8\nserializer will write to serialization stream. In the absence of a\ndeserialization delegate, the deserializer won't work. This asymmetry\nis intentional - it communicates to the embedder the need to make a\npolicy decision, otherwise wasm serialization/deserialization won't\nwork \"out of the box\".\n\nBUG=v8:6079\n\nReview-Url: https://codereview.chromium.org/2748473004\nCr-Commit-Position: refs/heads/master@{#43955}\n","milestone":59},{"_id":"4acdb5eec2c79331c47081c23f7d51d3244a2bf0","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Fri Mar 17 17:23:34 2017"},"commit":"4acdb5eec2c79331c47081c23f7d51d3244a2bf0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 17 17:23:34 2017"},"message":"Give v8::Eternal a direct reference to the handle.\n\nThis makes it more similar to other handle types (like PersistentBase),\nby simply storing an i::Object** cast to T*. This means that it is not\nnecessary to look up the handle in the eternal handles table to access\nthe underlying value.\n\nLike the built-in roots (null, etc.), an eternal handle can never be\ndestroyed, so we don't even need to allocate a separate local handle.\nInstead, the Local<T> can point directly at the eternal reference.\nThis makes Eternal<T>::Get trivial.\n\nReview-Url: https://codereview.chromium.org/2751263003\nCr-Commit-Position: refs/heads/master@{#43912}\n","milestone":59},{"_id":"3700a01c8243a1f394380e87e479e7db32dc8a14","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Fri Mar 17 14:48:20 2017"},"commit":"3700a01c8243a1f394380e87e479e7db32dc8a14","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 17 14:48:20 2017"},"message":"Make v8::Eternal::Get and IsEmpty const.\n\nThey do not modify the state of the handle.\n\nReview-Url: https://codereview.chromium.org/2753973002\nCr-Commit-Position: refs/heads/master@{#43907}\n","milestone":59},{"_id":"72e539360ed644c905b0a67b02b3d63b18a282a7","author":{"name":"titzer","email":"titzer@chromium.org","time":"Fri Mar 17 13:26:05 2017"},"commit":"72e539360ed644c905b0a67b02b3d63b18a282a7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 17 13:26:05 2017"},"message":"[rename] Rename internal field to embedder field.\n\nThis CL renames all occurrences of \"internal field\" to \"embedder field\"\nto prevent confusion. As it turns out, these fields are not internal to\nV8, but are actually embedder provided fields that should not be mucked\nwith by the internal implementation of V8.\n\nNote that WASM does use these fields, and it should not.\n\nBUG=v8:6058\n\nReview-Url: https://codereview.chromium.org/2741683004\nCr-Commit-Position: refs/heads/master@{#43900}\n","milestone":59},{"_id":"876725d5d5d69cc6ce8a6dfa92a91ebbc90b89db","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Fri Mar 17 11:41:30 2017"},"commit":"876725d5d5d69cc6ce8a6dfa92a91ebbc90b89db","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Mar 17 12:07:25 2017"},"message":"Enable the embedder to provide stack trace printing\n\nBUG=none\nR=yangguo@chromium.org\n\nChange-Id: I53811859efacee9126ba1bdbe5690793833c96e1\nReviewed-on: https://chromium-review.googlesource.com/456338\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCommit-Queue: Yang Guo <yangguo@chromium.org>\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCr-Commit-Position: refs/heads/master@{#43892}","milestone":59},{"_id":"18c77ce51bcfd20f7821aad581749f7c15fb550a","author":{"name":"Eric Holk","email":"eholk@chromium.org","time":"Thu Mar 16 15:58:24 2017"},"commit":"18c77ce51bcfd20f7821aad581749f7c15fb550a","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 16 18:08:56 2017"},"message":"Fixing Android x64 build.\n\nBUG= chromium:701590\n\nChange-Id: Ia0a3a7a532a8acd001cb1dc79991f7cc08fc973d\nReviewed-on: https://chromium-review.googlesource.com/456456\nReviewed-by: Brad Nelson <bradnelson@chromium.org>\nCommit-Queue: Brad Nelson <bradnelson@chromium.org>\nCr-Commit-Position: refs/heads/master@{#43873}","milestone":59},{"_id":"d0e604bf261470b1404e2ddf6da29206dad72026","author":{"name":"jkummerow","email":"jkummerow@chromium.org","time":"Tue Mar 14 12:31:03 2017"},"commit":"d0e604bf261470b1404e2ddf6da29206dad72026","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 14 12:31:03 2017"},"message":"FunctionEntryHook: require no-snapshot build\n\nWhen a FunctionEntryHook parameter was passed to isolate creation,\nwe ignored any existing snapshots anyway. Since the ability to\nbootstrap from scratch will be removed from snapshot builds, the\nFunctionEntryHook feature must depend on a no-snapshot build.\n\nBUG=v8:6055\n\nReview-Url: https://codereview.chromium.org/2733203002\nCr-Commit-Position: refs/heads/master@{#43779}\n","milestone":59},{"_id":"2cd2f5feff3a811eb1d2a69996f8be9f501c44a5","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Mon Mar 13 14:01:45 2017"},"commit":"2cd2f5feff3a811eb1d2a69996f8be9f501c44a5","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Mar 14 08:14:48 2017"},"message":"Remove experimental fast accessor builder API\n\nAs the code isn't used, but would have to be ported from hand-written\nassembly to CodeStubAssembler anyways, I propose to remove it and\nrestore it if we decide that we actually need it.\n\nR=vogelheim@chromium.org\nBUG=\n\nChange-Id: Iffd7fc6ec534b1dd7a9144da900424355c8a7a02\nReviewed-on: https://chromium-review.googlesource.com/453461\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Daniel Vogelheim <vogelheim@chromium.org>\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCr-Commit-Position: refs/heads/master@{#43763}","milestone":59},{"_id":"118c376fcbe483b155eec26f8d9192f8cb4b4721","author":{"name":"eholk","email":"eholk@chromium.org","time":"Mon Mar 13 22:12:23 2017"},"commit":"118c376fcbe483b155eec26f8d9192f8cb4b4721","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 13 22:12:23 2017"},"message":"[wasm] Initial signal handler\n\nThis is basically the minimum viable signal handler for Wasm bounds checks.\nIt includes the TLS check and the fine grained instructions checks. These\ntwo checks provide most of the safety for the signal handler. Future CLs will\nadd code range and data range checks for more robustness.\n\nThe trap handling code and data structures are all in src/trap-handler, with\nthe code that actually runs in the signal handler confined to\nsrc/trap-handler/signal-handler.cc.\n\nThis changes adds a new V8 API that the embedder should call from a signal\nhandler that will give V8 the chance to handle the fault first. For hosts that\ndo not want to implement their own signal handler, we include the option to\ninstall a simple one. This simple handler is also used for the tests.\n\nWhen a Wasm module is instantiated, information about each function is passed\nto the trap handler, which is used to classify faults. These are removed during\nthe instance finalizer.\n\nSeveral future enhancements are planned before turning this on by default.\nObviously, the additional checks will be added to MaybeHandleFault. We are\nalso planning to add a two-level CodeObjectData table that is grouped by\nisolates to make cleanup easier and also reduce potential for contending on\na single data structure.\n\nBUG= https://bugs.chromium.org/p/v8/issues/detail?id=5277\n\nReview-Url: https://codereview.chromium.org/2371833007\nCr-Original-Original-Commit-Position: refs/heads/master@{#43523}\nCommitted: https://chromium.googlesource.com/v8/v8/+/a5af7fe9ee388a636675f4a6872b1d34fa7d1a7a\nReview-Url: https://codereview.chromium.org/2371833007\nCr-Original-Commit-Position: refs/heads/master@{#43755}\nCommitted: https://chromium.googlesource.com/v8/v8/+/338622d7cae787a63cece1f2e79a8b030023940b\nReview-Url: https://codereview.chromium.org/2371833007\nCr-Commit-Position: refs/heads/master@{#43759}\n","milestone":59},{"_id":"338622d7cae787a63cece1f2e79a8b030023940b","author":{"name":"eholk","email":"eholk@chromium.org","time":"Mon Mar 13 19:14:35 2017"},"commit":"338622d7cae787a63cece1f2e79a8b030023940b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 13 19:14:35 2017"},"message":"[wasm] Initial signal handler\n\nThis is basically the minimum viable signal handler for Wasm bounds checks.\nIt includes the TLS check and the fine grained instructions checks. These\ntwo checks provide most of the safety for the signal handler. Future CLs will\nadd code range and data range checks for more robustness.\n\nThe trap handling code and data structures are all in src/trap-handler, with\nthe code that actually runs in the signal handler confined to\nsrc/trap-handler/signal-handler.cc.\n\nThis changes adds a new V8 API that the embedder should call from a signal\nhandler that will give V8 the chance to handle the fault first. For hosts that\ndo not want to implement their own signal handler, we include the option to\ninstall a simple one. This simple handler is also used for the tests.\n\nWhen a Wasm module is instantiated, information about each function is passed\nto the trap handler, which is used to classify faults. These are removed during\nthe instance finalizer.\n\nSeveral future enhancements are planned before turning this on by default.\nObviously, the additional checks will be added to MaybeHandleFault. We are\nalso planning to add a two-level CodeObjectData table that is grouped by\nisolates to make cleanup easier and also reduce potential for contending on\na single data structure.\n\nBUG= https://bugs.chromium.org/p/v8/issues/detail?id=5277\n\nReview-Url: https://codereview.chromium.org/2371833007\nCr-Original-Commit-Position: refs/heads/master@{#43523}\nCommitted: https://chromium.googlesource.com/v8/v8/+/a5af7fe9ee388a636675f4a6872b1d34fa7d1a7a\nReview-Url: https://codereview.chromium.org/2371833007\nCr-Commit-Position: refs/heads/master@{#43755}\n","milestone":59},{"_id":"faf5f52627cdb398cac2f756e79dba042c48d7b2","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Fri Mar 10 07:06:25 2017"},"commit":"faf5f52627cdb398cac2f756e79dba042c48d7b2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 10 07:06:25 2017"},"message":"[debugger,api] deprecate everything in v8-debug.h\n\nR=clemensh@chromium.org, jgruber@chromium.org\nBUG=v8:5530\n\nReview-Url: https://codereview.chromium.org/2727393003\nCr-Commit-Position: refs/heads/master@{#43714}\n","milestone":59},{"_id":"9ac64ca19157ce679299a4b9bcc9cfb5372e4818","author":{"name":"Camillo Bruni","email":"cbruni@chromium.org","time":"Thu Mar 09 13:44:22 2017"},"commit":"9ac64ca19157ce679299a4b9bcc9cfb5372e4818","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 09 17:30:42 2017"},"message":"[api] Add v8::Isolate::DumpAndResetStats\n\nChrome no longer calls v8::Isolate::Dispose on shutdown, essentially preventing\nthe use of V8 stats within chrome/content_shell. This CL adds a basic hook to\nthe api that is then used to only print the stats.\n\nChrome change: https://codereview.chromium.org/2693353002\n\nChange-Id: I1481c14afe611e9c08ae67c815201a45940daa57\nReviewed-on: https://chromium-review.googlesource.com/452338\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nCommit-Queue: Camillo Bruni <cbruni@chromium.org>\nCr-Commit-Position: refs/heads/master@{#43706}","milestone":59},{"_id":"dab18fb0bbcddfc2468abf41ffdb83a53305838a","author":{"name":"ulan","email":"ulan@chromium.org","time":"Tue Mar 07 13:37:41 2017"},"commit":"dab18fb0bbcddfc2468abf41ffdb83a53305838a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 07 13:37:41 2017"},"message":"Make idle tasks optional in the default platform.\n\nBUG=v8:6056\n\nReview-Url: https://codereview.chromium.org/2737743002\nCr-Commit-Position: refs/heads/master@{#43640}\n","milestone":59},{"_id":"de1461b7efd2f52adc9b544240a04937c510a91c","author":{"name":"addaleax","email":"addaleax@gmail.com","time":"Mon Mar 06 10:58:01 2017"},"commit":"de1461b7efd2f52adc9b544240a04937c510a91c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 06 10:58:01 2017"},"message":"Drop UniqueId from include/v8.h\n\nIt's unused since March 2 2017 (https://chromium-review.googlesource.com/448539).\nThis removes it assuming that leaving it in the header was an oversight.\n\nBUG=v8:5828\n\nReview-Url: https://codereview.chromium.org/2732803002\nCr-Commit-Position: refs/heads/master@{#43605}\n","milestone":59},{"_id":"78867ad8707a0163b27b925d9282f18fd4c026ae","author":{"name":"Michael Lippautz","email":"mlippautz@chromium.org","time":"Thu Mar 02 17:03:31 2017"},"commit":"78867ad8707a0163b27b925d9282f18fd4c026ae","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Thu Mar 02 17:53:07 2017"},"message":"Remove object grouping\n\nEnbedders should switch to EmbedderHeapTracer API.\n\nBUG=v8:5828\n\nChange-Id: I82f2bc583d246617865a17f5904e02cd35f92fec\nReviewed-on: https://chromium-review.googlesource.com/448539\nReviewed-by: Hannes Payer <hpayer@chromium.org>\nReviewed-by: Ulan Degenbaev <ulan@chromium.org>\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nCr-Commit-Position: refs/heads/master@{#43551}","milestone":59},{"_id":"a5af7fe9ee388a636675f4a6872b1d34fa7d1a7a","author":{"name":"eholk","email":"eholk@chromium.org","time":"Wed Mar 01 18:02:13 2017"},"commit":"a5af7fe9ee388a636675f4a6872b1d34fa7d1a7a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 01 18:02:13 2017"},"message":"[wasm] Initial signal handler\n\nThis is basically the minimum viable signal handler for Wasm bounds checks.\nIt includes the TLS check and the fine grained instructions checks. These\ntwo checks provide most of the safety for the signal handler. Future CLs will\nadd code range and data range checks for more robustness.\n\nThe trap handling code and data structures are all in src/trap-handler, with\nthe code that actually runs in the signal handler confined to\nsrc/trap-handler/signal-handler.cc.\n\nThis changes adds a new V8 API that the embedder should call from a signal\nhandler that will give V8 the chance to handle the fault first. For hosts that\ndo not want to implement their own signal handler, we include the option to\ninstall a simple one. This simple handler is also used for the tests.\n\nWhen a Wasm module is instantiated, information about each function is passed\nto the trap handler, which is used to classify faults. These are removed during\nthe instance finalizer.\n\nSeveral future enhancements are planned before turning this on by default.\nObviously, the additional checks will be added to MaybeHandleFault. We are\nalso planning to add a two-level CodeObjectData table that is grouped by\nisolates to make cleanup easier and also reduce potential for contending on\na single data structure.\n\nBUG= https://bugs.chromium.org/p/v8/issues/detail?id=5277\n\nReview-Url: https://codereview.chromium.org/2371833007\nCr-Commit-Position: refs/heads/master@{#43523}\n","milestone":59},{"_id":"ae66dcbec0b2457d5c050e1869a2de18925e23e1","author":{"name":"Georg Neis","email":"neis@chromium.org","time":"Tue Feb 28 10:11:54 2017"},"commit":"ae66dcbec0b2457d5c050e1869a2de18925e23e1","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Tue Feb 28 19:02:32 2017"},"message":"[modules] Make Module::Evaluate return the completion value.\n\nThis is more useful than always returning undefined.\n\nBUG=v8:1569,v8:5978\n\nChange-Id: Id10cf87f7865db1a85de412460eaead4e4bf3b62\nReviewed-on: https://chromium-review.googlesource.com/446846\nReviewed-by: Adam Klein <adamk@chromium.org>\nCommit-Queue: Georg Neis <neis@chromium.org>\nCr-Commit-Position: refs/heads/master@{#43498}","milestone":59},{"_id":"60991f990b2ec0efe57668c499091695ac416f39","author":{"name":"Daniel Cheng","email":"dcheng@chromium.org","time":"Mon Feb 27 10:11:08 2017"},"commit":"60991f990b2ec0efe57668c499091695ac416f39","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Mon Feb 27 16:05:46 2017"},"message":"Don't use DCHECK in v8-util.h.\n\nThis will randomly break compilation units that don't happen to #define\nDCHECK before v8-util.h is included.\n\nBUG=chromium:688155\n\nChange-Id: I7abdaf87c8bb7aca995d9e6e7ef8b4faff0dc50c\nReviewed-on: https://chromium-review.googlesource.com/447002\nReviewed-by: Marja Hölttä <marja@chromium.org>\nCommit-Queue: Daniel Cheng <dcheng@chromium.org>\nCr-Commit-Position: refs/heads/master@{#43455}","milestone":59},{"_id":"40008aa5dfaea16a4c0086733e5dab9a1312f98f","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Mar 02 11:54:51 2017"},"commit":"40008aa5dfaea16a4c0086733e5dab9a1312f98f","committer":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Mar 02 11:54:51 2017"},"message":"Merged: Don't use DCHECK in v8-util.h.\n\nRevision: 60991f990b2ec0efe57668c499091695ac416f39\n\nBUG=chromium:688155\nLOG=N\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nTBR=machenbach@chromium.org\n\nReview-Url: https://codereview.chromium.org/2725883003 .\nCr-Commit-Position: refs/branch-heads/5.8@{#4}\nCr-Branched-From: eda659cc5e307f20ac1ad542ba12ab32eaf4c7ef-refs/heads/5.8.283@{#1}\nCr-Branched-From: 4310cd02d2160b1457baed81a2f40063eb264a21-refs/heads/master@{#43429}\n","milestone":58},{"_id":"d3cc730b45037ff0034946a49d8fa6bc93d53000","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Fri Feb 24 07:47:13 2017"},"commit":"d3cc730b45037ff0034946a49d8fa6bc93d53000","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 24 09:17:51 2017"},"message":"Add a getter for the last entered context or microtask context\n\nThis is used for internal security checks in eval(). Expose this to\nenable the embedder to implement similar security checks.\n\nR=yangguo@chromium.org\nBUG=\n\nChange-Id: I10819713b19527622de5ffffac313d126a887c05\nReviewed-on: https://chromium-review.googlesource.com/446106\nReviewed-by: Yang Guo <yangguo@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs/heads/master@{#43405}","milestone":58},{"_id":"b40d44ecc1ea662ea6d30d703cf1820cea9ee190","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Tue Feb 21 03:43:14 2017"},"commit":"b40d44ecc1ea662ea6d30d703cf1820cea9ee190","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Feb 21 03:43:14 2017"},"message":"[wasm] Embedder can control what buffers wasm compilation works on.\n\nTwo controls, one for instantiation and one for compilation. They allow\nthe embedder (e.g. Chrome) check properties of the parameters of those\ntwo operations, and decide if they are allowed to continue.\n\nFor example, Chrome may now decline compilation of certain size buffers,\nin synchronous cases; same for instantiation (where the buffer size\nrefers to the size of the buffer containing wasm wire bytes)\n\nBUG=v8:5981\n\nReview-Url: https://codereview.chromium.org/2699843003\nCr-Original-Commit-Position: refs/heads/master@{#43295}\nCommitted: https://chromium.googlesource.com/v8/v8/+/d9bc0ffb16e633d52d7bcfd547a6125f0e4dfb87\nReview-Url: https://codereview.chromium.org/2699843003\nCr-Commit-Position: refs/heads/master@{#43336}\n","milestone":58},{"_id":"d9bc0ffb16e633d52d7bcfd547a6125f0e4dfb87","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Sat Feb 18 01:08:36 2017"},"commit":"d9bc0ffb16e633d52d7bcfd547a6125f0e4dfb87","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sat Feb 18 01:08:36 2017"},"message":"[wasm] Embedder can control what buffers wasm compilation works on.\n\nTwo controls, one for instantiation and one for compilation. They allow\nthe embedder (e.g. Chrome) check properties of the parameters of those\ntwo operations, and decide if they are allowed to continue.\n\nFor example, Chrome may now decline compilation of certain size buffers,\nin synchronous cases; same for instantiation (where the buffer size\nrefers to the size of the buffer containing wasm wire bytes)\n\nBUG=v8:5981\n\nReview-Url: https://codereview.chromium.org/2699843003\nCr-Commit-Position: refs/heads/master@{#43295}\n","milestone":58},{"_id":"3b15d950eeddcf6dba091b611e1a6cc100e2edd9","author":{"name":"addaleax","email":"addaleax@gmail.com","time":"Fri Feb 17 14:19:39 2017"},"commit":"3b15d950eeddcf6dba091b611e1a6cc100e2edd9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Feb 17 14:19:39 2017"},"message":"ValueSerializer: Add SetTreatArrayBufferViewsAsHostObjects() flag\n\nAdd `ValueSerializer::SetTreatArrayBufferViewsAsHostObjects()` which\ninstructs the `ValueSerializer` to treat ArrayBufferView objects as\nhost objects.\n\nBUG=v8:5926\n\nReview-Url: https://codereview.chromium.org/2696133007\nCr-Commit-Position: refs/heads/master@{#43281}\n","milestone":58},{"_id":"0a8de761ffdf79e00dfdfba503fd9f0b3fe6f628","author":{"name":"Toon Verwaest","email":"verwaest@chromium.org","time":"Fri Feb 17 09:35:37 2017"},"commit":"0a8de761ffdf79e00dfdfba503fd9f0b3fe6f628","committer":{"name":"Commit Bot","email":"commit-bot@chromium.org","time":"Fri Feb 17 10:06:22 2017"},"message":"Remove unused Box type\n\nBUG=\n\nChange-Id: Ie7a8327fac62a0608b60cf9f0f072f979ac4fd76\nReviewed-on: https://chromium-review.googlesource.com/443528\nReviewed-by: Benedikt Meurer <bmeurer@chromium.org>\nCommit-Queue: Toon Verwaest <verwaest@google.com>\nCr-Commit-Position: refs/heads/master@{#43269}","milestone":58},{"_id":"7f6b82377bb549348e10441baa583c123f319e1c","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Wed Feb 15 14:24:08 2017"},"commit":"7f6b82377bb549348e10441baa583c123f319e1c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 15 14:24:08 2017"},"message":"Remove reference to i::JSArrayBuffer from ValueSerializer::TransferArrayBuffer comment.\n\nThe API class is v8::ArrayBuffer; JSArrayBuffer is the internal counterpart,\nbut its name should not appear in a public API comment.\n\nReview-Url: https://codereview.chromium.org/2692853007\nCr-Commit-Position: refs/heads/master@{#43214}\n","milestone":58},{"_id":"328ad0a7c4afbb32f7d8a8752590e8cd5a54be4f","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Tue Feb 14 14:10:40 2017"},"commit":"328ad0a7c4afbb32f7d8a8752590e8cd5a54be4f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Feb 14 14:10:40 2017"},"message":"Use internalized strings for v8::Template::Set shorthand.\n\nThe string will be internalized anyhow when the first object is instantiated,\nand since templates are eternal, the string will be eternal anyhow even if\nthe template is never instantiated.\n\nReview-Url: https://codereview.chromium.org/2697683002\nCr-Commit-Position: refs/heads/master@{#43187}\n","milestone":58},{"_id":"deabb19abc3328149ed76990cdd3a1d5e4e5b3ed","author":{"name":"bbudge","email":"bbudge@chromium.org","time":"Tue Feb 14 06:57:25 2017"},"commit":"deabb19abc3328149ed76990cdd3a1d5e4e5b3ed","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Feb 14 06:57:25 2017"},"message":"Remove SIMD.js from V8.\n\nLOG=Y\nBUG=v8:4124,v8:5948\nR=bradnelson@chromium.org,bmeurer@chromium.org,jochen@chromium.org,hpayer@chromium.org,danno@chromium.org\n\nReview-Url: https://codereview.chromium.org/2684313003\nCr-Original-Original-Commit-Position: refs/heads/master@{#43162}\nCommitted: https://chromium.googlesource.com/v8/v8/+/d170c57ab996d00c4665a9d865bd5754a1806c6c\nReview-Url: https://codereview.chromium.org/2684313003\nCr-Original-Commit-Position: refs/heads/master@{#43169}\nCommitted: https://chromium.googlesource.com/v8/v8/+/a9b59a11f1bfe069afabe5567f919727456f1f12\nReview-Url: https://codereview.chromium.org/2684313003\nCr-Commit-Position: refs/heads/master@{#43176}\n","milestone":58},{"_id":"a9b59a11f1bfe069afabe5567f919727456f1f12","author":{"name":"bbudge","email":"bbudge@chromium.org","time":"Mon Feb 13 20:43:08 2017"},"commit":"a9b59a11f1bfe069afabe5567f919727456f1f12","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 13 20:43:08 2017"},"message":"Remove SIMD.js from V8.\n\nLOG=Y\nBUG=v8:4124,v8:5948\nR=bradnelson@chromium.org,bmeurer@chromium.org,jochen@chromium.org,hpayer@chromium.org,danno@chromium.org\n\nReview-Url: https://codereview.chromium.org/2684313003\nCr-Original-Commit-Position: refs/heads/master@{#43162}\nCommitted: https://chromium.googlesource.com/v8/v8/+/d170c57ab996d00c4665a9d865bd5754a1806c6c\nReview-Url: https://codereview.chromium.org/2684313003\nCr-Commit-Position: refs/heads/master@{#43169}\n","milestone":58},{"_id":"d170c57ab996d00c4665a9d865bd5754a1806c6c","author":{"name":"bbudge","email":"bbudge@chromium.org","time":"Mon Feb 13 15:59:13 2017"},"commit":"d170c57ab996d00c4665a9d865bd5754a1806c6c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 13 15:59:22 2017"},"message":"Remove SIMD.js from V8.\n\nLOG=Y\nBUG=v8:4124,5948\nR=bradnelson@chromium.org,bmeurer@chromium.org,jochen@chromium.org,hpayer@chromium.org,danno@chromium.org\n(notry since trybots can't patch directory deletes)\nNOTRY=true\n\nReview-Url: https://codereview.chromium.org/2684313003\nCr-Commit-Position: refs/heads/master@{#43162}\n","milestone":58},{"_id":"7cc1694f512bbae571bc13c921b9d348d4b8fb78","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Sat Feb 11 02:42:17 2017"},"commit":"7cc1694f512bbae571bc13c921b9d348d4b8fb78","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sat Feb 11 02:42:17 2017"},"message":"[inspector] exposed ExecutionContextId getter by context\n\nBUG=none\nR=pfeldman@chromium.org\n\nReview-Url: https://codereview.chromium.org/2690663003\nCr-Commit-Position: refs/heads/master@{#43122}\n","milestone":58},{"_id":"01882d7f6a2b8115c20482dd375dee65308edbf0","author":{"name":"jkummerow","email":"jkummerow@chromium.org","time":"Wed Feb 08 21:12:45 2017"},"commit":"01882d7f6a2b8115c20482dd375dee65308edbf0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 08 21:12:45 2017"},"message":"Fix missing cases of empty_string canonicalization\n\nReview-Url: https://codereview.chromium.org/2683903002\nCr-Commit-Position: refs/heads/master@{#43047}\n","milestone":58},{"_id":"e7b78ac22937f994d35376b38416a5844d6beced","author":{"name":"raphael.kubo.da.costa","email":"raphael.kubo.da.costa@intel.com","time":"Tue Feb 07 21:42:06 2017"},"commit":"e7b78ac22937f994d35376b38416a5844d6beced","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Feb 07 21:42:06 2017"},"message":"Expose more %ArrayPrototype% functions to the public API.\n\nIn addition to Array.prototype.values() which is already exposed, Blink\nneeds access to entries(), forEach() and keys() to properly set the\ncorresponding functions in value iterators for WebIDL conformance.\n\nAdd a few new entries to NATIVE_CONTEXT_IMPORTED_FIELDS and expand\nV8_INTRINSICS_LIST, as well as some API tests for all these new exposed\nfunctions.\n\nBUG=chromium:632935\nR=caitp@igalia.com,jochen@chromium.org,verwaest@chromium.org,yukishiino@chromium.org\n\nReview-Url: https://codereview.chromium.org/2670833008\nCr-Commit-Position: refs/heads/master@{#43017}\n","milestone":58},{"_id":"9e248dde60ebe3af279746395c144b529cf5bf84","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Mon Feb 06 17:42:13 2017"},"commit":"9e248dde60ebe3af279746395c144b529cf5bf84","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 06 17:42:13 2017"},"message":"[api] Mark functions related to object grouping as DEPRECATED\n\nEmbedders should use the new EmbedderHeapTracer api.\n\nBUG=v8:5828\n\nReview-Url: https://codereview.chromium.org/2642743008\nCr-Commit-Position: refs/heads/master@{#42974}\n","milestone":58},{"_id":"8ae463d736c1a85d66babf2593fd4397162a80f0","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Feb 02 14:22:15 2017"},"commit":"8ae463d736c1a85d66babf2593fd4397162a80f0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Feb 02 14:22:15 2017"},"message":"[debugger] remove mirror cache and v8::Debug::GetMirror.\n\nR=jgruber@chromium.org\nBUG=v8:5530\n\nReview-Url: https://codereview.chromium.org/2670823002\nCr-Commit-Position: refs/heads/master@{#42893}\n","milestone":58},{"_id":"966355585bb3e6e21c063c2b670045f5a75e5aa5","author":{"name":"binji","email":"binji@chromium.org","time":"Fri Jan 27 20:15:37 2017"},"commit":"966355585bb3e6e21c063c2b670045f5a75e5aa5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 27 20:15:37 2017"},"message":"[d8] Use ValueSerializer for postMessage (instead of ad-hoc serializer)\n\nReview-Url: https://codereview.chromium.org/2643723010\nCr-Commit-Position: refs/heads/master@{#42749}\n","milestone":58},{"_id":"82ef9f75e343bb49f99a6f39f8c280bf3ef42b64","author":{"name":"pfeldman","email":"pfeldman@chromium.org","time":"Fri Jan 27 18:49:09 2017"},"commit":"82ef9f75e343bb49f99a6f39f8c280bf3ef42b64","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 27 18:49:09 2017"},"message":"V8 Inspector: complete migration to the standard message level enum.\n\nBUG=chromium:682521\n\nReview-Url: https://codereview.chromium.org/2659913002\nCr-Commit-Position: refs/heads/master@{#42747}\n","milestone":58},{"_id":"34bee46b0be6afc06f254ec0debd4b868443a649","author":{"name":"yukishiino","email":"yukishiino@chromium.org","time":"Fri Jan 27 07:29:15 2017"},"commit":"34bee46b0be6afc06f254ec0debd4b868443a649","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 27 07:29:15 2017"},"message":"Exposes Symbol.toPrimitive in C++ APIs as Symbol::GetToPrimitive.\n\nAs Blink needs to set Symbol.toPrimitive, exposes the symbol in C++ APIs\nas Symbol::GetToPrimitive.\n\nBUG=chromium:680409\n\nReview-Url: https://codereview.chromium.org/2657933003\nCr-Commit-Position: refs/heads/master@{#42724}\n","milestone":58},{"_id":"76e31da4f668dbd962456e21634c14d6a12ba37c","author":{"name":"pfeldman","email":"pfeldman@chromium.org","time":"Wed Jan 25 22:23:18 2017"},"commit":"76e31da4f668dbd962456e21634c14d6a12ba37c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 25 22:23:18 2017"},"message":"V8 Inspector: remove V8ConsoleAPIType from the API, reuse v8::Isolate::MessageErrorLevel instead.\n\nBUG=chromium:682521\n\nReview-Url: https://codereview.chromium.org/2656613004\nCr-Commit-Position: refs/heads/master@{#42666}\n","milestone":58},{"_id":"6eba6b4b89db81bc359dc041c62d1277f24bb8d4","author":{"name":"binji","email":"binji@chromium.org","time":"Mon Jan 23 22:06:12 2017"},"commit":"6eba6b4b89db81bc359dc041c62d1277f24bb8d4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jan 23 22:06:12 2017"},"message":"Add Isolate parameter to disallow Atomics.wait\n\nAtomics.wait is a function which may block, which is not allowed on the\nmain thread. Since V8 doesn't know whether a particular isolate is the\n\"main thread\", this CL adds an option to Isolate::CreateParams to choose\nwhether this function is allowed.\n\nReview-Url: https://codereview.chromium.org/2642293002\nCr-Commit-Position: refs/heads/master@{#42611}\n","milestone":58},{"_id":"876da98a5182a03f631f9ab4469bd6838225cb16","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Jan 23 10:44:20 2017"},"commit":"876da98a5182a03f631f9ab4469bd6838225cb16","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jan 23 10:44:20 2017"},"message":"[debugger api] remove legacy JSON debug protocol.\n\nR=jgruber@chromium.org\nBUG=v8:5530\n\nReview-Url: https://codereview.chromium.org/2642253005\nCr-Original-Commit-Position: refs/heads/master@{#42543}\nCommitted: https://chromium.googlesource.com/v8/v8/+/e26a58e43c51a680a0a6363e0066886f4971a41f\nReview-Url: https://codereview.chromium.org/2642253005\nCr-Commit-Position: refs/heads/master@{#42595}\n","milestone":58},{"_id":"e26a58e43c51a680a0a6363e0066886f4971a41f","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Fri Jan 20 10:44:27 2017"},"commit":"e26a58e43c51a680a0a6363e0066886f4971a41f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 20 10:44:27 2017"},"message":"[debugger api] remove legacy JSON debug protocol.\n\nR=jgruber@chromium.org\nBUG=v8:5530\n\nReview-Url: https://codereview.chromium.org/2642253005\nCr-Commit-Position: refs/heads/master@{#42543}\n","milestone":58},{"_id":"4cf44599ebada52299d15c6e45b0bdbb8eda4ce0","author":{"name":"machenbach","email":"machenbach@chromium.org","time":"Thu Jan 19 15:21:07 2017"},"commit":"4cf44599ebada52299d15c6e45b0bdbb8eda4ce0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 19 15:21:07 2017"},"message":"Fix version string\n\nBroke after https://codereview.chromium.org/2621983002\n\nBUG=chromium:581766\n\nReview-Url: https://codereview.chromium.org/2644113002\nCr-Commit-Position: refs/heads/master@{#42509}\n","milestone":58},{"_id":"45b10228abfdc23587bd1cd44eb5c1edc39e41a6","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Thu Jan 19 14:38:21 2017"},"commit":"45b10228abfdc23587bd1cd44eb5c1edc39e41a6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 19 14:38:21 2017"},"message":"[api,profiler] Introduce GetRetainerInfos callback for profiling\n\nBUG=679724\n\nReview-Url: https://codereview.chromium.org/2631063003\nCr-Commit-Position: refs/heads/master@{#42506}\n","milestone":58},{"_id":"f09e57923ae9f0b18e63ec4edcec404a7e5862ed","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Jan 19 13:34:02 2017"},"commit":"f09e57923ae9f0b18e63ec4edcec404a7e5862ed","committer":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Jan 19 13:34:02 2017"},"message":"Update version to 5.8\n\nTBR=machenbach@chromium.org, vogelheim@chromium.org\nNOTRY=true\n\nReview-Url: https://codereview.chromium.org/2641003003 .\nCr-Commit-Position: refs/heads/master@{#42504}\n","milestone":58},{"_id":"3e915e12a146fb346765ab5027c5e9ebad0600f9","author":{"name":"jkummerow","email":"jkummerow@chromium.org","time":"Thu Jan 19 13:27:59 2017"},"commit":"3e915e12a146fb346765ab5027c5e9ebad0600f9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 19 13:27:59 2017"},"message":"Internalize strings in-place (reland^3)\n\nusing newly introduced ThinStrings, which store a pointer to the actual,\ninternalized string they represent.\n\nBUG=v8:4520\n\n(Previously landed as #42168 / af51befe694f)\n(Previously landed as #42193 / 4c699e349a49)\n(Previously landed as #42235 / ec45e6ed2e11)\n\nReview-Url: https://codereview.chromium.org/2549773002\nCr-Commit-Position: refs/heads/master@{#42503}\n","milestone":58},{"_id":"b0f5abbea372b0cc4d27f267de271766f5c8a11a","author":{"name":"neis","email":"neis@chromium.org","time":"Thu Jan 19 06:59:20 2017"},"commit":"b0f5abbea372b0cc4d27f267de271766f5c8a11a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 19 06:59:20 2017"},"message":"[modules] Add an IsModule flag to ScriptOriginOptions.\n\nSince the script origin is part of the key used in the compilation\ncache, this ensures that the cache never confuses a module with a\nnon-module script.\n\nBUG=v8:1569,v8:5685\n\nReview-Url: https://codereview.chromium.org/2611643002\nCr-Commit-Position: refs/heads/master@{#42490}\n","milestone":58},{"_id":"c759a3d847b9216d7fc0e54e84eab3b31c7654f8","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Nov 14 07:17:22 2016"},"commit":"c759a3d847b9216d7fc0e54e84eab3b31c7654f8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Nov 14 07:17:59 2016"},"message":"[serializer] small fixes for blink snapshot.\n\nChanges include:\n - Adding V8_EXPORT macro for SnapshotCreator\n - Removing outdated DCHECKs.\n - Allow nullptr as external reference. This required a...\n - Refactoring of hashmaps used by the serializer.\n - Remove external references for counters. These are not used\n   anywhere for isolates that are being serialized.\n - Put template infos into the partial snapshot cache.\n - Remove unnecessary presubmit check for external references.\n   mksnapshot crashes if external references are missing.\n\nR=jochen@chromium.org, vogelheim@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2490783004\nCr-Commit-Position: refs/heads/master@{#40949}\n","milestone":56},{"_id":"5d3ce7ea4fa299f8463ee15282fa986b50702cd8","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Sun Nov 13 03:09:43 2016"},"commit":"5d3ce7ea4fa299f8463ee15282fa986b50702cd8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sun Nov 13 03:10:24 2016"},"message":"Remove the deprecated ValueSerializer::ReadHeader overload with no context parameter.\n\nSeveral weeks have now passed since it was deprecated; Chromium does not\ncall it.\n\nBUG=chromium:148757\n\nReview-Url: https://codereview.chromium.org/2478863002\nCr-Commit-Position: refs/heads/master@{#40945}\n","milestone":56},{"_id":"94142ed8c91d2110bba85d4820bd098da3f76fea","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Sat Nov 12 21:49:30 2016"},"commit":"94142ed8c91d2110bba85d4820bd098da3f76fea","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sat Nov 12 21:50:26 2016"},"message":"ValueSerializer: Replace use of std::vector with a delegate-allocated buffer.\n\nBUG=chromium:148757\n\nReview-Url: https://codereview.chromium.org/2492943002\nCr-Commit-Position: refs/heads/master@{#40943}\n","milestone":56},{"_id":"58a753053c5ebacec3c603c084b5b4a94799583a","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Thu Nov 10 09:29:08 2016"},"commit":"58a753053c5ebacec3c603c084b5b4a94799583a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 10 09:29:48 2016"},"message":"[api] Remove marking persistents as partially dependent\n\nAlso remove the flag scavenge_reclaim_unmodified_objects which has been\ndefaulted to true for quite some time now.\n\nBUG=chromium:651354\n\nReview-Url: https://codereview.chromium.org/2486173002\nCr-Commit-Position: refs/heads/master@{#40878}\n","milestone":56},{"_id":"5b1de36d93d8c0729422acdbd8405fe5ae8ff6bc","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Fri Nov 04 14:28:35 2016"},"commit":"5b1de36d93d8c0729422acdbd8405fe5ae8ff6bc","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Nov 04 14:28:56 2016"},"message":"[api] Remove EmbedderReachableReferenceReporter\n\nAPI was highly experimental. Embedders should use V8::RegisterExternalReference instead.\n\nBUG=chromium:468240\nR=jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/2474163002\nCr-Commit-Position: refs/heads/master@{#40769}\n","milestone":56},{"_id":"cadcd787cf185f9fb974a1f0c12fdd13c45171e9","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Fri Nov 04 13:02:40 2016"},"commit":"cadcd787cf185f9fb974a1f0c12fdd13c45171e9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Nov 04 13:03:18 2016"},"message":"V8 support for cached accessors.\n\nSome accessors requires little to no computation at all, its result can be\ncached in a private property, avoiding the call overhead.\nCalls to the getter are translated into a cheap property load.\n\nFollow-on to crrev.com/2347523003, from peterssen@google.com\n\nBUG=chromium:634276, v8:5548\n\nReview-Url: https://codereview.chromium.org/2405213002\nCr-Commit-Position: refs/heads/master@{#40765}\n","milestone":56},{"_id":"7fede7bb98cf2c76b8f441ef1f5a1cb837af9f93","author":{"name":"dcheng","email":"dcheng@chromium.org","time":"Fri Nov 04 10:02:02 2016"},"commit":"7fede7bb98cf2c76b8f441ef1f5a1cb837af9f93","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Nov 04 10:02:36 2016"},"message":"Set global proxy internal field count based on the global object template.\n\nBUG=v8:5588\nR=jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/2475433008\nCr-Commit-Position: refs/heads/master@{#40755}\n","milestone":56},{"_id":"43995e2fa876c9501f7eb9440d33999708f1428b","author":{"name":"neis","email":"neis@chromium.org","time":"Fri Nov 04 09:37:22 2016"},"commit":"43995e2fa876c9501f7eb9440d33999708f1428b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Nov 04 09:37:43 2016"},"message":"[modules] Make ModuleInfoEntry a Struct rather than FixedArray.\n\nIt always has the same number of slots.\n\nR=adamk@chromium.org\nTBR=bmeurer@chromium.org\nBUG=v8:1569\n\nReview-Url: https://codereview.chromium.org/2460353002\nCr-Commit-Position: refs/heads/master@{#40754}\n","milestone":56},{"_id":"2525b0573b28e929a25a41ac7b57bdb84d9abf40","author":{"name":"lpy","email":"lpy@chromium.org","time":"Thu Nov 03 18:03:25 2016"},"commit":"2525b0573b28e929a25a41ac7b57bdb84d9abf40","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 03 18:03:56 2016"},"message":"[Tracing] Make TracingCategoryObserver v8 internal.\n\nThis patch removes TracingCategoryObserver API and moves the creation of\nobserver inside platform initialization, by assuming that either\nPlatform::AddTraceStateObserver is implemented correctly to add observer to\ntracing controller that implemented by embedders, or default tracing controller\nhas already been set up and attached to platform before\nv8::V8::InitializePlatform is called.\n\nBUG=v8:5590\n\nReview-Url: https://codereview.chromium.org/2471583004\nCr-Commit-Position: refs/heads/master@{#40739}\n","milestone":56},{"_id":"9c7819434365bad8de953cee6b2af115fc710aec","author":{"name":"lpy","email":"lpy@chromium.org","time":"Mon Oct 31 19:44:49 2016"},"commit":"9c7819434365bad8de953cee6b2af115fc710aec","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Oct 31 19:45:20 2016"},"message":"[Tracing] Remove unused excluded categories list.\n\nWe only need included categories list, excluded categories list will only work\nif we use regular expression in categories list, which is not supported in V8.\n\nTBR=jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/2462143002\nCr-Commit-Position: refs/heads/master@{#40681}\n","milestone":56},{"_id":"26547761efbcb6ed0d07f894afe3cbf2b5dd0068","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Oct 31 14:15:34 2016"},"commit":"26547761efbcb6ed0d07f894afe3cbf2b5dd0068","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Oct 31 14:16:24 2016"},"message":"Create internal fields on global proxy objects\n\nBUG=v8:5588\nR=verwaest@chromium.org\n\nReview-Url: https://codereview.chromium.org/2467463002\nCr-Commit-Position: refs/heads/master@{#40670}\n","milestone":56},{"_id":"6df8096a00382d10cab1bb2052238e324d66fe54","author":{"name":"lpy","email":"lpy@chromium.org","time":"Fri Oct 28 20:43:17 2016"},"commit":"6df8096a00382d10cab1bb2052238e324d66fe54","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Oct 28 20:44:04 2016"},"message":"[Tracing] Implement TracingCategoryObserver.\n\nThis patch implements TracingCategoryObserver to set global flag when a V8\nspecific category is enabled. Previously, we set a global flag each time when we\nencounter a top level trace event, and use it as a global check. With this\npatch, we can set a group of flags when tracing is enabled; besides, we make\nV8 tracing feature use V8 flags instead of defining its own flag in a messy way.\n\nWith this patch, whatever V8 flag we want to imply in tracing, we define another\ninteger flag, and the original V8 flag will set it to 0x01 when passing by\ncommandline, tracing will set it to 0x10 when we start tracing and reset the bit\nwhen we stop tracing.\n\nReview-Url: https://codereview.chromium.org/2436273002\nCr-Commit-Position: refs/heads/master@{#40659}\n","milestone":56},{"_id":"f07421508221dfcca43a6c10ad8e9047f8f8fcdf","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri Oct 28 14:39:33 2016"},"commit":"f07421508221dfcca43a6c10ad8e9047f8f8fcdf","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Oct 28 14:40:11 2016"},"message":"Add a native data property that replaces itself with a real data property\n\nThis is useful for things that don't ever change, but we don't want to\neagerly compute the result.\n\nDoing this from the embedder is difficult, using DefineOwnProperty would\nread the property to get the property descriptor, creating an endless\nrecursion.\n\nR=verwaest@chromium.org,haraken@chromium.org\nBUG=\n\nReview-Url: https://codereview.chromium.org/2449783006\nCr-Commit-Position: refs/heads/master@{#40648}\n","milestone":56},{"_id":"39ed137bce316138e04aefbb5165daf5ae7201ca","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Oct 27 13:35:25 2016"},"commit":"39ed137bce316138e04aefbb5165daf5ae7201ca","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Oct 27 13:35:36 2016"},"message":"[serializer] introduce API to serialize internal fields\n\nSee https://goo.gl/C9U1dL\n\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2452333002\nCr-Commit-Position: refs/heads/master@{#40623}\n","milestone":56},{"_id":"91a5a219d46d592b49f6e963d308b2bbdc9b5b60","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Sat Oct 22 15:14:40 2016"},"commit":"91a5a219d46d592b49f6e963d308b2bbdc9b5b60","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sat Oct 22 15:15:04 2016"},"message":"[wasm] Avoid double-serializing the wire bytes\n\nSince the public API for deserialization is now just DeserializeOrCompile,\nwe can trickle down the wire bytes to the deserialization logic, and\navoid the need for duplicating the wire bytes when serializing.\n\nBUG=chromium:657316\n\nReview-Url: https://chromiumcodereview.appspot.com/2433273002\nCr-Commit-Position: refs/heads/master@{#40516}\n","milestone":56},{"_id":"ef690ca387c116569a2f5dbd71c6f0733a070cc6","author":{"name":"heimbuef","email":"heimbuef@google.com","time":"Thu Oct 20 14:48:13 2016"},"commit":"ef690ca387c116569a2f5dbd71c6f0733a070cc6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Oct 20 14:48:55 2016"},"message":"Constrain the zone segment pool size\n\nAdded a size constraint to the configuration to limit the segment pool.\nThis will likely fix the memory alerts from small android devices.\n\nBUG=chromium:655129\n\nReview-Url: https://chromiumcodereview.appspot.com/2424393002\nCr-Commit-Position: refs/heads/master@{#40476}\n","milestone":56},{"_id":"2282dd09414b6b135991184ee379356caa4ff107","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Thu Oct 20 14:19:02 2016"},"commit":"2282dd09414b6b135991184ee379356caa4ff107","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Oct 20 14:19:30 2016"},"message":"[wasm] remove deprecated deserialization API\n\nWe don't need the Deserialize API taking in a SerializedData anymore.\n\nBUG=\n\nReview-Url: https://chromiumcodereview.appspot.com/2436543004\nCr-Commit-Position: refs/heads/master@{#40473}\n","milestone":56},{"_id":"73460009a6ef799d912f8ab7ebe38563d7242d03","author":{"name":"ishell","email":"ishell@chromium.org","time":"Thu Oct 13 16:18:53 2016"},"commit":"73460009a6ef799d912f8ab7ebe38563d7242d03","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Oct 13 16:19:24 2016"},"message":"[ic] Support data handlers that represent loads from prototypes.\n\nThis CL also adds separate runtime call stats buckets for data handlers.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2419513002\nCr-Commit-Position: refs/heads/master@{#40281}\n","milestone":56},{"_id":"29ddd7ff82a410136250d03b4c741e2b8899a608","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Oct 13 12:44:15 2016"},"commit":"29ddd7ff82a410136250d03b4c741e2b8899a608","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Oct 13 12:44:36 2016"},"message":"Fix import/export annotations for v8 targets that are always static\n\nInstead of suppressing the linker warnings and disallowing incremental\nlinking, just fix the annotations..\n\nR=machenbach@chromium.org,jgruber@chromium.org\nBUG=\n\nReview-Url: https://codereview.chromium.org/2420603002\nCr-Commit-Position: refs/heads/master@{#40260}\n","milestone":56},{"_id":"6f94a8f1c7f0a94c74c5055b02b660d8e93fe5fe","author":{"name":"gsathya","email":"gsathya@chromium.org","time":"Wed Oct 12 20:45:28 2016"},"commit":"6f94a8f1c7f0a94c74c5055b02b660d8e93fe5fe","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Oct 12 20:45:57 2016"},"message":"[promises] Move PromiseReactionJob to c++\n\nThis patch results in a 11% improvement over 5 runs in the\nbluebird benchmark.\n\nBUG=v8:5343,v8:5046\nTBR=bmeurer@chromium.org\n\nReview-Url: https://codereview.chromium.org/2406343002\nCr-Commit-Position: refs/heads/master@{#40239}\n","milestone":56},{"_id":"38ac7fe6583b66d6f2bc678cb7b888281baa3363","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Wed Oct 12 20:11:03 2016"},"commit":"38ac7fe6583b66d6f2bc678cb7b888281baa3363","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Oct 12 20:11:29 2016"},"message":"[wasm] API renames for wasm serialization/deserialization\n\nThis incorporates recent feedback:\n- simpler deserialization API by dropping the std::unique_ptr.\nThe only purpose there was communicating to the caller that they\nown the buffer, and that the deserializer won't delete it. The new\ndesign communicates that through a naming choice.\n- renamed *UncompiledBytes to *WasmWireBytes\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2411263004\nCr-Commit-Position: refs/heads/master@{#40238}\n","milestone":56},{"_id":"610fe2892b2c61858e5f4c81563b6fa0056a8672","author":{"name":"fmeawad","email":"fmeawad@chromium.org","time":"Wed Oct 12 15:34:40 2016"},"commit":"610fe2892b2c61858e5f4c81563b6fa0056a8672","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Oct 12 15:34:51 2016"},"message":"[Tracing] Remove State Sampling Profiling\n\nThe state sampling was implemented in chrome, we had an interface for it\nV8 but it was not implemented yet.\nThe chrome version version has been removed in\nhttps://codereview.chromium.org/2406703002/\nTherefore following up with its removal in V8 as well.\n\nThis CL can land independent of the Chromium related CL.\n\nR=primiano@chromium.org,alph@chromium.org\n\nReview-Url: https://codereview.chromium.org/2410523002\nCr-Commit-Position: refs/heads/master@{#40232}\n","milestone":56},{"_id":"9d2051fc2896bcb771cfb41b2864601c6c40e299","author":{"name":"adamk","email":"adamk@chromium.org","time":"Tue Oct 11 19:22:03 2016"},"commit":"9d2051fc2896bcb771cfb41b2864601c6c40e299","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Oct 11 19:22:25 2016"},"message":"[modules] Store Module metadata in per-Context EmbedderData\n\nThis is a re-land of https://codereview.chromium.org/2393303002/ with\nan additional call to DisposeModuleEmbedderData() added to fix lsan failures.\n\nUnifies the approaches used for storing the specifier -> module mapping\nand the module -> directory mapping, using std::unordered_maps for both\nand storing them per-Context.\n\nThis requires adding a method to the v8::Module API to get a hash code\nfor a Module, but allows slimming down the API in return: gone are\nSetEmbedderData/GetEmbedderData, along with the fourth argument\nto ResolveModuleCallback.\n\nBesides a simpler API, this allows d8 to get closer to the HTML loader,\nwhich requires each Realm to have a persistent module map (though this\ncapability is not yet exercised by any tests).\n\nBUG=v8:1569\nTBR=neis@chromium.org,jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/2405313002\nCr-Commit-Position: refs/heads/master@{#40186}\n","milestone":56},{"_id":"9cf8fce74cf6e7afd6aea3f3545f6bb61572f277","author":{"name":"adamk","email":"adamk@chromium.org","time":"Mon Oct 10 17:37:32 2016"},"commit":"9cf8fce74cf6e7afd6aea3f3545f6bb61572f277","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Oct 10 17:37:51 2016"},"message":"[modules] Store Module metadata in per-Context EmbedderData\n\nUnifies the approaches used for storing the specifier -> module mapping\nand the module -> directory mapping, using std::unordered_maps for both\nand storing them per-Context.\n\nThis requires adding a method to the v8::Module API to get a hash code\nfor a Module, but allows slimming down the API in return: gone are\nSetEmbedderData/GetEmbedderData, along with the fourth argument\nto ResolveModuleCallback.\n\nBesides a simpler API, this allows d8 to get closer to the HTML loader,\nwhich requires each Realm to have a persistent module map (though this\ncapability is not yet exercised by any tests).\n\nBUG=v8:1569\n\nReview-Url: https://codereview.chromium.org/2393303002\nCr-Commit-Position: refs/heads/master@{#40133}\n","milestone":56},{"_id":"c59cf8cd211cfb93e5a6b2aeea2a51b1eb5c9b30","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Oct 10 08:51:48 2016"},"commit":"c59cf8cd211cfb93e5a6b2aeea2a51b1eb5c9b30","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Oct 10 08:52:06 2016"},"message":"Turn libplatform into a component\n\nBUG=v8:5412\nR=jgruber@chromium.org,machenbach@chromium.org\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_chromium_compile_dbg_ng;master.tryserver.chromium.android:android_clang_dbg_recipe\n\nReview-Url: https://codereview.chromium.org/2372983003\nCr-Commit-Position: refs/heads/master@{#40111}\n","milestone":56},{"_id":"cc02e74320c940902d7004ec070587289c04d8da","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Mon Oct 10 04:12:29 2016"},"commit":"cc02e74320c940902d7004ec070587289c04d8da","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Oct 10 04:12:45 2016"},"message":"[wasm] Avoid copying when deserializing wasm\n\nUpdated the deserialization API to avoid copying uncompiled\nbytes.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2404673002\nCr-Commit-Position: refs/heads/master@{#40108}\n","milestone":56},{"_id":"0d2830a265f3858836fcbea75383d7a5f103ce01","author":{"name":"neis","email":"neis@chromium.org","time":"Fri Oct 07 08:23:33 2016"},"commit":"0d2830a265f3858836fcbea75383d7a5f103ce01","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Oct 07 08:23:48 2016"},"message":"Minor comment fixes.\n\nR=adamk@chromium.org\nBUG=\n\nReview-Url: https://codereview.chromium.org/2394173002\nCr-Commit-Position: refs/heads/master@{#40069}\n","milestone":56},{"_id":"917ef616cccfcee30fc9871d8c6025c17b29b05b","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Thu Oct 06 19:33:36 2016"},"commit":"917ef616cccfcee30fc9871d8c6025c17b29b05b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Oct 06 19:33:57 2016"},"message":"[wasm] Support recompilation if deserialization fails.\n\nOne step closer to the informally-agreed upon specification\nthat structured cloning will always succeed, meaning, if\nwe fail to deserialize (e.g. because version mismatch in\nserialized format and v8 version), we recompile.\n\nAs part of this work, the deserializer will need to become\nmore resilient to invalid input data, and fail graciously\nrather than CHECK-ing. This CL addresses some of that,\nsufficient to unblock the current serialization tests.\nSubsequent CLs will add more testing and the appropriate\nfixes.\n\nBUG=639090\n\nReview-Url: https://codereview.chromium.org/2395793003\nCr-Commit-Position: refs/heads/master@{#40058}\n","milestone":56},{"_id":"4b575dfceff4575ddd5ba0c74089c127d9b68c4f","author":{"name":"alph","email":"alph@chromium.org","time":"Thu Oct 06 18:14:03 2016"},"commit":"4b575dfceff4575ddd5ba0c74089c127d9b68c4f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Oct 06 18:14:24 2016"},"message":"[profiler] Tracing-based CPU profiler.\n\nA new V8 API object v8::TracingCpuProfiler is introduced.\nClient can create it on an isolate to enable JS CPU profiles collected\nduring tracing session.\n\nOnce the v8.cpu_profile2 tracing category is enabled the profiler emits\nCpuProfile and CpuProfileChunk events with the profile data.\n\nBUG=chromium:406277\n\nReview-Url: https://codereview.chromium.org/2396733002\nCr-Commit-Position: refs/heads/master@{#40054}\n","milestone":56},{"_id":"eeaa239889796116ea2155b1b37c183b6a536b06","author":{"name":"hablich","email":"hablich@chromium.org","time":"Thu Oct 06 13:22:46 2016"},"commit":"eeaa239889796116ea2155b1b37c183b6a536b06","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Oct 06 13:22:54 2016"},"message":"Update version to 5.6\n\nTBR=machenbach@chromium.org\nNOTREECHECKS=true\nNOTRY=true\n\nReview-Url: https://codereview.chromium.org/2397153002\nCr-Commit-Position: refs/heads/master@{#40037}\n","milestone":56},{"_id":"b98b2190bf24960388760146c771fa94b4860ac0","author":{"name":"Brad Nelson","email":"bradnelson@chromium.org","time":"Wed Feb 22 22:23:38 2017"},"commit":"b98b2190bf24960388760146c771fa94b4860ac0","committer":{"name":"Brad Nelson","email":"bradnelson@chromium.org","time":"Wed Feb 22 22:23:38 2017"},"message":"Merged: [wasm] Embedder can control what buffers wasm compilation works on.\n\nRevision: b40d44ecc1ea662ea6d30d703cf1820cea9ee190\n\nBUG=v8:5981\nLOG=N\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=mtrofin@chromium.org\n\nReview-Url: https://codereview.chromium.org/2709613008 .\nCr-Commit-Position: refs/branch-heads/5.7@{#130}\nCr-Branched-From: 975e9a320b6eaf9f12280c35df98e013beb8f041-refs/heads/5.7.492@{#1}\nCr-Branched-From: 8d76f0e3465a84bbf0bceab114900fbe75844e1f-refs/heads/master@{#42426}\n","milestone":57},{"_id":"d84f2b2b7ee3cb94afd1d539e5ebdbaa29e5b26c","author":{"name":"yukishiino","email":"yukishiino@chromium.org","time":"Mon Feb 13 12:34:32 2017"},"commit":"d84f2b2b7ee3cb94afd1d539e5ebdbaa29e5b26c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 13 12:34:32 2017"},"message":"Merged: Exposes Symbol.toPrimitive in C++ APIs as Symbol::GetToPrimitive.\n\nRevision: 34bee46b0be6afc06f254ec0debd4b868443a649\n\nBUG=chromium:680409\nLOG=N\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nR=hablich@chronium.org\n\nReview-Url: https://codereview.chromium.org/2692823002\nCr-Commit-Position: refs/branch-heads/5.7@{#98}\nCr-Branched-From: 975e9a320b6eaf9f12280c35df98e013beb8f041-refs/heads/5.7.492@{#1}\nCr-Branched-From: 8d76f0e3465a84bbf0bceab114900fbe75844e1f-refs/heads/master@{#42426}\n","milestone":57},{"_id":"2bff49cc617da075d13f2433579f3a97d5f0dd7c","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Jan 19 16:07:54 2017"},"commit":"2bff49cc617da075d13f2433579f3a97d5f0dd7c","committer":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Thu Jan 19 16:07:54 2017"},"message":"Merged: Fix version string\n\nRevision: 4cf44599ebad\n\nBUG=chromium:581766\nLOG=N\nNOTRY=true\nNOPRESUBMIT=true\nNOTREECHECKS=true\nTBR=machenbach@chromium.org\n\nReview-Url: https://codereview.chromium.org/2639213005 .\nCr-Commit-Position: refs/branch-heads/5.7@{#10}\nCr-Branched-From: 975e9a320b6eaf9f12280c35df98e013beb8f041-refs/heads/5.7.492@{#1}\nCr-Branched-From: 8d76f0e3465a84bbf0bceab114900fbe75844e1f-refs/heads/master@{#42426}\n","milestone":57},{"_id":"3e4c170bc7f0f8ceb73fee904d83a253b1cb7c99","author":{"name":"daniel.bevenius","email":"daniel.bevenius@gmail.com","time":"Mon Jan 16 14:53:28 2017"},"commit":"3e4c170bc7f0f8ceb73fee904d83a253b1cb7c99","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jan 16 14:53:28 2017"},"message":"Updating comment changing bevavior -> behavior\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2187383002\nCr-Commit-Position: refs/heads/master@{#42378}\n","milestone":57},{"_id":"57a87a52700deffdcb89d19de4d5163c4e6878fd","author":{"name":"scottmg","email":"scottmg@chromium.org","time":"Fri Jan 13 16:53:39 2017"},"commit":"57a87a52700deffdcb89d19de4d5163c4e6878fd","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 13 16:53:39 2017"},"message":"Don't qualify #include in include/\n\nFollowup to https://codereview.chromium.org/2621983002/ so that\nv8-version-string.h is includeable with varying include search paths.\nThis seems to match the pattern of other #includes in the include/\ndirectory.\n\nR=machenbach@chromium.org\nBUG=chromium:581766\n\nReview-Url: https://codereview.chromium.org/2634443002\nCr-Commit-Position: refs/heads/master@{#42337}\n","milestone":57},{"_id":"ffc0931f879b5aeb48490d1ff34f710b45462e11","author":{"name":"scottmg","email":"scottmg@chromium.org","time":"Thu Jan 12 20:51:37 2017"},"commit":"ffc0931f879b5aeb48490d1ff34f710b45462e11","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 12 20:51:37 2017"},"message":"Pull define for version out into v8-version-string.h and separate build target\n\nThis is part of removing the dependency of the Chromium browser DLL on\nWindows on V8.\n\nR=jochen@chromium.org\nBUG=chromium:581766\n\nReview-Url: https://codereview.chromium.org/2621983002\nCr-Original-Commit-Position: refs/heads/master@{#42243}\nCommitted: https://chromium.googlesource.com/v8/v8/+/45938454177f53fa24cfc08ad97ccbc162c3ba6d\nReview-Url: https://codereview.chromium.org/2621983002\nCr-Commit-Position: refs/heads/master@{#42289}\n","milestone":57},{"_id":"e00eae9e89dba96c523fec1ab5a60714ecb23567","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Thu Jan 12 14:02:21 2017"},"commit":"e00eae9e89dba96c523fec1ab5a60714ecb23567","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 12 14:02:21 2017"},"message":"[api] Mark functions related to object grouping as DEPRECATE_SOON\n\nEmbedders should use the EmbedderHeapTracer API.\n\nBUG=v8:5828\n\nReview-Url: https://codereview.chromium.org/2628893003\nCr-Commit-Position: refs/heads/master@{#42269}\n","milestone":57},{"_id":"9cd0de73dc920f7c75cb0f3aa55405701d43cae3","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Jan 12 12:25:58 2017"},"commit":"9cd0de73dc920f7c75cb0f3aa55405701d43cae3","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 12 12:25:58 2017"},"message":"[serializer] change internal field callbacks to take data pointer.\n\nR=jochen@chromium.org, peria@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2628093003\nCr-Commit-Position: refs/heads/master@{#42268}\n","milestone":57},{"_id":"81c62e070b8656432899fc17b46b882bfcf1d59a","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Jan 12 11:33:51 2017"},"commit":"81c62e070b8656432899fc17b46b882bfcf1d59a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 12 11:33:51 2017"},"message":"Do security checks in the promise constructor\n\nSince we only can do limited checks during microtask execution, do the\nchecks before actually creating a promise\n\nBUG=chromium:658194\nR=bmeurer@chromium.org,gsathya@chromium.org\n\nReview-Url: https://codereview.chromium.org/2628863002\nCr-Commit-Position: refs/heads/master@{#42265}\n","milestone":57},{"_id":"45938454177f53fa24cfc08ad97ccbc162c3ba6d","author":{"name":"scottmg","email":"scottmg@chromium.org","time":"Wed Jan 11 18:40:53 2017"},"commit":"45938454177f53fa24cfc08ad97ccbc162c3ba6d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 11 18:40:53 2017"},"message":"Pull define for version out into v8-version.h and separate build target\n\nThis is part of removing the dependency of the Chromium browser DLL on\nWindows on V8.\n\nR=jochen@chromium.org\nBUG=chromium:581766\n\nReview-Url: https://codereview.chromium.org/2621983002\nCr-Commit-Position: refs/heads/master@{#42243}\n","milestone":57},{"_id":"ec45e6ed2e11698c713e664b1510bc31bcdbbdba","author":{"name":"jkummerow","email":"jkummerow@chromium.org","time":"Wed Jan 11 14:59:35 2017"},"commit":"ec45e6ed2e11698c713e664b1510bc31bcdbbdba","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 11 14:59:35 2017"},"message":"Internalize strings in-place (reland^2)\n\nusing newly introduced ThinStrings, which store a pointer to the actual,\ninternalized string they represent.\n\nBUG=v8:4520\n\n(Previously landed as #42168 / af51befe694f)\n(Previously landed as #42193 / 4c699e349a49)\n\nReview-Url: https://codereview.chromium.org/2549773002\nCr-Commit-Position: refs/heads/master@{#42235}\n","milestone":57},{"_id":"0befccd21b2634b841bcec11c51743c50d169796","author":{"name":"rdevlin.cronin","email":"rdevlin.cronin@chromium.org","time":"Wed Jan 11 14:48:24 2017"},"commit":"0befccd21b2634b841bcec11c51743c50d169796","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 11 14:48:24 2017"},"message":"Update MessageCallback typedef Value name\n\nThe Local<Value> in the MessageCallback typedef is named \"error\", but\nshould be \"data\" - it's referred to as \"data\" everywhere else, and\nthat seems to be the canonical name for a curried-in value.\n\nBUG=None\n\nReview-Url: https://codereview.chromium.org/2621163003\nCr-Commit-Position: refs/heads/master@{#42234}\n","milestone":57},{"_id":"18104fac86ed56ab21843e3e628f33aab92b1c4a","author":{"name":"ulan","email":"ulan@chromium.org","time":"Wed Jan 11 13:46:27 2017"},"commit":"18104fac86ed56ab21843e3e628f33aab92b1c4a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 11 13:46:27 2017"},"message":"[heap] Add API function for checking if the heap limit was increased\nfor debugging. This function is needed to pass increased heap limit\nfrom the main DevTools isolate to the worker isolates it spawns.\n\nBUG=chromium:675911\n\nReview-Url: https://codereview.chromium.org/2624973003\nCr-Commit-Position: refs/heads/master@{#42228}\n","milestone":57},{"_id":"a8cfc2f5e49a40f134ac342ae0cf629df494e6ce","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Jan 11 11:59:54 2017"},"commit":"a8cfc2f5e49a40f134ac342ae0cf629df494e6ce","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 11 11:59:54 2017"},"message":"[debugger] deprecate v8::Debug:GetDebugContext.\n\nR=jgruber@chromium.org\nBUG=v8:5530\n\nReview-Url: https://codereview.chromium.org/2589203002\nCr-Original-Commit-Position: refs/heads/master@{#41911}\nCommitted: https://chromium.googlesource.com/v8/v8/+/381082168d37d4f2794360ae31dc078f2a350113\nReview-Url: https://codereview.chromium.org/2589203002\nCr-Commit-Position: refs/heads/master@{#42220}\n","milestone":57},{"_id":"4c699e349a4986b28574b3a51e8780e3a3d067b1","author":{"name":"jkummerow","email":"jkummerow@chromium.org","time":"Tue Jan 10 19:08:58 2017"},"commit":"4c699e349a4986b28574b3a51e8780e3a3d067b1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jan 10 19:08:58 2017"},"message":"Internalize strings in-place (reland)\n\nusing newly introduced ThinStrings, which store a pointer to the actual,\ninternalized string they represent.\n\nBUG=v8:4520\n\n(Previously landed as #42168 / af51befe694f.\n\nReview-Url: https://codereview.chromium.org/2549773002\nCr-Commit-Position: refs/heads/master@{#42193}\n","milestone":57},{"_id":"af51befe694fe039db3554d4b9165f7d6baceb77","author":{"name":"jkummerow","email":"jkummerow@chromium.org","time":"Tue Jan 10 10:58:03 2017"},"commit":"af51befe694fe039db3554d4b9165f7d6baceb77","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jan 10 10:58:03 2017"},"message":"Internalize strings in-place\n\nusing newly introduced ThinStrings, which store a pointer to the actual,\ninternalized string they represent.\n\nBUG=v8:4520\n\nReview-Url: https://codereview.chromium.org/2549773002\nCr-Commit-Position: refs/heads/master@{#42168}\n","milestone":57},{"_id":"09167bf6cd4aaa321803eb8f4261295840e89730","author":{"name":"cbruni","email":"cbruni@chromium.org","time":"Mon Jan 09 13:40:51 2017"},"commit":"09167bf6cd4aaa321803eb8f4261295840e89730","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jan 09 13:40:51 2017"},"message":"Add Object::IsNullOrUndefined(Isolate*) helper method\n\nThe pattern IsNull(isolate) || IsUndefined(isolate) is used in many places all\nover the code base.\n\nReview-Url: https://codereview.chromium.org/2601503002\nCr-Commit-Position: refs/heads/master@{#42138}\n","milestone":57},{"_id":"081193d5b14a1481849d9bb4ada45e3c39bb1075","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Jan 09 10:12:04 2017"},"commit":"081193d5b14a1481849d9bb4ada45e3c39bb1075","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jan 09 10:12:04 2017"},"message":"[serializer] pass internal fields deserializer callback as argument.\n\nBackground to this is that blink needs to be able to pass different internal\nfields deserialization callbacks for individual to-be-deserialized contexts.\n\nR=jochen@chromium.org, peria@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2619203002\nCr-Commit-Position: refs/heads/master@{#42132}\n","milestone":57},{"_id":"f81590a1c8344cf87e72e312722abe0b35d9601f","author":{"name":"rdevlin.cronin","email":"rdevlin.cronin@chromium.org","time":"Wed Jan 04 17:07:07 2017"},"commit":"f81590a1c8344cf87e72e312722abe0b35d9601f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 04 17:07:07 2017"},"message":"Remove unnecessary v8:: prefixes in include/v8.h\n\nRemove a bunch of unnecessary v8:: prefixes in include/v8.h.\nSome are still necessary for disambiguation purposes (e.g., between\nbool Value() and v8::Value, or between v8::Isolate and\nv8::internal::Isolate), but many aren't.\n\nBUG=None\n\nReview-Url: https://codereview.chromium.org/2605103003\nCr-Commit-Position: refs/heads/master@{#42071}\n","milestone":57},{"_id":"534ddf645be293800ab0bd7107b307f668ac8d5b","author":{"name":"binji","email":"binji@chromium.org","time":"Tue Jan 03 22:52:17 2017"},"commit":"534ddf645be293800ab0bd7107b307f668ac8d5b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jan 03 22:52:17 2017"},"message":"Disallow passing a SharedArrayBuffer in the transfer list.\n\nThis behavior changed recently. SharedArrayBuffers should not be put in the\ntransfer list, because they are not detached, and that is the meaning of being\nin the transfer list.\n\nThis is the V8 side of the change, the Blink side will come next.\n\nReland of https://codereview.chromium.org/2570433005, it was reverted because\nof a Blink-side test failure which has been temporarily disabled; see\nhttps://codereview.chromium.org/2590003002.\n\nBUG=https://bugs.chromium.org/p/chromium/issues/detail?id=676063\n\nReview-Url: https://codereview.chromium.org/2594793005\nCr-Commit-Position: refs/heads/master@{#42054}\n","milestone":57},{"_id":"1795343f3c0ff1f43bdde3e5f16cd65c0882ae67","author":{"name":"jochen","email":"jochen@chromium.org","time":"Tue Jan 03 08:41:40 2017"},"commit":"1795343f3c0ff1f43bdde3e5f16cd65c0882ae67","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jan 03 08:41:40 2017"},"message":"Add support for idle tasks to the default platform\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2609833003\nCr-Commit-Position: refs/heads/master@{#42022}\n","milestone":57},{"_id":"224d3764e52fd4df91ece9274cee1305c3677286","author":{"name":"jbarboza","email":"jbarboza@ca.ibm.com","time":"Wed Dec 28 18:48:28 2016"},"commit":"224d3764e52fd4df91ece9274cee1305c3677286","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Dec 28 18:48:28 2016"},"message":"abort in delete operators that shouldn't be called\n\nSection 3.2 of the C++ standard states that destructor definitions\nimplicitly \"use\" operator delete functions. Therefore, these operator\ndelete functions must be defined even if they are never called by\nuser code explicitly.\nhttp://www.open-std.org/JTC1/SC22/WG21/docs/cwg_defects.html#261\n\ngcc allows them to remain as empty definitions. However, not all\ncompilers allow this. (e.g. xlc on zOS)\n\nThis pull request creates definitions which if ever called, result\nin an abort.\n\nR=danno@chromium.org,jochen@chromium.org\nBUG=\nLOG=N\n\nReview-Url: https://codereview.chromium.org/2588433002\nCr-Commit-Position: refs/heads/master@{#41981}\n","milestone":57},{"_id":"bf9e013bbc52f8fb3040a15fb71c8abfc0c15de7","author":{"name":"bakkot","email":"bakkot@gmail.com","time":"Tue Dec 27 17:48:40 2016"},"commit":"bf9e013bbc52f8fb3040a15fb71c8abfc0c15de7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 27 17:48:40 2016"},"message":"[counters] Add UseCounters for 'f() = 0' syntax\n\nThis syntax was formerly legal per ECMAScript, but has been a\nSyntaxError for some time now. V8 deviates from spec in that it\nis instead a runtime error; we'd like to know if we can get\naway with removing it (at least in sloppy mode) or if the spec\nshould be changed.\n\nc.f. https://github.com/tc39/ecma262/issues/257#issuecomment-195106880\n\nAlso add self to authors file\n\nBUG=v8:4480\n\nReview-Url: https://codereview.chromium.org/2599253002\nCr-Commit-Position: refs/heads/master@{#41960}\n","milestone":57},{"_id":"d6c66dbce610713fc96edc94e6a7036a7ef6c695","author":{"name":"ulan","email":"ulan@chromium.org","time":"Tue Dec 27 13:29:58 2016"},"commit":"d6c66dbce610713fc96edc94e6a7036a7ef6c695","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 27 13:29:58 2016"},"message":"[heap] New API for increasing the heap limit for debugging.\n\nBUG=chromium:675911\n\nReview-Url: https://codereview.chromium.org/2593043002\nCr-Commit-Position: refs/heads/master@{#41957}\n","milestone":57},{"_id":"381082168d37d4f2794360ae31dc078f2a350113","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Dec 22 07:04:01 2016"},"commit":"381082168d37d4f2794360ae31dc078f2a350113","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Dec 22 07:04:01 2016"},"message":"[debugger] deprecate v8::Debug:GetDebugContext.\n\nR=jgruber@chromium.org\nBUG=v8:5530\n\nReview-Url: https://codereview.chromium.org/2589203002\nCr-Commit-Position: refs/heads/master@{#41911}\n","milestone":57},{"_id":"28432588c231019c2bb0dfbba8eba4304779706b","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Tue Dec 20 12:13:29 2016"},"commit":"28432588c231019c2bb0dfbba8eba4304779706b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 20 12:13:29 2016"},"message":"[api] add API for Promise status and result.\n\nCurrently, to find out a Promise's status and result, one has to use the\ndebug context. This is for example done in Node.js. This new API is a\nbetter replacement, also in the context of the debug context being\ndeprecated eventually.\n\nR=franzih@chromium.org, gsathya@chromium.org, jochen@chromium.org\nBUG=v8:5764\n\nReview-Url: https://codereview.chromium.org/2589113002\nCr-Commit-Position: refs/heads/master@{#41855}\n","milestone":57},{"_id":"c0282f608c381152ce5d3614ebd83ca3263e2de9","author":{"name":"cbruni","email":"cbruni@chromium.org","time":"Mon Dec 19 12:50:30 2016"},"commit":"c0282f608c381152ce5d3614ebd83ca3263e2de9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Dec 19 12:50:30 2016"},"message":"Add unittests to keep InstanceType lists in sync\n\nSTRUCT_LIST and INSTANCE_TYPE_LIST are now forced to have the same order\nas the InstanceType enum.\n\nDrive-by-fix 1: Move type check and cast functions closer together in objects-inl.h\n\nDrive-by-fix 2: Remove unused instance types SIGNATURE_INFO_TYPE and  TYPE_SWITCH_INFO_TYPE.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2578573002\nCr-Commit-Position: refs/heads/master@{#41804}\n","milestone":57},{"_id":"b1c148b91f84d5825c9a52688e71b08fe2be2958","author":{"name":"gsathya","email":"gsathya@chromium.org","time":"Fri Dec 16 19:17:16 2016"},"commit":"b1c148b91f84d5825c9a52688e71b08fe2be2958","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Dec 16 19:17:16 2016"},"message":"[promisehook] Implement PromiseHook\n\nThis adds kInit, kResolve, kBefore and kAfter lifecycle hooks to promises.\n\nThis also exposes an API to set the PromiseHook.\n\nBUG=v8:4643\n\nReview-Url: https://codereview.chromium.org/2575313002\nCr-Commit-Position: refs/heads/master@{#41775}\n","milestone":57},{"_id":"92b370ee642743d4d795536900da7715c73152c9","author":{"name":"mstarzinger","email":"mstarzinger@chromium.org","time":"Fri Dec 16 10:57:06 2016"},"commit":"92b370ee642743d4d795536900da7715c73152c9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Dec 16 10:57:06 2016"},"message":"Introduce {ConstantElementsPair} struct for type safety.\n\nThis introduces an explicit struct for the communication channel between\nthe {ArrayLiteral} AST node and the corresponding runtime methods. Those\nmethods take a pair of {ElementsKind} as well as an array (can either be\na FixedArray or a FixedDoubleArray) of constant values.\n\nFor bonus points it also reduces the size of the involved heap object by\none word (i.e. length field of FixedArray not needed anymore).\n\nR=mvstanton@chromium.org\n\nReview-Url: https://codereview.chromium.org/2581683003\nCr-Commit-Position: refs/heads/master@{#41752}\n","milestone":57},{"_id":"1c5e1504e0305363cd262f1706cbd63f9a62ae46","author":{"name":"binji","email":"binji@chromium.org","time":"Thu Dec 15 23:55:03 2016"},"commit":"1c5e1504e0305363cd262f1706cbd63f9a62ae46","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Dec 15 23:55:03 2016"},"message":"Disallow passing a SharedArrayBuffer in the transfer list.\n\nThis behavior changed recently. SharedArrayBuffers should not be put in the\ntransfer list, because they are not detached, and that is the meaning of being\nin the transfer list.\n\nThis is the V8 side of the change, the Blink side will come next.\n\nReview-Url: https://codereview.chromium.org/2570433005\nCr-Commit-Position: refs/heads/master@{#41740}\n","milestone":57},{"_id":"449829b85ccb8e76ae5b2aafed65606e275a9bd1","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Tue Dec 13 11:24:24 2016"},"commit":"449829b85ccb8e76ae5b2aafed65606e275a9bd1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 13 11:24:58 2016"},"message":"[serializer] API to re-use global proxy in v8::Context::FromSnapshot.\n\nR=jochen@chromium.org, peria@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2571743002\nCr-Commit-Position: refs/heads/master@{#41668}\n","milestone":57},{"_id":"aabbbec67c3c7363ef08c657f2d688ad2e8f7de8","author":{"name":"bradnelson","email":"bradnelson@chromium.org","time":"Mon Dec 12 14:47:56 2016"},"commit":"aabbbec67c3c7363ef08c657f2d688ad2e8f7de8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Dec 12 14:48:50 2016"},"message":"[wasm] [asmjs] Route asm.js warnings to the dev console.\n\nGeneralize Messages to include an error level.\nAdd a parameter to AddMessageHandler to select which error levels to receive, using a mask (default being just errors, i.e. the current behavior).\n\nBUG=v8:4203\nR=dgozman@chromium.org,machenbach@chromium.org,danno@chromium.org,bmeurer@chromium.org,jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/2526703002\nCr-Commit-Position: refs/heads/master@{#41648}\n","milestone":57},{"_id":"222541dff51aba0623edc98bbecb6e1a35d22063","author":{"name":"clemensh","email":"clemensh@chromium.org","time":"Mon Dec 12 12:45:49 2016"},"commit":"222541dff51aba0623edc98bbecb6e1a35d22063","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Dec 12 12:46:02 2016"},"message":"[wasm] Generate correct locations for error messages\n\nThe current logic in Isolate::GetLocationFromStackTrace just ignores\nwasm frames, making the computed location point to the first javascript\nframe, like this:\n\ntest.js:17: RuntimeError: divide by zero\nmodule.exports.main();\n               ^\nRuntimeError: divide by zero\n    at main (<WASM>[1]+5)\n    at test.js:17:16\n\nThis CL not only fixes the location to point to the top-most wasm\nframe, but also exposes to the embedder that the script of that location\nis a wasm script, allowing for custom printing of wasm locations.\nThe Shell::ReportException method now checks for this flag, and prints\nwasm locations like this:\n\n<WASM>[0]+5: RuntimeError: divide by zero\nRuntimeError: divide by zero\n    at main (<WASM>[0]+5)\n    at test/message/wasm-trap.js:15:16\n\nR=titzer@chromium.org, yangguo@chromium.org\nBUG=chromium:613110\n\nReview-Url: https://codereview.chromium.org/2563673002\nCr-Commit-Position: refs/heads/master@{#41640}\n","milestone":57},{"_id":"98b563ebf3fe39740970416691d8220c91cf599e","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Dec 08 12:44:29 2016"},"commit":"98b563ebf3fe39740970416691d8220c91cf599e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Dec 08 12:45:05 2016"},"message":"[serializer] include global proxy in additional context snapshots.\n\nAside from the default snapshot, there is no need for additional context\nsnapshots to have the ability to replace the global proxy and global object\nafter deserialization. Changes include:\n - Changes to the API to better distinguish default context snapshot from\n   additional context snapshots.\n - Disallow global handles when creating snapshots.\n - Allow extensions when creating snapshots.\n\nThis solves the issue of not being able to having accessors and interceptors on\nthe global object of contexts to be serialized.\n\nR=jochen@chromium.org, peria@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2557743003\nCr-Commit-Position: refs/heads/master@{#41588}\n","milestone":57},{"_id":"39e6f2ca4a2bdc39bd0291db944f0728bd527c5c","author":{"name":"ishell","email":"ishell@chromium.org","time":"Fri Dec 02 10:03:18 2016"},"commit":"39e6f2ca4a2bdc39bd0291db944f0728bd527c5c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Dec 02 10:03:33 2016"},"message":"[ic] Use validity cells to protect keyed element stores against object's prototype chain modifications.\n\n... instead of clearing of all the KeyedStoreICs which didn't always work.\n\nBUG=chromium:662907, chromium:669411, v8:5561\nTBR=verwaest@chromium.org, bmeurer@chromium.org\n\nCommitted: https://crrev.com/a39522f44f7e0be4686831688917e9675255dcaf\nReview-Url: https://codereview.chromium.org/2534613002\nCr-Original-Commit-Position: refs/heads/master@{#41332}\nCr-Commit-Position: refs/heads/master@{#41449}\n","milestone":57},{"_id":"1a6dae8070ee6ddb3f676acf3a0dac40871182e4","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Fri Dec 02 09:01:37 2016"},"commit":"1a6dae8070ee6ddb3f676acf3a0dac40871182e4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Dec 02 09:02:01 2016"},"message":"[debug] Partial reland of debug API deprecation\n\nThis relands API deprecation (without removing the implementation),\nremoval of NewFunction and BeforeCompile events, and removal of\nDebugCommandProcessor tests.\n\nThe remaining portion of the original CLs can be relanded after the 4.7\nbranch point.\n\nOriginal CLs:\n\nhttps://codereview.chromium.org/2524323002\nhttps://codereview.chromium.org/2531543002\n\nBUG=v8:5510\n\nReview-Url: https://codereview.chromium.org/2546473008\nCr-Commit-Position: refs/heads/master@{#41446}\n","milestone":57},{"_id":"4292f32ed37f16d5a5196a79268d52738aa68d55","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Thu Dec 01 13:34:25 2016"},"commit":"4292f32ed37f16d5a5196a79268d52738aa68d55","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Dec 01 13:34:45 2016"},"message":"[debug] Revert debug API removal\n\nDebugging API is still in use by Node.\n\nRevert \"[debug] remove deprecated debug command message queue.\"\nThis reverts commit abdbfc953d8d3b7cece335b9b56a323a8bd52ec4.\n\nRevert \"[debug] mark more unused debug API as deprecated.\"\nThis reverts commit d5ada19ce71f4fd74d0501966fbc2009c81c6573.\n\nBUG=v8:5530\n\nReview-Url: https://codereview.chromium.org/2537313005\nCr-Commit-Position: refs/heads/master@{#41427}\n","milestone":57},{"_id":"d385ed069bb7b3759b6237f380f8585f16674f39","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Tue Nov 29 19:31:05 2016"},"commit":"d385ed069bb7b3759b6237f380f8585f16674f39","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Nov 29 19:31:23 2016"},"message":"[inspector] removed old v8_inspector::Channel API\n\nBUG=chromium:350797\nR=dgozman@chromium.org\nTBR=yangguo@chromium.org\n\nReview-Url: https://codereview.chromium.org/2527473004\nCr-Commit-Position: refs/heads/master@{#41371}\n","milestone":57},{"_id":"85321456cd1c52575babad6c9c7a1f6869087882","author":{"name":"cbruni","email":"cbruni@chromium.org","time":"Tue Nov 29 10:13:47 2016"},"commit":"85321456cd1c52575babad6c9c7a1f6869087882","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Nov 29 10:14:18 2016"},"message":"[api] Support sharing prototypes between FunctionTemplates\n\nFunctionTemplateInfo::SetPrototypeProviderTemplate adds support for sharing\nprototypes between several function templates. This is used to properly set up\nImage.prototype and HTMLImageElement.protoype which should be equal according\nto the spec.\n\nBUG=chromium:2969\n\nReview-Url: https://codereview.chromium.org/2531653002\nCr-Commit-Position: refs/heads/master@{#41343}\n","milestone":57},{"_id":"a39522f44f7e0be4686831688917e9675255dcaf","author":{"name":"ishell","email":"ishell@chromium.org","time":"Mon Nov 28 22:56:35 2016"},"commit":"a39522f44f7e0be4686831688917e9675255dcaf","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Nov 28 22:56:52 2016"},"message":"[ic] Use validity cells to protect keyed element stores against object's prototype chain modifications.\n\n... instead of clearing of all the KeyedStoreICs which didn't always work.\n\nBUG=chromium:662907, v8:5561\nTBR=verwaest@chromium.org, bmeurer@chromium.org\n\nReview-Url: https://codereview.chromium.org/2534613002\nCr-Commit-Position: refs/heads/master@{#41332}\n","milestone":57},{"_id":"4c9f56d90a6c36fee2a097061fbab107e5723955","author":{"name":"adamk","email":"adamk@chromium.org","time":"Mon Nov 28 21:43:26 2016"},"commit":"4c9f56d90a6c36fee2a097061fbab107e5723955","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Nov 28 21:44:04 2016"},"message":"[api] Remove \"experimental\" comments from ES6 features in v8.h\n\nR=jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/2473153004\nCr-Commit-Position: refs/heads/master@{#41329}\n","milestone":57},{"_id":"d5ada19ce71f4fd74d0501966fbc2009c81c6573","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Fri Nov 25 09:10:51 2016"},"commit":"d5ada19ce71f4fd74d0501966fbc2009c81c6573","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Nov 25 09:11:04 2016"},"message":"[debug] mark more unused debug API as deprecated.\n\nR=jgruber@chromium.org\nBUG=v8:5510\n\nReview-Url: https://codereview.chromium.org/2531543002\nCr-Commit-Position: refs/heads/master@{#41283}\n","milestone":57},{"_id":"abdbfc953d8d3b7cece335b9b56a323a8bd52ec4","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Nov 24 12:55:52 2016"},"commit":"abdbfc953d8d3b7cece335b9b56a323a8bd52ec4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 24 12:56:21 2016"},"message":"[debug] remove deprecated debug command message queue.\n\nR=jgruber@chromium.org\nBUG=v8:5510\n\nReview-Url: https://codereview.chromium.org/2524323002\nCr-Commit-Position: refs/heads/master@{#41259}\n","milestone":57},{"_id":"81a64aa5488602e4643f1ecc3beeddb8828a853c","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Nov 24 10:43:00 2016"},"commit":"81a64aa5488602e4643f1ecc3beeddb8828a853c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 24 10:43:22 2016"},"message":"[debug] remove JSON debug protocol related tests.\n\nIn most cases we can use the debug event listener as alternative.\nMultithreaded tests are obsolete.\n\nR=jgruber@chromium.org\nBUG=v8:5510\n\nReview-Url: https://codereview.chromium.org/2529883002\nCr-Commit-Position: refs/heads/master@{#41256}\n","milestone":57},{"_id":"eb3551d0a34dcc64abe871b79e9da1b19516a428","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Wed Nov 23 00:45:30 2016"},"commit":"eb3551d0a34dcc64abe871b79e9da1b19516a428","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Nov 23 00:45:54 2016"},"message":"Roll third_party/inspector_protocol to 4ad35c45aca9834b67ec2cb152c816ea1b7ceb48\n\nThis roll includes:\n  - [inspector_protocol] Introduce protocol::Serializable [1]\n\n[1] https://codereview.chromium.org/2526603002\n\nBUG=chromium:350797\nR=dgozman@chromium.org\n\nReview-Url: https://codereview.chromium.org/2523583005\nCr-Commit-Position: refs/heads/master@{#41197}\n","milestone":57},{"_id":"21091c327b0fa84270b968cd6c102844c29f5615","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Tue Nov 22 03:45:33 2016"},"commit":"21091c327b0fa84270b968cd6c102844c29f5615","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Nov 22 03:46:05 2016"},"message":"[inspector] removed deprecated ScriptOrigin cstor with is_embedder_debug_script\n\nBUG=none\nR=yangguo@chromium.org\n\nReview-Url: https://codereview.chromium.org/2505823002\nCr-Commit-Position: refs/heads/master@{#41162}\n","milestone":57},{"_id":"afd49054ac89d36060a9cdb250e400583513e2ac","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Thu Nov 17 16:50:41 2016"},"commit":"afd49054ac89d36060a9cdb250e400583513e2ac","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 17 16:51:23 2016"},"message":"[inspector] removed embbeder debugger script flag\n\nAfter moving inspector from blink to V8, inspector can use DebugInterface to compile and mark internal scripts.\n\nBUG=v8:5530\nR=yangguo@chromium.org\n\nReview-Url: https://codereview.chromium.org/2502173002\nCr-Commit-Position: refs/heads/master@{#41087}\n","milestone":57},{"_id":"541c36c00ea3960d026af743e68c105928ce921d","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Thu Nov 17 15:14:42 2016"},"commit":"541c36c00ea3960d026af743e68c105928ce921d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 17 15:15:22 2016"},"message":"Updated version to 5.7\n\nBUG=\nTBR=machenbach@chromium.org\nNOTRY=true\n\nReview-Url: https://codereview.chromium.org/2515443002\nCr-Commit-Position: refs/heads/master@{#41080}\n","milestone":57},{"_id":"0d258b35c8698d5be5f01f3fb5693ac5b42efb27","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Nov 17 06:41:44 2016"},"commit":"0d258b35c8698d5be5f01f3fb5693ac5b42efb27","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 17 06:42:23 2016"},"message":"[api] deprecate v8::Function::IsBuiltin.\n\nR=jochen@chromium.org, kozyatinskiy@chromium.org\n\nReview-Url: https://codereview.chromium.org/2510633002\nCr-Commit-Position: refs/heads/master@{#41060}\n","milestone":57},{"_id":"c668dfb3c38e0efcab923d8381e60f67a5cbb4c0","author":{"name":"bjaideep","email":"bjaideep@ca.ibm.com","time":"Mon Aug 29 14:52:49 2016"},"commit":"c668dfb3c38e0efcab923d8381e60f67a5cbb4c0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Aug 29 14:53:40 2016"},"message":"Merged: AIX: Fix to get more accurate Thread's CPU time\n\nRevision: 3361b7fd44f06dc1dc0569a326fb0ba3e0b41588\n\nR=hablich@chromium.org, lpy@chromium.org\n\nBUG=\nNOTRY=true\nNOPRESUBMIT=true\n\nReview-Url: https://codereview.chromium.org/2273403002\nCr-Commit-Position: refs/branch-heads/5.3@{#54}\nCr-Branched-From: 820a23aade5e74a92d794e05a0c2b3597f0da4b5-refs/heads/5.3.332@{#2}\nCr-Branched-From: 37538cb2c1b4d75c41af386cb4fedbe5566f5608-refs/heads/master@{#37308}\n","milestone":53},{"_id":"c34cc7a6ff20d7fb5a6ae1e7327278d3eb12e688","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Jun 27 11:48:04 2016"},"commit":"c34cc7a6ff20d7fb5a6ae1e7327278d3eb12e688","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jun 27 11:49:09 2016"},"message":"Optionally invoke an interceptor on failed access checks\n\nThis superseeds all-can-read/all-can-write properties\n\nBUG=chromium:618305\nR=verwaest@chromium.org\n\nReview-Url: https://codereview.chromium.org/2087823002\nCr-Commit-Position: refs/heads/master@{#37286}\n","milestone":53},{"_id":"b2ce1fa20cd741bc4a63f888ea55291b0a5be620","author":{"name":"bakkot","email":"bakkot@google.com","time":"Fri Jun 24 22:03:52 2016"},"commit":"b2ce1fa20cd741bc4a63f888ea55291b0a5be620","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jun 24 22:05:03 2016"},"message":"add use counters for __defineGetter__ failing\n\nWe deviate from spec in that, in our implementation, __defineGetter__ on non-\nconfigurable properties returns false instead of throwing a TypeError. This commit\nadds a use counter to track how often we would be throwing an error we currently\navoid, to determine if we can change to align with spec or if the spec is not\nimplementable.\n\nBUG=v8:5070\n\nReview-Url: https://codereview.chromium.org/2089533002\nCr-Commit-Position: refs/heads/master@{#37259}\n","milestone":53},{"_id":"815da79694218031e8219a4bef037e9499cffe2a","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Wed Jun 22 15:01:44 2016"},"commit":"815da79694218031e8219a4bef037e9499cffe2a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 22 15:05:18 2016"},"message":"Use gender neutral terms\n\nBUG=\nLOG=no\n\nReview-Url: https://codereview.chromium.org/2085043005\nCr-Commit-Position: refs/heads/master@{#37192}\n","milestone":53},{"_id":"c7715c2fbee025f69acc539f8620b7d423d5c3e8","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Jun 22 10:18:42 2016"},"commit":"c7715c2fbee025f69acc539f8620b7d423d5c3e8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 22 10:20:45 2016"},"message":"Add HasOwnProperty with array indexes\n\nThis way embedders don't have to manually convert them to strings\n\nBUG=chromium:619166\nR=verwaest@chromium.org\n\nReview-Url: https://codereview.chromium.org/2085223002\nCr-Commit-Position: refs/heads/master@{#37179}\n","milestone":53},{"_id":"706b3f2730729f80686ad4a3228b860a13627afd","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Tue Jun 21 09:25:08 2016"},"commit":"706b3f2730729f80686ad4a3228b860a13627afd","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jun 21 09:26:53 2016"},"message":"[heap] Internalize kExternalAllocationLimit\n\nBase the fast-path in AdjustAmountOfExternalMemory on a value + limit. To\npreserve the behavior the limit is just set using kExternalAllocationLimit.\n\nRedo naming of related members.\n\nR=jochen@chromium.org\nBUG=chromium:621829\nLOG=N\n\nReview-Url: https://codereview.chromium.org/2085893002\nCr-Commit-Position: refs/heads/master@{#37131}\n","milestone":53},{"_id":"c5ae5bb16ba7c1c767f6920df7f22b6e6a4c8f6a","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Tue Jun 21 05:08:38 2016"},"commit":"c5ae5bb16ba7c1c767f6920df7f22b6e6a4c8f6a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jun 21 05:10:50 2016"},"message":"[snapshot] support including templates in the snapshot.\n\nR=jochen@chromium.org, verwaest@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2076083002\nCr-Commit-Position: refs/heads/master@{#37122}\n","milestone":53},{"_id":"0b177bc06cb1c2f6ea01d107f1cba5d810ade4d7","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Jun 20 15:28:06 2016"},"commit":"0b177bc06cb1c2f6ea01d107f1cba5d810ade4d7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jun 20 15:28:26 2016"},"message":"[snapshot] serialize embedder-provided external references.\n\nR=jochen@chromium.org, vogelheim@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2066993004\nCr-Commit-Position: refs/heads/master@{#37109}\n","milestone":53},{"_id":"eaafd900e9dbe1e82cd4d690db7434be76606dac","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Fri Jun 17 10:25:10 2016"},"commit":"eaafd900e9dbe1e82cd4d690db7434be76606dac","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jun 17 10:25:47 2016"},"message":"Introduce EmbedderHeapTracer::EnterFinalPause()\n\nI need this method because of ActiveScriptWrappables, which have to be processed\nat the atomic pause even for incremental solution, as there is no other way of\ndetecting when an object starts or stops being active than querying it.\n\nLOG=no\nBUG=468240\n\nReview-Url: https://codereview.chromium.org/2065833003\nCr-Commit-Position: refs/heads/master@{#37062}\n","milestone":53},{"_id":"533453f9290b5668097f8db5362407f6e73a1d18","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Jun 15 15:38:40 2016"},"commit":"533453f9290b5668097f8db5362407f6e73a1d18","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 15 15:39:06 2016"},"message":"[snapshot] support multiple contexts in the same snapshot.\n\nR=jochen@chromium.org, vogelheim@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2055203002\nCr-Commit-Position: refs/heads/master@{#37008}\n","milestone":53},{"_id":"ac1587bb86708d800f8e7bd9a2d30f4c04c6f964","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Mon Jun 13 17:13:03 2016"},"commit":"ac1587bb86708d800f8e7bd9a2d30f4c04c6f964","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jun 13 17:15:30 2016"},"message":"Move EmbedderHeapTracer::TracePrologue call to the beginning of full gc\n\nWith cl https://codereview.chromium.org/2043033002 blink will add new wrappers\nto its marking deque (and maintain this deque) so black allocated wrappers are\nnot a problem anymore. To limit the scope of when blink has to detect wrappers,\nwe need to tell blink when we start and when we end full gcs. For that we can\nnicely use TracePrologue and TraceEpilogue.\n\nLOG=no\nBUG=468240\n\nReview-Url: https://codereview.chromium.org/2051103002\nCr-Commit-Position: refs/heads/master@{#36937}\n","milestone":53},{"_id":"e5760c08086d7d0de9144ca549b824846d718da9","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Fri Jun 10 05:44:23 2016"},"commit":"e5760c08086d7d0de9144ca549b824846d718da9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jun 10 05:47:47 2016"},"message":"[snapshot] introduce SnapshotCreator API.\n\nAnd use it to implement existing the existing snapshot API.\n\nR=jochen@chromium.org, vogelheim@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2046423002\nCr-Commit-Position: refs/heads/master@{#36879}\n","milestone":53},{"_id":"d77963feeab432464c200fed24851600bdc4b97d","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Jun 09 09:08:41 2016"},"commit":"d77963feeab432464c200fed24851600bdc4b97d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jun 09 09:09:59 2016"},"message":"Add UseCounter for Date.parse's legacy parse heuristics.\n\nR=adamk@chromium.org, jochen@chromium.org\nBUG=chromium:618595\n\nReview-Url: https://codereview.chromium.org/2050733004\nCr-Commit-Position: refs/heads/master@{#36846}\n","milestone":53},{"_id":"2f863593d11c9459bd6e4eb721f39fffaa4ccd58","author":{"name":"alph","email":"alph@chromium.org","time":"Wed Jun 08 21:34:44 2016"},"commit":"2f863593d11c9459bd6e4eb721f39fffaa4ccd58","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 08 21:36:57 2016"},"message":"Move stack trace extraction code out of TickSample::Init\n\nMake it a part of V8 API GetStackSample function.\nAlso expose external_callback_entry in SampleInfo to break dependency\nof clients on internal V8 structures.\n\nBUG=v8:4789\n\nCommitted: https://crrev.com/70acfe39c07322144f5fe9b40bb584a8b1099ffd\nReview-Url: https://codereview.chromium.org/2007343003\nCr-Original-Commit-Position: refs/heads/master@{#36831}\nCr-Commit-Position: refs/heads/master@{#36836}\n","milestone":53},{"_id":"70acfe39c07322144f5fe9b40bb584a8b1099ffd","author":{"name":"alph","email":"alph@chromium.org","time":"Wed Jun 08 15:33:50 2016"},"commit":"70acfe39c07322144f5fe9b40bb584a8b1099ffd","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 08 15:36:18 2016"},"message":"Move stack trace extraction code out of TickSample::Init\n\nMake it a part of V8 API GetStackSample function.\nAlso expose external_callback_entry in SampleInfo to break dependency\nof clients on internal V8 structures.\n\nBUG=v8:4789\n\nReview-Url: https://codereview.chromium.org/2007343003\nCr-Commit-Position: refs/heads/master@{#36831}\n","milestone":53},{"_id":"490131987e1ecf7660b62bdc7eeeab861e680a50","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Jun 08 14:42:07 2016"},"commit":"490131987e1ecf7660b62bdc7eeeab861e680a50","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 08 14:43:46 2016"},"message":"Remove deprecated access check callbacks\n\nBUG=chromium:618305\nR=verwaest@chromium.org\n\nReview-Url: https://codereview.chromium.org/2045273002\nCr-Commit-Position: refs/heads/master@{#36827}\n","milestone":53},{"_id":"cec0ed0f77e91bfd49bbd298ab58f77375eecead","author":{"name":"machenbach","email":"machenbach@chromium.org","time":"Wed Jun 08 12:09:25 2016"},"commit":"cec0ed0f77e91bfd49bbd298ab58f77375eecead","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 08 12:11:34 2016"},"message":"[icu] Support loading data file from default location\n\nThis allows using icu data, bundled in the icudtl.dat file,\nto be loaded automatically from a default location\nside-by-side with the executable.\n\nThe v8 stand-alone default is still to use statically\nlinked ICU data, but this will be switched in a separate\nfollow-up CL.\n\nBUG=chromium:616033\nLOG=y\n\nReview-Url: https://codereview.chromium.org/2042253002\nCr-Commit-Position: refs/heads/master@{#36823}\n","milestone":53},{"_id":"31c0c024bb73e2d7ac3f66d70d9450beaef39c2e","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Jun 08 07:48:40 2016"},"commit":"31c0c024bb73e2d7ac3f66d70d9450beaef39c2e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 08 07:51:28 2016"},"message":"[snapshot] remove metadata field.\n\nThe upcoming snapshot creator API will have no way to distinguish default\nfrom custom snapshots.\n\nR=vogelheim@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2040813005\nCr-Commit-Position: refs/heads/master@{#36812}\n","milestone":53},{"_id":"839f3fd406426a221d74eb7a33a72794c3c7a548","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Tue Jun 07 17:28:31 2016"},"commit":"839f3fd406426a221d74eb7a33a72794c3c7a548","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jun 07 17:29:35 2016"},"message":"Track based on JSArrayBuffer addresses on pages instead of the attached\nbacking store.\n\nDetails of tracking:\n- Scavenge: New space pages are processes in bulk on the main thread\n- MC: Unswept pages are processed in bulk in parallel. All other pages\n  are processed by the sweeper concurrently.\n\nBUG=chromium:611688\nLOG=N\nTEST=cctest/test-array-buffer-tracker/*\nCQ_EXTRA_TRYBOTS=tryserver.v8:v8_linux_arm64_gc_stress_dbg,v8_linux_gc_stress_dbg,v8_mac_gc_stress_dbg,v8_linux64_tsan_rel,v8_mac64_asan_rel\n\nReview-Url: https://codereview.chromium.org/2036643002\nCr-Commit-Position: refs/heads/master@{#36798}\n","milestone":53},{"_id":"0f93486699aad9dd6a6c2f9465106351898d840a","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Mon Jun 06 16:32:20 2016"},"commit":"0f93486699aad9dd6a6c2f9465106351898d840a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jun 06 16:33:59 2016"},"message":"Introduce api for incremental wrapper tracing\n\nThis cl sketches an api for incremental wrapper tracing, but still uses the api\nin the stop-the-world fashion. Responsibility to maintain a marking deque is\ntransfered to the embedder. V8 will still collect wrapper internal fields, but\nwill send them to the embedder after each incremental gc task. Wrappers must be\nsent at latest by the time next oilpan gc runs - so blink can keep all\ndiscovered wrappables alive.\n\nThe old api will be cleared after this cl and corresponding blink cl land.\n\nComments are very welcomed :)\n\nLOG=no\nBUG=468240\n\nReview-Url: https://codereview.chromium.org/2032213003\nCr-Commit-Position: refs/heads/master@{#36761}\n","milestone":53},{"_id":"37394eb3b0b7d38bccedef268aed4bb307db6ce7","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Jun 06 14:11:29 2016"},"commit":"37394eb3b0b7d38bccedef268aed4bb307db6ce7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jun 06 14:12:10 2016"},"message":"Add a convenience method to get the debugged context\n\nSince the generic GetCallingContext is deprecated, but there's still the\nuse case for the debugger to get the currently debugged context while in\nthe debug context, add a convenience API for it.\n\nNote that EventDetails already exposes this context, but the embedder\nmight not necessarily have the EventDetails around.\n\nR=verwaest@chromium.org\nBUG=\n\nReview-Url: https://codereview.chromium.org/2040853003\nCr-Commit-Position: refs/heads/master@{#36751}\n","milestone":53},{"_id":"279e274eccf95fbb4bd41d908b9153acf6ec118a","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Wed Jun 01 16:29:00 2016"},"commit":"279e274eccf95fbb4bd41d908b9153acf6ec118a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 01 16:30:32 2016"},"message":"Track based on JSArrayBuffer addresses on pages instead of the attached\nbacking store.\n\nDetails of tracking:\n- Scavenge: New space pages are processes in bulk on the main thread\n- MC: Unswept pages are processed in bulk in parallel. All other pages\n  are processed by the sweeper concurrently.\n\nBUG=chromium:611688\nLOG=N\nTEST=cctest/test-array-buffer-tracker/*\nCQ_EXTRA_TRYBOTS=tryserver.v8:v8_linux_arm64_gc_stress_dbg,v8_linux_gc_stress_dbg,v8_mac_gc_stress_dbg,v8_linux64_tsan_rel,v8_mac64_asan_rel\n\nReview-Url: https://codereview.chromium.org/2026633003\nCr-Commit-Position: refs/heads/master@{#36653}\n","milestone":53},{"_id":"089da007bb990b5b29aab257aa836fdd3f3b8ce0","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Tue May 31 09:16:28 2016"},"commit":"089da007bb990b5b29aab257aa836fdd3f3b8ce0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 31 09:16:55 2016"},"message":"Track based on JSArrayBuffer addresses on pages instead of the attached\nbacking store.\n\nDetails of tracking:\n- Scavenge: New space pages are processes in bulk on the main thread\n- MC: Unswept pages are processed in bulk in parallel. All other pages\n  are processed by the sweeper concurrently.\n\nBUG=chromium:611688\nLOG=N\nTEST=cctest/test-array-buffer-tracker/*\nCQ_EXTRA_TRYBOTS=tryserver.v8:v8_linux_arm64_gc_stress_dbg,v8_linux_gc_stress_dbg,v8_mac_gc_stress_dbg,v8_linux64_tsan_rel,v8_mac64_asan_rel\n\nReview-Url: https://codereview.chromium.org/2024063002\nCr-Commit-Position: refs/heads/master@{#36608}\n","milestone":53},{"_id":"63efe9e4164a68888a8ee74aae75a31fe3149cab","author":{"name":"cbruni","email":"cbruni@chromium.org","time":"Mon May 30 15:52:56 2016"},"commit":"63efe9e4164a68888a8ee74aae75a31fe3149cab","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 30 15:54:12 2016"},"message":"[api] Add more parameters to Object::GetPropertyNames\n\nExpose more or less the full functionality of the KeyAccumulator in the API:\n- use the PropertyFilter introduced for GetOwnPropertyNames\n- use KeyCollectionLimit for OWN_ONLY or INLCUDE_PROTOS\n- use IndexFilter to eithe SKIP_INDICES or INCLUDE_INDICES\n\nRewire Object::GetOwnPropertyNames to use GetPropertyNames.\n\nBUG=chromium:148757\n\nReview-Url: https://codereview.chromium.org/2002203002\nCr-Commit-Position: refs/heads/master@{#36595}\n","milestone":53},{"_id":"07fadde87c0de118daf80e42c9ae64e8a611e1f6","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Mon May 30 15:51:24 2016"},"commit":"07fadde87c0de118daf80e42c9ae64e8a611e1f6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 30 15:54:11 2016"},"message":"[api] Remove deprectated memory allocation callback API\n\nUsers of this api should use a combination of |RequestInterrupt| and\n|GCCallback| (see |AddGCPrologueCallback| and friends) to keep track allocated\nmemory.\n\nBUG=v8:4813\nLOG=Y\nR=jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/1991293002\nCr-Commit-Position: refs/heads/master@{#36594}\n","milestone":53},{"_id":"c1af2821eaf8333ea2af8f121bd69c9701d8ae65","author":{"name":"mythria","email":"mythria@chromium.org","time":"Thu May 26 09:46:34 2016"},"commit":"c1af2821eaf8333ea2af8f121bd69c9701d8ae65","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu May 26 09:47:27 2016"},"message":"Adds support for collecting statistics about code and its metadata.\n\nAdds an API to request the total size of code/bytecode and their associated\nmetadata in the heap. When requested, the code_space, old_space and\nlarge_object_space  is scanned to find any code/bytecode array objects.\nThis could be slow and hence it should be used with caution.\n\nBUG=v8:5019\nLOG=N\n\nReview-Url: https://codereview.chromium.org/1997363002\nCr-Commit-Position: refs/heads/master@{#36534}\n","milestone":53},{"_id":"06cc9b7c176a6223971deaa9fbcafe1a05058c7b","author":{"name":"lpy","email":"lpy@chromium.org","time":"Wed May 25 19:05:48 2016"},"commit":"06cc9b7c176a6223971deaa9fbcafe1a05058c7b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed May 25 19:06:45 2016"},"message":"Create libsampler as V8 sampler library.\n\nThis patch does five things:\n\n1. Extracts sampler as libsampler to provide sampling functionality support.\n2. Makes SampleStack virtual so embedders can override the behaviour of sample collecting.\n3. Removes sampler.[h|cc].\n4. Moves sampling thread into log.cc as workaround to keep the --prof functionality.\n5. Creates SamplerManager to manage the relationship between samplers and threads.\n\nThe reason we port hashmap.h is that in debug mode, STL containers are using\nmutexes from a mutex pool, which may lead to deadlock when using asynchronously\nsignal handler.\n\nCurrently libsampler is used in V8 temporarily.\n\nBUG=v8:4789\nLOG=n\n\nReview-Url: https://codereview.chromium.org/1922303002\nCr-Commit-Position: refs/heads/master@{#36527}\n","milestone":53},{"_id":"b2d8bfc7931eef49d527605ba485950dea41cde3","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Mon May 23 11:19:55 2016"},"commit":"b2d8bfc7931eef49d527605ba485950dea41cde3","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 23 11:21:49 2016"},"message":"[heap] Fine-grained JSArrayBuffer tracking\n\nTrack based on JSArrayBuffer addresses instead of the attached backing store.\nThis way we can later on iterate buffers on a single page. The reland also\nswitches to a page-based implementation where a page contains the set of its\ncontained (live and dead) buffers.\n\nDetails of tracking:\n- Scavenge: New space pages are processes in bulk on the main thread\n- MC: Unswept pages are processed in bulk in parallel. All other pages\n  are processed by the sweeper concurrently.\n\nBUG=chromium:611688\nLOG=N\nCQ_EXTRA_TRYBOTS=tryserver.v8:v8_linux_arm64_gc_stress_dbg,v8_linux_gc_stress_dbg,v8_mac_gc_stress_dbg,v8_linux64_tsan_rel,v8_mac64_asan_rel\n\nReview-Url: https://codereview.chromium.org/1964023002\nCr-Commit-Position: refs/heads/master@{#36437}\n","milestone":53},{"_id":"ba8ecfd58f62fa0ce762861758391038bf48e684","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Fri May 20 13:36:02 2016"},"commit":"ba8ecfd58f62fa0ce762861758391038bf48e684","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 20 13:37:49 2016"},"message":"Adding a SetRAILMode API.\n\nBUG=chromium:613518\nLOG=n\n\nReview-Url: https://codereview.chromium.org/1999743002\nCr-Commit-Position: refs/heads/master@{#36411}\n","milestone":53},{"_id":"e17c68c49355ca83cddec2d050ac8d95005762c5","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Fri May 20 07:56:49 2016"},"commit":"e17c68c49355ca83cddec2d050ac8d95005762c5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 20 07:58:02 2016"},"message":"[JSON] implement indentation in the BasicJsonStringifier and expose via API.\n\nR=jochen@chromium.org, verwaest@chromium.org\n\nReview-Url: https://codereview.chromium.org/1922603006\nCr-Commit-Position: refs/heads/master@{#36392}\n","milestone":53},{"_id":"5fa2734d39bd14116695e73a8ea7042a9e010a5a","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Tue Oct 04 13:44:19 2016"},"commit":"5fa2734d39bd14116695e73a8ea7042a9e010a5a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Oct 04 13:44:41 2016"},"message":"ValueSerializer: Expose reading/writing doubles to embedder.\n\nBUG=chromium:148757\n\nReview-Url: https://codereview.chromium.org/2386233002\nCr-Commit-Position: refs/heads/master@{#39955}\n","milestone":55},{"_id":"e4e3650e8b6289bd0cd7500af6176dda81e8b585","author":{"name":"alph","email":"alph@chromium.org","time":"Thu Sep 29 09:24:46 2016"},"commit":"e4e3650e8b6289bd0cd7500af6176dda81e8b585","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Sep 29 09:25:21 2016"},"message":"[profiler] Introduce Tracing CPU profiler V8 API.\n\nTracing CPU profiler allows V8 to automatically collect CPU profile when tracing\nis started with category v8.cpu_profile2 enabled.\n\nBUG=chromium:406277\n\nReview-Url: https://codereview.chromium.org/2378143003\nCr-Commit-Position: refs/heads/master@{#39855}\n","milestone":55},{"_id":"c5e735deac14e8876cdbd1d93adcf4e8b1525e81","author":{"name":"franzih","email":"franzih@chromium.org","time":"Thu Sep 29 07:02:20 2016"},"commit":"c5e735deac14e8876cdbd1d93adcf4e8b1525e81","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Sep 29 07:02:30 2016"},"message":"[tracing] Simplify include statement.\n\nChange include statement, otherwise embedders have problems compiling.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2378773004\nCr-Commit-Position: refs/heads/master@{#39850}\n","milestone":55},{"_id":"0698f1066128804c6ef6e0b92d4530a96e116dd4","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Wed Sep 28 12:54:53 2016"},"commit":"0698f1066128804c6ef6e0b92d4530a96e116dd4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Sep 28 12:55:12 2016"},"message":"Introduce EmbedderReachableReferenceReporter\n\nThis cl introduces reporter to the embedder heap tracer. Heap tracer uses\nreporter to report reachable objects from embedder heap. This refactoring is a\nstep towards being able to take heap snapshots with wrapper tracing.\n\nLOG=no\nBUG=468240\n\nReview-Url: https://codereview.chromium.org/2371733002\nCr-Commit-Position: refs/heads/master@{#39824}\n","milestone":55},{"_id":"ab486146d4a446a3e4f654c0671111d6637b5436","author":{"name":"franzih","email":"franzih@chromium.org","time":"Wed Sep 28 09:57:38 2016"},"commit":"ab486146d4a446a3e4f654c0671111d6637b5436","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Sep 28 09:57:46 2016"},"message":"[api] Add documentation for various HasProperty functions.\n\nAdd documentation for Has(), HasOwnProperty(), and HasRealNamedProperty()\nthat points out their differences and links to the other functions.\n\nBUG=v8:5433\n\nReview-Url: https://codereview.chromium.org/2365403003\nCr-Commit-Position: refs/heads/master@{#39818}\n","milestone":55},{"_id":"fcf1bac99a6277234d35797847a01dfdb1f86f7a","author":{"name":"alph","email":"alph@chromium.org","time":"Tue Sep 27 20:12:41 2016"},"commit":"fcf1bac99a6277234d35797847a01dfdb1f86f7a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 27 20:12:55 2016"},"message":"[tracing] Implement Add/RemoveTraceStateObserver for default platform.\n\nBUG=chromium:406277\n\nReview-Url: https://codereview.chromium.org/2369073003\nCr-Commit-Position: refs/heads/master@{#39794}\n","milestone":55},{"_id":"4810f41a521227ccab4f231aa4a439d790428953","author":{"name":"alph","email":"alph@chromium.org","time":"Tue Sep 27 18:08:34 2016"},"commit":"4810f41a521227ccab4f231aa4a439d790428953","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 27 18:08:53 2016"},"message":"[tracing] Support ConvertableToTraceFormat argument type.\n\nDrive-by: Use perfect forwarding for AddTraceEvent arguments.\n\nBUG=406277\n\nCommitted: https://crrev.com/dcac49af485fe5d4c0027f153901435dbb29c232\nReview-Url: https://codereview.chromium.org/2367603002\nCr-Original-Commit-Position: refs/heads/master@{#39742}\nCr-Commit-Position: refs/heads/master@{#39789}\n","milestone":55},{"_id":"9285e66630c4173d80929038f3862b6910b580b8","author":{"name":"haraken","email":"haraken@chromium.org","time":"Tue Sep 27 14:19:16 2016"},"commit":"9285e66630c4173d80929038f3862b6910b580b8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 27 14:19:46 2016"},"message":"Add v8::Object::CreationContext that works for a persistent handle\n\nI need this API for https://codereview.chromium.org/1609343002/.\n\nBUG=483722\n\nReview-Url: https://codereview.chromium.org/1627233002\nCr-Commit-Position: refs/heads/master@{#39775}\n","milestone":55},{"_id":"dcac49af485fe5d4c0027f153901435dbb29c232","author":{"name":"alph","email":"alph@chromium.org","time":"Mon Sep 26 21:54:33 2016"},"commit":"dcac49af485fe5d4c0027f153901435dbb29c232","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Sep 26 21:54:56 2016"},"message":"[tracing] Support ConvertableToTraceFormat argument type.\n\nDrive-by: Use perfect forwarding for AddTraceEvent arguments.\n\nBUG=406277\n\nReview-Url: https://codereview.chromium.org/2367603002\nCr-Commit-Position: refs/heads/master@{#39742}\n","milestone":55},{"_id":"713e247e7dd1bdf79b3f596c77a2fc28758de50b","author":{"name":"littledan","email":"littledan@chromium.org","time":"Fri Sep 23 18:31:15 2016"},"commit":"713e247e7dd1bdf79b3f596c77a2fc28758de50b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Sep 23 18:31:33 2016"},"message":"Add method on Value::IsAsyncFunction to detect async functions\n\nDevTools wants to be able to detect async functions in order to print\ntheir synopsis better in stack traces and tooltips. This patch provides a\nsimple method to do the check.\n\nBUG=v8:4483\n\nReview-Url: https://codereview.chromium.org/2365833002\nCr-Commit-Position: refs/heads/master@{#39687}\n","milestone":55},{"_id":"3bbd11c23390243a237158af4a01358497958b5b","author":{"name":"adamk","email":"adamk@chromium.org","time":"Thu Sep 22 21:03:19 2016"},"commit":"3bbd11c23390243a237158af4a01358497958b5b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Sep 22 21:03:42 2016"},"message":"[modules] Do path resolution relative to each module file in d8\n\nBUG=v8:1569\n\nReview-Url: https://codereview.chromium.org/2361593002\nCr-Commit-Position: refs/heads/master@{#39646}\n","milestone":55},{"_id":"e882623820bd4e49581a3bf61527ebae63c2140c","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Thu Sep 22 01:47:53 2016"},"commit":"e882623820bd4e49581a3bf61527ebae63c2140c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Sep 22 01:48:10 2016"},"message":"[inspector] fixed all shorten-64-to-32 warnings\n\nBUG=chromium:635948\nR=dgozman@chromium.org,alph@chromium.org\n\nCommitted: https://crrev.com/3d10918d2e1c57d72531c55a956262f5a72fceaa\nReview-Url: https://codereview.chromium.org/2332163002\nCr-Original-Commit-Position: refs/heads/master@{#39426}\nCr-Commit-Position: refs/heads/master@{#39610}\n","milestone":55},{"_id":"8c87ae9b880f0b6c6824a68b39aec6a204d566c1","author":{"name":"gsathya","email":"gsathya@chromium.org","time":"Wed Sep 21 03:49:32 2016"},"commit":"8c87ae9b880f0b6c6824a68b39aec6a204d566c1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Sep 21 03:49:50 2016"},"message":"[promises] Move PromiseResolveThenableJob to c++\n\n- Add a new container object to store the data required for\nPromiseResolveThenableJob.\n\n- Create a new runtime function to enqueue the microtask event with\nthe required data.\n\nThis patches causes a 4% regression in the bluebird benchmark.\n\nBUG=v8:5343\n\nReview-Url: https://codereview.chromium.org/2314903004\nCr-Commit-Position: refs/heads/master@{#39571}\n","milestone":55},{"_id":"cf127e81449f0bc4d09368a376623fe3743094a7","author":{"name":"adamk","email":"adamk@chromium.org","time":"Tue Sep 20 23:38:58 2016"},"commit":"cf127e81449f0bc4d09368a376623fe3743094a7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 20 23:39:41 2016"},"message":"[modules] Expand API to allow linking and use it in d8\n\nThis patch gives the ability for the embedder to ask for the\nmodule requests of a module, and to pass a ResolveCallback\ninto Module::Instantiate().\n\nIn d8, I've implemented a simple module_map that's used\nalong with this API to allow loading, compiling, instantiating,\nand evaluating a whole tree of modules.\n\nNo path resolution is yet implemented, meaning that all\nimport paths are relative to whatever directory d8 runs\nin. And no imports are linked to the exports of the\nrequested module.\n\nBUG=v8:1569\n\nReview-Url: https://codereview.chromium.org/2351113004\nCr-Commit-Position: refs/heads/master@{#39569}\n","milestone":55},{"_id":"4f5695229e49a7615bf7b03d26209314ffa48985","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Tue Sep 20 12:06:34 2016"},"commit":"4f5695229e49a7615bf7b03d26209314ffa48985","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 20 12:06:54 2016"},"message":"[d8] Fix the shared-library build\n\nThis commit ensures that the d8 shared library build uses the same logic as\nthe standard static build by exporting relevant functions and classes.\n\nBUG=chromium:646337\n\nCommitted: https://crrev.com/2c10ca8086a4d595ecf9aa843d2031b068470d65\nReview-Url: https://codereview.chromium.org/2342563002\nCr-Original-Commit-Position: refs/heads/master@{#39503}\nCr-Commit-Position: refs/heads/master@{#39547}\n","milestone":55},{"_id":"ce037789264b33e3edf302fab74736537c04cf22","author":{"name":"alph","email":"alph@chromium.org","time":"Mon Sep 19 20:05:53 2016"},"commit":"ce037789264b33e3edf302fab74736537c04cf22","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Sep 19 21:01:32 2016"},"message":"[tracing] Introduce TraceStateObserver interface to the platform.\n\nIntroduce TraceStateObserver interface along with add/remove\nmethods to the platform.\n\nBUG=chromium:406277\n\nReview-Url: https://codereview.chromium.org/2344893005\nCr-Commit-Position: refs/heads/master@{#39513}\n","milestone":55},{"_id":"2c10ca8086a4d595ecf9aa843d2031b068470d65","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Mon Sep 19 12:47:04 2016"},"commit":"2c10ca8086a4d595ecf9aa843d2031b068470d65","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Sep 19 12:47:22 2016"},"message":"[d8] Fix the shared-library build\n\nThis commit ensures that the d8 shared library build uses the same logic as\nthe standard static build by exporting relevant functions and classes.\n\nBUG=chromium:646337\n\nReview-Url: https://codereview.chromium.org/2342563002\nCr-Commit-Position: refs/heads/master@{#39503}\n","milestone":55},{"_id":"aa6db9d99075f16007ea8fda4509a94ede4e80b6","author":{"name":"adamk","email":"adamk@chromium.org","time":"Fri Sep 16 21:47:14 2016"},"commit":"aa6db9d99075f16007ea8fda4509a94ede4e80b6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Sep 16 21:47:54 2016"},"message":"[modules] Introduce v8::Module to the API and return it from CompileModule\n\nR=neis@chromium.org\nBUG=v8:1569\n\nReview-Url: https://codereview.chromium.org/2347933002\nCr-Commit-Position: refs/heads/master@{#39481}\n","milestone":55},{"_id":"7c05d8a4a6336b9cee984a765504531b80590fc7","author":{"name":"neis","email":"neis@chromium.org","time":"Fri Sep 16 16:47:07 2016"},"commit":"7c05d8a4a6336b9cee984a765504531b80590fc7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Sep 16 16:47:56 2016"},"message":"[modules] Turn JSModule into Module.\n\nRename JSModule to Module and make it a Struct rather than a JSObject.  We will\nlater add a separate JSModuleNamespace object to implement the 'import * as foo'\nsyntax.\n\nBUG=v8:1569\n\nReview-Url: https://codereview.chromium.org/2345823002\nCr-Commit-Position: refs/heads/master@{#39477}\n","milestone":55},{"_id":"3d10918d2e1c57d72531c55a956262f5a72fceaa","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Wed Sep 14 18:24:18 2016"},"commit":"3d10918d2e1c57d72531c55a956262f5a72fceaa","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Sep 14 18:25:00 2016"},"message":"[inspector] fixed all shorten-64-to-32 warnings\n\nBUG=chromium:635948\nR=dgozman@chromium.org,alph@chromium.org\n\nReview-Url: https://codereview.chromium.org/2332163002\nCr-Commit-Position: refs/heads/master@{#39426}\n","milestone":55},{"_id":"d825492bb6ae0874400bde7456da1ed9f64b308c","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Wed Sep 14 16:41:35 2016"},"commit":"d825492bb6ae0874400bde7456da1ed9f64b308c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Sep 14 16:42:07 2016"},"message":"Support delegating serialization of host objects.\n\nThis exposes an interface for the embedder to provide a delegate which can\nserialize or deserialize embedder-specific objects, like Blink's DOM wrappers.\n\nBUG=chromium:148757\n\nReview-Url: https://codereview.chromium.org/2327653002\nCr-Commit-Position: refs/heads/master@{#39422}\n","milestone":55},{"_id":"5465c25cea64684fb8cc94a32208b3fac38fbdf2","author":{"name":"alph","email":"alph@chromium.org","time":"Fri Sep 09 15:50:23 2016"},"commit":"5465c25cea64684fb8cc94a32208b3fac38fbdf2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Sep 09 15:51:02 2016"},"message":"Add two CpuProfileNode API functions to allow thread safe access to the node.\n\nGetFunctionNameStr and GetScriptResourceNameStr can be called from a thread\nother than isolate VM thread unlike their conterparts GetFunctionName\nand GetScriptResourceName.\n\nBUG=406277\n\nReview-Url: https://codereview.chromium.org/2328673003\nCr-Commit-Position: refs/heads/master@{#39313}\n","milestone":55},{"_id":"16f34a416ea443bfe0188235d81c08a6a8b6940e","author":{"name":"franzih","email":"franzih@chromium.org","time":"Fri Sep 09 14:10:50 2016"},"commit":"16f34a416ea443bfe0188235d81c08a6a8b6940e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Sep 09 14:11:34 2016"},"message":"[api] Add documentation for IndexedPropertyCallbacks.\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2322673004\nCr-Commit-Position: refs/heads/master@{#39310}\n","milestone":55},{"_id":"b0a7738a5feb75d23a9707393d102cc34814fbf7","author":{"name":"franzih","email":"franzih@chromium.org","time":"Thu Sep 08 12:51:37 2016"},"commit":"b0a7738a5feb75d23a9707393d102cc34814fbf7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Sep 08 12:51:49 2016"},"message":"[api] Add interceptor for getOwnPropertyDescriptor().\n\nThe existing PropertyQueryCallback intercepts getOwnPropertyDescriptor, but\nit returns only value and attributes, not the accessors. This\nPropertyDescriptorCallback returns a descriptor similar to Ecma-262 6.2.4.\n\nYou can either set a PropertyQueryCallback or a PropertyDescriptorCallback,\nbut not both. When you set a callback for DefineProperty(), you can set a\nPropertyDescriptorCallback but not a PropertyQueryCallback.\n\nBUG=v8:5359\n\nReview-Url: https://codereview.chromium.org/2311873002\nCr-Commit-Position: refs/heads/master@{#39279}\n","milestone":55},{"_id":"9048298d4c52406faa3f15be8edda2cc0912ebaf","author":{"name":"franzih","email":"franzih@chromium.org","time":"Wed Sep 07 18:55:01 2016"},"commit":"9048298d4c52406faa3f15be8edda2cc0912ebaf","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Sep 07 18:55:40 2016"},"message":"[api] Fix typo.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2315413002\nCr-Commit-Position: refs/heads/master@{#39259}\n","milestone":55},{"_id":"81b7e77ff02189bf7d4d4b86e1ebd666960cbe51","author":{"name":"dgozman","email":"dgozman@chromium.org","time":"Tue Sep 06 23:26:08 2016"},"commit":"81b7e77ff02189bf7d4d4b86e1ebd666960cbe51","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 06 23:26:35 2016"},"message":"[inspector] Build inspector under v8_enable_inspector build flag.\n\n- inspector becomes a dependency of v8_base;\n- generated public protocol files are placed to gen/v8/include/inspector/<Domain.h>;\n- added v8_enable_inspector_override to be used in embedders (gn only);\n- combined public headers into v8-inspector.h and v8-inspector-protocol.h.\n\nBUG=chromium:635948\n\nReview-Url: https://codereview.chromium.org/2292053003\nCr-Commit-Position: refs/heads/master@{#39226}\n","milestone":55},{"_id":"2b1397682009fc2529b66b7d74d911e22c410e3d","author":{"name":"franzih","email":"franzih@chromium.org","time":"Tue Sep 06 16:35:09 2016"},"commit":"2b1397682009fc2529b66b7d74d911e22c410e3d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 06 16:35:53 2016"},"message":"[api] Rename parameter for consistency.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2311913002\nCr-Commit-Position: refs/heads/master@{#39218}\n","milestone":55},{"_id":"ca6c87341f440742c42a4877f21a9354b88b95fe","author":{"name":"franzih","email":"franzih@chromium.org","time":"Tue Sep 06 15:53:11 2016"},"commit":"ca6c87341f440742c42a4877f21a9354b88b95fe","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 06 15:54:00 2016"},"message":"[api] Improve documentation for PropertyDeleterCallback.\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2312863003\nCr-Commit-Position: refs/heads/master@{#39215}\n","milestone":55},{"_id":"5a97e955204c4782d9727e8248b12739720232ba","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Tue Sep 06 03:24:35 2016"},"commit":"5a97e955204c4782d9727e8248b12739720232ba","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 06 03:24:53 2016"},"message":"Handle errors in v8::ValueDeserializer by throwing exceptions.\n\nThis restores the contract that all API methods that return Maybe<T> or\nMaybeLocal<T> always throw an exception when they return nothing.\n\nSince v8::ValueDeserializer::ReadHeader can now throw exceptions, it\nneeds a Local<Context> parameter so that it can set up execution state\n(entering the context, etc.). The old method has been marked for\ndeprecation, but since this API is experimental I intend to remove it\nas soon as I've removed the use from Blink.\n\nvalue-serializer-unittest has been updated to expect an exception in\nall decode failure cases.\n\nBUG=chromium:148757,chromium:641964\n\nReview-Url: https://codereview.chromium.org/2308053002\nCr-Commit-Position: refs/heads/master@{#39188}\n","milestone":55},{"_id":"f72351f5400151d9a4b63da2be4049f4c8155e75","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Fri Sep 02 15:16:26 2016"},"commit":"f72351f5400151d9a4b63da2be4049f4c8155e75","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Sep 02 15:17:07 2016"},"message":"Throw exceptions for errors in v8::ValueSerializer.\n\nBUG=chromium:148757,chromium:641964\n\nReview-Url: https://codereview.chromium.org/2307603002\nCr-Commit-Position: refs/heads/master@{#39140}\n","milestone":55},{"_id":"d9a026e628bf4127c3f9728d4a9d3a2d174314df","author":{"name":"franzih","email":"franzih@chromium.org","time":"Fri Sep 02 13:15:30 2016"},"commit":"d9a026e628bf4127c3f9728d4a9d3a2d174314df","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Sep 02 13:16:10 2016"},"message":"[api] Minor improvement to documentation for kNonMasking.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2302133003\nCr-Commit-Position: refs/heads/master@{#39137}\n","milestone":55},{"_id":"7c401bd84cbd71a0dcdce01031875a7b90471ffb","author":{"name":"franzih","email":"franzih@chromium.org","time":"Fri Sep 02 09:08:31 2016"},"commit":"7c401bd84cbd71a0dcdce01031875a7b90471ffb","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Sep 02 09:09:08 2016"},"message":"[api] Add interceptor for defineProperty().\n\nWith the Indexed/GenericNamedPropertyDefinerCallback it is possible to intercept Object.defineProperty() calls.\n\nRequests that call JSReceiver::OrdinaryDefineOwnProperty() internally, also trigger the interceptor. This includes Object.freeze(), Object.preventExtensions(), and Object.seal().\n\nAs without this patch, the query interceptor triggers on\ndefineProperty, unless the definer callback\nintercepts the request.\n\nAs without this patch, the query interceptor triggers on defineProperty, unless the definer callback intercepts the request.\n\nBUG=\n\nCommitted: https://crrev.com/b9d985975cf3bab0ded0cec9fafd3799f9bde29a\nReview-Url: https://codereview.chromium.org/2272383002\nCr-Original-Commit-Position: refs/heads/master@{#39094}\nCr-Commit-Position: refs/heads/master@{#39122}\n","milestone":55},{"_id":"b9d985975cf3bab0ded0cec9fafd3799f9bde29a","author":{"name":"franzih","email":"franzih@chromium.org","time":"Thu Sep 01 15:18:04 2016"},"commit":"b9d985975cf3bab0ded0cec9fafd3799f9bde29a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Sep 01 15:18:30 2016"},"message":"[api] Add interceptor for defineProperty().\n\nWith the Indexed/GenericNamedPropertyDefinerCallback it is possible to intercept Object.defineProperty() calls.\n\nRequests that call JSReceiver::OrdinaryDefineOwnProperty() internally, also trigger the interceptor. This includes Object.freeze(), Object.preventExtensions(), and Object.seal().\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2272383002\nCr-Commit-Position: refs/heads/master@{#39094}\n","milestone":55},{"_id":"8acb7ab9f152f6e0b3e96ce91a6c48df74446c4e","author":{"name":"franzih","email":"franzih@chromium.org","time":"Thu Sep 01 15:09:44 2016"},"commit":"8acb7ab9f152f6e0b3e96ce91a6c48df74446c4e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Sep 01 15:09:59 2016"},"message":"[api] Add PropertyDescriptor and DefineProperty().\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2244123005\nCr-Commit-Position: refs/heads/master@{#39093}\n","milestone":55},{"_id":"8225465b09118908f4079a19863e174ef60a6f6b","author":{"name":"franzih","email":"franzih@chromium.org","time":"Thu Sep 01 14:40:51 2016"},"commit":"8225465b09118908f4079a19863e174ef60a6f6b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Sep 01 14:41:56 2016"},"message":"[api] Add documentation for PropertyQueryCallback.\n\nAlso add tests that document the behavior of the PropertyQueryCallback.\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2286323002\nCr-Commit-Position: refs/heads/master@{#39090}\n","milestone":55},{"_id":"e2361954e53f60ea688553b6b8395f6580a60c9c","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Tue Aug 30 14:05:37 2016"},"commit":"e2361954e53f60ea688553b6b8395f6580a60c9c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 30 14:05:49 2016"},"message":"Blink-compatible serialization of SharedArrayBuffer.\n\nBUG=chromium:148757\n\nReview-Url: https://codereview.chromium.org/2290753002\nCr-Commit-Position: refs/heads/master@{#39017}\n","milestone":55},{"_id":"47bcea99fbad7e8cc1ad242537f766293777f94d","author":{"name":"daniel.bevenius","email":"daniel.bevenius@gmail.com","time":"Tue Aug 30 09:43:41 2016"},"commit":"47bcea99fbad7e8cc1ad242537f766293777f94d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 30 09:43:53 2016"},"message":"Updating comment for Proxy::New function\n\nThe comment for the Proxy::New functions seems inaccurate and is\ncurrently identical to Map::New:\n\n3090   /**\n3091    * Creates a new empty Map.\n3092    */\n3093   static Local<Map> New(Isolate* isolate);\n\nThis commit updates the comment to describe that it creates a Proxy and\nnot a Map.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2176063002\nCr-Commit-Position: refs/heads/master@{#39002}\n","milestone":55},{"_id":"0f01a5881f932fedafa93e08300f6ec429662a8f","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Mon Aug 29 15:38:23 2016"},"commit":"0f01a5881f932fedafa93e08300f6ec429662a8f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Aug 29 15:38:51 2016"},"message":"[api] Add NumberOfWrappersToTrace to EmbedderHeapTracer.\n\nV8 can use this metter to better estimate the amount of work that is still to be\ndone by the embedder. Supposed to be used to decide whether incremental marking\nshould be finalized or not.\n\nBUG=chromium:468240\nR=ulan@chromium.org\n\nReview-Url: https://codereview.chromium.org/2291613002\nCr-Commit-Position: refs/heads/master@{#38985}\n","milestone":55},{"_id":"25e2d1588eb519c3f4657f768362f8b55cbd062d","author":{"name":"franzih","email":"franzih@chromium.org","time":"Mon Aug 29 13:22:20 2016"},"commit":"25e2d1588eb519c3f4657f768362f8b55cbd062d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Aug 29 13:22:37 2016"},"message":"[api] Add documentation for the PropertyAttribute enum.\n\nAdd comments to make it easier to browse the HTML documentation generated with Doxygen.\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2290553003\nCr-Commit-Position: refs/heads/master@{#38982}\n","milestone":55},{"_id":"97118fb5043bb78c8c5ae818eee77518d65b3a90","author":{"name":"franzih","email":"franzih@chromium.org","time":"Fri Aug 26 17:13:51 2016"},"commit":"97118fb5043bb78c8c5ae818eee77518d65b3a90","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 26 17:14:15 2016"},"message":"[api] Improve documentation for NamedPropertyGetterCallback.\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2277513003\nCr-Commit-Position: refs/heads/master@{#38951}\n","milestone":55},{"_id":"260d0f1c197579218cded0d21d9efe26150a76bb","author":{"name":"franzih","email":"franzih@chromium.org","time":"Fri Aug 26 16:47:54 2016"},"commit":"260d0f1c197579218cded0d21d9efe26150a76bb","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 26 16:48:58 2016"},"message":"[api] Improve documentation for NamedPropertySetterCallback.\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2269053002\nCr-Commit-Position: refs/heads/master@{#38950}\n","milestone":55},{"_id":"5aa7230516a2ed74a547d40c0ac2c0896645c953","author":{"name":"franzih","email":"franzih@chromium.org","time":"Fri Aug 26 16:15:33 2016"},"commit":"5aa7230516a2ed74a547d40c0ac2c0896645c953","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 26 16:15:55 2016"},"message":"[api] Add documentation for PropertyCallbackInfo.This().\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2278523002\nCr-Commit-Position: refs/heads/master@{#38949}\n","milestone":55},{"_id":"864728085d8eaa04199bd8f741e00beaaa58e3d4","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Fri Aug 26 15:47:15 2016"},"commit":"864728085d8eaa04199bd8f741e00beaaa58e3d4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 26 15:47:41 2016"},"message":"Blink-compatible serialization of ArrayBuffer transfer.\n\nThe embedder is expected to arrange for the array buffer contents to be\ntransferred into a v8::ArrayBuffer in the receiving context (generally by\nassuming ownership of the externalized backing store).\n\nBUG=chromium:148757\n\nReview-Url: https://codereview.chromium.org/2275033003\nCr-Commit-Position: refs/heads/master@{#38948}\n","milestone":55},{"_id":"7a57dd1540d3ae5073f67dd5b9a5853d93c8e672","author":{"name":"franzih","email":"franzih@chromium.org","time":"Fri Aug 26 15:28:52 2016"},"commit":"7a57dd1540d3ae5073f67dd5b9a5853d93c8e672","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 26 15:29:21 2016"},"message":"[api] Add documentation for PropertyCallbackInfo.\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2263303003\nCr-Commit-Position: refs/heads/master@{#38947}\n","milestone":55},{"_id":"58cac6501f6b17d9cc8fb84ce65e7c89416dd9af","author":{"name":"jbroman","email":"jbroman@chromium.org","time":"Thu Aug 25 15:59:44 2016"},"commit":"58cac6501f6b17d9cc8fb84ce65e7c89416dd9af","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Aug 25 16:00:25 2016"},"message":"Add an experimental public API for value serialization.\n\nSuitably scary warnings attached, as this will yet evolve (notably to handle\nhost objects, which are not currently handled).\n\nUnit tests adjusted to use the public version of ValueSerializer, eliminating\nany need they have to access v8::internal.\n\nWith this, Blink can begin using this code experimentally behind a flag as it\ndevelops.\n\nBUG=chromium:148757\n\nReview-Url: https://codereview.chromium.org/2274693002\nCr-Commit-Position: refs/heads/master@{#38915}\n","milestone":55},{"_id":"32422eff6c8c5777f22ffe0f1ce4577f1bb2d687","author":{"name":"hablich","email":"hablich@chromium.org","time":"Thu Aug 25 13:51:57 2016"},"commit":"32422eff6c8c5777f22ffe0f1ce4577f1bb2d687","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Aug 25 13:52:16 2016"},"message":"Update version to 5.5\n\nTBR=jochen@chromium.org\nNOTRY=true\n\nReview-Url: https://codereview.chromium.org/2282453002\nCr-Commit-Position: refs/heads/master@{#38908}\n","milestone":55},{"_id":"8ce60a195c2e6514e892d70f791b002980361dcf","author":{"name":"franzih","email":"franzih@chromium.org","time":"Thu Aug 25 04:27:23 2016"},"commit":"8ce60a195c2e6514e892d70f791b002980361dcf","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Aug 25 04:27:43 2016"},"message":"[api] Disable new and delete using = delete.\n\nAccording to our style guide on Copyable and Movable Types,\ncopy/move operators should be disabled using = delete in the public: section.\nUse consistent style for disabling new and delete.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2276063002\nCr-Commit-Position: refs/heads/master@{#38880}\n","milestone":55},{"_id":"6effe72f4629558f07540382e9368ac5db6e051c","author":{"name":"franzih","email":"franzih@chromium.org","time":"Thu Aug 25 04:23:44 2016"},"commit":"6effe72f4629558f07540382e9368ac5db6e051c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Aug 25 04:24:08 2016"},"message":"[api] Disable copy constructors using = delete.\n\nAccording to our style guide on Copyable and Movable Types,\ncopy/move operators should be disabled using = delete in the public: section,\nnot in the private: section.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2272063002\nCr-Commit-Position: refs/heads/master@{#38879}\n","milestone":55},{"_id":"ceadddd15d3dbd7be5e300909a3fdc848297e6b2","author":{"name":"franzih","email":"franzih@chromium.org","time":"Wed Aug 24 16:27:46 2016"},"commit":"ceadddd15d3dbd7be5e300909a3fdc848297e6b2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Aug 24 16:28:11 2016"},"message":"[api] Disable copy constructors in the public section.\n\nAccording to our style guide on Copyable and Movable Types,\ncopy/move operators should be disabled in the public: section, not\nin the private: section.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2278573002\nCr-Commit-Position: refs/heads/master@{#38872}\n","milestone":55},{"_id":"fc63889fe6ab3537218ce3814b3d26f41e2fd99a","author":{"name":"bjaideep","email":"bjaideep@ca.ibm.com","time":"Tue Aug 30 13:13:44 2016"},"commit":"fc63889fe6ab3537218ce3814b3d26f41e2fd99a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 30 13:14:38 2016"},"message":"Merged: PPC/s390: Fix register mapping and imm16 issue\n\nRevision: f3bf8f92a50df703cbe5ab8663ca6dc9726a2c73\n\nR=hablich@chromium.org, joransiu@ca.ibm.com, jyan@ca.ibm.com,\nmichael_dawson@ca.ibm.com, mbrandy@us.ibm.com\n\nBUG=\nNOTRY=true\nNOPRESUBMIT=true\n\nReview-Url: https://codereview.chromium.org/2290603004\nCr-Commit-Position: refs/branch-heads/5.4@{#12}\nCr-Branched-From: 5ce282769772d94937eb2cb88eb419a6890c8b2d-refs/heads/5.4.500@{#2}\nCr-Branched-From: ad07b49d7b47b40a2d6f74d04d1b76ceae2a0253-refs/heads/master@{#38841}\n","milestone":54},{"_id":"6cfa92fb45b4f808495b8ed17db34c7e87fa2cf8","author":{"name":"franzih","email":"franzih@chromium.org","time":"Tue Aug 23 14:41:26 2016"},"commit":"6cfa92fb45b4f808495b8ed17db34c7e87fa2cf8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 23 14:41:44 2016"},"message":"[api] Add documentation for SetHandler().\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2263363002\nCr-Commit-Position: refs/heads/master@{#38831}\n","milestone":54},{"_id":"d003bd9b84d352292bfc0571256e3092bc11eb8a","author":{"name":"franzih","email":"franzih@chromium.org","time":"Tue Aug 23 14:06:50 2016"},"commit":"d003bd9b84d352292bfc0571256e3092bc11eb8a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 23 14:07:01 2016"},"message":"[api] Move documentation to the function it describes.\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2262313002\nCr-Commit-Position: refs/heads/master@{#38826}\n","milestone":54},{"_id":"3a0a24dcf36cb9c8084d9c69a6847c8cf50c161a","author":{"name":"franzih","email":"franzih@chromium.org","time":"Tue Aug 23 13:28:25 2016"},"commit":"3a0a24dcf36cb9c8084d9c69a6847c8cf50c161a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 23 13:28:49 2016"},"message":"[api] Improve documentation for SetNamedPropertyHandler().\n\nBUG=v8:5260\n\nReview-Url: https://codereview.chromium.org/2268673002\nCr-Commit-Position: refs/heads/master@{#38823}\n","milestone":54},{"_id":"30da343d11a978f3326807eab48742daa28c2b08","author":{"name":"franzih","email":"franzih@chromium.org","time":"Tue Aug 23 13:14:48 2016"},"commit":"30da343d11a978f3326807eab48742daa28c2b08","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 23 13:15:06 2016"},"message":"[api] Minor fix in documentation.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2269033002\nCr-Commit-Position: refs/heads/master@{#38821}\n","milestone":54},{"_id":"00c49a3e855793278d8ca6920ac98e9c922b966c","author":{"name":"keishi","email":"keishi@chromium.org","time":"Tue Aug 23 06:22:52 2016"},"commit":"00c49a3e855793278d8ca6920ac98e9c922b966c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 23 06:23:21 2016"},"message":"Add kGCCallbackFlagCollectAllExternalMemory for external memory limit triggered gc\n\nBUG=chromium:570268,chromium:621829\n\nReview-Url: https://codereview.chromium.org/2233683002\nCr-Commit-Position: refs/heads/master@{#38808}\n","milestone":54},{"_id":"b2a257f9ffb63a1e1bd0d89a6ef297a1f595f5cc","author":{"name":"littledan","email":"littledan@chromium.org","time":"Mon Aug 22 21:34:44 2016"},"commit":"b2a257f9ffb63a1e1bd0d89a6ef297a1f595f5cc","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Aug 22 21:35:06 2016"},"message":"Remove --promise-extra flag\n\nThis flag was shipped on in 52, so it's due for removal. The patch includes\nremoving the deprecated and unused-in-Blink API Promise::Chain, and many\ntest updates.\n\nR=adamk@chromium.org\nBUG=v8:4633\n\nReview-Url: https://codereview.chromium.org/2267033002\nCr-Commit-Position: refs/heads/master@{#38804}\n","milestone":54},{"_id":"f4e92fe13e512b0f190db82fed8e1b0da2314cea","author":{"name":"peterssen","email":"peterssen@google.com","time":"Fri Aug 19 09:35:08 2016"},"commit":"f4e92fe13e512b0f190db82fed8e1b0da2314cea","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 19 09:35:17 2016"},"message":"Add ToSmi and Goto operations to FastAccessorAssembler.\n\nBUG=chromium:508898\n\nReview-Url: https://codereview.chromium.org/2237443002\nCr-Commit-Position: refs/heads/master@{#38745}\n","milestone":54},{"_id":"28e13bd6a75c9467dae43043e7b741a1387d5252","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Thu Aug 18 20:45:18 2016"},"commit":"28e13bd6a75c9467dae43043e7b741a1387d5252","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Aug 18 20:45:43 2016"},"message":"[heap] Improve size profiling for ArrayBuffer tracking\n\nEagerly account for retained sizes during ArrayBuffer tracking. Following up on this,\nwe can now do Scavenges if the amount of memory retained from new space is too large.\n\nBUG=chromium:621829\nR=jochen@chromium.org,hpayer@chromium.org\n\nReview-Url: https://codereview.chromium.org/2210263002\nCr-Commit-Position: refs/heads/master@{#38731}\n","milestone":54},{"_id":"b4c1aefb9c369f1a33a6ca94a5de9b06ea4bf5c4","author":{"name":"jgruber","email":"jgruber@chromium.org","time":"Tue Aug 16 08:36:47 2016"},"commit":"b4c1aefb9c369f1a33a6ca94a5de9b06ea4bf5c4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 16 08:37:07 2016"},"message":"Refactor data structures for simple stack traces\n\nSimple stack traces are captured through Isolate::CaptureSimpleStackTrace.\nCaptured frames are stored in a FixedArray, which in turn is stored as a\nproperty (using a private symbol) on the error object itself. Actual formatting\nof the textual stack trace is done lazily when the user reads the stack\nproperty of the error object.\n\nThis would involve many conversions back and forth between index-encoded raw\ndata (receiver, function, offset and code), JS CallSite objects, and C++\nCallSite objects.\n\nThis commit refactors the C++ CallSite class into a Struct class called\nStackTraceFrame, which is the new single point of truth frame information.\nIsolate::CaptureSimpleStackTrace stores an array of StackTraceFrames, and JS\nCallSite objects (now created only when the user specifies custom stack trace\nformatting through Error.prepareStackTrace) internally only store a reference\nto a StackTraceFrame.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2230953002\nCr-Commit-Position: refs/heads/master@{#38645}\n","milestone":54},{"_id":"0686c414a6c7e2ec26a8a773fd042ca883964596","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Tue Aug 16 08:07:11 2016"},"commit":"0686c414a6c7e2ec26a8a773fd042ca883964596","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 16 08:07:19 2016"},"message":"[wasm] Serialization test using external APIs and contexts\n\nA test exercising the public APIs for wasm serialization and\nsimulates the serialization scenario - serialize in one isolate, deserialize\nin another.\n\nBUG=v8:5072\n\nReview-Url: https://codereview.chromium.org/2249973002\nCr-Commit-Position: refs/heads/master@{#38644}\n","milestone":54},{"_id":"c72f637c73823c64b3baea069be73efbca01e747","author":{"name":"lpy","email":"lpy@chromium.org","time":"Wed Aug 10 17:12:05 2016"},"commit":"c72f637c73823c64b3baea069be73efbca01e747","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Aug 10 17:12:27 2016"},"message":"Move SimulatorHelper into V8 out of profiler clients.\n\nThis patch is based on alph's CL https://codereview.chromium.org/2128613004/.\n\nThis patch makes GetStackSample propogate the register state when using\nsimulator helper, and adds argument to avoid using register state from simulator\nwhen pass the native register state.\n\nBUG=v8:4789\nLOG=N\n\nReview-Url: https://codereview.chromium.org/2189513002\nCr-Commit-Position: refs/heads/master@{#38554}\n","milestone":54},{"_id":"0359e1f63ec7361e6dd659c8d09d19235aca39a1","author":{"name":"lpy","email":"lpy@chromium.org","time":"Wed Aug 10 17:10:51 2016"},"commit":"0359e1f63ec7361e6dd659c8d09d19235aca39a1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Aug 10 17:11:08 2016"},"message":"[Tracing] Create TraceConfig JSON string parser in D8.\n\nBUG=v8:4561\nLOG=N\n\nReview-Url: https://codereview.chromium.org/2208873002\nCr-Commit-Position: refs/heads/master@{#38553}\n","milestone":54},{"_id":"d073777bbf60df574ad0ba4b6069c90752d01ff1","author":{"name":"peterssen","email":"peterssen@google.com","time":"Wed Aug 10 11:53:54 2016"},"commit":"d073777bbf60df574ad0ba4b6069c90752d01ff1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Aug 10 11:54:11 2016"},"message":"Add faster, but unsafe version of LoadInternalField.\n\nLoadInternalField performs some redundant checks in the context of\nfast accessors.\nThis improves the speedup from 20% to 60% for next/previousSibling in\nthe Dromaeo DOM traversal benchmarks.\n\nBUG=chromium:508898\n\nReview-Url: https://codereview.chromium.org/2186593002\nCr-Commit-Position: refs/heads/master@{#38535}\n","milestone":54},{"_id":"d29bb4bfab5775e1922a367c872b9ef1b5e5a812","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Wed Aug 10 06:35:29 2016"},"commit":"d29bb4bfab5775e1922a367c872b9ef1b5e5a812","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Aug 10 06:35:42 2016"},"message":"[wasm] serialization: updated external APIs.\n\nWe only need these external v8 APIs to expose serialization externally,\nso bypassed having an internal layer for now.\n\nBUG=v8:5072\n\nReview-Url: https://codereview.chromium.org/2228073002\nCr-Commit-Position: refs/heads/master@{#38516}\n","milestone":54},{"_id":"0cabbd3d60acf1e040113d59e4cdbc99b953843b","author":{"name":"cbruni","email":"cbruni@chromium.org","time":"Tue Aug 09 13:57:29 2016"},"commit":"0cabbd3d60acf1e040113d59e4cdbc99b953843b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 09 13:57:49 2016"},"message":"[api] Templatize do_callback parameter in CallDepthScope\n\nDrive-by-fix: mark isolates as const in stack-allocated scopes\n\nBUG=chromium:630217\n\nReview-Url: https://codereview.chromium.org/2220993003\nCr-Commit-Position: refs/heads/master@{#38496}\n","milestone":54},{"_id":"5de4722278e6a89c787e2ae951d9c2a0fb4a9ef8","author":{"name":"mtrofin","email":"mtrofin@chromium.org","time":"Mon Aug 08 18:18:59 2016"},"commit":"5de4722278e6a89c787e2ae951d9c2a0fb4a9ef8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Aug 08 18:19:55 2016"},"message":"[wasm] external serialization APIs\n\nV8 APIs for wasm serialization/deserialization.\n\nBUG=v8:5072\n\nReview-Url: https://codereview.chromium.org/2226753002\nCr-Commit-Position: refs/heads/master@{#38455}\n","milestone":54},{"_id":"682a8f71d85cb7b79e5886800be702633af584fe","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri Aug 05 12:56:36 2016"},"commit":"682a8f71d85cb7b79e5886800be702633af584fe","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 05 13:00:24 2016"},"message":"Mark Local::As and Persistent::As as const\n\nSince they are.\n\nR=verwaest@chromium.org\nBUG=\n\nReview-Url: https://codereview.chromium.org/2216123003\nCr-Commit-Position: refs/heads/master@{#38386}\n","milestone":54},{"_id":"c8241635f1dd6cf539c6dc3839b6a268b50d807c","author":{"name":"haraken","email":"haraken@chromium.org","time":"Wed Aug 03 15:06:50 2016"},"commit":"c8241635f1dd6cf539c6dc3839b6a268b50d807c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Aug 03 15:10:23 2016"},"message":"Change an output parameter of Maybe<T>::To() from a reference to a pointer\n\nThis is a follow-up fix for https://codereview.chromium.org/2194793003/\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2205203002\nCr-Commit-Position: refs/heads/master@{#38305}\n","milestone":54},{"_id":"ce49c329735530d66bb98cb13b4a8f5b1f48500f","author":{"name":"cbruni","email":"cbruni@chromium.org","time":"Wed Aug 03 14:38:37 2016"},"commit":"ce49c329735530d66bb98cb13b4a8f5b1f48500f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Aug 03 14:39:34 2016"},"message":"[api] Add v8::Object::SetAlignedPointerInInternalFields\n\nThis new API function allows for setting several internal fields at once.\nBy avoiding crossing the API each time for setting an internal property we\ncan speed up the wrapper creation which has to set two fields for every new\nobject.\n\nBUG=chromium:630217\n\nReview-Url: https://codereview.chromium.org/2185963002\nCr-Commit-Position: refs/heads/master@{#38299}\n","milestone":54},{"_id":"9a6a56d21fd606415685d2078d120f6acb9a2027","author":{"name":"rskang","email":"rskang@google.com","time":"Tue Aug 02 17:12:20 2016"},"commit":"9a6a56d21fd606415685d2078d120f6acb9a2027","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 02 17:13:13 2016"},"message":"Add args and copy support to V8 tracing controller.\n\nBUG=v8:4561\n\nReview-Url: https://codereview.chromium.org/2190973003\nCr-Commit-Position: refs/heads/master@{#38255}\n","milestone":54},{"_id":"d25e45df73545e6893a9081f38be77b18ffb1485","author":{"name":"alph","email":"alph@chromium.org","time":"Tue Aug 02 09:41:31 2016"},"commit":"d25e45df73545e6893a9081f38be77b18ffb1485","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 02 09:45:00 2016"},"message":"Deprecate CpuProfileNode::GetCallUid\n\nThe client can use scriptId + lineNumber + columnNumber\nto uniquelly identify the call site.\n\nReview-Url: https://codereview.chromium.org/2199003003\nCr-Commit-Position: refs/heads/master@{#38236}\n","milestone":54},{"_id":"292cebc58bc827992c43a6a0f9e6f3887b3c1f30","author":{"name":"mattloring","email":"mattloring@google.com","time":"Mon Aug 01 16:17:37 2016"},"commit":"292cebc58bc827992c43a6a0f9e6f3887b3c1f30","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Aug 01 16:20:54 2016"},"message":"Add libplatform deps file\n\nAdd deps file allowing libplatform.h to include v8-tracing.h.\n\nAdditionally removes redundant include/ that was causing build errors\nfor node-lkgr.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2195403002\nCr-Commit-Position: refs/heads/master@{#38217}\n","milestone":54},{"_id":"cf1779495d454003b806d50de80a2c713a782466","author":{"name":"haraken","email":"haraken@chromium.org","time":"Fri Jul 29 10:54:30 2016"},"commit":"cf1779495d454003b806d50de80a2c713a782466","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jul 29 10:56:57 2016"},"message":"Introduce Maybe::To/ToChecked\n\nPer discussion in https://groups.google.com/a/chromium.org/d/topic/platform-architecture-dev/vGLGCaMqhCU/discussion\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2194793003\nCr-Commit-Position: refs/heads/master@{#38173}\n","milestone":54},{"_id":"43ab247f56b2742214f848edc977e9bc3593bf2b","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Jul 27 07:47:16 2016"},"commit":"43ab247f56b2742214f848edc977e9bc3593bf2b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jul 27 07:50:31 2016"},"message":"Remove NaCl support.\n\nReview-Url: https://codereview.chromium.org/2175193003\nCr-Commit-Position: refs/heads/master@{#38081}\n","milestone":54},{"_id":"3d598452679ce208ad9b2f48e0fb3fae352ce375","author":{"name":"fmeawad","email":"fmeawad@chromium.org","time":"Tue Jul 26 22:13:35 2016"},"commit":"3d598452679ce208ad9b2f48e0fb3fae352ce375","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jul 26 22:15:39 2016"},"message":"[Tracing] V8 Tracing Controller\n\nV8 has had a trace event macro interface for while, but without a tracing\ncontroller a standalone V8 would be unable to collect traces.\n\nThis CL introduces a complete Tracing Controller system for V8.\nIt is fully function except that it does not yet store trace event args.\n\nThis CL has a few components,\nThe tracing controller itself, contributed by the author of this CL\nThe Trace config (including the parser), contributed by lpy@\nThe Trace Object, Trace Writer, and Trace Buffer are all contributed by rksang@\n\nBUG=v8:4561\nLOG=N\n\nReview-Url: https://codereview.chromium.org/2137013006\nCr-Commit-Position: refs/heads/master@{#38073}\n","milestone":54},{"_id":"ff542972f677c9d5b4f604da605d2c7610a820ad","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Jul 20 08:50:32 2016"},"commit":"ff542972f677c9d5b4f604da605d2c7610a820ad","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jul 20 08:52:18 2016"},"message":"[debugger] remove deprecated api functions.\n\nReview-Url: https://codereview.chromium.org/2162503002\nCr-Commit-Position: refs/heads/master@{#37892}\n","milestone":54},{"_id":"562bb5823c4dd4eb8520b0f3fd3a969d3c4922cd","author":{"name":"jochen","email":"jochen@chromium.org","time":"Tue Jul 19 12:21:52 2016"},"commit":"562bb5823c4dd4eb8520b0f3fd3a969d3c4922cd","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jul 19 12:22:37 2016"},"message":"Add API to create a \"remote\" instance of a given FunctionTemplate\n\nBUG=chromium:618305\nR=verwaest@chromium.org\nCC=dcheng@chromium.org,haraken@chromium.org\n\nReview-Url: https://codereview.chromium.org/2162443002\nCr-Commit-Position: refs/heads/master@{#37867}\n","milestone":54},{"_id":"0abba43524eb618ae9733a28d424b395722ea33b","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Tue Jul 19 06:13:34 2016"},"commit":"0abba43524eb618ae9733a28d424b395722ea33b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jul 19 06:16:14 2016"},"message":"[stubs] Improve code generation for ToBoolean.\n\nIntroduce a proper CodeStubAssembler::BranchIfToBooleanIsTrue helper\nmethod, that branches to if_true/if_false labels depending on whether\nthe value that is passed would yield true or false when fed to\nToBoolean. Use this helper to implement the bytecode handlers w/o having\nto materialize the temporary booleans and essentially branching twice.\nThe CodeStubAssembler::BranchIfToBooleanIsTrue helper favors the most\nlikely case of a Boolean constant now.\n\nAlso migrate the ToBooleanStub to a ToBoolean TurboFan builtin, that\nalso uses the helper method under the hood.\n\nRemove the now obsolete Oddball::to_boolean field.\n\nR=hpayer@chromium.org, rmcilroy@chromium.org, yangguo@chromium.org\n\nReview-Url: https://codereview.chromium.org/2151163002\nCr-Commit-Position: refs/heads/master@{#37849}\n","milestone":54},{"_id":"d52b403f51ee52507ad0ef83645aef551cce8962","author":{"name":"daniel.bevenius","email":"daniel.bevenius@gmail.com","time":"Mon Jul 18 12:36:51 2016"},"commit":"d52b403f51ee52507ad0ef83645aef551cce8962","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jul 18 12:39:49 2016"},"message":"Minor typos in v8.h code documentation.\n\nWhen reading through the source code (v8.h) I found some minor typos\nwhich I wanted to report.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2130513002\nCr-Commit-Position: refs/heads/master@{#37835}\n","milestone":54},{"_id":"ad93c01aa5dae273d1209faca200a8bd331647ed","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Jul 18 09:29:35 2016"},"commit":"ad93c01aa5dae273d1209faca200a8bd331647ed","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jul 18 09:32:01 2016"},"message":"Track peak Zone memory usage and report it via HeapStatistics\n\nBUG=\nR=ulan@chromium.org,verwaest@chromium.org\n\nReview-Url: https://codereview.chromium.org/2153423002\nCr-Commit-Position: refs/heads/master@{#37824}\n","milestone":54},{"_id":"bc44b1c627e92000cd37d46092f8bed8986f52f5","author":{"name":"wfh","email":"wfh@chromium.org","time":"Thu Jul 14 19:41:01 2016"},"commit":"bc44b1c627e92000cd37d46092f8bed8986f52f5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jul 14 19:42:39 2016"},"message":"V8: Add API to report OOM to embedder.\n\nThis is a dependent CL for the blink/chromium side change in https://codereview.chromium.org/2130293003/\n\nBUG=614440\n\nReview-Url: https://codereview.chromium.org/2139873002\nCr-Commit-Position: refs/heads/master@{#37781}\n","milestone":54},{"_id":"f810ccc86759f204f8f149ba4b40f6166d5bae2b","author":{"name":"daniel.bevenius","email":"daniel.bevenius@gmail.com","time":"Thu Jul 14 06:32:14 2016"},"commit":"f810ccc86759f204f8f149ba4b40f6166d5bae2b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jul 14 06:34:26 2016"},"message":"Updating the code example in FunctionTemplate class documentation\n\nCurrently the code example in the FunctionTemplate class documentation\nis out of date. This commit updates the examples so they compile and run\nwithout error.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2127523003\nCr-Commit-Position: refs/heads/master@{#37741}\n","milestone":54},{"_id":"992e34c21635b179a993b82ac1d81753e7a6a57a","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Jul 11 20:11:06 2016"},"commit":"992e34c21635b179a993b82ac1d81753e7a6a57a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jul 11 20:11:51 2016"},"message":"Don't compile functions in a context the caller doesn't have access to\n\nInstead just return undefined\n\nA side effect of this is that it's no longer possible to compile\nfunctions in a detached context.\n\nBUG=chromium:541703\nR=verwaest@chromium.org,bmeurer@chromium.org\nCQ_INCLUDE_TRYBOTS=tryserver.chromium.linux:linux_chromium_rel_ng\n\nReview-Url: https://codereview.chromium.org/2034083002\nCr-Commit-Position: refs/heads/master@{#37657}\n","milestone":54},{"_id":"f592f2e51642b0e21ef7fadc6b25f208841cc4ef","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Jul 11 14:31:24 2016"},"commit":"f592f2e51642b0e21ef7fadc6b25f208841cc4ef","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jul 11 14:32:48 2016"},"message":"Fix small typo in NewRemoteContext comment\n\nR=verwaest@chromium.org,dcheng@chromium.org\nBUG=\n\nReview-Url: https://codereview.chromium.org/2137943003\nCr-Commit-Position: refs/heads/master@{#37647}\n","milestone":54},{"_id":"120b753f71af7588480f4e35bdb6ffb001e87e2e","author":{"name":"alph","email":"alph@chromium.org","time":"Fri Jul 08 15:00:23 2016"},"commit":"120b753f71af7588480f4e35bdb6ffb001e87e2e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jul 08 15:01:10 2016"},"message":"Introduce v8::CpuProfiler::New and v8::CpuProfiler::Dispose API.\n\nIsolate is not going to retain a CPU profiler.\nThe client will be creating an instance of profiler when needed.\n\nDeprectate v8::Isolate::GetCpuProfiler()\n\nBUG=v8:4789\n\nReview-Url: https://codereview.chromium.org/2117343006\nCr-Commit-Position: refs/heads/master@{#37613}\n","milestone":54},{"_id":"0058f82e2c47b8e12428cbb37093d10eaa4a8064","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Jul 07 19:37:05 2016"},"commit":"0058f82e2c47b8e12428cbb37093d10eaa4a8064","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jul 07 19:38:08 2016"},"message":"Add an API to create a detached global object\n\nSuch an object can be used to later create a context from it. It has to\nhave access checks with handlers enabled, as it cannot be accessed\notherwise.\n\nBUG=chromium:618305\nR=verwaest@chromium.org\n\nReview-Url: https://codereview.chromium.org/2107673003\nCr-Commit-Position: refs/heads/master@{#37594}\n","milestone":54},{"_id":"3172f6a9ce72e7318dd55239677dd542a3fab9e6","author":{"name":"lpy","email":"lpy@chromium.org","time":"Wed Jul 06 18:37:10 2016"},"commit":"3172f6a9ce72e7318dd55239677dd542a3fab9e6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jul 06 18:40:31 2016"},"message":"Expose TickSample and its APIs in v8-profiler.h\n\nWe want to eventually move the profiling functionality out of V8 as library,\nthis patch exposes TickSample and its APIs in v8-profiler.h so that when\nembedders use library, they can have more details.\n\nMinor change: Rename tick-sample.[h|cc] to simulator-helper.[h|cc].\n\nBUG=v8:4789\nLOG=N\n\nReview-Url: https://codereview.chromium.org/2105943002\nCr-Commit-Position: refs/heads/master@{#37564}\n","milestone":54},{"_id":"46428e45e9982a7490685ff1af6ffe680096c1a4","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Jul 06 11:41:37 2016"},"commit":"46428e45e9982a7490685ff1af6ffe680096c1a4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jul 06 11:42:04 2016"},"message":"Make it possible to create a v8::Function directly w/o a prototype\n\nBUG=chromium:625823\nR=verwaest@chromium.org\n\nReview-Url: https://codereview.chromium.org/2123143002\nCr-Commit-Position: refs/heads/master@{#37549}\n","milestone":54},{"_id":"0ff7b4830c82b9e6a9f14d375b05ee64009e1d01","author":{"name":"littledan","email":"littledan@chromium.org","time":"Fri Jul 01 19:16:53 2016"},"commit":"0ff7b4830c82b9e6a9f14d375b05ee64009e1d01","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jul 01 19:20:11 2016"},"message":"Implement immutable prototype chains\n\nThis patch implements \"immutable prototype exotic objects\" from the ECMAScript\nspec, which are objects whose __proto__ cannot be changed, but are not otherwise\nfrozen. They are introduced in order to prevent a Proxy from being introduced\nto the prototype chain of the global object.\n\nThe API is extended by a SetImmutablePrototype() call in ObjectTemplate, which\ncan be used to vend new immutable prototype objects. Additionally, Object.prototype\nis an immutable prototype object.\n\nIn the implementation, a new bit is added to Maps to say whether the prototype is\nimmutable, which is read by SetPrototype. Map transitions to the immutable prototype\nstate are not saved in the transition tree because the main use case is just for\nthe prototype chain of the global object, which there will be only one of per\nContext, so no need to take up the extra word for a pointer in each full transition\ntree.\n\nBUG=v8:5149\n\nReview-Url: https://codereview.chromium.org/2108203002\nCr-Commit-Position: refs/heads/master@{#37482}\n","milestone":54},{"_id":"805b0dd0e10ad6d8304ff85a4d4aa804d6d04404","author":{"name":"hablich","email":"hablich@chromium.org","time":"Thu Jun 30 14:01:03 2016"},"commit":"805b0dd0e10ad6d8304ff85a4d4aa804d6d04404","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jun 30 14:03:34 2016"},"message":"Update version to 5.4\n\nR=machenbach@chromium.org\nNOTRY=true\n\nReview-Url: https://codereview.chromium.org/2113663002\nCr-Commit-Position: refs/heads/master@{#37443}\n","milestone":54},{"_id":"356a85be5d8dd3087c319d73f2e80d16957c9d6b","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Jun 29 07:39:45 2016"},"commit":"356a85be5d8dd3087c319d73f2e80d16957c9d6b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 29 07:42:40 2016"},"message":"Provide a convenience array buffer allocator\n\nBUG=none\nR=ulan@chromium.org\n\nReview-Url: https://codereview.chromium.org/2101413002\nCr-Commit-Position: refs/heads/master@{#37365}\n","milestone":54},{"_id":"c4f4d6352fcf9466b46415e65d6c3793923b6a3d","author":{"name":"ulan","email":"ulan@chromium.org","time":"Tue Jun 28 17:30:20 2016"},"commit":"c4f4d6352fcf9466b46415e65d6c3793923b6a3d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jun 28 17:32:32 2016"},"message":"Make v8::Isolate::SetRAILMode thread safe and remove the\nPERFORMANCE_DEFAULT mode.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/2108503003\nCr-Commit-Position: refs/heads/master@{#37340}\n","milestone":54},{"_id":"872c461b0003f0d453afcbd3c166faeb132293f8","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Tue Jun 28 13:47:35 2016"},"commit":"872c461b0003f0d453afcbd3c166faeb132293f8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jun 28 13:48:05 2016"},"message":"[snapshot] revisit snapshot API.\n\nThis part of the snapshot API should not be in use yet, so we can still\nchange this. The motivation for this change is:\n- Use MaybeHandle where reasonable.\n- Remove ambiguity: when we use index to create context from snapshot,\n  we should not have a silent fallback if snapshot is not available.\n- Symmetry: rename to Context::FromSnapshot to mirror templates.\n\nR=jochen@chromium.org\nBUG=chromium:617892\n\nReview-Url: https://codereview.chromium.org/2100073002\nCr-Commit-Position: refs/heads/master@{#37334}\n","milestone":54},{"_id":"5582e158e5d40eb61caf2f8968c37573b802cce0","author":{"name":"jwolfe","email":"jwolfe@igalia.com","time":"Mon May 16 23:20:29 2016"},"commit":"5582e158e5d40eb61caf2f8968c37573b802cce0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 16 23:22:26 2016"},"message":"Add UseCounter for decimal with leading zero.\n\nRe-landing https://codereview.chromium.org/1948403002/\n\nNew changes:\n\nmove variable initialization to make compiler happy\n\nBUG=v8:4973\nLOG=y\n\nReview-Url: https://codereview.chromium.org/1969203004\nCr-Commit-Position: refs/heads/master@{#36262}\n","milestone":52},{"_id":"b32f9599bee0f37fd75129482b0008b953870129","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Fri May 13 10:11:32 2016"},"commit":"b32f9599bee0f37fd75129482b0008b953870129","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 13 10:13:38 2016"},"message":"[api] Clarify expectations of ArrayBuffer::Allocator in API\n\nBUG=chromium:611688\nLOG=Y\nR=jochen@chromium.org\n\nReview-Url: https://codereview.chromium.org/1978773002\nCr-Commit-Position: refs/heads/master@{#36231}\n","milestone":52},{"_id":"d0b6686c14339bd5d0aeaf610705c7ed85393e1f","author":{"name":"jwolfe","email":"jwolfe@igalia.com","time":"Thu May 12 20:51:48 2016"},"commit":"d0b6686c14339bd5d0aeaf610705c7ed85393e1f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu May 12 20:54:14 2016"},"message":"In parallel to the strict octal check that would reject `012` in strict mode, this patch collects UseCounters for `089` in strict mode. The spec says this should be an error, but this patch does not report it as such.\n\nBUG=v8:4973\nLOG=y\n\nReview-Url: https://codereview.chromium.org/1948403002\nCr-Commit-Position: refs/heads/master@{#36221}\n","milestone":52},{"_id":"c0b2cdf8043fea503659652ec733b13a4a2900bb","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Tue May 10 10:45:29 2016"},"commit":"c0b2cdf8043fea503659652ec733b13a4a2900bb","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 10 10:46:06 2016"},"message":"V8_EXPORT EmbedderHeapTracer\n\nLOG=no\nBUG=468240\n\nReview-Url: https://codereview.chromium.org/1961083005\nCr-Commit-Position: refs/heads/master@{#36130}\n","milestone":52},{"_id":"6f419dfe6796296c3e944faac2f3724198b4062f","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Mon May 09 16:20:57 2016"},"commit":"6f419dfe6796296c3e944faac2f3724198b4062f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 09 16:21:35 2016"},"message":"[V8] Add v8::Value::TypeOf to API\n\nThere is TypeOf static method on object inside V8. In this CL I've extracted it via API.\n\nLOG=Y\nR=yangguo@chromium.org\nBUG=chromium:595206\n\nReview-Url: https://codereview.chromium.org/1829833002\nCr-Commit-Position: refs/heads/master@{#36113}\n","milestone":52},{"_id":"acbbd59f29306a679e9e85b8ccfaa4eaaf969a6d","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon May 09 13:23:50 2016"},"commit":"acbbd59f29306a679e9e85b8ccfaa4eaaf969a6d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 09 13:24:21 2016"},"message":"Expose IsConstructor to the C++ API\n\nBUG=v8:4993\nR=verwaest@chromium.org\nLOG=y\n\nReview-Url: https://codereview.chromium.org/1964433002\nCr-Commit-Position: refs/heads/master@{#36107}\n","milestone":52},{"_id":"a6da98d86ffab7e1e50319ed12b57fcb366e24ee","author":{"name":"ulan","email":"ulan@chromium.org","time":"Mon May 09 07:15:43 2016"},"commit":"a6da98d86ffab7e1e50319ed12b57fcb366e24ee","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 09 07:18:00 2016"},"message":"Introduce a new phantom weakness type without finalization callback.\nHandles of this type are automatically reset by the garbage collector\nwhen their objects are not longer reachable.\n\nThe motivation is to reduce pause time of external.weak_global_handles\nphase of the garbage collector by not maintaing the list of pending\ncallbacks and not calling the callbacks.\n\nLocal testing on discourse page of the v8.inifinite_scroll benchmark\nshows 7x improvement for this GC phase.\n\nBefore:\nexternal.weak_global_handles\n len: 21\n min: 0.0\n max: 4.5\n avg: 0.757142857143\n\nAfter:\nexternal.weak_global_handles\n len: 21\n min: 0.0\n max: 0.5\n avg: 0.109523809524\n\nA follow-up patch will enable the new phantom handles in Chromium.\n\nBUG=chromium:608333\nLOG=NO\n\nReview-Url: https://codereview.chromium.org/1950963002\nCr-Commit-Position: refs/heads/master@{#36095}\n","milestone":52},{"_id":"82dcb2beeeb85369902c76e48374caed4fac58fb","author":{"name":"ulan","email":"ulan@chromium.org","time":"Fri May 06 13:17:43 2016"},"commit":"82dcb2beeeb85369902c76e48374caed4fac58fb","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 06 13:18:07 2016"},"message":"[API] Remove deprecated WeakCallbackData and related functions.\n\nThis removes:\n- PersistentBase::SetWeak that takes WeakCallbackData.\n  The embedders should use the version that takes WeakCallbackInfo.\n- PersistentBase::SetPhantom.\n  The embedders should SetWeak that takes WeakCallbackInfo.\n\nFunctions in DefaultPersistentValueMapTraits are changed to accept\nWeakCallbackInfo instead of WeakCallbackData.\n\nBUG=chromium:609808\nLOG=NO\n\nReview-Url: https://codereview.chromium.org/1953263002\nCr-Commit-Position: refs/heads/master@{#36079}\n","milestone":52},{"_id":"0a8cd4dc02ee1237f3c65ec20ecbc26c1bbda76e","author":{"name":"alph","email":"alph@chromium.org","time":"Wed May 04 19:16:05 2016"},"commit":"0a8cd4dc02ee1237f3c65ec20ecbc26c1bbda76e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed May 04 19:16:27 2016"},"message":"Sampling heap profiler: Force Full GC before retrieving the profile.\n\nBUG=v8:4959\nLOG=N\n\nReview-Url: https://codereview.chromium.org/1949693003\nCr-Commit-Position: refs/heads/master@{#36042}\n","milestone":52},{"_id":"f0d27360a6e574eddcad5dca8ceba899c2fa0b3c","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Wed May 04 16:15:10 2016"},"commit":"f0d27360a6e574eddcad5dca8ceba899c2fa0b3c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed May 04 16:15:36 2016"},"message":"Add v8::Object::GetOwnPropertyNames(context, filter) method\n\nThis method provides ability to get all properties of the object with passed filter in addition to existing GetOwnPropertyNames(context) method that returns only enumerable properties.\n\nBUG=v8:3861,chromium:581495\nR=yangguo@chromium.org\nLOG=Y\n\nReview-Url: https://codereview.chromium.org/1943773002\nCr-Commit-Position: refs/heads/master@{#36031}\n","milestone":52},{"_id":"d441100b70acbe19b439c76c0159b2bf758aec4a","author":{"name":"ulan","email":"ulan@chromium.org","time":"Wed May 04 11:54:55 2016"},"commit":"d441100b70acbe19b439c76c0159b2bf758aec4a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed May 04 11:56:20 2016"},"message":"Deprecate PersistentBase::MarkPartiallyDependent.\n\nIt is already effectively disabled by --scavenge_reclaim_unmodified_objects.\n\nBUG=\n\nReview-Url: https://codereview.chromium.org/1944793002\nCr-Commit-Position: refs/heads/master@{#36018}\n","milestone":52},{"_id":"6df9379cb0e3400b5d50d582d3cb10d8a65d7757","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Tue May 03 11:47:47 2016"},"commit":"6df9379cb0e3400b5d50d582d3cb10d8a65d7757","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 03 11:48:00 2016"},"message":"[API] remove (deprecated) hidden properties.\n\nv8::Object::{Set,Get,Delete}HiddenValue have long been deprecated.\nPlease use v8::Object::{Set,Has,Get}Private instead.\n\nR=jochen@chromium.org\nLOG=Y\n\nReview-Url: https://codereview.chromium.org/1942233002\nCr-Commit-Position: refs/heads/master@{#35977}\n","milestone":52},{"_id":"306c412ce04a7c21a208e33dfce530536453c20d","author":{"name":"adamk","email":"adamk@chromium.org","time":"Wed Apr 27 18:07:21 2016"},"commit":"306c412ce04a7c21a208e33dfce530536453c20d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 27 18:09:05 2016"},"message":"[api] Expose FunctionCallbackInfo::NewTarget\n\nThis is needed by Blink to implement the Custom Elements spec.\n\nBUG=v8:4261\nLOG=y\n\nReview-Url: https://codereview.chromium.org/1910253005\nCr-Commit-Position: refs/heads/master@{#35833}\n","milestone":52},{"_id":"7895b396f896548151fe0cafac4951c817bbe914","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Apr 25 15:21:11 2016"},"commit":"7895b396f896548151fe0cafac4951c817bbe914","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 25 15:22:32 2016"},"message":"[api] Introduce MicrotasksScope::IsRunningMicrotasks\n\nReturns true while V8 executes microtasks\n\nBUG=\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/1920813002\n\nCr-Commit-Position: refs/heads/master@{#35769}\n","milestone":52},{"_id":"d1fb8384e02be1904e6a4e033ec1d3a6053a53f5","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Mon Apr 25 09:16:57 2016"},"commit":"d1fb8384e02be1904e6a4e033ec1d3a6053a53f5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 25 09:18:37 2016"},"message":"[turbofan] Introduce Oddball::to_number_raw and use it for change lowering.\n\nThe Oddball::to_number_raw field contains the actual double value of the\nOddball converted to a number, and is located at the same offset as the\nHeapNumber::value field, so for lowering changes we don't need to check\nfor undefined (or any other oddball explicitly).\n\nR=jarin@chromium.org\n\nReview URL: https://codereview.chromium.org/1922443002\n\nCr-Commit-Position: refs/heads/master@{#35753}\n","milestone":52},{"_id":"39939eebf84e8f62b9fffa46b0e18563e800516e","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Tue Apr 19 12:52:55 2016"},"commit":"39939eebf84e8f62b9fffa46b0e18563e800516e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 19 12:55:01 2016"},"message":"Remove isolate arg from EmbedderHeapTracer methods.\n\nAs the code on the blink side sits down, we realize we don't need isolate arg\nanymore. As the heap tracer is set per isolate, it can actually be confusing if\nthe isolate passed as argument is always the same as the isolate the heap tracer\nwas set for. Wdyt?\n\nBUG=468240\nLOG=no\n\nReview URL: https://codereview.chromium.org/1900953003\n\nCr-Commit-Position: refs/heads/master@{#35620}\n","milestone":52},{"_id":"0eae5650dec265e961a1024fd2090301f2cdca16","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Mon Apr 18 12:38:40 2016"},"commit":"0eae5650dec265e961a1024fd2090301f2cdca16","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 18 12:39:25 2016"},"message":"Polish EmbedderHeapTracer and move some checks from blink to v8\n\nQuick one, ptal.\n\nBUG=468240\nLOG=no\n\nReview URL: https://codereview.chromium.org/1895753002\n\nCr-Commit-Position: refs/heads/master@{#35578}\n","milestone":52},{"_id":"0ba934d7bff00298511e38139c7f1dda076fc179","author":{"name":"haavardm","email":"haavardm@opera.com","time":"Fri Apr 15 18:23:48 2016"},"commit":"0ba934d7bff00298511e38139c7f1dda076fc179","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 15 18:24:28 2016"},"message":"Expose JSON stringifier through V8 API\n\nBUG=602659\nLOG=N\n\nReview URL: https://codereview.chromium.org/1891203002\n\nCr-Commit-Position: refs/heads/master@{#35543}\n","milestone":52},{"_id":"00a589d9ffdfcd73126dffcf1683f811305d6752","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri Apr 15 12:57:41 2016"},"commit":"00a589d9ffdfcd73126dffcf1683f811305d6752","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 15 12:59:47 2016"},"message":"[api] Bring back finalizers on global handles\n\nSeems like node.js depends on it in many places. At least try to get rid\nof WeakCallbackData vs WeakCallbackInfo\n\nBUG=\nR=hpayer@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1883173002\n\nCr-Commit-Position: refs/heads/master@{#35528}\n","milestone":52},{"_id":"b60548260055e3b7bda3d7ad77174d002353c162","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Fri Apr 15 12:22:20 2016"},"commit":"b60548260055e3b7bda3d7ad77174d002353c162","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 15 12:23:48 2016"},"message":"Add RegisterExternallyReferencedObject to PersistenValueMap\n\nPersistentValueMap is used to hold per-world wrappers in the blink. Currently,\nwhen we trace wrappers, we visit wrappers in all worlds via this PersistentValueMap. This cl introduces convenient (and faster) way of registering these external references.\n\nBUG=468240\nLOG=no\n\nReview URL: https://codereview.chromium.org/1883043003\n\nCr-Commit-Position: refs/heads/master@{#35523}\n","milestone":52},{"_id":"93c60dca132a30d58a8a6c7ee2b0e1937b5bb331","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri Apr 15 12:18:02 2016"},"commit":"93c60dca132a30d58a8a6c7ee2b0e1937b5bb331","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 15 12:19:28 2016"},"message":"[api] Expose ES6 7.3.14 SetIntegrityLevel on v8::Object\n\nBUG=v8:4846\nR=verwaest@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1889903003\n\nCr-Commit-Position: refs/heads/master@{#35520}\n","milestone":52},{"_id":"97e3909a53a1865df1032d31c3870395c210579a","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Thu Apr 14 08:53:31 2016"},"commit":"97e3909a53a1865df1032d31c3870395c210579a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 14 08:53:41 2016"},"message":"[api] Deprecate *MemoryAllocationCallback\n\nTo keep track of memory characteristics of a JS program use\nGetHeapSpaceStatistics from a combination of\n- a GC epilogue callback registered using AddGCEpilogueCallback\n- an interrupt registered using RequestInterrupt\n\nRationale:\nThe feature is currently broken as those callbacks are (also) executed from\nbackground threads, breaking our implicit contract for only performing callbacks\non the foreground thread. Furhtermore, it's not clear for the embedder whether\nthese allocations originate in JS, or are required for a GC.\n\nNote:\n- The already deprecated non-isolate versions are removed with this CL.\n\nR=jochen@chromium.org\nBUG=v8:4813\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1886573006\n\nCr-Commit-Position: refs/heads/master@{#35474}\n","milestone":52},{"_id":"6d1f7282aff7cf332bbecf3f63e99b2e7716fa14","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Tue Apr 12 10:31:38 2016"},"commit":"6d1f7282aff7cf332bbecf3f63e99b2e7716fa14","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 12 10:33:27 2016"},"message":"Use EmbedderHeapTracer instead of object grouping when embedder sets the heap tracer.\n\nWhen the embedder sets the heap tracer, V8, during marking, will collect all reachable wrappers, and then ask embedder to trace its heap. The embedder is expected to call PersistentBase::RegisterExternalReference with all wrappers reachable from the given ones. This fixed point iteration happens in MarkCompact::ProcessEphemeralMarking.\n\nFor more efficient object visiting during marking, we need a special JS_API_OBJECT_TYPE (in tandem with already existing JS_SPECIAL_API_OBJECT_TYPE) and corresponding visitor (JSApiObjectVisitor).\n\nBUG=chromium:468240\nLOG=no\n\nReview URL: https://codereview.chromium.org/1844413002\n\nCr-Commit-Position: refs/heads/master@{#35412}\n","milestone":52},{"_id":"b3d793e48ab513b964d3e21be81f6b6713854ab2","author":{"name":"jochen","email":"jochen@chromium.org","time":"Tue Apr 12 09:33:13 2016"},"commit":"b3d793e48ab513b964d3e21be81f6b6713854ab2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 12 09:34:12 2016"},"message":"[api] Introduce ReturnValue::Get\n\nThis is a convenience API that an embedder can use to do final checks on\nthe return value. Note that this creates a new handle and thus defeats\nthe performance optimization done for ReturnValue - an embedder should\nonly use this in non-performance critical code paths.\n\nBUG=\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/1875263003\n\nCr-Commit-Position: refs/heads/master@{#35409}\n","milestone":52},{"_id":"70c4216bc807472b81ed7857e761d8c60a9ee19e","author":{"name":"hablich","email":"hablich@chromium.org","time":"Mon Apr 11 09:27:44 2016"},"commit":"70c4216bc807472b81ed7857e761d8c60a9ee19e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 11 09:28:53 2016"},"message":"Update version to 5.2\n\nR=machenbach@chromium.org\n\nReview URL: https://codereview.chromium.org/1876723002\n\nCr-Commit-Position: refs/heads/master@{#35375}\n","milestone":52},{"_id":"d2eb555ee11f54ca6b227839831ca5419cf2287e","author":{"name":"verwaest","email":"verwaest@chromium.org","time":"Wed Apr 06 10:05:51 2016"},"commit":"d2eb555ee11f54ca6b227839831ca5419cf2287e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 06 10:06:30 2016"},"message":"Use a dictionary-mode code cache on the map rather than a dual system.\n\nThe previous code cache system required stubs to be marked with a StubType, causing them to be inserted either into a fixed array or into a dictionary-mode code cache. This could cause names to be in both cases, and lookup would just find the \"fast\" one first. Given that we clear out the caches on each GC, the memory overhead shouldn't be too bad. Additionally, the dictionary itself should just stay linear for small arrays; that's faster anyway.\n\nThis CL additionally deletes some dead IC code.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1846963002\n\nCr-Commit-Position: refs/heads/master@{#35291}\n","milestone":52},{"_id":"59c7657d642bf500c49da3c4bd0e6d7bf647ec7d","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Wed May 04 13:18:07 2016"},"commit":"59c7657d642bf500c49da3c4bd0e6d7bf647ec7d","committer":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Wed May 04 13:22:04 2016"},"message":"Fix build after bad merge\n\nTBR=hablich@chromium.org\nBUG=v8:4909\nLOG=n\n\nReview URL: https://codereview.chromium.org/1945283002 .\n\nCr-Commit-Position: refs/branch-heads/5.0@{#55}\nCr-Branched-From: ad16e6c2cbd2c6b0f2e8ff944ac245561c682ac2-refs/heads/5.0.71@{#1}\nCr-Branched-From: bd9df50d75125ee2ad37b3d92c8f50f0a8b5f030-refs/heads/master@{#34215}\n","milestone":50},{"_id":"e64fd96a6c38ccc46b8bd99cc6adb83a978fbef0","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Wed Apr 27 05:40:37 2016"},"commit":"e64fd96a6c38ccc46b8bd99cc6adb83a978fbef0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 27 05:43:56 2016"},"message":"[turbofan] Don't use the CompareIC in JSGenericLowering.\n\nThis is essentially a cherry-pick that was applied before plus the\nremoval of a test that is now failing because it depends on more\ninvolved changes. The test case checks comparison of different\nundetectable JSReceivers, which is not relevant in practice, as there's\nonly one of these at most, which is document.all.\n\nMerged 55b4df7357557eb16377ad9227e4e0a4224b7885\nMerged d00da47b61462681b48e48bdff4a80a33da1a6d6\nMerged 4da2e3dbcfc686f68e56c0ad5575257dc2d8ccf1\nMerged c1507e158780b170f25f0f1da87cb5d78a56faee\n\n[runtime] Unify comparison operator runtime entries.\n\n[turbofan] Don't use the CompareIC in JSGenericLowering.\n\nPPC: [runtime] Unify comparison operator runtime entries.\n\nPPC: [turbofan] Don't use the CompareIC in JSGenericLowering.\n\nR=yangguo@chromium.org\nBUG=chromium:590832,v8:4788,chromium:606181\nLOG=N\nNOTRY=true\nNOPRESUBMIT=true\n\nCr-Commit-Position: refs/branch-heads/5.0@{#13}\nCr-Branched-From: ad16e6c2cbd2c6b0f2e8ff944ac245561c682ac2-refs/heads/5.0.71@{#1}\nCr-Branched-From: bd9df50d75125ee2ad37b3d92c8f50f0a8b5f030-refs/heads/master@{#34215}\n\nReview URL: https://codereview.chromium.org/1925463003\n\nCr-Commit-Position: refs/branch-heads/5.0@{#44}\nCr-Branched-From: ad16e6c2cbd2c6b0f2e8ff944ac245561c682ac2-refs/heads/5.0.71@{#1}\nCr-Branched-From: bd9df50d75125ee2ad37b3d92c8f50f0a8b5f030-refs/heads/master@{#34215}\n","milestone":50},{"_id":"215351f8bf4352b98aeb738810468c5665226097","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Tue Apr 26 14:04:17 2016"},"commit":"215351f8bf4352b98aeb738810468c5665226097","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 26 14:08:39 2016"},"message":"[debugger] fix crash in debug-evaluate when retrieving values in TDZ.\n\nR=jkummerow@chromium.org\nBUG=chromium:605581\nLOG=N\nNOTRY=true\nNOPRESUBMIT=true\n\nReview URL: https://codereview.chromium.org/1916413002\n\nCr-Commit-Position: refs/branch-heads/5.0@{#43}\nCr-Branched-From: ad16e6c2cbd2c6b0f2e8ff944ac245561c682ac2-refs/heads/5.0.71@{#1}\nCr-Branched-From: bd9df50d75125ee2ad37b3d92c8f50f0a8b5f030-refs/heads/master@{#34215}\n","milestone":50},{"_id":"e93dd427e4815c5041a944eb36e26b97096336c9","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Tue Mar 08 20:01:16 2016"},"commit":"e93dd427e4815c5041a944eb36e26b97096336c9","committer":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Tue Mar 08 20:03:40 2016"},"message":"Fix version an set to 5.0.71.11\n\nTBR=adamk@chromium.org\n\nReview URL: https://codereview.chromium.org/1775123002 .\n\nCr-Commit-Position: refs/branch-heads/5.0@{#16}\nCr-Branched-From: ad16e6c2cbd2c6b0f2e8ff944ac245561c682ac2-refs/heads/5.0.71@{#1}\nCr-Branched-From: bd9df50d75125ee2ad37b3d92c8f50f0a8b5f030-refs/heads/master@{#34215}\n","milestone":50},{"_id":"2371116af64d1d77e8bb5f26d55ea816b26d6bf2","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Tue Mar 01 10:41:54 2016"},"commit":"2371116af64d1d77e8bb5f26d55ea816b26d6bf2","committer":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Tue Mar 01 10:44:45 2016"},"message":"Also disable handle zapping for GN release BUILDS\n\nBUG=chromium:318206\nR=jkummerow@chromium.org, hablich@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1751843002 .\n\nCr-Commit-Position: refs/branch-heads/5.0@{#11}\nCr-Branched-From: ad16e6c2cbd2c6b0f2e8ff944ac245561c682ac2-refs/heads/5.0.71@{#1}\nCr-Branched-From: bd9df50d75125ee2ad37b3d92c8f50f0a8b5f030-refs/heads/master@{#34215}\n","milestone":50},{"_id":"7033ae511f3cca7e5464353e80acbba645e07c44","author":{"name":"littledan","email":"littledan@chromium.org","time":"Mon Feb 22 21:01:29 2016"},"commit":"7033ae511f3cca7e5464353e80acbba645e07c44","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 22 21:02:48 2016"},"message":"Optimize @@species based on a global 'protector' cell\n\nThis patch makes ArraySpeciesCreate fast in V8 by avoiding two property reads\nwhen the following conditions are met:\n- No Array instance has had its __proto__ reset\n- No Array instance has had a constructor property defined\n- Array.prototype has not had its constructor changed\n- Array[Symbol.species] has not been reset\n\nFor subclasses of Array, or for conditions where one of these assumptions is\nviolated, the full lookup of species is done according to the ArraySpeciesCreate\nalgorithm. Although this is a \"performance cliff\", it does not come up in the\nexpected typical use case of @@species (Array subclassing), so it is hoped that\nthis can form a good start. Array subclasses will incur the slowness of looking\nup @@species, but their use won't slow down invocations of, for example,\nArray.prototype.slice on Array base class instances.\n\nPossible future optimizations:\n- For the fallback case where the assumptions don't hold, optimize the two\n  property lookups.\n- For Array.prototype.slice and Array.prototype.splice, even if the full lookup\n  of @@species needs to take place, we still could take the rest of the C++\n  fastpath. However, to do this correctly requires changing the calling convention\n  from C++ to JS to pass the @@species out, so it is not attempted in this patch.\n\nWith this patch, microbenchmarks of Array.prototype.slice do not suffer a\nnoticeable performance regression, unlike their previous 2.5x penalty.\n\nTBR=hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/1689733002\n\nCr-Commit-Position: refs/heads/master@{#34199}\n","milestone":50},{"_id":"0e9ea48c469334b284f3b8d43c432696840206f4","author":{"name":"dgozman","email":"dgozman@chromium.org","time":"Fri Feb 19 18:48:09 2016"},"commit":"0e9ea48c469334b284f3b8d43c432696840206f4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Feb 19 18:48:46 2016"},"message":"Introduce BeforeCallEnteredCallback.\n\nThis new callback is similar to CallCompletedCallback, but is executed before the call has been made.\nAdded Isolate* parameter to CallCompletedCallback, marking previous one as deprecated.\n\nBUG=chromium:585949\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1689863002\n\nCr-Commit-Position: refs/heads/master@{#34167}\n","milestone":50},{"_id":"78f3b2faf50f7e4f103348f4bc45571d10bfc0e7","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri Feb 19 08:37:25 2016"},"commit":"78f3b2faf50f7e4f103348f4bc45571d10bfc0e7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Feb 19 08:37:37 2016"},"message":"Mark old SetAccessCheckCallback as deprecated\n\nR=verwaest@chromium.org\nLOG=y\nBUG=none\n\nReview URL: https://codereview.chromium.org/1711833002\n\nCr-Commit-Position: refs/heads/master@{#34142}\n","milestone":50},{"_id":"f0090eee1224c2d421a4bf893ea39864ee14b4b3","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Feb 18 08:05:18 2016"},"commit":"f0090eee1224c2d421a4bf893ea39864ee14b4b3","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Feb 18 08:06:08 2016"},"message":"Add comment to use counter def, so it doesn't constantly get out of sync\n\nR=adamk@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/1705013002\n\nCr-Commit-Position: refs/heads/master@{#34101}\n","milestone":50},{"_id":"44823c3c6965966c63b7e2e2361d0f2a58d196ea","author":{"name":"fmeawad","email":"fmeawad@chromium.org","time":"Wed Feb 17 19:56:09 2016"},"commit":"44823c3c6965966c63b7e2e2361d0f2a58d196ea","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 17 19:56:33 2016"},"message":"Add Scoped Context Info (Isolate) to V8 Traces\n\nThis patch adds the newly added support for contexts in V8 Tracing, as well\nas use it to mark all the entry points for a V8 Isolate.\n\nBUG=v8:4565\nLOG=N\n\nReview URL: https://codereview.chromium.org/1686233002\n\nCr-Commit-Position: refs/heads/master@{#34092}\n","milestone":50},{"_id":"f222240374169c69186f5b59ea50101841642109","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Fri Feb 05 15:37:02 2016"},"commit":"f222240374169c69186f5b59ea50101841642109","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Feb 05 15:37:37 2016"},"message":"[platform] Add NumberOfAvailableBackgroundThreads\n\nThe call can be used by the embedder to provide information on the workers\nexecuting background tasks.\n\nBUG=chromium:524425\nLOG=N\n\nReview URL: https://codereview.chromium.org/1664203004\n\nCr-Commit-Position: refs/heads/master@{#33788}\n","milestone":50},{"_id":"a75b2c8f69634685288b419c8b4daf2d661b4bf4","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Feb 03 10:02:26 2016"},"commit":"a75b2c8f69634685288b419c8b4daf2d661b4bf4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 03 10:02:35 2016"},"message":"Add the data parameter back to the access check callback\n\nBUG=none\nR=verwaest@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1653423002\n\nCr-Commit-Position: refs/heads/master@{#33699}\n","milestone":50},{"_id":"d472cf448471dd6bfb7435ea8a69e4403da28233","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Tue Feb 02 10:59:19 2016"},"commit":"d472cf448471dd6bfb7435ea8a69e4403da28233","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Feb 02 11:03:57 2016"},"message":"Add native callbacks to FastAccessorAssembler.\n\n(Trying to finish FastAccessorAssembler this week. This should make it easier to pick up the Blink side of this work later on.)\n\nBUG=chromium:508898\nSOUNDTRACK=http://youtu.be/i1EG-MKy4so\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1620293002\n\nCr-Commit-Position: refs/heads/master@{#33671}\n","milestone":50},{"_id":"ae1f32a1cccc9288a9eeb64e9b3576678fffacd8","author":{"name":"jochen","email":"jochen@chromium.org","time":"Tue Feb 02 08:58:28 2016"},"commit":"ae1f32a1cccc9288a9eeb64e9b3576678fffacd8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Feb 02 08:59:21 2016"},"message":"Don't schedule second pass callbacks if there are no callbacks\n\nBUG=none\nR=haraken@chromium.org,hpayer@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1659433002\n\nCr-Commit-Position: refs/heads/master@{#33658}\n","milestone":50},{"_id":"11e8c03f94c6110d9bc7397741a6904580fac86b","author":{"name":"littledan","email":"littledan@chromium.org","time":"Mon Feb 01 23:01:13 2016"},"commit":"11e8c03f94c6110d9bc7397741a6904580fac86b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 01 23:01:59 2016"},"message":"Add UseCounters for some nonstandard JavaScript features\n\nThis patch adds a UseCounter for each of the following:\n- Allowing duplicate sloppy-mode block-scoped function declarations\n  in the exact same scope\n- for-in loops with an initializer\n\nThe patch also refactors some of the declaration code to clean it up and\nenable the first counter, and adds additional unit tests to nail down\nthe semantics of edge cases of sloppy-mode block-scoped function declarations.\n\nBUG=v8:4693,chromium:579395\nLOG=N\nR=adamk\n\nReview URL: https://codereview.chromium.org/1633743003\n\nCr-Commit-Position: refs/heads/master@{#33650}\n","milestone":50},{"_id":"b6c9b70356ca4d2d36424a384290baaa7ba85207","author":{"name":"xaxxon","email":"xaxxon@gmail.com","time":"Fri Jan 29 09:12:30 2016"},"commit":"b6c9b70356ca4d2d36424a384290baaa7ba85207","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 29 09:12:51 2016"},"message":"Make handle ctors explicit\n\nWithout this change, the v8::Local<> constructor will be picked up by the\ncompiler as an option for an implicit cast for any pointer type.  This leads\nto bad error messages when accidentally passing an erroneous pointer type to\na function wanting a Local<> (complains about a pointer assignment in Local<>'s\nconstructor as opposed to a bad type for the parameter of the function being\ncalled) and also causes ambiguity errors where none should exist when calling\noverloaded functions (for example a function taking either a std::string or a\nv8::Local<v8::Script> cannot be called with a const char * because the compiler\nsees both types as being constructable with a const char *).\n\nR=jochen@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/1647833005\n\nCr-Commit-Position: refs/heads/master@{#33602}\n","milestone":50},{"_id":"4a2f3ee8002d2b062efaf2ff05ad0d6f3e819cb3","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Jan 27 18:18:25 2016"},"commit":"4a2f3ee8002d2b062efaf2ff05ad0d6f3e819cb3","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 27 18:19:20 2016"},"message":"Add use counters for how often we encounter html comments in scripts\n\nR=yangguo@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/1641673002\n\nCr-Commit-Position: refs/heads/master@{#33561}\n","milestone":50},{"_id":"fd20f1659d092badd8e1b37a25e75a3ecf474efb","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Jan 27 15:05:22 2016"},"commit":"fd20f1659d092badd8e1b37a25e75a3ecf474efb","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 27 15:05:39 2016"},"message":"Adding missing explicit to HandleScope ctors\n\nR=verwaest@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/1644603002\n\nCr-Commit-Position: refs/heads/master@{#33557}\n","milestone":50},{"_id":"7068caf5fd614bab588b200d264c0eb3564690af","author":{"name":"alph","email":"alph@chromium.org","time":"Tue Jan 26 20:47:23 2016"},"commit":"7068caf5fd614bab588b200d264c0eb3564690af","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jan 26 20:48:28 2016"},"message":"Add CollectSample API function to CpuProfiler\n\nIt allows embedder to inject a stack sample on demand.\n\nBUG=chromium:579191\nLOG=N\n\nReview URL: https://codereview.chromium.org/1631043002\n\nCr-Commit-Position: refs/heads/master@{#33527}\n","milestone":50},{"_id":"ed2be747ad13746797b655fa4f5c23dc6b0ef3e3","author":{"name":"ishell","email":"ishell@chromium.org","time":"Fri Jan 22 09:53:29 2016"},"commit":"ed2be747ad13746797b655fa4f5c23dc6b0ef3e3","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 22 09:53:51 2016"},"message":"Array length reduction should throw in strict mode if it can't delete an element.\n\nWhen accessor getter callback is called the v8::PropertyCallbackInfo::ShouldThrowOnError() is always false, since according to ES6 there's no difference between strict and non-strict property loads. For the setter case the v8::PropertyCallbackInfo::ShouldThrowOnError() returns true if the property is set in strict context.\n\nInterceptors follow same idea: for getter, enumerator and query callbacks the v8::PropertyCallbackInfo::ShouldThrowOnError() is always false, and for setter and deleter callback the v8::PropertyCallbackInfo::ShouldThrowOnError() returns true in strict context.\n\nThis CL also cleans up the CallApiGetterStub and removes bogus asserts from [arm] Push(reg1, reg2, ..., regN) that prevented from pushing a set of registers containing duplicates.\n\nBUG=v8:4267\nLOG=Y\n\nCommitted: https://crrev.com/1d3e837fcbbd9d9fd5e72dfe85dfd47c025f3c9f\nCr-Commit-Position: refs/heads/master@{#33438}\n\nReview URL: https://codereview.chromium.org/1587073003\n\nCr-Commit-Position: refs/heads/master@{#33461}\n","milestone":50},{"_id":"e5a9947811db9c9e23557dbad27f8b8a349b3262","author":{"name":"ofrobots","email":"ofrobots@google.com","time":"Thu Jan 21 21:13:27 2016"},"commit":"e5a9947811db9c9e23557dbad27f8b8a349b3262","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 21 21:13:44 2016"},"message":"[profiler] Implement POC Sampling Heap Profiler\n\nThis implements a proof-of-concept sampling based heap profiler inspired by\ntcmalloc's heap profiler [1] and Go's mprof/memprofile [2].\n\nThe basic idea is the sample allocations using a randomized Poisson process. At\nany point in time we can cheaply request the set of live sample objects that\nshould be a representative sample of heap. Samples include stack-traces from the\nallocation sites, making this an effective tool for memory leak debugging.\n\nUnlike AllocationTracking, this is intended to be cheap and usable online in\nproduction.\n\nThe proof-of-concept is only sampling new-space allocations at this point.\nSupport for sampling paged space and native allocations is anticipated in the\nfuture.\n\n[1] http://goog-perftools.sourceforge.net/doc/heap_profiler.html\n[2] http://blog.golang.org/profiling-go-programs\n\nReview URL: https://codereview.chromium.org/1555553002\n\nCr-Commit-Position: refs/heads/master@{#33448}\n","milestone":50},{"_id":"1d3e837fcbbd9d9fd5e72dfe85dfd47c025f3c9f","author":{"name":"ishell","email":"ishell@chromium.org","time":"Thu Jan 21 14:22:48 2016"},"commit":"1d3e837fcbbd9d9fd5e72dfe85dfd47c025f3c9f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 21 14:23:09 2016"},"message":"Array length reduction should throw in strict mode if it can't delete an element.\n\nWhen accessor getter callback is called the v8::PropertyCallbackInfo::ShouldThrowOnError() is always false, since according to ES6 there's no difference between strict and non-strict property loads. For the setter case the v8::PropertyCallbackInfo::ShouldThrowOnError() returns true if the property is set in strict context.\n\nInterceptors follow same idea: for getter, enumerator and query callbacks the v8::PropertyCallbackInfo::ShouldThrowOnError() is always false, and for setter and deleter callback the v8::PropertyCallbackInfo::ShouldThrowOnError() returns true in strict context.\n\nThis CL also cleans up the CallApiGetterStub and removes bogus asserts from [arm] Push(reg1, reg2, ..., regN) that prevented from pushing a set of registers containing duplicates.\n\nBUG=v8:4267\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1587073003\n\nCr-Commit-Position: refs/heads/master@{#33438}\n","milestone":50},{"_id":"e4b41d64e582cf1b265a1bd6919d7288dfadfe10","author":{"name":"verwaest","email":"verwaest@chromium.org","time":"Mon Jan 18 15:08:36 2016"},"commit":"e4b41d64e582cf1b265a1bd6919d7288dfadfe10","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jan 18 15:09:08 2016"},"message":"[runtime] remove left-over distinction between AccessorInfo and ExecutableAccessorInfo\n\nReview URL: https://codereview.chromium.org/1600353003\n\nCr-Commit-Position: refs/heads/master@{#33364}\n","milestone":50},{"_id":"ea5a1ac8b5d5fd95cb891e4da2492e08b3ef06e8","author":{"name":"epertoso","email":"epertoso@chromium.org","time":"Fri Jan 15 10:02:52 2016"},"commit":"ea5a1ac8b5d5fd95cb891e4da2492e08b3ef06e8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 15 10:03:15 2016"},"message":"Marks FunctionCallbackInfo's Callee as deprecated.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1582793004\n\nCr-Commit-Position: refs/heads/master@{#33319}\n","milestone":50},{"_id":"725672512ad69befe75584852de57bd345ce063b","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Tue Apr 05 18:11:07 2016"},"commit":"725672512ad69befe75584852de57bd345ce063b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 05 18:13:02 2016"},"message":"[V8] Removed debugger V8::PromiseEvent\n\nWe decided to remove related devtools experiment.\n\nBUG=chromium:526811\nLOG=Y\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/1833563002\n\nCr-Commit-Position: refs/heads/master@{#35275}\n","milestone":51},{"_id":"eebdee8eafa97849cc70c25f3fecf1b075bac248","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Apr 04 16:58:16 2016"},"commit":"eebdee8eafa97849cc70c25f3fecf1b075bac248","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 04 16:58:40 2016"},"message":"[api] Restrict Template::Set to take templates or primitive values\n\nEmbedders that passed in non-primitive values should either use\ngetters/setters (templates) or install a native data property,\notherwise, the values would all result in cross-context leaks\n\nBUG=none\nR=verwaest@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1839983002\n\nCr-Commit-Position: refs/heads/master@{#35244}\n","milestone":51},{"_id":"cb7aa79b1265b09e21a82d31d4c60470a4444fa5","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri Apr 01 10:00:30 2016"},"commit":"cb7aa79b1265b09e21a82d31d4c60470a4444fa5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 01 10:01:56 2016"},"message":"Expose a lower bound of malloc'd memory via heap statistics\n\nWe expect that the majority of malloc'd memory held by V8 is allocated\nin Zone objects. Introduce an Allocator class that is used by Zones to\nmanage memory, and allows for querying the current usage.\n\nBUG=none\nR=titzer@chromium.org,bmeurer@chromium.org,jarin@chromium.org\nLOG=n\nTBR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/1847543002\n\nCr-Commit-Position: refs/heads/master@{#35196}\n","milestone":51},{"_id":"289f3824973714e8a917bdcd485fcd8cbb58fdfd","author":{"name":"hlopko","email":"hlopko@chromium.org","time":"Thu Mar 31 13:38:16 2016"},"commit":"289f3824973714e8a917bdcd485fcd8cbb58fdfd","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 31 13:38:29 2016"},"message":"Introduce EmbedderHeapTracer\n\nBUG=468240\nLOG=no\n\nReview URL: https://codereview.chromium.org/1815153002\n\nCr-Commit-Position: refs/heads/master@{#35162}\n","milestone":51},{"_id":"21f1dfe9169e7e0099141204961fccaf8798975a","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Thu Mar 31 11:15:13 2016"},"commit":"21f1dfe9169e7e0099141204961fccaf8798975a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 31 11:16:26 2016"},"message":"[heap] Remove store buffer top from roots\n\nChange x64 to use the external references like all other platforms.\n\nBUG=chromium:581076\nLOG=N\n\nReview URL: https://codereview.chromium.org/1844283002\n\nCr-Commit-Position: refs/heads/master@{#35160}\n","milestone":51},{"_id":"037f7f62159fe673e29d12419033ddc53ac5002e","author":{"name":"ishell","email":"ishell@chromium.org","time":"Wed Mar 30 11:04:17 2016"},"commit":"037f7f62159fe673e29d12419033ddc53ac5002e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 30 11:05:19 2016"},"message":"[api] Add a switch that controls if ES2015 tail call elimination feature is enabled or not.\n\nBUG=v8:4698\nLOG=N\nTBR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/1842763002\n\nCr-Commit-Position: refs/heads/master@{#35132}\n","milestone":51},{"_id":"bb9b74e75495ff0d00897760f5f13784e88930b0","author":{"name":"ulan","email":"ulan@chromium.org","time":"Thu Mar 24 09:51:44 2016"},"commit":"bb9b74e75495ff0d00897760f5f13784e88930b0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 24 09:53:11 2016"},"message":"Add memory pressure notification API\n\nBased on CL 1777883002.\n\nBUG=chromium:590975\nLOG=NO\n\nReview URL: https://codereview.chromium.org/1813963002\n\nCr-Commit-Position: refs/heads/master@{#35053}\n","milestone":51},{"_id":"890f3dd7c5df5ec330a010928db0b302b8e005f0","author":{"name":"jfb","email":"jfb@chromium.org","time":"Tue Mar 22 15:24:01 2016"},"commit":"890f3dd7c5df5ec330a010928db0b302b8e005f0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 22 15:24:43 2016"},"message":"Use C++11 / gnu++11, not 0x\n\nCleanup, and matches Chromium's build.\n\nReview URL: https://codereview.chromium.org/1820583002\n\nCr-Commit-Position: refs/heads/master@{#34993}\n","milestone":51},{"_id":"2a1570ef1a92f2622418330a1e088f0a5d869fed","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Mar 21 07:52:04 2016"},"commit":"2a1570ef1a92f2622418330a1e088f0a5d869fed","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 21 07:53:23 2016"},"message":"Temporarily undeprecate ForceSet\n\nI first need to figure out what to do about window.document before we\ncan deprecate this: window.document is a regular accessor, however, once\nthe window navigated from about:blank, its value will never change.\nBlink uses ForceSet to then replace the accessor with a data constant\nwhich has way better performance than invoking the accessor all the\ntime.\n\nSince the accessor, however, is installed as read only &\nnon-configurable, there is no spec compliant way to pull this off right\nnow\n\nBUG=chromium:595601\nR=verwaest@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1816033002\n\nCr-Commit-Position: refs/heads/master@{#34919}\n","milestone":51},{"_id":"91d344288aa51ed03eaaa1cb3e368ac1e82f0173","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Fri Mar 18 17:22:32 2016"},"commit":"91d344288aa51ed03eaaa1cb3e368ac1e82f0173","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 18 17:24:19 2016"},"message":"Parser: Make skipping HTML comments optional.\n\nAPI change: This adds a new flag skip_html_comments to v8::ScriptOriginOptions. This flag controls whether V8 will attempt to honour HTML-style comments in JS sources.\n\n(That is: Gracefully ignore <!-- ... ---> in JS sources, which was a popular technique in the early days of JavaScript, to prevent non-JS-enabled browsers from displaying script sources to uses.)\n\nThe flag defaults to 'true' when using v8::ScriptOrigin constructor, which preserves the existing behaviour. Embedders which are happy with the existing behaviour will thus not need any changes.\n\nBUG=chromium:573887\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1801203002\n\nCr-Commit-Position: refs/heads/master@{#34904}\n","milestone":51},{"_id":"f507bc1c7242d338b04d6bba5ea78cbb42cf0e13","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Mar 17 10:32:36 2016"},"commit":"f507bc1c7242d338b04d6bba5ea78cbb42cf0e13","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 17 10:34:16 2016"},"message":"[serializer] Add API to warm up startup snapshot with an additional script.\n\nA startup snapshot is considered cold when it does not contain any\nfunction code. We can now create a warm startup snapshot from a cold one\nby running a warm-up script. Functions exercised by the warm-up script\nare compiled and its code included in the warm startup snapshot. Side\neffects caused by the warm-up script does not persist.\n\nR=vogelheim@chromium.org\nBUG=v8:4836\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1805903002\n\nCr-Commit-Position: refs/heads/master@{#34849}\n","milestone":51},{"_id":"4ea11ca941fc074fcbacace405ac684d20e34f61","author":{"name":"littledan","email":"littledan@chromium.org","time":"Tue Mar 08 19:13:55 2016"},"commit":"4ea11ca941fc074fcbacace405ac684d20e34f61","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 08 19:14:23 2016"},"message":"Add UseCounters for various RegExp compatibility issues\n\nWe have compatibility workarounds to return 'undefined' on accessors\nto RegExp.prototype. This patch adds two UseCounters for two categories\nof this non-spec-compliant path:\n- source\n- ignorecase, multiline, global\n\nR=yangguo\nBUG=chromium:581577\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1762423002\n\nCr-Commit-Position: refs/heads/master@{#34597}\n","milestone":51},{"_id":"9a1387f6a965edb295931012b4f76c689c02a5c2","author":{"name":"dgozman","email":"dgozman@chromium.org","time":"Fri Mar 04 17:41:36 2016"},"commit":"9a1387f6a965edb295931012b4f76c689c02a5c2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 04 17:42:17 2016"},"message":"Introduce v8::MicrotasksScope.\n\nThis scope is used to control microtasks execution when MicrotasksPolicy::kScoped is engaged.\n\nAttempt #2. First one was reverted due to chromium breakage: SetAutorunMicrotasks(false) was broken.\n\nBUG=chromium:585949\nLOG=Y\nTEST=ScopedMicrotasks\n\nReview URL: https://codereview.chromium.org/1741893003\n\nCr-Commit-Position: refs/heads/master@{#34504}\n","milestone":51},{"_id":"10f6a9e62b4081f0b226c9efbd7f015ceeefb2b5","author":{"name":"haraken","email":"haraken@chromium.org","time":"Fri Mar 04 13:04:03 2016"},"commit":"10f6a9e62b4081f0b226c9efbd7f015ceeefb2b5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 04 13:06:25 2016"},"message":"Use a different GCCallbackFlag for GCs triggered by CollectAllAvailableGarbage\n\nBlink wants to distinguish GCs triggered by CollectAllAvailableGarbage\nfrom GCs forced by testing. This CL introduces a new flag to differentiate\nthe two GC types.\n\nBUG=591463\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1757263003\n\nCr-Commit-Position: refs/heads/master@{#34494}\n","milestone":51},{"_id":"db77cec242dbdf8ee26da8232fa930270429f253","author":{"name":"dgozman","email":"dgozman@chromium.org","time":"Fri Mar 04 04:01:09 2016"},"commit":"db77cec242dbdf8ee26da8232fa930270429f253","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 04 04:02:37 2016"},"message":"Introduce v8::MicrotasksScope.\n\nThis scope is used to control microtasks execution when MicrotasksPolicy::kScoped is engaged.\n\nBUG=chromium:585949\nLOG=Y\nTEST=ScopedMicrotasks\n\nReview URL: https://codereview.chromium.org/1741893003\n\nCr-Commit-Position: refs/heads/master@{#34472}\n","milestone":51},{"_id":"0e7f095c6dd4363d66f8b14a428f9c1f07f7dba3","author":{"name":"littledan","email":"littledan@chromium.org","time":"Thu Mar 03 21:33:53 2016"},"commit":"0e7f095c6dd4363d66f8b14a428f9c1f07f7dba3","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 03 21:34:26 2016"},"message":"Restrict FunctionDeclarations in Statement position\n\nES2015 generally bans FunctionDeclarations in positions which expect a Statement,\nas opposed to a StatementListItem, such as a FunctionDeclaration which constitutes\nthe body of a for loop. However, Annex B 3.2 and 3.4 make exceptions for labeled\nfunction declarations and function declarations as the body of an if statement in\nsloppy mode, in the latter case specifying that the semantics are as if the\nfunction declaration occurred in a block. Chrome has historically permitted\nfurther extensions, for the body of any flow control construct.\n\nThis patch addresses both the syntactic and semantic mismatches between V8 and\nthe spec. For the semantic mismatch, function declarations as the body of if\nstatements change from unconditionally hoisting in certain cases to acquiring\nthe sloppy mode function in block semantics (based on Annex B 3.3). For the\nextra syntax permitted, this patch adds a flag,\n--harmony-restrictive-declarations, which excludes disallowed function declaration\ncases. A new UseCounter, LegacyFunctionDeclaration, is added to count how often\nfunction declarations occur as the body of other constructs in sloppy mode. With\nthis patch, the code generally follows the form of the specification with respect\nto parsing FunctionDeclarations, rather than allowing them in arbitrary Statement\npositions, and makes it more clear where our extensions occur.\n\nBUG=v8:4647\nR=adamk\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1757543003\n\nCr-Commit-Position: refs/heads/master@{#34470}\n","milestone":51},{"_id":"2608ecc7157a9d6d482709fc197b2fc0317d9d09","author":{"name":"verwaest","email":"verwaest@chromium.org","time":"Wed Mar 02 13:48:48 2016"},"commit":"2608ecc7157a9d6d482709fc197b2fc0317d9d09","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 02 13:49:11 2016"},"message":"Speed up the LookupIterator\n\nThis introduces a new instance type and reorders the JSObject types so any type requiring special LookupIterator support can be identified with a single range check.\n\nIn addition, it restructures the Next for better performance, avoiding unnecessary calls.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1751043002\n\nCr-Commit-Position: refs/heads/master@{#34429}\n","milestone":51},{"_id":"f3fcdcfa1a68ff2c0a81b729ef38827581f869d8","author":{"name":"fmeawad","email":"fmeawad@chromium.org","time":"Tue Mar 01 21:20:36 2016"},"commit":"f3fcdcfa1a68ff2c0a81b729ef38827581f869d8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 01 21:20:48 2016"},"message":"[Tracing] Remove deprecated AddTraceEvent\n\nThis should land after the chromium CL that starts using the new AddTraceEvent lands\n(https://codereview.chromium.org/1742603004/)\n\nBUG=4565\nLOG=N\n\nReview URL: https://codereview.chromium.org/1744733002\n\nCr-Commit-Position: refs/heads/master@{#34412}\n","milestone":51},{"_id":"d1df58e8d734ceb7d475b9c83263466f6ccd9031","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Mon Feb 29 12:16:00 2016"},"commit":"d1df58e8d734ceb7d475b9c83263466f6ccd9031","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 29 12:17:26 2016"},"message":"[stubs] Introduce a proper ToBooleanStub.\n\nRename the existing (patching) ToBooleanStub to ToBooleanICStub to match\nour naming convention, and add a new TurboFan-powered ToBooleanStub,\nwhich just does the ToBoolean conversion without any runtime call or\ncode patching, so we can use it for Ignition (and TurboFan).\n\nDrive-by-fix: Add an Oddball::to_boolean field similar to the ones we\nalready have for to_string and to_number, so we don't need to actually\ndispatch on the concrete Oddball at all.\n\nR=epertoso@chromium.org, rmcilroy@chromium.org, yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/1744163002\n\nCr-Commit-Position: refs/heads/master@{#34361}\n","milestone":51},{"_id":"e8c914f18fd88cd58aaaf5d8cee53b9e57477b52","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Feb 29 11:02:52 2016"},"commit":"e8c914f18fd88cd58aaaf5d8cee53b9e57477b52","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 29 11:03:02 2016"},"message":"[api] Assume that v8/include is in the include path for all public headers\n\nProbably easier to use for embedders.\n\nBUG=\nR=ulan@chromium.org\n\nReview URL: https://codereview.chromium.org/1749663002\n\nCr-Commit-Position: refs/heads/master@{#34357}\n","milestone":51},{"_id":"020dbfe4321476bb51a29ba4547e8efe86def28e","author":{"name":"hablich","email":"hablich@chromium.org","time":"Sun Feb 28 00:54:32 2016"},"commit":"020dbfe4321476bb51a29ba4547e8efe86def28e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sun Feb 28 00:55:04 2016"},"message":"[Release] Update V8 version to 5.1\n\nTBR=machenbach@chromium.org\nNOTRY=true\n\nReview URL: https://codereview.chromium.org/1744823002\n\nCr-Commit-Position: refs/heads/master@{#34347}\n","milestone":51},{"_id":"66b87c00b8145ba6fbf709504b4571154d103129","author":{"name":"dgozman","email":"dgozman@chromium.org","time":"Thu Feb 25 19:48:31 2016"},"commit":"66b87c00b8145ba6fbf709504b4571154d103129","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Feb 25 19:49:53 2016"},"message":"Introduce MicrotasksCompletedCallback.\n\nThis calback is run after an attempt to run microtasks.\n\nBUG=chromium:585949\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1731773005\n\nCr-Commit-Position: refs/heads/master@{#34305}\n","milestone":51},{"_id":"b0a804da4f41c10294babfde0be109b1bbb94fe0","author":{"name":"ulan","email":"ulan@chromium.org","time":"Thu Feb 25 19:20:53 2016"},"commit":"b0a804da4f41c10294babfde0be109b1bbb94fe0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Feb 25 19:21:34 2016"},"message":"[api] Clarify the limits of ResourceConstraints.\n\nBUG=v8:4781\nLOG=NO\n\nReview URL: https://codereview.chromium.org/1740533004\n\nCr-Commit-Position: refs/heads/master@{#34304}\n","milestone":51},{"_id":"7ff114e287f25e28f4bf8ea36e644bcdfe9d268e","author":{"name":"littledan","email":"littledan@chromium.org","time":"Thu Nov 05 19:52:36 2015"},"commit":"7ff114e287f25e28f4bf8ea36e644bcdfe9d268e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 05 19:52:50 2015"},"message":"Add strict mode, sloppy mode and strong mode UseCounters\n\nThis patch adds UseCounters for the various language modes. This may\nbe useful for helping us to prioritize future optimization and\nlanguage design decisions.\n\nR=adamk\nCC=seththompson\nBUG=none\n\nReview URL: https://codereview.chromium.org/1429173002\n\nCr-Commit-Position: refs/heads/master@{#31841}\n","milestone":48},{"_id":"2237ba0dba22841e29e2fba877f4f9cd0f23eff7","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Thu Nov 05 13:08:39 2015"},"commit":"2237ba0dba22841e29e2fba877f4f9cd0f23eff7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 05 13:08:55 2015"},"message":"Implement flag and source getters on RegExp.prototype.\n\nR=littledan@chromium.org\nBUG=v8:3715, v8:4528\nLOG=Y\n\nCommitted: https://crrev.com/60e8877e161fe6175e19fafce2d6ed1c3999cdb1\nCr-Commit-Position: refs/heads/master@{#31753}\n\nCommitted: https://crrev.com/b5c80a31ad266eb38a0cf2ff756be59c66d34aa5\nCr-Commit-Position: refs/heads/master@{#31773}\n\nCommitted: https://crrev.com/85494e90bb63a3a9e19a1bf862cb6bfcb0162ee9\nCr-Commit-Position: refs/heads/master@{#31782}\n\nCommitted: https://crrev.com/152163c1646b45f5fc5d31a4ec2eb55d7f4a2ffc\nCr-Commit-Position: refs/heads/master@{#31804}\n\nReview URL: https://codereview.chromium.org/1419823010\n\nCr-Commit-Position: refs/heads/master@{#31824}\n","milestone":48},{"_id":"152163c1646b45f5fc5d31a4ec2eb55d7f4a2ffc","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Nov 04 20:42:17 2015"},"commit":"152163c1646b45f5fc5d31a4ec2eb55d7f4a2ffc","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Nov 04 20:42:33 2015"},"message":"Implement flag and source getters on RegExp.prototype.\n\nR=littledan@chromium.org\nBUG=v8:3715, v8:4528\nLOG=Y\n\nCommitted: https://crrev.com/60e8877e161fe6175e19fafce2d6ed1c3999cdb1\nCr-Commit-Position: refs/heads/master@{#31753}\n\nCommitted: https://crrev.com/b5c80a31ad266eb38a0cf2ff756be59c66d34aa5\nCr-Commit-Position: refs/heads/master@{#31773}\n\nCommitted: https://crrev.com/85494e90bb63a3a9e19a1bf862cb6bfcb0162ee9\nCr-Commit-Position: refs/heads/master@{#31782}\n\nReview URL: https://codereview.chromium.org/1419823010\n\nCr-Commit-Position: refs/heads/master@{#31804}\n","milestone":48},{"_id":"85494e90bb63a3a9e19a1bf862cb6bfcb0162ee9","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Nov 04 12:28:15 2015"},"commit":"85494e90bb63a3a9e19a1bf862cb6bfcb0162ee9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Nov 04 12:28:48 2015"},"message":"Implement flag and source getters on RegExp.prototype.\n\nR=littledan@chromium.org\nBUG=v8:3715, v8:4528\nLOG=Y\n\nCommitted: https://crrev.com/60e8877e161fe6175e19fafce2d6ed1c3999cdb1\nCr-Commit-Position: refs/heads/master@{#31753}\n\nCommitted: https://crrev.com/b5c80a31ad266eb38a0cf2ff756be59c66d34aa5\nCr-Commit-Position: refs/heads/master@{#31773}\n\nReview URL: https://codereview.chromium.org/1419823010\n\nCr-Commit-Position: refs/heads/master@{#31782}\n","milestone":48},{"_id":"b5c80a31ad266eb38a0cf2ff756be59c66d34aa5","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Nov 04 09:10:46 2015"},"commit":"b5c80a31ad266eb38a0cf2ff756be59c66d34aa5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Nov 04 09:11:19 2015"},"message":"Implement flag and source getters on RegExp.prototype.\n\nR=littledan@chromium.org\nBUG=v8:3715, v8:4528\nLOG=Y\n\nCommitted: https://crrev.com/60e8877e161fe6175e19fafce2d6ed1c3999cdb1\nCr-Commit-Position: refs/heads/master@{#31753}\n\nReview URL: https://codereview.chromium.org/1419823010\n\nCr-Commit-Position: refs/heads/master@{#31773}\n","milestone":48},{"_id":"60e8877e161fe6175e19fafce2d6ed1c3999cdb1","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Tue Nov 03 16:16:55 2015"},"commit":"60e8877e161fe6175e19fafce2d6ed1c3999cdb1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Nov 03 16:17:03 2015"},"message":"Implement flag and source getters on RegExp.prototype.\n\nR=littledan@chromium.org\nBUG=v8:3715, v8:4528\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1419823010\n\nCr-Commit-Position: refs/heads/master@{#31753}\n","milestone":48},{"_id":"16ca5c61025dd414b33afa88db0b8c287bac2f26","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Nov 02 19:22:32 2015"},"commit":"16ca5c61025dd414b33afa88db0b8c287bac2f26","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Nov 02 19:23:13 2015"},"message":"Mark GetCallingContext as soon-to-be deprecated\n\nThe calling context is the second top-most non-debugger context on the\nstack, but that's not necessarily the actually calling context, e.g.,\nwhen a tail-call was used.\n\nBUG=chromium:541703\nR=verwaest@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1431473003\n\nCr-Commit-Position: refs/heads/master@{#31719}\n","milestone":48},{"_id":"0fa11bfb8008cbc6ec9841fad941530dcd532f48","author":{"name":"ssid","email":"ssid@chromium.org","time":"Mon Nov 02 18:26:47 2015"},"commit":"0fa11bfb8008cbc6ec9841fad941530dcd532f48","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Nov 02 18:27:20 2015"},"message":"Add boolean to tell if V8 zaps allocated memory\n\nV8 zaps (writes 0xdeadbeef) over the mmapped regions when in debug mode.\nThis causes more resident size than displayed in tracing. So, This CL\nadds an api to tell if zapping is done.\n\nBUG=546492\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1419523008\n\nCr-Commit-Position: refs/heads/master@{#31716}\n","milestone":48},{"_id":"959e050c1dd943f89bec53dcae52f9279243d23e","author":{"name":"mythria","email":"mythria@chromium.org","time":"Tue Oct 27 12:22:24 2015"},"commit":"959e050c1dd943f89bec53dcae52f9279243d23e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Oct 27 12:22:31 2015"},"message":"Adds a scavenge GC pass to collect unmodified references\n\nAdds a scavenge GC pass that collects unmodified references instead of\nprocessing object groups. This mode can be controlled by setting\nFLAG_scavenge_reclaim_unmodified_objects. By default this is turned off.\nAlso, modified a test case to suit the handle the new GC pass.\n\nBUG=v8:4421\nLOG=N\n\nReview URL: https://codereview.chromium.org/1410593005\n\nCr-Commit-Position: refs/heads/master@{#31599}\n","milestone":48},{"_id":"67dc6ce5fde32c1895974903ea566dc0dadd39f7","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Oct 26 15:33:02 2015"},"commit":"67dc6ce5fde32c1895974903ea566dc0dadd39f7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Oct 26 15:33:20 2015"},"message":"Canonicalize handles for optimized compilation.\n\nR=bmeurer@chromium.org\n\nCommitted: https://crrev.com/15f36b2b1e166a511966a9991fddea94f890a755\nCr-Commit-Position: refs/heads/master@{#31566}\n\nReview URL: https://codereview.chromium.org/1423833003\n\nCr-Commit-Position: refs/heads/master@{#31576}\n","milestone":48},{"_id":"15f36b2b1e166a511966a9991fddea94f890a755","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Oct 26 13:49:51 2015"},"commit":"15f36b2b1e166a511966a9991fddea94f890a755","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Oct 26 13:50:16 2015"},"message":"Canonicalize handles for optimized compilation.\n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/1423833003\n\nCr-Commit-Position: refs/heads/master@{#31566}\n","milestone":48},{"_id":"e2675937d5b6d2e555edeaabcda7ce70551ea236","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Oct 26 10:42:11 2015"},"commit":"e2675937d5b6d2e555edeaabcda7ce70551ea236","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Oct 26 10:42:16 2015"},"message":"Add optional data parameter to SetAccessCheckCallback\n\nThe data field is passed to the failed access check callback which blink\ndepends on.\n\nBUG=none\nR=verwaest@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1427443002\n\nCr-Commit-Position: refs/heads/master@{#31555}\n","milestone":48},{"_id":"133d4a88f2fb634134a6e56c833f0d30e71c7368","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri Oct 23 08:13:24 2015"},"commit":"133d4a88f2fb634134a6e56c833f0d30e71c7368","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Oct 23 08:13:53 2015"},"message":"Plumb accessing context through to access control callbacks\n\nBUG=none\nLOG=n\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/1410883006\n\nCr-Commit-Position: refs/heads/master@{#31495}\n","milestone":48},{"_id":"527a94017af8f25d7033b532c377a4fa0041c82c","author":{"name":"ulan","email":"ulan@chromium.org","time":"Thu Oct 22 11:09:01 2015"},"commit":"527a94017af8f25d7033b532c377a4fa0041c82c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Oct 22 11:09:24 2015"},"message":"Introduce new API for detecting when the embedder is in foreground/background.\n\nThis will allow us to remove background idle notification calls in Chrome.\n\nBUG=chromium:490559\nLOG=NO\n\nReview URL: https://codereview.chromium.org/1406303008\n\nCr-Commit-Position: refs/heads/master@{#31464}\n","milestone":48},{"_id":"1be2b46c854af7314aae0111ff70ee8a5766135d","author":{"name":"caitpotter88","email":"caitpotter88@gmail.com","time":"Wed Oct 21 20:14:27 2015"},"commit":"1be2b46c854af7314aae0111ff70ee8a5766135d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Oct 21 20:14:51 2015"},"message":"[api] expose API for adding per-context Intrinsics to Templates\n\nAdd mechanism for adding per-context ECMAScript intrinsics to Template\nobjects, which may be instantiated in multiple contexts.\n\nBUG=\nLOG=N\nR=jochen@chromium.org, verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/1409593002\n\nCr-Commit-Position: refs/heads/master@{#31450}\n","milestone":48},{"_id":"24aca8709000f1d05341aaa7f131369896f72b63","author":{"name":"caitpotter88","email":"caitpotter88@gmail.com","time":"Wed Oct 07 13:17:06 2015"},"commit":"24aca8709000f1d05341aaa7f131369896f72b63","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Oct 07 13:17:12 2015"},"message":"[api] expose Array Iterators to API\n\nAllow access to Array Iterator through the API, in order to simplify\nsetting up interfaces which use these methods. This applies to\nWebIDL interfaces with \"length\" attributes returning integer types and\na getter taking an unsigned long type.\n\nBUG=\nLOG=N\nR=adamk@chromium.org\n\nReview URL: https://codereview.chromium.org/1378403004\n\nCr-Commit-Position: refs/heads/master@{#31152}\n","milestone":48},{"_id":"8561dbd655769cb63fc797e7ebd3923bee943212","author":{"name":"caitpotter88","email":"caitpotter88@gmail.com","time":"Tue Oct 06 18:10:20 2015"},"commit":"8561dbd655769cb63fc797e7ebd3923bee943212","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Oct 06 18:10:37 2015"},"message":"[es6] silence access-check failure for well-known symbol properties\n\nSymbols marked as \"well-known\" now return an undefined value when loaded with a failed access check, instead of throwing.\n\nCurrently, only @@isConcatSpreadable is marked as well-known, until the correct behaviour is properly specified.\n\nBUG=v8:4289, 507553\nLOG=N\nR=adamk@chromium.org, jochen@chromium.org, verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/1230793002\n\nCr-Commit-Position: refs/heads/master@{#31131}\n","milestone":48},{"_id":"1ee712ab8687e5f4dec93d45da068d37d28feb8b","author":{"name":"julien.gilli","email":"julien.gilli@joyent.com","time":"Mon Oct 05 18:55:05 2015"},"commit":"1ee712ab8687e5f4dec93d45da068d37d28feb8b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Oct 05 18:55:15 2015"},"message":"Add SetAbortOnUncaughtExceptionCallback API\n\nThe --abort-on-uncaught-exception command line switch makes\nIsolate::Throw abort if the error being thrown cannot be caught by a\ntry/catch block.\n\nEmbedders may want to use other mechanisms than try/catch blocks to\nhandle uncaught exceptions. For instance, Node.js has \"domain\" objects\nthat have error handlers that can handle uncaught exception like\nfollowing:\n\nvar d = domain.create();\n\nd.on('error', function onError(err) {\n  console.log('Handling error');\n});\n\nd.run(function() {\n  throw new Error(\"boom\");\n});\n\nThese error handlers are called by isolates' message listeners.\n\nIf --abort-on-uncaught-exception is *not* used, the isolate's\nmessage listener will be called, which will in turn call the domain's\nerror handler. The process will output 'Handling error' and will exit\nsuccessfully (not due to an uncaught exception). This is the behavior\nthat Node.js users expect.\n\nHowever, if --abort-on-uncaught-exception is used and when throwing an\nerror within a domain that has an error handler, the process will abort\nand the domain's error handler will not be called. This is not the\nbehavior that Node.js users expect.\n\nHaving a SetAbortOnUncaughtExceptionCallback API allows embedders to\ndetermine when it's not appropriate to abort and instead handle the\nexception via the isolate's message listener.\n\nIn the example above, Node.js would set a custom callback with\nSetAbortOnUncaughtExceptionCallback that would be implemented as\nfollowing (the sample code has been simplified to remove what's not\nrelevant to this change):\n\nbool ShouldAbortOnUncaughtException(Isolate* isolate) {\n  return !IsDomainActive();\n}\n\nNow when --abort-on-uncaught-exception is used, Isolate::Throw would\ncall that callback and determine that it should not abort if a domain\nwith an error handler is active. Instead, the isolate's message listener\nwould be called and the error would be handled by the domain's error\nhandler.\n\nI believe this can also be useful for other embedders.\n\nBUG=\n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/1375933003\n\nCr-Commit-Position: refs/heads/master@{#31111}\n","milestone":48},{"_id":"01590d660d6c8602b616a82816c4aea2a251be63","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Sat Oct 03 21:48:01 2015"},"commit":"01590d660d6c8602b616a82816c4aea2a251be63","committer":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Sat Oct 03 21:48:18 2015"},"message":"Update version to 4.8\n\nTBR=machenbach@chromium.org\nNOTRY=true\n\nReview URL: https://codereview.chromium.org/1387763002 .\n\nCr-Commit-Position: refs/heads/master@{#31093}\n","milestone":48},{"_id":"6a769ac1df0e407d5623170a6cc150a99b9f4ea4","author":{"name":"mstarzinger","email":"mstarzinger@chromium.org","time":"Wed Sep 30 13:46:56 2015"},"commit":"6a769ac1df0e407d5623170a6cc150a99b9f4ea4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Sep 30 13:47:11 2015"},"message":"[presubmit] Enable readability/namespace linter checking.\n\nThis enables linter checking for \"readability/namespace\" violations\nduring presubmit and instead marks the few known exceptions that we\nallow explicitly.\n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/1371083003\n\nCr-Commit-Position: refs/heads/master@{#31019}\n","milestone":48},{"_id":"0f32fcf4730ea3dfd0864878f744aa25b7d00733","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Fri Oct 02 10:37:34 2015"},"commit":"0f32fcf4730ea3dfd0864878f744aa25b7d00733","committer":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Fri Oct 02 10:38:12 2015"},"message":"Fix version file because branched from wrong revision\n\nLOG=N\nTBR=machenbach@chromium.org\nNOTRY=true\nNOPRESUBMIT=true\n\nReview URL: https://codereview.chromium.org/1378573003 .\n\nCr-Commit-Position: refs/branch-heads/4.7@{#4}\nCr-Branched-From: f3c89267db0fc6120d95046c3ff35a35ca34614f-refs/heads/master@{#31014}\n","milestone":47},{"_id":"ddafe2c4940ae20a7c925047d27b54be234cada4","author":{"name":"mstarzinger","email":"mstarzinger@chromium.org","time":"Tue Sep 29 16:59:01 2015"},"commit":"ddafe2c4940ae20a7c925047d27b54be234cada4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 29 16:59:16 2015"},"message":"[heap] No leakage of incremental-marking.h outside of heap.\n\nThis prevents the internal incremental-marking.h to be usable outisde\nof the \"heap\" directory. The logic inside that component is only useful\nwithin the GC and is now properly encapsulated.\n\nR=hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/1374203002\n\nCr-Commit-Position: refs/heads/master@{#31010}\n","milestone":47},{"_id":"ed110a1715e245a93fd8be60cc9edac06ba11887","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Tue Sep 29 11:15:59 2015"},"commit":"ed110a1715e245a93fd8be60cc9edac06ba11887","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 29 11:16:14 2015"},"message":"Allow JavaScript accessors on API objects.\n\n(This is somewhat experimental; hence protected by #ifdef.)\n\nR=epertoso@chromium.org, jochen@chromium.org\nBUG=chromium:508898\nLOG=N\n\nReview URL: https://codereview.chromium.org/1367953002\n\nCr-Commit-Position: refs/heads/master@{#31002}\n","milestone":47},{"_id":"0b48b2a8ebfc791a36f4ec1f299f46db76265a3a","author":{"name":"karl","email":"karl@skomski.com","time":"Mon Sep 28 14:02:50 2015"},"commit":"0b48b2a8ebfc791a36f4ec1f299f46db76265a3a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Sep 28 14:03:10 2015"},"message":"Introduce a V8_NORETURN macro and use it to make GCC 4.9.2 happy again.\n\nWithout that, it has a few false positives about out-of-bounds array accesses.\nAlso makes the clang static-analyzer happy.\n\nOriginal code review from Sven Panne:\nhttps://codereview.chromium.org/790723002/\n\nReview URL: https://codereview.chromium.org/1361763004\n\nCr-Commit-Position: refs/heads/master@{#30977}\n","milestone":47},{"_id":"3a204ea97eaf5946415baf60f418032f2d822f6f","author":{"name":"mstarzinger","email":"mstarzinger@chromium.org","time":"Mon Sep 07 14:24:05 2015"},"commit":"3a204ea97eaf5946415baf60f418032f2d822f6f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Sep 07 14:24:18 2015"},"message":"[presubmit] Enable build/c++11 linter checking.\n\nThis enables the general linter checking for \"build/c++11\" violations\nduring presubmit and instead marks the few known exceptions that we\nallow explicitly.\n\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/1317463007\n\nCr-Commit-Position: refs/heads/master@{#30621}\n","milestone":47},{"_id":"92e85aed109d03498eb8cb5ad1b10e95b1686e42","author":{"name":"mstarzinger","email":"mstarzinger@chromium.org","time":"Thu Sep 03 07:55:53 2015"},"commit":"92e85aed109d03498eb8cb5ad1b10e95b1686e42","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Sep 03 07:56:14 2015"},"message":"[presubmit] Fix build/include linter violations.\n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/1318863004\n\nCr-Commit-Position: refs/heads/master@{#30554}\n","milestone":47},{"_id":"093f7260e9260b5ea0fc8b78b6b7c68cf37c5112","author":{"name":"mstarzinger","email":"mstarzinger@chromium.org","time":"Tue Sep 01 15:19:57 2015"},"commit":"093f7260e9260b5ea0fc8b78b6b7c68cf37c5112","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 01 15:20:09 2015"},"message":"[presubmit] Fix runtime/indentation_namespace linter violations.\n\nR=machenbach@chromium.org\n\nReview URL: https://codereview.chromium.org/1302413007\n\nCr-Commit-Position: refs/heads/master@{#30514}\n","milestone":47},{"_id":"38d46c037288999043080b006756cdc76f2d262b","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Aug 24 07:15:01 2015"},"commit":"38d46c037288999043080b006756cdc76f2d262b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Aug 24 07:15:17 2015"},"message":"Native context: alpha sort slots and remove boilerplate.\n\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/1307963002\n\nCr-Commit-Position: refs/heads/master@{#30319}\n","milestone":47},{"_id":"03704f3d94113f8248819fa98e75801e70d48f8b","author":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Fri Aug 21 12:40:27 2015"},"commit":"03704f3d94113f8248819fa98e75801e70d48f8b","committer":{"name":"Michael Hablich","email":"hablich@chromium.org","time":"Fri Aug 21 12:40:54 2015"},"message":"Update version to 4.7\n\nBUG=\nTBR=vogelheim@chromium.org,yangguo@chromium.org\nNOTRY=true\n\nReview URL: https://codereview.chromium.org/1304203002 .\n\nCr-Commit-Position: refs/heads/master@{#30302}\n","milestone":47},{"_id":"365fd7bc351705e4fb181741829f89e580549daf","author":{"name":"rossberg","email":"rossberg@chromium.org","time":"Fri Aug 21 10:58:35 2015"},"commit":"365fd7bc351705e4fb181741829f89e580549daf","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 21 10:58:47 2015"},"message":"[es6] Parameter scopes for sloppy eval\n\nThis CL is a nightmare! For the utterly irrelevant edge case of a sloppy function with non-simple parameters and a call to direct eval, like here,\n\n  let x = 1;\n  function f(g = () => x) {\n    var y\n    eval(\"var x = 2\")\n    return g() + x  // f() = 3\n  }\n\nwe have to do all of the following, on top of the declaration block (\"varblock\") contexts we already introduce around the body:\n\n- Introduce the ability for varblock contexts to have both a ScopeInfo and an extension object (e.g., the body varblock in the example will contain both a static var y and a dynamic var x). No other scope needs that. Since there are no context slots left, a special new struct is introduced that pairs up scope info and extension object.\n\n- When declaring lookup slots in the runtime, this new struct is allocated in the case where an extension object has to be added to a block scope (at which point the block's extension slot still contains a plain ScopeInfo).\n\n- While at it, introduce some abstraction to access context extension slots in a more controlled manner, in order to keep special-casing to a minimum.\n\n- Make sure that even empty varblock contexts do not get optimised away when they contain a sloppy eval, so that they can host the potential extension object.\n\n- Extend dynamic search for declaration contexts (used by sloppy direct eval) to recognize varblock contexts.\n\n- In the parser, if a function has a sloppy direct eval, introduce an additional varblock scope around each non-simple (desugared) parameter, as required by the spec to contain possible dynamic var bindings.\n\n- In the pattern rewriter, add the ability to hoist the named variables the pattern declares to an outer scope. That is required because the actual destructuring has to be evaluated inside the protecting varblock scope, but the bindings that the desugaring introduces are in the outer scope.\n\n- ScopeInfos need to save the information whether a block is a varblock, to make sloppy eval calls work correctly that deserialise them as part of the scope chain.\n\n- Add the ability to materialize block scopes with extension objects in the debugger. Likewise, enable setting extension variables in block scopes via the debugger interface.\n\n- While at it, refactor and unify some respective code in the debugger.\n\nSorry, this CL is large. I could try to split it up, but everything is rather entangled.\n\n@mstarzinger: Please review the changes to contexts.\n@yangguo: Please have a look at the debugger stuff.\n\nR=littledan@chromium.org, mstarzinger@chromium.org, yangguo@chromium.org\nBUG=v8:811,v8:2160\nLOG=N\n\nReview URL: https://codereview.chromium.org/1292753007\n\nCr-Commit-Position: refs/heads/master@{#30295}\n","milestone":47},{"_id":"b21358651d34d9a3b957e129c80a669e3a356ef0","author":{"name":"hablich","email":"hablich@chromium.org","time":"Tue Sep 08 07:36:07 2015"},"commit":"b21358651d34d9a3b957e129c80a669e3a356ef0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 08 07:36:24 2015"},"message":"Set handle zapping only in Debug build\n\nBUG=chromium:318206\nR=jochen@chromium.org\nLOG=n\nNOTRY=true\nNOPRESUBMIT=true\n\nReview URL: https://codereview.chromium.org/1326693004\n\nCr-Commit-Position: refs/branch-heads/4.5@{#33}\nCr-Branched-From: 7f211533faba9dd85708b1394186c7fe99b88392-refs/heads/4.5.103@{#1}\nCr-Branched-From: 4b38c15817033ccd9a65efbb3d038ae2423293c2-refs/heads/master@{#29527}\n","milestone":45},{"_id":"999a1ff991bbb5770b3e71d13da63513c01708e2","author":{"name":"hablich","email":"hablich@chromium.org","time":"Thu Jul 23 08:11:51 2015"},"commit":"999a1ff991bbb5770b3e71d13da63513c01708e2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jul 23 08:12:12 2015"},"message":"Fix v8/test/mjsunit/big-array-literal.js\n\nR=danno@chromium.org, machenbach@chromium.org, michael_dawson@ca.ibm.com\nBUG=v8:4319\nNOTRY=true\nNOPRESUBMIT=true\n\nReview URL: https://codereview.chromium.org/1248983003\n\nCr-Commit-Position: refs/branch-heads/4.5@{#14}\nCr-Branched-From: 7f211533faba9dd85708b1394186c7fe99b88392-refs/heads/4.5.103@{#1}\nCr-Branched-From: 4b38c15817033ccd9a65efbb3d038ae2423293c2-refs/heads/master@{#29527}\n","milestone":45},{"_id":"f022e53b9579457d53ee59b46ce6a959d27669a4","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Jul 06 07:09:07 2015"},"commit":"f022e53b9579457d53ee59b46ce6a959d27669a4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jul 06 07:09:13 2015"},"message":"Make v8::Handle as \"deprecated soon\"\n\nBUG=v8:4131\nR=bmeurer@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1224623004\n\nCr-Commit-Position: refs/heads/master@{#29473}\n","milestone":45},{"_id":"c8211b64cdee1dc71fa91945c8e5fa9880fcee2f","author":{"name":"verwaest","email":"verwaest@chromium.org","time":"Thu Jul 02 14:38:37 2015"},"commit":"c8211b64cdee1dc71fa91945c8e5fa9880fcee2f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jul 02 14:38:53 2015"},"message":"Distinguish slow from fast sloppy arguments\n\nBUG=v8:4137\nLOG=n\n\nReview URL: https://codereview.chromium.org/1221713003\n\nCr-Commit-Position: refs/heads/master@{#29447}\n","milestone":45},{"_id":"3997ae1b469617be5abbe517d61ea71481bc6638","author":{"name":"ishell","email":"ishell@chromium.org","time":"Thu Jul 02 09:05:39 2015"},"commit":"3997ae1b469617be5abbe517d61ea71481bc6638","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jul 02 09:05:48 2015"},"message":"Remove deprecated v8::Object::TurnOnAccessCheck() from the V8 API.\n\nThe only right way to enable access checks is to install access check callbacks on an object template via v8::ObjectTemplate::SetAccessCheckCallbacks(). It does not make sense to enable access checks on an arbitrary object.\n\nReview URL: https://codereview.chromium.org/1217893012\n\nCr-Commit-Position: refs/heads/master@{#29439}\n","milestone":45},{"_id":"cd85493faaa484e9d2a99a069c5f995629343752","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Mon Jun 29 11:47:50 2015"},"commit":"cd85493faaa484e9d2a99a069c5f995629343752","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jun 29 11:48:06 2015"},"message":"Using \"defined\" in macro causes undefined behavior.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/1212163003\n\nCr-Commit-Position: refs/heads/master@{#29342}\n","milestone":45},{"_id":"1d73a81ae0341a0d9c8d78c3fcf67bc2827d75d0","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Thu Jun 25 14:03:41 2015"},"commit":"1d73a81ae0341a0d9c8d78c3fcf67bc2827d75d0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jun 25 14:03:56 2015"},"message":"Remove obsolete options in ScriptCompiler::CompileOptions.\n\nThis is a follow-on to https://code.google.com/p/v8/source/detail?r=22431\nThis will remove the compatibility logic, so that the API as described\nin r22431 is the only API.\n\nI'll let this CL will sit around for a while to give embedders a chance\nto update their code.\n\nR=yangguo@chromium.org, ulan@chromium.org\nBUG=chromium:399580\nLOG=Y\n\nReview URL: https://codereview.chromium.org/392263002\n\nCr-Commit-Position: refs/heads/master@{#29294}\n","milestone":45},{"_id":"df472240285a93f25edac20100db2240fae5c7c6","author":{"name":"adamk","email":"adamk@chromium.org","time":"Tue Jun 23 15:14:06 2015"},"commit":"df472240285a93f25edac20100db2240fae5c7c6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jun 23 15:14:17 2015"},"message":"Expose Map/Set methods through the API\n\nMap: get, set, has, delete, clear\nSet: add, has, delete, clear\n\nAll except clear are implemented as calls into collection.js.\n\nNote that some of these shadow methods of v8::Object. It's unclear\nhow confusing that's going to be: on the one hand, it seems likely\nthat most operations you would want to do on a Map or Set are these.\nOn the other, generic code could get confused if it somehow gets\nahold of a variable that happens to be C++-typed as a v8::Map or v8::Set.\n\nBUG=v8:3340\nLOG=y\n\nReview URL: https://codereview.chromium.org/1204623002\n\nCr-Commit-Position: refs/heads/master@{#29237}\n","milestone":45},{"_id":"93d6216099b60e95bc816bcc913f8f841ee795b6","author":{"name":"jochen","email":"jochen@chromium.org","time":"Tue Jun 23 15:02:06 2015"},"commit":"93d6216099b60e95bc816bcc913f8f841ee795b6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jun 23 15:02:16 2015"},"message":"Let GC select the collector when the external memory allocation limit is reached\n\nBUG=none\nR=hpayer@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1201993002\n\nCr-Commit-Position: refs/heads/master@{#29235}\n","milestone":45},{"_id":"31e3177bb01fbe2b0a1e2a08dc82165ee6fbe692","author":{"name":"ulan","email":"ulan@chromium.org","time":"Wed Jun 17 12:09:34 2015"},"commit":"31e3177bb01fbe2b0a1e2a08dc82165ee6fbe692","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 17 12:09:40 2015"},"message":"Add V8 platform API to call delayed task.\n\nDelayed tasks can be used to perform non-urgent clean up work.\n\nBUG=chromium:490559\nLOG=NO\n\nReview URL: https://codereview.chromium.org/1179153002\n\nCr-Commit-Position: refs/heads/master@{#29084}\n","milestone":45},{"_id":"c487aba74c1898e6f54a00001d84e30b39261d96","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Fri Jun 12 12:03:03 2015"},"commit":"c487aba74c1898e6f54a00001d84e30b39261d96","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jun 12 12:03:19 2015"},"message":"[turbofan] Use appropriate type for NodeId.\n\nUp until now we used int32_t for NodeId, but that was not ideal because\nnegative values are invalid for NodeId and we use it as an array index\nfor example in the NodeMarker class, where C++ compilers on x64 have to\ngenerate code that does proper sign extension for the indices, which is\ncompletely unnecessary.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/1178403004\n\nCr-Commit-Position: refs/heads/master@{#28997}\n","milestone":45},{"_id":"f145765524b11b6ce5d23bfa94180002a77fcc9d","author":{"name":"binji","email":"binji@chromium.org","time":"Mon Jun 08 18:24:18 2015"},"commit":"f145765524b11b6ce5d23bfa94180002a77fcc9d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jun 08 18:24:26 2015"},"message":"Add TypedArray constructors with SharedArrayBuffer to the external API.\n\nBUG=chromium:497295\nLOG=n\n\nReview URL: https://codereview.chromium.org/1168723002\n\nCr-Commit-Position: refs/heads/master@{#28850}\n","milestone":45},{"_id":"eac7f04669208cb15132d03ca15c8acd1a2be869","author":{"name":"mbrandy","email":"mbrandy@us.ibm.com","time":"Thu Jun 04 14:44:00 2015"},"commit":"eac7f04669208cb15132d03ca15c8acd1a2be869","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jun 04 14:44:15 2015"},"message":"Add support for Embedded Constant Pools for PPC and Arm\n\nEmbed constant pools within their corresponding Code\nobjects.\n\nThis removes support for out-of-line constant pools in favor\nof the new approach -- the main advantage being that it\neliminates the need to allocate and manage separate constant\npool array objects.\n\nCurrently supported on PPC and ARM.  Enabled by default on\nPPC only.\n\nThis yields a 6% improvment in Octane on PPC64.\n\nR=bmeurer@chromium.org, rmcilroy@chromium.org, michael_dawson@ca.ibm.com\nBUG=chromium:478811\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1162993006\n\nCr-Commit-Position: refs/heads/master@{#28801}\n","milestone":45},{"_id":"f9dd3446da82fbbf20c344ceb6a87be2c11f5759","author":{"name":"bbudge","email":"bbudge@chromium.org","time":"Wed Jun 03 23:56:21 2015"},"commit":"f9dd3446da82fbbf20c344ceb6a87be2c11f5759","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 03 23:56:33 2015"},"message":"Add new Float32x4 type for SIMD.js.\n\nLOG=N\nBUG=v8:4124\n\nReview URL: https://codereview.chromium.org/1153373003\n\nCr-Commit-Position: refs/heads/master@{#28797}\n","milestone":45},{"_id":"353310b7c11fcdf7fa41c64d63109e9a017d90b1","author":{"name":"adamk","email":"adamk@chromium.org","time":"Wed Jun 03 16:32:52 2015"},"commit":"353310b7c11fcdf7fa41c64d63109e9a017d90b1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 03 16:33:00 2015"},"message":"Flatten the Arrays returned and consumed by the v8::Map API\n\nThis will significantly simplify the serialization code, as well\nas speeding it up (by triggering only a single allocation instead of O(size)\nallocations).\n\nBUG=chromium:478263\nLOG=y\n\nReview URL: https://codereview.chromium.org/1157843006\n\nCr-Commit-Position: refs/heads/master@{#28793}\n","milestone":45},{"_id":"696184a0477054897aec76946f3715682451ac5c","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Jun 03 10:27:46 2015"},"commit":"696184a0477054897aec76946f3715682451ac5c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jun 03 10:27:56 2015"},"message":"Remove usage of to-be-deprecated APIs from v8 core\n\nAlso turn on the macro to disable to-be-deprecated APIs for core\n\nBUG=v8:4134\nR=vogelheim@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1162363005\n\nCr-Commit-Position: refs/heads/master@{#28783}\n","milestone":45},{"_id":"a9404029343d65f146e3443f5280c40a97e736af","author":{"name":"mbrandy","email":"mbrandy@us.ibm.com","time":"Tue Jun 02 22:50:00 2015"},"commit":"a9404029343d65f146e3443f5280c40a97e736af","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jun 02 22:50:12 2015"},"message":"Add support for Embedded Constant Pools for PPC and Arm\n\nEmbed constant pools within their corresponding Code\nobjects.\n\nThis removes support for out-of-line constant pools in favor\nof the new approach -- the main advantage being that it\neliminates the need to allocate and manage separate constant\npool array objects.\n\nCurrently supported on PPC and ARM.  Enabled by default on\nPPC only.\n\nThis yields a 6% improvment in Octane on PPC64.\n\nR=danno@chromium.org, svenpanne@chromium.org, bmeurer@chromium.org, rmcilroy@chromium.org, dstence@us.ibm.com, michael_dawson@ca.ibm.com\nBUG=chromium:478811\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1131783003\n\nCr-Commit-Position: refs/heads/master@{#28770}\n","milestone":45},{"_id":"4b548dd15a750ed28f4517280576e06fd4efc4fd","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Jun 01 07:26:38 2015"},"commit":"4b548dd15a750ed28f4517280576e06fd4efc4fd","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jun 01 07:26:46 2015"},"message":"Also expose DefineOwnProperty\n\nIn contrast to CreateDataProperty, this will always call out to JS\n\nBUG=475206\nR=adamk@chromium.org,verwaest@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1167473002\n\nCr-Commit-Position: refs/heads/master@{#28712}\n","milestone":45},{"_id":"2a058de88fa6cfa6d7a76783269f39043f0d8afc","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed May 27 15:03:28 2015"},"commit":"2a058de88fa6cfa6d7a76783269f39043f0d8afc","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed May 27 15:03:35 2015"},"message":"Introduce v8::Object::CreateDataProperty\n\nAlso deprecate ForceSet\n\nBUG=chromium:475206\nR=adamk@chromium.org,verwaest@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1154233003\n\nCr-Commit-Position: refs/heads/master@{#28660}\n","milestone":45},{"_id":"dea59184cc44ac131c43596972bea49524dae85e","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Wed May 27 07:10:31 2015"},"commit":"dea59184cc44ac131c43596972bea49524dae85e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed May 27 07:10:45 2015"},"message":"Mark class as exported to fix win build.\n\nTBR=machenbach@chromium.org\nBUG=chromium:470930\nLOG=N\n\nReview URL: https://codereview.chromium.org/1149923006\n\nCr-Commit-Position: refs/heads/master@{#28647}\n","milestone":45},{"_id":"cb07b8ef1a5d868a66d847c8d78af58947d21425","author":{"name":"adamk","email":"adamk@chromium.org","time":"Tue May 26 18:50:14 2015"},"commit":"cb07b8ef1a5d868a66d847c8d78af58947d21425","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 26 18:50:23 2015"},"message":"Add {Map,Set}::FromArray to the API\n\nThese are similar to the Map/Set constructors when called with an array,\nexcept that they are guaranteed to be side-effect free if called with\na packed array.\n\nThis will be useful in implementing structured clone which, as\nspecified in HTML, speaks in terms of the internal [[MapData]]\nand [[SetData]] slots without going through the exposed iteration\nES semantics.\n\nBUG=v8:3340\nLOG=y\n\nReview URL: https://codereview.chromium.org/1155893003\n\nCr-Commit-Position: refs/heads/master@{#28642}\n","milestone":45},{"_id":"a8d9c58b1f618f518dc3a5a73023e6847544979f","author":{"name":"adamk","email":"adamk@chromium.org","time":"Tue May 26 18:13:22 2015"},"commit":"a8d9c58b1f618f518dc3a5a73023e6847544979f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 26 18:13:32 2015"},"message":"Add {Map,Set}::AsArray to the API\n\nThese return arrays representing the current contents of the given\nMap/Set. They are similar to what would be returned by the JS code:\n\n  Array.from(collection)\n\nexcept that they are guaranteed side-effect free.\n\nThis will be useful in implementing structured clone which, as\nspecified in HTML, speaks in terms of the internal [[MapData]]\nand [[SetData]] slots without going through the exposed iteration\nES semantics.\n\nBUG=v8:3340\nLOG=y\n\nReview URL: https://codereview.chromium.org/1148383007\n\nCr-Commit-Position: refs/heads/master@{#28640}\n","milestone":45},{"_id":"395fa8ba2439f7e768376f7512553d66b67d1c87","author":{"name":"adamk","email":"adamk@chromium.org","time":"Tue May 26 17:36:48 2015"},"commit":"395fa8ba2439f7e768376f7512553d66b67d1c87","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 26 17:37:01 2015"},"message":"Add basic API support for Map & Set\n\nOnly supports constructing new objects and returning size.\nFollowup patch will need to add ability to retrieve and\nset contents in order to support structured clone.\n\nAlso removes a bunch of outdated \"experimental\" markers from v8.h.\n\nBUG=v8:3340\nLOG=y\n\nReview URL: https://codereview.chromium.org/1157453002\n\nCr-Commit-Position: refs/heads/master@{#28637}\n","milestone":45},{"_id":"85a0542df592cc297f52f00e00d74ada1206efdf","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Tue May 26 07:54:14 2015"},"commit":"85a0542df592cc297f52f00e00d74ada1206efdf","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 26 07:54:20 2015"},"message":"Implement bookmarks for ExternalStreamingStream.\n\n(Requires the embedder's ExternalSourceStream implementation to cooperate.\n See crrev.com/1154883003 for Blink.)\n\nR=jochen@chromium.org\nBUG=chromium:470930\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1156733002\n\nCr-Commit-Position: refs/heads/master@{#28610}\n","milestone":45},{"_id":"c52bb1f03aa146aa68265489aa3411c853afb78a","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri May 22 18:39:40 2015"},"commit":"c52bb1f03aa146aa68265489aa3411c853afb78a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 22 18:39:18 2015"},"message":"Introduce a maybe-version of Function::New\n\nInternally, it invokes GetFunction() which returns a MaybeLocal<>\n\nBUG=4134\nR=vogelheim@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1156693003\n\nCr-Commit-Position: refs/heads/master@{#28600}\n","milestone":45},{"_id":"aff8ebb0ebe165dceb03b567fe54633cf3f0a1f7","author":{"name":"binji","email":"binji@chromium.org","time":"Fri May 22 13:43:38 2015"},"commit":"aff8ebb0ebe165dceb03b567fe54633cf3f0a1f7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 22 13:43:17 2015"},"message":"Implement SharedArrayBuffer.\n\nThis adds a new external type (v8::SharedArrayBuffer) that uses a JSArrayBuffer\nunder the hood. It can be distinguished from an ArrayBuffer by the newly-added\nis_shared() bit.\n\nCurrently there is no difference in functionality between a SharedArrayBuffer\nand an ArrayBuffer. However, a future CL will add the Atomics API, which is\nonly available on an SharedArrayBuffer. All non-atomic accesses are identical\nto ArrayBuffer accesses.\n\nLOG=N\nBUG=\n\nReview URL: https://codereview.chromium.org/1136553006\n\nCr-Commit-Position: refs/heads/master@{#28594}\n","milestone":45},{"_id":"b6ac16dabd67772d73f355e952454fdac603d5e6","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri May 22 12:42:00 2015"},"commit":"b6ac16dabd67772d73f355e952454fdac603d5e6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 22 12:41:38 2015"},"message":"Remove v8::Private\n\nNothing uses it\n\nR=rossberg@chromium.org\nLOG=y\nBUG=none\n\nReview URL: https://codereview.chromium.org/1152523002\n\nCr-Commit-Position: refs/heads/master@{#28591}\n","milestone":45},{"_id":"8c0e936a4834c3e9294a678fd9e528ffec65a6dc","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Fri May 22 12:33:04 2015"},"commit":"8c0e936a4834c3e9294a678fd9e528ffec65a6dc","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 22 12:32:42 2015"},"message":"Fix build.\n\nTBR=machenbach@chromium.org\nNOTRY=true\nNOTREECHECKS=true\n\nReview URL: https://codereview.chromium.org/1150303002\n\nCr-Commit-Position: refs/heads/master@{#28590}\n","milestone":45},{"_id":"57170bff7baf341c666252a7f6a49e9c08d51263","author":{"name":"binji","email":"binji@chromium.org","time":"Fri May 22 12:07:00 2015"},"commit":"57170bff7baf341c666252a7f6a49e9c08d51263","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 22 12:06:44 2015"},"message":"Implement SharedArrayBuffer.\n\nThis adds a new external type (v8::SharedArrayBuffer) that uses a JSArrayBuffer under the hood. It can be distinguished from an ArrayBuffer by the newly-added is_shared() bit.\n\nCurrently there is no difference in functionality between a SharedArrayBuffer and an ArrayBuffer. However, a future CL will add the Atomics API, which is only available on an SharedArrayBuffer. All non-atomic accesses are identical to ArrayBuffer accesses.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1136553006\n\nCr-Commit-Position: refs/heads/master@{#28588}\n","milestone":45},{"_id":"65bea197ee8a4f04746e0a57f574499817c9b0da","author":{"name":"rossberg","email":"rossberg@chromium.org","time":"Fri May 22 10:51:49 2015"},"commit":"65bea197ee8a4f04746e0a57f574499817c9b0da","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 22 10:51:29 2015"},"message":"[strong] cache strong object literal maps\n\nAlso, add more literal tests.\n\nR=dslomov@chromium.org\nBUG=v8:3956\nLOG=N\n\nReview URL: https://codereview.chromium.org/1145213005\n\nCr-Commit-Position: refs/heads/master@{#28579}\n","milestone":45},{"_id":"e514015264f1e0193b57dee76487c85d24f7e4f1","author":{"name":"hans","email":"hans@chromium.org","time":"Thu May 21 16:21:24 2015"},"commit":"e514015264f1e0193b57dee76487c85d24f7e4f1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu May 21 16:21:05 2015"},"message":"Set V8_HAS_DECLSPEC_SELECTANY for clang-cl\n\nThis macro is used for defining static data members with\nSTATIC_CONST_MEMBER_DEFINITION. Clang-cl mimics MSVC's\nbehaviour here, so it also needs __declspec(selectany).\n\nThis change was prompted by Clang r237787 which changed\na bug where Clang would previously not emit symbols for\nsome static data members.\n\nBUG=82385\nLOG=N\n\nReview URL: https://codereview.chromium.org/1145213004\n\nCr-Commit-Position: refs/heads/master@{#28563}\n","milestone":45},{"_id":"29deaef505b5868f2bbe635d76cded6c8c0b67e4","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu May 21 10:34:42 2015"},"commit":"29deaef505b5868f2bbe635d76cded6c8c0b67e4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu May 21 10:34:22 2015"},"message":"Introduce a new gyp flag to warn about to be deprecated APIs\n\nThis should help to keep syntax errors from creeping into v8.h\n\nAlso, I'll remove usages of to-be-deprecated APIs and turn this flag on\nfor standalone builds\n\nBUG=4134\nR=vogelheim@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1149633003\n\nCr-Commit-Position: refs/heads/master@{#28538}\n","milestone":45},{"_id":"bf032c2ec8d4858e6cba4ccaf63200f7f39c7cd8","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed May 20 08:59:43 2015"},"commit":"bf032c2ec8d4858e6cba4ccaf63200f7f39c7cd8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed May 20 08:59:34 2015"},"message":"Update ReturnValue to take non-deprecated versions of handles\n\nR=vogelheim@chromium.org\nBUG=none\nLOG=n\n\nReview URL: https://codereview.chromium.org/1145063002\n\nCr-Commit-Position: refs/heads/master@{#28501}\n","milestone":45},{"_id":"9a1490ad6ffb7100c4b35581b2787ac1c08695d8","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed May 20 07:38:19 2015"},"commit":"9a1490ad6ffb7100c4b35581b2787ac1c08695d8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed May 20 07:38:04 2015"},"message":"Introduce extras export object.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1140333003\n\nCr-Commit-Position: refs/heads/master@{#28499}\n","milestone":45},{"_id":"66083dd05ff812f3402758340bfab18e4f75fa50","author":{"name":"ssid","email":"ssid@chromium.org","time":"Tue May 19 11:01:41 2015"},"commit":"66083dd05ff812f3402758340bfab18e4f75fa50","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 19 11:01:24 2015"},"message":"Adding api to get last gc object statistics for chrome://tracing.\n\nFor dumping the number of objects and size of objects alive after the\nlast gc into chrome://tracing memory dumps, this CL adds new api to\nget these number for each isolate.\n\nNote: Chrome should be run with --js-flags='--track_gc_object_stats\n--noincremental-marking' for object tracking.\n\nBUG=476013\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1113233002\n\nCr-Commit-Position: refs/heads/master@{#28474}\n","milestone":45},{"_id":"c5eb9573e74471b6aa3bd0df049a6113073f6a60","author":{"name":"horo","email":"horo@chromium.org","time":"Tue May 19 03:11:33 2015"},"commit":"c5eb9573e74471b6aa3bd0df049a6113073f6a60","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 19 03:11:23 2015"},"message":"[V8] Added Script::is_opaque flag for embedders\n\nWhen the page is controlled by a ServiceWorker, the ServiceWorker can return an opaque (non-CORS cross origin) resource response.\nWe need to treat the messages from such script resource as opaque.\n\nCommitted: https://crrev.com/7a599c5e1242d3c5ab7515ee149623da90ae69ec\nCr-Commit-Position: refs/heads/master@{#28445}\n\nReview URL: https://codereview.chromium.org/1140673002\n\nCr-Commit-Position: refs/heads/master@{#28459}\n","milestone":45},{"_id":"7a599c5e1242d3c5ab7515ee149623da90ae69ec","author":{"name":"horo","email":"horo@chromium.org","time":"Mon May 18 13:54:41 2015"},"commit":"7a599c5e1242d3c5ab7515ee149623da90ae69ec","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 18 13:54:24 2015"},"message":"[V8] Added Script::is_opaque flag for embedders\n\nWhen the page is controlled by a ServiceWorker, the ServiceWorker can return an opaque (non-CORS cross origin) resource response.\nWe need to treat the messages from such script resource as opaque.\n\nReview URL: https://codereview.chromium.org/1140673002\n\nCr-Commit-Position: refs/heads/master@{#28445}\n","milestone":45},{"_id":"fe6598cffb82ec4180dcc2e2310e77d07a803f96","author":{"name":"rossberg","email":"rossberg@chromium.org","time":"Mon May 18 13:23:30 2015"},"commit":"fe6598cffb82ec4180dcc2e2310e77d07a803f96","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 18 13:23:17 2015"},"message":"[strong] Object literals create strong objects\n\nR=dslomov@chromium.org\nBUG=v8:3956\nLOG=N\n\nReview URL: https://codereview.chromium.org/1134333005\n\nCr-Commit-Position: refs/heads/master@{#28444}\n","milestone":45},{"_id":"1d7a513ff0ac21ba37801af0cf790f3cb107967e","author":{"name":"hablich","email":"hablich@chromium.org","time":"Sun May 17 06:08:31 2015"},"commit":"1d7a513ff0ac21ba37801af0cf790f3cb107967e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sun May 17 06:08:16 2015"},"message":"Update version to 4.5\n\nBUG=\nTBR=machenbach@chromium.org\nNOTRY=true\n\nReview URL: https://codereview.chromium.org/1123393006\n\nCr-Commit-Position: refs/heads/master@{#28435}\n","milestone":45},{"_id":"7590d302e37dd04664ef2bd68042063a8e634599","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri May 15 01:48:25 2015"},"commit":"7590d302e37dd04664ef2bd68042063a8e634599","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 15 01:48:20 2015"},"message":"Fix deprecation declarations in headers\n\nBUG=none\nR=ulan@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1127963005\n\nCr-Commit-Position: refs/heads/master@{#28407}\n","milestone":45},{"_id":"ae6ec1861e7184bce4f45f73db6af355944ef58f","author":{"name":"yurys","email":"yurys@chromium.org","time":"Tue May 12 15:40:31 2015"},"commit":"ae6ec1861e7184bce4f45f73db6af355944ef58f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 12 15:40:27 2015"},"message":"Provide accessor for object internal properties that doesn't require debugger to be active\n\nSome of the DevTools' clients need to inspect JS objects without enabling debugger. This CL allows to inspect object's internal properties without enabling debugger and instantiating debug context.\n\nNote that now debug context can be created lazily if v8::Debug::GetDebugContext is called when there is no debug listener. This is fragile and has already resulted in some subtle error. I'm going to fix that in a separate CL.\n\nBUG=chromium:481845\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1134193002\n\nCr-Commit-Position: refs/heads/master@{#28371}\n","milestone":45},{"_id":"bdeb0de88c8cf5f2c78f261b45314138f525110d","author":{"name":"yurys","email":"yurys@chromium.org","time":"Tue May 12 12:38:17 2015"},"commit":"bdeb0de88c8cf5f2c78f261b45314138f525110d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 12 12:38:15 2015"},"message":"Provide accessor for object internal properties that doesn't require debugger to be active\n\nSome of the DevTools' clients need to inspect JS objects without enabling debugger. This CL allows to inspect object's internal properties without enabling debugger and instantiating debug context.\n\nNote that now debug context can be created lazily if v8::Debug::GetDebugContext is called when there is no debug listener. This is fragile and has already resulted in some subtle error. I'm going to fix that in a separate CL.\n\nBUG=chromium:481845\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1126103006\n\nCr-Commit-Position: refs/heads/master@{#28362}\n","milestone":45},{"_id":"cf07add2272fee6e2ee8c99da087aa50ff654eff","author":{"name":"yurys","email":"yurys@chromium.org","time":"Tue May 12 07:33:21 2015"},"commit":"cf07add2272fee6e2ee8c99da087aa50ff654eff","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 12 07:33:18 2015"},"message":"Don't create debug context if debug listener is not set\n\nIf there had been no debug listener v8::Debug::GetDebugContext would have created new context and wouln't have kept reference to it. This way we may well end up with several debug contexts and disabled debugger.\n\nAs a side effect this change allows to efficiently distinguish debug context from blink contexts by simply comparing handles.\n\nBUG=chromium:482290\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1136733002\n\nCr-Commit-Position: refs/heads/master@{#28356}\n","milestone":45},{"_id":"ae87d088bc4deccd267672f2cd36442b52864391","author":{"name":"jochen","email":"jochen@chromium.org","time":"Tue May 12 04:59:46 2015"},"commit":"ae87d088bc4deccd267672f2cd36442b52864391","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 12 04:59:40 2015"},"message":"Deprecate Isolate::New\n\nEmbedders need to always pass CreateParams now\n\nBUG=none\nLOG=y\nR=vogelheim@chromium.org\n\nReview URL: https://codereview.chromium.org/1133723004\n\nCr-Commit-Position: refs/heads/master@{#28353}\n","milestone":45},{"_id":"5bc51bb454ba4e96e9bcbdc4106b6986a27eed6e","author":{"name":"erikcorry","email":"erikcorry@chromium.org","time":"Mon May 11 10:57:55 2015"},"commit":"5bc51bb454ba4e96e9bcbdc4106b6986a27eed6e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon May 11 10:57:53 2015"},"message":"Postpone counters triggered during GC, and use a HandleScope when calling back.\n\nR=jkummerow@chromium.org,hpayer@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/1125383007\n\nCr-Commit-Position: refs/heads/master@{#28335}\n","milestone":45},{"_id":"692530531ddef91c3c91deefef892abef00f28c0","author":{"name":"hablich","email":"hablich@chromium.org","time":"Mon Jul 20 08:41:19 2015"},"commit":"692530531ddef91c3c91deefef892abef00f28c0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jul 20 08:41:42 2015"},"message":"Fixing patch level so it reflects the version in the tags\n\nBUG=\nR=machenbach@chromium.org\nNOTRY=true\nNOPRESUBMIT=true\n\nReview URL: https://codereview.chromium.org/1242663002\n\nCr-Commit-Position: refs/branch-heads/4.4@{#27}\nCr-Branched-From: 2e4c5505e85d94b520e853dda3f0cc3f2769e5f0-refs/heads/4.4.63@{#1}\nCr-Branched-From: 0208b8e3a1d7ce393308866386ac8d94f85faa05-refs/heads/master@{#28333}\n","milestone":44},{"_id":"3809b683c9c90d7b9a9020ea0118417e8b13e6ad","author":{"name":"Toon Verwaest","email":"verwaest@chromium.org","time":"Fri Jul 10 13:02:07 2015"},"commit":"3809b683c9c90d7b9a9020ea0118417e8b13e6ad","committer":{"name":"Toon Verwaest","email":"verwaest@chromium.org","time":"Fri Jul 10 13:02:38 2015"},"message":"Fix bug introduced by 4.4.83.18\n\nBUG=\nR=ishell@chromium.org\n\nReview URL: https://codereview.chromium.org/1232083003 .\n\nCr-Commit-Position: refs/branch-heads/4.4@{#23}\nCr-Branched-From: 2e4c5505e85d94b520e853dda3f0cc3f2769e5f0-refs/heads/4.4.63@{#1}\nCr-Branched-From: 0208b8e3a1d7ce393308866386ac8d94f85faa05-refs/heads/master@{#28333}\n","milestone":44},{"_id":"ad547cea05f3e02c67243b682e933fc53ac763d9","author":{"name":"domenic","email":"domenic@chromium.org","time":"Fri May 08 12:06:35 2015"},"commit":"ad547cea05f3e02c67243b682e933fc53ac763d9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri May 08 12:06:35 2015"},"message":"Add the concept of a V8 extras exports object\n\nExposed to the extras as extrasExports (on the builtins object), on\nwhich they can put things that should be accessible from C++. Exposed\nto C++ through the V8 API as v8::Context::GetExtrasExportsObject().\n\nAdding a test (in test-api.cc) required adding a simple extra,\ntest-extra.js, which we build into the standalone builds.\n\nR=yangguo@chromium.org, jochen@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/1128113006\n\nCr-Commit-Position: refs/heads/master@{#28317}\n","milestone":44},{"_id":"6618793e876a20ebe91a87eb20069ef4070280ed","author":{"name":"ben","email":"ben@strongloop.com","time":"Wed May 06 14:10:38 2015"},"commit":"6618793e876a20ebe91a87eb20069ef4070280ed","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed May 06 14:10:44 2015"},"message":"Add ObjectTemplate::New() taking FunctionTemplate.\n\nI know the bug has been closed but this seems like a simple addition that may\nbe useful in other ways as well.\n\nBUG=v8:2180\nLOG=N\n\nReview URL: https://codereview.chromium.org/1128553002\n\nCr-Commit-Position: refs/heads/master@{#28261}\n","milestone":44},{"_id":"64d73404393f25e2ba3a2b80106bdca2dcb95fe9","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Tue May 05 07:44:30 2015"},"commit":"64d73404393f25e2ba3a2b80106bdca2dcb95fe9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue May 05 07:44:35 2015"},"message":"[c++11] Remove remnants of pre-C++11 delete, final and override.\n\nThese macros are not needed anymore, so there's no point in supporting\nthem.\n\nReview URL: https://codereview.chromium.org/1123723003\n\nCr-Commit-Position: refs/heads/master@{#28214}\n","milestone":44},{"_id":"98140318fac953e675369d0e97dc8f8646324060","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Apr 30 13:46:27 2015"},"commit":"98140318fac953e675369d0e97dc8f8646324060","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 30 13:46:34 2015"},"message":"Unify internal and external typed arrays a bit\n\nJust give internal ones an ArrayBuffer with a NULL backing store. This\nsimplifies the access checks a lot.\n\nBUG=v8:3996\nR=hpayer@chromium.org,verwaest@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1109353003\n\nCr-Commit-Position: refs/heads/master@{#28168}\n","milestone":44},{"_id":"9ba5fe028f5420012cd161820ff0a6fa0e1e8a68","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Apr 29 09:54:34 2015"},"commit":"9ba5fe028f5420012cd161820ff0a6fa0e1e8a68","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 29 09:54:43 2015"},"message":"Pass ArrayBuffer::Allocator via Isolate::CreateParams\n\nWe shouldn't have shared state between isolates by default. The embedder\nis free to pass the same allocator to all isolates it creates.\n\nBUG=none\nR=dcarney@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1116633002\n\nCr-Commit-Position: refs/heads/master@{#28127}\n","milestone":44},{"_id":"0a1352a716e9af5d861dcede0d7c6580f018a10b","author":{"name":"ssid","email":"ssid@chromium.org","time":"Tue Apr 28 10:57:38 2015"},"commit":"0a1352a716e9af5d861dcede0d7c6580f018a10b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 28 10:57:15 2015"},"message":"Extending v8::GetHeapStatistics to return total available size.\n\nFor dumping memory statistics about v8 heap, we need the total\navailable size of the heap. This CL adds extra field in HeapStatistics\nto return the available size.\n\nBUG=476013\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1104123002\n\nCr-Commit-Position: refs/heads/master@{#28100}\n","milestone":44},{"_id":"39c31da2142ab0fca9dae279b9e59cd4951a1982","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Mon Apr 27 13:06:47 2015"},"commit":"39c31da2142ab0fca9dae279b9e59cd4951a1982","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 27 13:06:18 2015"},"message":"deprecate non-phantom weak callbacks\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1103173002\n\nCr-Commit-Position: refs/heads/master@{#28077}\n","milestone":44},{"_id":"10b979e6aaf9b39867497773b09c28aea9a71620","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Apr 27 12:10:24 2015"},"commit":"10b979e6aaf9b39867497773b09c28aea9a71620","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 27 12:10:00 2015"},"message":"Debugger: clean up debug events.\n\nThe debug event BreakForCommand is now deprecated, as it cannot happen any longer.\n\nR=ulan@chromium.org\n\nReview URL: https://codereview.chromium.org/1089893002\n\nCr-Commit-Position: refs/heads/master@{#28071}\n","milestone":44},{"_id":"8a9fe731fb92c786718e32f8e02fa550cec753d1","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Wed Apr 22 09:17:47 2015"},"commit":"8a9fe731fb92c786718e32f8e02fa550cec753d1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 22 09:17:34 2015"},"message":"add StdGlobalValueMap\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1104463002\n\nCr-Commit-Position: refs/heads/master@{#27994}\n","milestone":44},{"_id":"d707942d47f4288afd82bc3c96d34f60d9d44842","author":{"name":"jochen","email":"jochen@chromium.org","time":"Tue Apr 21 10:06:17 2015"},"commit":"d707942d47f4288afd82bc3c96d34f60d9d44842","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 21 10:05:59 2015"},"message":"Add myself to include/OWNERS\n\nBUG=none\nR=danno@chromium.org\nLOG=n\nNOTRY=true\n\nReview URL: https://codereview.chromium.org/1098873002\n\nCr-Commit-Position: refs/heads/master@{#27957}\n","milestone":44},{"_id":"202a97c88eb6807915135a1e6be9aa921cd8efac","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Tue Apr 21 08:16:12 2015"},"commit":"202a97c88eb6807915135a1e6be9aa921cd8efac","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 21 08:15:57 2015"},"message":"make Handle a synonym of Local\n\nR=svenpanne@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/679143002\n\nCr-Commit-Position: refs/heads/master@{#27951}\n","milestone":44},{"_id":"ad854ea11e787a673a40b7917a955bee6d7dc253","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Apr 20 15:01:55 2015"},"commit":"ad854ea11e787a673a40b7917a955bee6d7dc253","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 20 15:01:43 2015"},"message":"Allow for accessing an ArrayBuffer contents without externalizing it\n\nThe embedder has to take appropriate steps to ensure that the\nArrayBuffer doesn't die while it's accessing the pointer, e.g. keep a\nLocal handle to it around\n\nBUG=none\nR=dslomov@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1095083002\n\nCr-Commit-Position: refs/heads/master@{#27942}\n","milestone":44},{"_id":"53cc6486df3e787898294664c0991f00ce57dcef","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Apr 20 13:31:38 2015"},"commit":"53cc6486df3e787898294664c0991f00ce57dcef","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 20 13:31:27 2015"},"message":"Remove support for externally backed elements from the API\n\nEmbedders should use ArrayBuffers instead\n\nBUG=v8:3996\nLOG=y\nR=verwaest@chromium.org,dslomov@chromium.org,kbr@chromium.org\n\nReview URL: https://codereview.chromium.org/1092923002\n\nCr-Commit-Position: refs/heads/master@{#27939}\n","milestone":44},{"_id":"36f17ed0305017547fce39cb6a53c1c2ba79b3d8","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Apr 20 13:26:38 2015"},"commit":"36f17ed0305017547fce39cb6a53c1c2ba79b3d8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 20 13:26:21 2015"},"message":"Deprecate 3-args ResourceConstraints::ConfigureDefaults\n\nEmbedders should use the 2-args version. Number of cores is just\nignored.\n\nBUG=none\nR=dcarney@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1080633006\n\nCr-Commit-Position: refs/heads/master@{#27938}\n","milestone":44},{"_id":"063fc25122d2e569785587ff1bd13fa5c3e185ba","author":{"name":"Ross McIlroy","email":"rmcilroy@google.com","time":"Mon Apr 20 13:08:11 2015"},"commit":"063fc25122d2e569785587ff1bd13fa5c3e185ba","committer":{"name":"Ross McIlroy","email":"rmcilroy@google.com","time":"Mon Apr 20 13:08:14 2015"},"message":"Replace OVERRIDE->override and FINAL->final since we now require C++11.\n\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/1088993003\n\nCr-Commit-Position: refs/heads/master@{#27937}\n","milestone":44},{"_id":"4a597f527a657846210edcc69e2b20ff1ba02afd","author":{"name":"ssid","email":"ssid@chromium.org","time":"Fri Apr 17 19:33:18 2015"},"commit":"4a597f527a657846210edcc69e2b20ff1ba02afd","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 17 19:33:13 2015"},"message":"Adding missing V8_EXPORT flag in SpaceStatistics class in v8.h\n\nThis class was added in crrev.com/1058253003 and missed V8_EXPORT in\ndefinition.\n\nBUG=466141, 476013\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1090333002\n\nCr-Commit-Position: refs/heads/master@{#27926}\n","milestone":44},{"_id":"281d30d758dc9060045ada1b3d326bfe3ef668dd","author":{"name":"ssid","email":"ssid@chromium.org","time":"Fri Apr 17 14:04:32 2015"},"commit":"281d30d758dc9060045ada1b3d326bfe3ef668dd","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 17 14:04:24 2015"},"message":"Adding V8 api to get memory statistics of spaces in V8::Heap.\n\nThis is first step towards adding V8 heap statistics to the memory\ntracing infrastructure. For being able to get useful memory number into\nthe memory dump, v8 needs to provide an external api needs to obtain\nmore information about the heap. So, this Cl extends the api to give\ninformation about the memory allocated and used in the spaces.\n\nBUG=466141, 476013\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1058253003\n\nCr-Commit-Position: refs/heads/master@{#27919}\n","milestone":44},{"_id":"47cca4684e18c928d5d32b290b4c1314ac156953","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Apr 15 07:15:52 2015"},"commit":"47cca4684e18c928d5d32b290b4c1314ac156953","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 15 07:15:43 2015"},"message":"Remove support for specifying the number of available threads\n\nThe embedder can control how many threads it wants to use via the\nv8::Platform implementation. V8 internally doesn't spin up threads\nanymore. If the embedder doesn't want to use any threads at all, it's\nv8::Platform implementation must either run the background jobs on\nthe foreground thread, or the embedder should specify --predictable\n\nBUG=none\nR=yangguo@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1064723005\n\nCr-Commit-Position: refs/heads/master@{#27833}\n","milestone":44},{"_id":"ac23150fd2be43fcda9ad12dc118c6b16d96cdb6","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Apr 15 07:11:54 2015"},"commit":"ac23150fd2be43fcda9ad12dc118c6b16d96cdb6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 15 07:11:50 2015"},"message":"When converting Maybe and MaybeLocal values with a check, always check\n\nAn embedder that wants to avoid the check should use MaybeLocal::ToLocal.\n\nBUG=none\nR=dcarney@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1083943002\n\nCr-Commit-Position: refs/heads/master@{#27832}\n","milestone":44},{"_id":"a684535693b4949e4863d0f60178ac3fc6638e82","author":{"name":"smcgruer","email":"smcgruer@google.com","time":"Tue Apr 14 07:54:30 2015"},"commit":"a684535693b4949e4863d0f60178ac3fc6638e82","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 14 07:54:26 2015"},"message":"Restore V8_LIBC_UCLIBC as a libc option.\n\nAs uClibc defines __GLIBC__ in an attempt to look like glibc, V8_LIBC_GLIBC\nwas true for uClibc as well. Checking for uClibc before glibc fixes this\nand restores the correct behavior.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1066573005\n\nCr-Commit-Position: refs/heads/master@{#27806}\n","milestone":44},{"_id":"ada32ae63651f544801647b7a6fe16f0f6146996","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Apr 13 11:28:02 2015"},"commit":"ada32ae63651f544801647b7a6fe16f0f6146996","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 13 11:27:58 2015"},"message":"Expose ArrayBufferView::HasBuffer\n\nThis allows the embedder to decide whether it's worthwhile to copy the\ncontents to avoid materializing a buffer.\n\nBUG=v8:3996\nR=dslomov@chromium.org,kbr@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1084513002\n\nCr-Commit-Position: refs/heads/master@{#27782}\n","milestone":44},{"_id":"1f85559a69fb385b9fd7d6724c6113e743ce6fec","author":{"name":"fedor","email":"fedor@indutny.com","time":"Fri Apr 10 23:17:09 2015"},"commit":"1f85559a69fb385b9fd7d6724c6113e743ce6fec","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 10 23:17:09 2015"},"message":"api: introduce SealHandleScope\n\nWhen debugging Handle leaks in io.js we found it very convenient to be\nable to Seal some specific (root in our case) scope to prevent Handle\nallocations in it, and easily find leakage.\n\nR=yangguo\nBUG=\n\nReview URL: https://codereview.chromium.org/1079713002\n\nCr-Commit-Position: refs/heads/master@{#27766}\n","milestone":44},{"_id":"e7ba4791e5d4c6c185fe68809f1369b4674403b1","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Fri Apr 10 13:40:06 2015"},"commit":"e7ba4791e5d4c6c185fe68809f1369b4674403b1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 10 13:40:31 2015"},"message":"simplify GlobalValueMap calls to DisposeWeak\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1074153002\n\nCr-Commit-Position: refs/heads/master@{#27750}\n","milestone":44},{"_id":"f56fb72f984a212e698c27799b5d10b9aace59db","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri Apr 10 09:23:44 2015"},"commit":"f56fb72f984a212e698c27799b5d10b9aace59db","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Apr 10 09:23:44 2015"},"message":"Special case the \"empty string\" root so it doesn't constantly jump around\n\nBUG=none\nR=hpayer@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1075133002\n\nCr-Commit-Position: refs/heads/master@{#27736}\n","milestone":44},{"_id":"1f7a7b32d721cd48447017340961bf5ec80d199a","author":{"name":"thakis","email":"thakis@chromium.org","time":"Thu Apr 09 21:22:46 2015"},"commit":"1f7a7b32d721cd48447017340961bf5ec80d199a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 09 21:22:50 2015"},"message":"Fix C++ violation.\n\ngcc rejects the following snippet, clang rejects it in -std=c++11 mode:\n  namespace A { template<class T> class C {}; }\n  namespace B { template class A::C<int>; }\n\nIndeed, the C++ standard says in 14.7.2p2 \"An explicit instantiation shall\nappear in an enclosing namespace of its template\", so cl.exe is incorrect to\nallow this.\n\nJust move the instantiation out of the v8 namespace to fix.  No intended\nbehavior change.  Fixes building with clang-cl on Windows.\n\nBUG=chromium:475643\nLOG=N\nTBR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/1073903002\n\nCr-Commit-Position: refs/heads/master@{#27721}\n","milestone":44},{"_id":"4e7163ce05f135918205c7855ae60a48e5d46cc5","author":{"name":"verwaest","email":"verwaest@chromium.org","time":"Thu Apr 09 13:34:16 2015"},"commit":"4e7163ce05f135918205c7855ae60a48e5d46cc5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 09 13:34:21 2015"},"message":"Merge cellspace into old pointer space\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1010803012\n\nCr-Commit-Position: refs/heads/master@{#27707}\n","milestone":44},{"_id":"eb95406e2bc46e14efac17a771a21989a59a6ec9","author":{"name":"loislo","email":"loislo@chromium.org","time":"Wed Apr 08 16:13:24 2015"},"commit":"eb95406e2bc46e14efac17a771a21989a59a6ec9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Apr 08 16:13:31 2015"},"message":"CpuProfiler: public API for deopt info in cpu profiler.\n\nBUG=chromium:452067\nLOG=n\n\nCommitted: https://crrev.com/baf927ff5115ec62a6dad684b9232ed9d3960e3a\nCr-Commit-Position: refs/heads/master@{#27626}\n\nReview URL: https://codereview.chromium.org/1045753002\n\nCr-Commit-Position: refs/heads/master@{#27674}\n","milestone":44},{"_id":"baf927ff5115ec62a6dad684b9232ed9d3960e3a","author":{"name":"loislo","email":"loislo@chromium.org","time":"Tue Apr 07 12:40:41 2015"},"commit":"baf927ff5115ec62a6dad684b9232ed9d3960e3a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 07 12:40:47 2015"},"message":"CpuProfiler: public API for deopt info in cpu profiler.\n\nBUG=chromium:452067\nLOG=n\n\nReview URL: https://codereview.chromium.org/1045753002\n\nCr-Commit-Position: refs/heads/master@{#27626}\n","milestone":44},{"_id":"8e723e98929b68c87ce39ff9f5c2d136a2ed8a46","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Tue Apr 07 12:21:34 2015"},"commit":"8e723e98929b68c87ce39ff9f5c2d136a2ed8a46","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 07 12:21:42 2015"},"message":"Debugger: remove debug command API.\n\nInstead, please use v8::Isolate::RequestInterrupt to synchronize\nto the main thread.\n\nR=yurys@chromium.org\nAPI=Removed v8::Debug::DebugBreakForCommand\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1036863002\n\nCr-Commit-Position: refs/heads/master@{#27625}\n","milestone":44},{"_id":"90cbede58882383173963809c90bf5514cc91648","author":{"name":"jkummerow","email":"jkummerow@chromium.org","time":"Tue Apr 07 10:42:45 2015"},"commit":"90cbede58882383173963809c90bf5514cc91648","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Apr 07 10:42:57 2015"},"message":"Move prototype metadata from internal properties to prototype maps\n\nThe motivation is that we prefer to avoid creating internal properties, and we have a usable field on maps (\"transitions\", which is not used for prototype maps).\nThis CL also ensures the invariant that prototype maps are never shared, even if they are in dictionary mode.\n\nReview URL: https://codereview.chromium.org/1033653002\n\nCr-Commit-Position: refs/heads/master@{#27617}\n","milestone":44},{"_id":"31bbcc3e197cd69c0bb806107448aff2c1ae8b15","author":{"name":"hablich","email":"hablich@chromium.org","time":"Mon Apr 06 21:32:07 2015"},"commit":"31bbcc3e197cd69c0bb806107448aff2c1ae8b15","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Apr 06 21:32:13 2015"},"message":"Updated version to 4.4\n\nBUG=\nTBR=machenbach@chromium.org,vogelheim@chromium.org\nNOTRY=true\n\nReview URL: https://codereview.chromium.org/1059433002\n\nCr-Commit-Position: refs/heads/master@{#27604}\n","milestone":44},{"_id":"ce7cc5119c1e031bf1eb8476fbf5e55bef738f94","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Thu Apr 02 10:59:45 2015"},"commit":"ce7cc5119c1e031bf1eb8476fbf5e55bef738f94","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 02 10:59:51 2015"},"message":"make ToLocalCheck crash in release mode\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/1043363005\n\nCr-Commit-Position: refs/heads/master@{#27585}\n","milestone":44},{"_id":"2a5eb8299b2fa13d57d1d4741d4f121df1c3e883","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Apr 02 09:36:37 2015"},"commit":"2a5eb8299b2fa13d57d1d4741d4f121df1c3e883","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 02 09:36:39 2015"},"message":"Expose an API on ArrayBufferView to copy out content w/o changing the buffer\n\nBUG=v8:3996\nLOG=y\nR=dslomov@chromium.org,kbr@chromium.org,hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/1041403003\n\nCr-Commit-Position: refs/heads/master@{#27580}\n","milestone":44},{"_id":"83f827a00b552de4f3289c9afa09b49422514ab1","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Apr 02 08:46:18 2015"},"commit":"83f827a00b552de4f3289c9afa09b49422514ab1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 02 08:46:24 2015"},"message":"Add initial set of sub directory OWNERS file\n\nBUG=none\nR=danno@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/960903003\n\nCr-Commit-Position: refs/heads/master@{#27579}\n","milestone":44},{"_id":"729b85ae8678ebd998a0e5f254817683198d0610","author":{"name":"adamk","email":"adamk@chromium.org","time":"Tue Mar 31 23:03:08 2015"},"commit":"729b85ae8678ebd998a0e5f254817683198d0610","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 31 23:03:19 2015"},"message":"Add a UseCounter for Object.observe\n\nIt triggers once per context that calls observe (or attempts to access\nany observation metadata, e.g. through Object.getNotifier).\n\nReview URL: https://codereview.chromium.org/1048213002\n\nCr-Commit-Position: refs/heads/master@{#27557}\n","milestone":44},{"_id":"3fbc0cb79a2e1208cc94309eda5205119f938fce","author":{"name":"jochen","email":"jochen@chromium.org","time":"Tue Mar 31 17:11:10 2015"},"commit":"3fbc0cb79a2e1208cc94309eda5205119f938fce","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 31 17:11:21 2015"},"message":"Deprecate IdleNotification()\n\nEmbedders should use IdleNotificationDeadline()\n\nBUG=none\nR=hpayer@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1019793008\n\nCr-Commit-Position: refs/heads/master@{#27550}\n","milestone":44},{"_id":"de9c3e59f0e3d1248849d2eba7e7e04925659d41","author":{"name":"erikcorry","email":"erikcorry@chromium.org","time":"Mon Mar 30 11:56:25 2015"},"commit":"de9c3e59f0e3d1248849d2eba7e7e04925659d41","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 30 11:56:36 2015"},"message":"Record various overflow events on the heap - reland of 1029323003\n\nR=hpayer@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/1040763002\n\nCr-Commit-Position: refs/heads/master@{#27520}\n","milestone":44},{"_id":"f303b81bde52ba45228aa26a69a2ac25c01c10b3","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Mon Mar 30 09:15:54 2015"},"commit":"f303b81bde52ba45228aa26a69a2ac25c01c10b3","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 30 09:16:07 2015"},"message":"ensure maybe results are checked in v8.h\n\nalso some drive-by handlescope fixes in api.cc\n\nR=svenpanne@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1040043002\n\nCr-Commit-Position: refs/heads/master@{#27510}\n","milestone":44},{"_id":"41","message":"NO_COMMITS","milestone":41},{"_id":"102b18acddf7ffaa962995dd961eee1230f67b3f","author":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Wed Apr 08 12:29:17 2015"},"commit":"102b18acddf7ffaa962995dd961eee1230f67b3f","committer":{"name":"Jochen Eisinger","email":"jochen@chromium.org","time":"Wed Apr 08 12:29:31 2015"},"message":"When sweeping is in progress, either finalize or do nothing\n\nBUG=none\nLOG=n\nR=rmcilroy@chromium.org, hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/1070653003\n\nCr-Commit-Position: refs/branch-heads/4.3@{#4}\nCr-Branched-From: f5c0a23a505616796a628d64f4ffe377d1fc4bcf-refs/heads/4.3.61@{#1}\nCr-Branched-From: 0a7d4f496a554028de0ab5a963c3a004e693b4cb-refs/heads/master@{#27508}\n","milestone":43},{"_id":"25a166b8c7ecdb1cff7b9cfa1b2d0268ff6b0671","author":{"name":"hablich","email":"hablich@chromium.org","time":"Thu Apr 02 15:35:45 2015"},"commit":"25a166b8c7ecdb1cff7b9cfa1b2d0268ff6b0671","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Apr 02 15:35:51 2015"},"message":"Disable handle zapping on 4.3 branch\n\nBUG=\nLOG=n\nTBR=vogelheim@chromium.org\nNOTRY=true\n\nReview URL: https://codereview.chromium.org/1058893002\n\nCr-Commit-Position: refs/branch-heads/4.3@{#2}\nCr-Branched-From: f5c0a23a505616796a628d64f4ffe377d1fc4bcf-refs/heads/4.3.61@{#1}\nCr-Branched-From: 0a7d4f496a554028de0ab5a963c3a004e693b4cb-refs/heads/master@{#27508}\n","milestone":43},{"_id":"a45a1de7aafcc048118a60fdcba8d1d9d8be9fcf","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Thu Mar 26 15:21:54 2015"},"commit":"a45a1de7aafcc048118a60fdcba8d1d9d8be9fcf","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 26 15:22:08 2015"},"message":"add access checks to receivers on function callbacks\n\nR=verwaest@chromium.org\nBUG=468451\nLOG=N\n\nReview URL: https://codereview.chromium.org/1036743004\n\nCr-Commit-Position: refs/heads/master@{#27482}\n","milestone":43},{"_id":"2455aadf7b88f3da8e1f260238df40fbc768c208","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Thu Mar 26 11:50:16 2015"},"commit":"2455aadf7b88f3da8e1f260238df40fbc768c208","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 26 11:50:28 2015"},"message":"two pass phantom collection\n\nR=jochen@chromium.org, erikcorry@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/998253006\n\nCr-Commit-Position: refs/heads/master@{#27475}\n","milestone":43},{"_id":"f13d04d28cf1eb8d6783416d8d3a1d71d82df846","author":{"name":"yurys","email":"yurys@chromium.org","time":"Thu Mar 26 08:49:52 2015"},"commit":"f13d04d28cf1eb8d6783416d8d3a1d71d82df846","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 26 08:50:02 2015"},"message":"Return timestamp of the last recorded interval to the caller of HeapProfiler::GetHeapStats\n\nBefore this patch the embedder could assign timestamp to the last interval after calling GetHeapStats. This would be slightly different from the timstamps assigned by v8 internally and written into heap snapshot. This patch allow to avoid this small discrepancy by returning timestamp along with last heap stats update.\n\nBUG=chromium:467222\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1037803002\n\nCr-Commit-Position: refs/heads/master@{#27466}\n","milestone":43},{"_id":"a037a44582b83b0799d8580ab9c3aa8fd7ab3dd7","author":{"name":"yurys","email":"yurys@chromium.org","time":"Wed Mar 25 15:32:04 2015"},"commit":"a037a44582b83b0799d8580ab9c3aa8fd7ab3dd7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 25 15:32:15 2015"},"message":"Remove v8::Isolate::ClearInterrupt\n\nThe method was deprecated a while ago: https://crrev.com/87e4bba31eabfd3b12e42b5886dc9da08d2daf13\n\nLOG=Y\nBUG=YES\nAPI=Remove v8::Isolate::ClearInterrupt\n\nReview URL: https://codereview.chromium.org/1032623007\n\nCr-Commit-Position: refs/heads/master@{#27449}\n","milestone":43},{"_id":"fc7ff65c6d8d1b75ad904ddea95110e91db2b987","author":{"name":"alexandre.rames","email":"alexandre.rames@arm.com","time":"Wed Mar 25 14:22:27 2015"},"commit":"fc7ff65c6d8d1b75ad904ddea95110e91db2b987","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 25 14:22:33 2015"},"message":"Fix the V8_GNUC_PREREQ macro.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1003383004\n\nCr-Commit-Position: refs/heads/master@{#27442}\n","milestone":43},{"_id":"bb880058f6499510cff12d98dc7d524d35d769cb","author":{"name":"erikcorry","email":"erikcorry@chromium.org","time":"Tue Mar 24 16:17:42 2015"},"commit":"bb880058f6499510cff12d98dc7d524d35d769cb","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 24 16:17:57 2015"},"message":"Track how many pages trigger fallback strategies in GC\n\nR=hpayer@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/1029323003\n\nCr-Commit-Position: refs/heads/master@{#27421}\n","milestone":43},{"_id":"adeb82ef236158f39d875592aed7ca43b11e9671","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Tue Mar 24 13:22:08 2015"},"commit":"adeb82ef236158f39d875592aed7ca43b11e9671","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 24 13:22:15 2015"},"message":"fix disposal of phantom handles in GlobalValueMap\n\nadditionally, add a drive by fix to WeakCallbackInfo\n\nR=jochen@chromium.org, erikcorry@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1026283004\n\nCr-Commit-Position: refs/heads/master@{#27407}\n","milestone":43},{"_id":"d19d0be8a04745959ded069b83793571b77cf984","author":{"name":"jochen","email":"jochen@chromium.org","time":"Tue Mar 24 08:29:52 2015"},"commit":"d19d0be8a04745959ded069b83793571b77cf984","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 24 08:30:02 2015"},"message":"Remove calls to IdleNotification()\n\nAll users should use IdleNotificationDeadline() instead\n\nBUG=none\nR=hpayer@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1028163003\n\nCr-Commit-Position: refs/heads/master@{#27386}\n","milestone":43},{"_id":"79c5948b16e4a01517f74927df45eb56934bd99b","author":{"name":"verwaest","email":"verwaest@chromium.org","time":"Mon Mar 23 14:58:58 2015"},"commit":"79c5948b16e4a01517f74927df45eb56934bd99b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 23 14:59:11 2015"},"message":"Remove reference to PropertyCellSpace from include/v8.h\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1009123003\n\nCr-Commit-Position: refs/heads/master@{#27371}\n","milestone":43},{"_id":"f1d970a4aeb992805e04ca06e04db8271d77386c","author":{"name":"dslomov","email":"dslomov@chromium.org","time":"Thu Mar 19 14:17:24 2015"},"commit":"f1d970a4aeb992805e04ca06e04db8271d77386c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 19 14:17:42 2015"},"message":"Add a counter for legacy const.\nOnly adds a counter id, does not count anything.\n\nR=jochen@chromium.org\nBUG=v8:3942\nLOG=N\n\nReview URL: https://codereview.chromium.org/1020883002\n\nCr-Commit-Position: refs/heads/master@{#27313}\n","milestone":43},{"_id":"5d8e3bfaffd1c0edac4f03b41767b101dd75c482","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Mar 19 12:38:30 2015"},"commit":"5d8e3bfaffd1c0edac4f03b41767b101dd75c482","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 19 12:38:38 2015"},"message":"Clarify what APIs return Maybe and MaybeLocal values\n\nIf the Maybe is nothing or the MaybeLocal is empty, it means that the\nAPI call either threw an exception or an exception was already pending.\n\nIn that case, the embedder needs to handle the exception or otherwise\nreact to the failed API call.\n\nBUG=v8:3929\nR=svenpanne@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1022803002\n\nCr-Commit-Position: refs/heads/master@{#27298}\n","milestone":43},{"_id":"c622cb637a2831f9c2bf0ec7b80bb65440e9afc4","author":{"name":"yurys","email":"yurys@chromium.org","time":"Thu Mar 19 08:18:35 2015"},"commit":"c622cb637a2831f9c2bf0ec7b80bb65440e9afc4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 19 08:18:44 2015"},"message":"Introduce explicit constant for per Context debug data set by embedder\n\nIt's value is hardwired in gin[1] and is referenced in Blink[2]. Since it is treated specially by v8 debugger it should be defined in v8 API and referenced in gin and blink..\n\n[1] https://src.chromium.org/viewvc/chrome/trunk/src/gin/public/context_holder.h?r1=239099&r2=239098&pathrev=239099\n[2] https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/bindings/core/v8/V8PerContextData.cpp&q=kDebugIdIndex%20f:V8PerContextData&sq=package:chromium&type=cs\n\nBUG=chromium:466631\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1020453002\n\nCr-Commit-Position: refs/heads/master@{#27290}\n","milestone":43},{"_id":"0880d4da26d5db48c9c1784e6c4d53aaf473ef59","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Wed Mar 18 12:50:41 2015"},"commit":"0880d4da26d5db48c9c1784e6c4d53aaf473ef59","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 18 12:50:48 2015"},"message":"add interceptors which do not mask existing properties\n\nR=verwaest@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/962613002\n\nCr-Commit-Position: refs/heads/master@{#27271}\n","milestone":43},{"_id":"7f38011a04ca27e8f88b300713c8dc05ba8d61d7","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Wed Mar 18 12:50:13 2015"},"commit":"7f38011a04ca27e8f88b300713c8dc05ba8d61d7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 18 12:50:28 2015"},"message":"convert last api functions which try to handle exceptions to maybes\n\nBUG=v8:3929\nLOG=n\n\nReview URL: https://codereview.chromium.org/1015083002\n\nCr-Commit-Position: refs/heads/master@{#27270}\n","milestone":43},{"_id":"16c8485a35efc36cf6ccd15185282d65412e1502","author":{"name":"verwaest","email":"verwaest@chromium.org","time":"Wed Mar 18 11:43:51 2015"},"commit":"16c8485a35efc36cf6ccd15185282d65412e1502","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 18 11:43:58 2015"},"message":"Remove PropertyCell space\nReplaces StoreGlobalCell / LoadGlobalCell with NamedField variants that use write barriers.\nBUG=\n\nReview URL: https://codereview.chromium.org/1016803002\n\nCr-Commit-Position: refs/heads/master@{#27269}\n","milestone":43},{"_id":"0e024449b8322f99534c1901ac6acc6611ddcb1d","author":{"name":"vegorov","email":"vegorov@google.com","time":"Wed Mar 18 10:14:51 2015"},"commit":"0e024449b8322f99534c1901ac6acc6611ddcb1d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 18 10:15:04 2015"},"message":"Make counter and histogram related callbacks part of the Isolate::CreateParams.\n\nSome native counters (e.g. KeyedLoadGenericSlow) are referenced from stubs that are generated very early in the Isolate lifecycle before v8::Isolate::New returns. Thus counter lookup callback also needs to be installed early prior to v8::internal::Isolate::Init call. Otherwise assembler will just assume that the counter is not enabled and produce no code from IncrementCounter - because address of the counter is not yet available.\n\nHistogram related callbacks are moved for consistency to make them able to collect samples which occur at isolate initialization time.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1010233002\n\nCr-Commit-Position: refs/heads/master@{#27262}\n","milestone":43},{"_id":"257ff4893114854519530957c2eeb97c15cd359f","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Wed Mar 18 09:38:46 2015"},"commit":"257ff4893114854519530957c2eeb97c15cd359f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 18 09:39:03 2015"},"message":"Merge old data and pointer space.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1012023002\n\nCr-Commit-Position: refs/heads/master@{#27259}\n","milestone":43},{"_id":"85a0e8075f433fe92c9a4f2df3c86d14000580d9","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Tue Mar 17 11:45:35 2015"},"commit":"85a0e8075f433fe92c9a4f2df3c86d14000580d9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 17 11:45:50 2015"},"message":"convert String::New functions to maybe\n\nR=svenpanne@chromium.org\nBUG=v8:3929\nLOG=n\n\nReview URL: https://codereview.chromium.org/1010803008\n\nCr-Commit-Position: refs/heads/master@{#27236}\n","milestone":43},{"_id":"4a99e6f49308c1294a60a1e879f063af6d952f8c","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Tue Mar 17 09:03:40 2015"},"commit":"4a99e6f49308c1294a60a1e879f063af6d952f8c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 17 09:03:50 2015"},"message":"add missing dcheck to ToLocalChecked\n\nR=svenpanne@chromium.org\nBUG=v8:3929\nLOG=n\n\nReview URL: https://codereview.chromium.org/1017663002\n\nCr-Commit-Position: refs/heads/master@{#27229}\n","milestone":43},{"_id":"f92c8a36709efb1514846b3bb672c40e4fb4c672","author":{"name":"yurys","email":"yurys@chromium.org","time":"Mon Mar 16 09:49:18 2015"},"commit":"f92c8a36709efb1514846b3bb672c40e4fb4c672","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 16 09:49:28 2015"},"message":"Remove obsolete TakeHeapSnapshot method from API\n\nBUG=chromium:465651\nLOG=Y\n\nReview URL: https://codereview.chromium.org/997583004\n\nCr-Commit-Position: refs/heads/master@{#27208}\n","milestone":43},{"_id":"83245abb6b6503772f39625025d64caef84b513f","author":{"name":"bashi","email":"bashi@chromium.org","time":"Thu Mar 12 12:27:41 2015"},"commit":"83245abb6b6503772f39625025d64caef84b513f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 12 12:27:46 2015"},"message":"Add Cast() for Int32 and Uint32\n\nIt should be possible to cast a Value to Int32 without throwing an exception\nwhen IsInt32() is true. Same for Uint32.\n\nBUG=chromium:462402\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1003663002\n\nCr-Commit-Position: refs/heads/master@{#27156}\n","milestone":43},{"_id":"f71e26268338d2840133264329bf35a63011bb5a","author":{"name":"mstarzinger","email":"mstarzinger@chromium.org","time":"Wed Mar 11 10:02:39 2015"},"commit":"f71e26268338d2840133264329bf35a63011bb5a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 11 10:02:48 2015"},"message":"Simplify pending message script handling.\n\nThis removes the separate tracking of the pending message script,\nbecause that script is already stored in the message object and\nduplicating it in the ThreadLocalTop makes it more brittle.\n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/995013005\n\nCr-Commit-Position: refs/heads/master@{#27127}\n","milestone":43},{"_id":"5234d9977d637668e66b9e2e9f0456c6f97f749e","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Wed Mar 11 09:32:57 2015"},"commit":"5234d9977d637668e66b9e2e9f0456c6f97f749e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 11 09:33:04 2015"},"message":"convert most remaining api functions needing context to maybes\n\nBUG=\n\nReview URL: https://codereview.chromium.org/993223003\n\nCr-Commit-Position: refs/heads/master@{#27126}\n","milestone":43},{"_id":"8bdac106312c88e2f3059efa067ebbbfc7467360","author":{"name":"bashi","email":"bashi@chromium.org","time":"Tue Mar 10 23:40:11 2015"},"commit":"8bdac106312c88e2f3059efa067ebbbfc7467360","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 10 23:40:20 2015"},"message":"Add Cast() to Boolean\n\nWe should be able to cast a Value to Boolean when IsBoolean() is true.\n\nReview URL: https://codereview.chromium.org/990943003\n\nCr-Commit-Position: refs/heads/master@{#27124}\n","milestone":43},{"_id":"619d4535cced3be482ea7f0a5ac1a31573e01119","author":{"name":"yurys","email":"yurys@chromium.org","time":"Tue Mar 10 15:14:01 2015"},"commit":"619d4535cced3be482ea7f0a5ac1a31573e01119","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 10 15:14:07 2015"},"message":"Remove uid and title from HeapSnapshot\n\nNone of these fields is used in Blink. Embedder always can implement them using existing API.\n\nBUG=chromium:465651\nLOG=Y\n\nReview URL: https://codereview.chromium.org/983833006\n\nCr-Commit-Position: refs/heads/master@{#27113}\n","milestone":43},{"_id":"37729a52fdf3eaa4789612559e955d23328a2b8f","author":{"name":"mstarzinger","email":"mstarzinger@chromium.org","time":"Tue Mar 10 14:45:14 2015"},"commit":"37729a52fdf3eaa4789612559e955d23328a2b8f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 10 14:45:26 2015"},"message":"Simplify and correctify pending message location handling.\n\nThis makes sure that the pending message location is only tracked by\nthe message object, as only this is saved for finally-blocks. The\nlocation information is duplicated and becomes stale.\n\nR=titzer@chromium.org\nTEST=maeh, not so much.\n\nReview URL: https://codereview.chromium.org/987353002\n\nCr-Commit-Position: refs/heads/master@{#27109}\n","milestone":43},{"_id":"39d329103f5b5556a3155c736a4ebf582fa18d17","author":{"name":"yurys","email":"yurys@chromium.org","time":"Tue Mar 10 11:58:14 2015"},"commit":"39d329103f5b5556a3155c736a4ebf582fa18d17","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 10 11:58:24 2015"},"message":"Remove deprecated CpuProfiler methods\n\nBUG=None\nLOG=Y\n\nReview URL: https://codereview.chromium.org/992193002\n\nCr-Commit-Position: refs/heads/master@{#27097}\n","milestone":43},{"_id":"66969fb2ad6161d2d1da87cdd6fb50e1e6c970e5","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Tue Mar 10 09:15:46 2015"},"commit":"66969fb2ad6161d2d1da87cdd6fb50e1e6c970e5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 10 09:15:59 2015"},"message":"convert Function and Promise to maybe\n\nBUG=\n\nReview URL: https://codereview.chromium.org/993883002\n\nCr-Commit-Position: refs/heads/master@{#27087}\n","milestone":43},{"_id":"60c1ad026d084b62fc963330af0b4802346eab7d","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Mon Mar 09 21:47:54 2015"},"commit":"60c1ad026d084b62fc963330af0b4802346eab7d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Mar 09 21:48:09 2015"},"message":"remove phantom naming from the api\n\nsince the old style weakness is slated for removal, we might as well reuse the name to limit confusion.  additionally I simplified the callback type to a enum to either get internal field values or not\n\nthis should be a non-breaking change with the exception of PhantomPersistentValueMap, which is unused.\n\nR=jochen@chromium.org, erikcorry@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/989153003\n\nCr-Commit-Position: refs/heads/master@{#27084}\n","milestone":43},{"_id":"47154aa8b2564ccb72e233a6c3c449c8edb53001","author":{"name":"Dan Carney","email":"dcarney@chromium.org","time":"Mon Mar 09 09:49:09 2015"},"commit":"47154aa8b2564ccb72e233a6c3c449c8edb53001","committer":{"name":"Dan Carney","email":"dcarney@chromium.org","time":"Mon Mar 09 09:49:28 2015"},"message":"add V8_DEPRECATE_SOON macros to make it easier to identify calls which need deprecation\n\nBUG=\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/990873002\n\nCr-Commit-Position: refs/heads/master@{#27061}\n","milestone":43},{"_id":"c23035cdd0b47afe3717c1a25f13ca075af0c1a2","author":{"name":"kalman","email":"kalman@chromium.org","time":"Fri Mar 06 16:39:02 2015"},"commit":"c23035cdd0b47afe3717c1a25f13ca075af0c1a2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 06 16:39:16 2015"},"message":"Add MoveOnlyTypeForCPP03 to UniquePersistent for compatibility with Chromium.\n\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/986463005\n\nCr-Commit-Position: refs/heads/master@{#27049}\n","milestone":43},{"_id":"1b00451f5748ece669127ce9986ad77e4285bdad","author":{"name":"ulan","email":"ulan@chromium.org","time":"Fri Mar 06 12:36:16 2015"},"commit":"1b00451f5748ece669127ce9986ad77e4285bdad","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 06 12:36:32 2015"},"message":"Retain maps embedded in optimized code for several garbage collections.\n\nThis keeps dying maps alive for FLAG_retain_maps_for_n_gc garbage collections\nto increase chances of them being reused for new objects in future and\ndecrease number of deoptimizations.\n\nBUG=v8:3664\nLOG=N\nTEST=cctest/test-heap/MapRetaining\n\nReview URL: https://codereview.chromium.org/980523004\n\nCr-Commit-Position: refs/heads/master@{#27040}\n","milestone":43},{"_id":"b9bf2051cd9c62de75fdd0300d2801c6328a80cc","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Fri Mar 06 10:28:02 2015"},"commit":"b9bf2051cd9c62de75fdd0300d2801c6328a80cc","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Mar 06 10:28:15 2015"},"message":"convert more things to maybe\n\nBUG=v8:3929\nLOG=y\n\nReview URL: https://codereview.chromium.org/982123003\n\nCr-Commit-Position: refs/heads/master@{#27038}\n","milestone":43},{"_id":"e33ae81ce1c13f80533d6c997fd39ab7d6609dfc","author":{"name":"yurys","email":"yurys@chromium.org","time":"Thu Mar 05 13:03:42 2015"},"commit":"e33ae81ce1c13f80533d6c997fd39ab7d6609dfc","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 05 13:03:57 2015"},"message":"Allow passing sourceMapUrl when compiling scripts\n\nAccording to Source Map specification [1] source map url can be passed either as a magic comment at the end of script or as SourceMap http header. We already parse the former value and expose it on Script object. This change allows to unify the way we deal with source map urls received in http header by providing api for passing that url into the script being compiled.\n\nsource_map_url is intentionally not passed into CompilationCacheScript::Lookup. The cache is anyways disabled when debugger is on.\n\n[1] https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n\nLOG=Y\nBUG=chromium:462572\n\nReview URL: https://codereview.chromium.org/983603003\n\nCr-Commit-Position: refs/heads/master@{#27017}\n","milestone":43},{"_id":"95c1f5ddc87e60906e47db633898aec685a50252","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Thu Mar 05 12:26:07 2015"},"commit":"95c1f5ddc87e60906e47db633898aec685a50252","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 05 12:26:19 2015"},"message":"convert compile functions to use maybe\n\nBUG=v8:3929\nLOG=y\n\nReview URL: https://codereview.chromium.org/980613002\n\nCr-Commit-Position: refs/heads/master@{#27013}\n","milestone":43},{"_id":"3f5ae16c62b031ad572f750d81ffc71c5d6d1f9b","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Thu Mar 05 11:40:35 2015"},"commit":"3f5ae16c62b031ad572f750d81ffc71c5d6d1f9b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 05 11:40:43 2015"},"message":"rename UniquePersistent to Global\n\nBUG=\n\nReview URL: https://codereview.chromium.org/980173003\n\nCr-Commit-Position: refs/heads/master@{#27011}\n","milestone":43},{"_id":"6e189f5ae6af20eb9d27f954bae8c5532749fb1b","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Thu Mar 05 08:30:43 2015"},"commit":"6e189f5ae6af20eb9d27f954bae8c5532749fb1b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Mar 05 08:30:54 2015"},"message":"give UniquePersistent full move semantics\n\nBUG=v8:3669\nLOG=Y\n\nReview URL: https://codereview.chromium.org/978783002\n\nCr-Commit-Position: refs/heads/master@{#27004}\n","milestone":43},{"_id":"bde194974447853ee6dc30a72f898fb410c7e46b","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Wed Mar 04 12:58:31 2015"},"commit":"bde194974447853ee6dc30a72f898fb410c7e46b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Mar 04 12:58:40 2015"},"message":"convert remaining object functions to maybes\n\nBUG=v8:3929\nLOG=y\n\nReview URL: https://codereview.chromium.org/977893002\n\nCr-Commit-Position: refs/heads/master@{#26981}\n","milestone":43},{"_id":"6130b02524059069413c1fccce5695c2802019b8","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Tue Mar 03 07:14:28 2015"},"commit":"6130b02524059069413c1fccce5695c2802019b8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Mar 03 07:14:45 2015"},"message":"convert more object functions to return maybes\n\nR=svenpanne@chromium.org\n\nBUG=v8:3929\nLOG=y\n\nReview URL: https://codereview.chromium.org/972623003\n\nCr-Commit-Position: refs/heads/master@{#26952}\n","milestone":43},{"_id":"1fcedda6689c88acc055ddfc43441d58f2f99ce2","author":{"name":"Dan Carney","email":"dcarney@chromium.org","time":"Mon Mar 02 13:13:18 2015"},"commit":"1fcedda6689c88acc055ddfc43441d58f2f99ce2","committer":{"name":"Dan Carney","email":"dcarney@chromium.org","time":"Mon Mar 02 13:13:31 2015"},"message":"convert object::* to return maybe values\n\nBUG=v8:3929\nLOG=y\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/971693002\n\nCr-Commit-Position: refs/heads/master@{#26940}\n","milestone":43},{"_id":"602d0dab9380c4bae92f58e00ef35661f541d5b3","author":{"name":"Sven Panne","email":"svenpanne@chromium.org","time":"Mon Mar 02 12:22:27 2015"},"commit":"602d0dab9380c4bae92f58e00ef35661f541d5b3","committer":{"name":"Sven Panne","email":"svenpanne@chromium.org","time":"Mon Mar 02 12:22:37 2015"},"message":"Removed funky Maybe constructor and made fields private.\n\nBUG=v8:3929\nLOG=y\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/958053003\n\nCr-Commit-Position: refs/heads/master@{#26937}\n","milestone":43},{"_id":"30637108dd3977884cb81741bec248c9eb22f4e3","author":{"name":"Sven Panne","email":"svenpanne@chromium.org","time":"Mon Mar 02 11:26:55 2015"},"commit":"30637108dd3977884cb81741bec248c9eb22f4e3","committer":{"name":"Sven Panne","email":"svenpanne@chromium.org","time":"Mon Mar 02 11:27:05 2015"},"message":"Polish Maybe API a bit, removing useless creativity and fixing some signatures.\n\nBUG=v8:3929\nLOG=y\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/967243002\n\nCr-Commit-Position: refs/heads/master@{#26936}\n","milestone":43},{"_id":"8d839ead046f3b377135509a2264a9e5fecc98ba","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Fri Feb 27 13:04:34 2015"},"commit":"8d839ead046f3b377135509a2264a9e5fecc98ba","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Feb 27 13:04:49 2015"},"message":"convert Value::*Value() function to return Maybe results\n\nBUG=v8:3929\nLOG=Y\n\nReview URL: https://codereview.chromium.org/959223002\n\nCr-Commit-Position: refs/heads/master@{#26914}\n","milestone":43},{"_id":"2fc51d9cfa8d1b5e1a3a5b82b9af34994e286879","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Fri Feb 27 10:39:25 2015"},"commit":"2fc51d9cfa8d1b5e1a3a5b82b9af34994e286879","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Feb 27 10:39:41 2015"},"message":"Convert v8::Value::To* to use MaybeLocal\n\nBUG=v8:3929\nLOG=y\n\nReview URL: https://codereview.chromium.org/962983002\n\nCr-Commit-Position: refs/heads/master@{#26912}\n","milestone":43},{"_id":"9dac60ad2d38ae934ea37a5e90096cce8d950e08","author":{"name":"machenbach","email":"machenbach@chromium.org","time":"Thu Feb 26 08:59:17 2015"},"commit":"9dac60ad2d38ae934ea37a5e90096cce8d950e08","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Feb 26 08:59:23 2015"},"message":"Add public version macros.\n\nSide note: tools/v8-info.sh seems to have been broken ever\nsince the move to git.  At least it's not more broken now.\n\nBUG=v8:3075\nLOG=y\n\nTEST=./script_test.py\n\nReview URL: https://codereview.chromium.org/959713003\n\nCr-Commit-Position: refs/heads/master@{#26873}\n","milestone":43},{"_id":"726eb0582b23bc90f4acd496ebb6a08be1d8f3ac","author":{"name":"ben","email":"ben@strongloop.com","time":"Wed Feb 25 15:09:11 2015"},"commit":"726eb0582b23bc90f4acd496ebb6a08be1d8f3ac","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 25 15:09:20 2015"},"message":"Add v8::Object::GetRealNamedPropertyAttributes()\n\nAdd v8::Object::GetRealNamedPropertyAttributes() and\nv8::Object::GetRealNamedPropertyAttributesInPrototypeChain().\n\nSee https://github.com/iojs/io.js/issues/864 for background.\n\nReview URL: https://codereview.chromium.org/942003003\n\nCr-Commit-Position: refs/heads/master@{#26855}\n","milestone":43},{"_id":"c094da92331f4a20abc0e3da6c7f64cfbfe1885f","author":{"name":"rossberg","email":"rossberg@chromium.org","time":"Wed Feb 25 14:52:36 2015"},"commit":"c094da92331f4a20abc0e3da6c7f64cfbfe1885f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 25 14:52:51 2015"},"message":"[strong] Make functions and generators non-extensible non-constructors\n\nR=dslomov@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/954693003\n\nCr-Commit-Position: refs/heads/master@{#26854}\n","milestone":43},{"_id":"4b5ff0c5e2a05fbdc559e48646e360da43d98f75","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Feb 25 11:14:40 2015"},"commit":"4b5ff0c5e2a05fbdc559e48646e360da43d98f75","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 25 11:14:56 2015"},"message":"Attach snapshot data blob to the isolate.\n\nR=vogelheim@chromium.org\nBUG=chromium:461259\nLOG=N\n\nReview URL: https://codereview.chromium.org/949623006\n\nCr-Commit-Position: refs/heads/master@{#26845}\n","milestone":43},{"_id":"4e82baae8e9c69e68b7ebfbe4df8fec8103188b1","author":{"name":"hablich","email":"hablich@chromium.org","time":"Tue Sep 01 14:16:23 2015"},"commit":"4e82baae8e9c69e68b7ebfbe4df8fec8103188b1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Sep 01 14:16:42 2015"},"message":"Fix version file\n\nWill be tagged after commit.\n\nBUG=v8:4398\nTBR=machenbach@chromium.org\nNOTRY=true\nNOPRESUBMIT=true\n\nReview URL: https://codereview.chromium.org/1323983003\n\nCr-Commit-Position: refs/branch-heads/4.6@{#14}\nCr-Branched-From: 24d34a8ae3cad186792fb1e44e2d7c00d49cd181-refs/heads/4.6.85@{#1}\nCr-Branched-From: 8f441181a570c44ef5c949e8dfd9fd326ac10345-refs/heads/master@{#30256}\n","milestone":46},{"_id":"32e56fabcd221c9ce2a35e98f82cf070a504d907","author":{"name":"hablich","email":"hablich@chromium.org","time":"Fri Aug 21 11:17:55 2015"},"commit":"32e56fabcd221c9ce2a35e98f82cf070a504d907","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 21 11:18:12 2015"},"message":"Disable handle zapping for branch 4.6\n\nBUG=chromium:318206\nLOG=N\nR=vogelheim@chromium.org,jochen@chromium.org\nNOTRY=true\nNOPRESUBMIT=true\n\nReview URL: https://codereview.chromium.org/1302343002\n\nCr-Commit-Position: refs/branch-heads/4.6@{#2}\nCr-Branched-From: 24d34a8ae3cad186792fb1e44e2d7c00d49cd181-refs/heads/4.6.85@{#1}\nCr-Branched-From: 8f441181a570c44ef5c949e8dfd9fd326ac10345-refs/heads/master@{#30256}\n","milestone":46},{"_id":"8aef442917e82491f0fc66426f71f865353d94e2","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Tue Aug 18 12:03:45 2015"},"commit":"8aef442917e82491f0fc66426f71f865353d94e2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 18 12:03:55 2015"},"message":"[api,heap] Fix external GC callbacks.\n\n* Add types to properly report what has been executed in the GC\n* Unify GCPrologueCallback and GCEpilogueCallback into GCCallback\n* Report processing of second round weak handels, either synchronously or asynchronously\n\nBUG=chromium:521946\nLOG=N\n\nReview URL: https://codereview.chromium.org/1298113003\n\nCr-Commit-Position: refs/heads/master@{#30218}\n","milestone":46},{"_id":"e4c286900e29647f5ac3cd49d63d06bbfb98d078","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Fri Aug 14 15:12:34 2015"},"commit":"e4c286900e29647f5ac3cd49d63d06bbfb98d078","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 14 15:12:49 2015"},"message":"Clean up native context slots and add new ones.\n\nNewly added native context slots are used to avoid accessing\nthe js builtins object to get native functions.\n\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/1294583006\n\nCr-Commit-Position: refs/heads/master@{#30181}\n","milestone":46},{"_id":"c69e2eae548d4a68bb1b91032e9825709155a8c5","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Fri Aug 14 12:11:29 2015"},"commit":"c69e2eae548d4a68bb1b91032e9825709155a8c5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Aug 14 12:11:46 2015"},"message":"Rework startup-data-util.\n\n- Make the API look like v8::V8::InitializeICU.\n  (That is: A static method call, not an object to be created on the stack.)\n- Fix path separator on Windows, by calling base::OS::isPathSeparator.\n- Move into API, so that it can be called by hello-world & friends.\n- Actually call it from hello-world and friends.\n\nR=jochen@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/1292053002\n\nCr-Commit-Position: refs/heads/master@{#30174}\n","milestone":46},{"_id":"3aca47b7aa4bf2d9156d62b9d6bf27a6761890c9","author":{"name":"mlippautz","email":"mlippautz@chromium.org","time":"Thu Aug 13 17:22:47 2015"},"commit":"3aca47b7aa4bf2d9156d62b9d6bf27a6761890c9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Aug 13 17:22:59 2015"},"message":"[api] Do not force external GCs when only trying to synchronously process phantom callbacks\n\nImproves on aec8987b5ee55fa46b90b58927e957a4e5f19c09 by not forcing external GCs\n(blink) through the GC epilogue callback.\n\nBUG=chromium:515795\nLOG=N\n\nReview URL: https://codereview.chromium.org/1287323002\n\nCr-Commit-Position: refs/heads/master@{#30164}\n","milestone":46},{"_id":"d746dbfed7b8493d9ff46fc5ef824ea171993782","author":{"name":"adamk","email":"adamk@chromium.org","time":"Wed Aug 12 16:43:06 2015"},"commit":"d746dbfed7b8493d9ff46fc5ef824ea171993782","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Aug 12 16:43:17 2015"},"message":"[api] Delete non-maybe version of CompileModule\n\nAlso add a bigger warning to the header comment for the Maybe version.\n\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/1276353003\n\nCr-Commit-Position: refs/heads/master@{#30137}\n","milestone":46},{"_id":"a0364972fcf5383078017914cc2fe75a02889117","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Tue Aug 11 10:47:24 2015"},"commit":"a0364972fcf5383078017914cc2fe75a02889117","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 11 10:47:42 2015"},"message":"[stubs] Store typeof string on Oddballs.\n\nFirst step to simplify the TypeofStub. This is similar to the\noptimization that we use for ToNumber and ToString on Oddballs already.\n\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/1272763005\n\nCr-Commit-Position: refs/heads/master@{#30108}\n","milestone":46},{"_id":"f4c079d450a5990639b295d40a3d1663d70412d6","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Tue Aug 11 09:45:25 2015"},"commit":"f4c079d450a5990639b295d40a3d1663d70412d6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Aug 11 09:45:40 2015"},"message":"[simd.js] Single SIMD128_VALUE_TYPE for all Simd128Values.\n\nThere's no need to have one InstanceType per SIMD primitive type (this\nwill not scale long-term).  Also reduce the amount of code duplication\nand make it more robust wrt adding new SIMD types.\n\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/1273353003\n\nCr-Commit-Position: refs/heads/master@{#30107}\n","milestone":46},{"_id":"3cc7adc7c4c12d3b054f904359a170b4a5ad43b4","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Mon Aug 10 04:54:20 2015"},"commit":"3cc7adc7c4c12d3b054f904359a170b4a5ad43b4","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Aug 10 04:54:38 2015"},"message":"[runtime] Simplify TO_INT32/TO_UINT32 abstract operations.\n\nNo need to provide TO_INT32/TO_UINT32 functions for every native\ncontext, as they can be implemented in terms of TO_NUMBER more easily\nand efficiently.\n\nAlso remove the obsolete TO_BOOLEAN_FUN_INDEX from the native contexts.\n\nReview URL: https://codereview.chromium.org/1275013004\n\nCr-Commit-Position: refs/heads/master@{#30080}\n","milestone":46},{"_id":"2dff84e66fd3c26a08aa214ee9a8d8d7cccb396c","author":{"name":"domenic","email":"domenic@chromium.org","time":"Thu Aug 06 23:52:47 2015"},"commit":"2dff84e66fd3c26a08aa214ee9a8d8d7cccb396c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Aug 06 23:52:54 2015"},"message":"Rename \"extras exports\" to \"extras binding\"\n\nR=yangguo@chromium.org, jochen@chromium.org\nBUG=507133\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1275683002\n\nCr-Commit-Position: refs/heads/master@{#30053}\n","milestone":46},{"_id":"0a1a714f7e700b3d882e3485008fa5a24cf80584","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Aug 05 14:06:43 2015"},"commit":"0a1a714f7e700b3d882e3485008fa5a24cf80584","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Aug 05 14:07:33 2015"},"message":"Introduce object visitor to estimate the size of a native context.\n\nThis is only an estimate since it counts objects that could be shared,\nfor example strings, cow arrays, heap numbers, etc.\n\nIt however ignores objects that could be shared, but may only be used\nby the context to be measured, for example shared function infos,\nscript objects, scope infos, etc.\n\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/1268333004\n\nCr-Commit-Position: refs/heads/master@{#30029}\n","milestone":46},{"_id":"4a2e4420b8af50ca066905d99e7d7938c9105258","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Aug 03 18:13:56 2015"},"commit":"4a2e4420b8af50ca066905d99e7d7938c9105258","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Aug 03 18:14:17 2015"},"message":"Remove JSFunctionResultCache.\n\nThere is only one use case for it: String.prototype.search converts a\nstring argument into a RegExp. The cache is used to avoid repeating that\nconversion. However, this does not make the added complexity worthwhile.\n\nReview URL: https://codereview.chromium.org/1267493006\n\nCr-Commit-Position: refs/heads/master@{#29985}\n","milestone":46},{"_id":"7b9670b63b486ba3b6f8a569552d307282dbccfd","author":{"name":"bbudge","email":"bbudge@chromium.org","time":"Mon Aug 03 13:02:39 2015"},"commit":"7b9670b63b486ba3b6f8a569552d307282dbccfd","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Aug 03 13:02:56 2015"},"message":"SIMD.js Add the other SIMD Phase 1 types.\n\nAdds Int32x4, Bool32x4, Int16x8, Bool16x8, Int8x16, Bool8x16.\nAdds Simd128Value base heap object class.\nChanges heap/factory construction pattern to use arrays.\nAdds replaceLane functions to facilitate testing.\n\nNOPRESUBMIT=true\n(presubmit checks erroneously interpret array declaration in macro definition as variable size array.)\n\nLOG=Y\nBUG=v8:4124\n\nReview URL: https://codereview.chromium.org/1250733005\n\nCr-Commit-Position: refs/heads/master@{#29974}\n","milestone":46},{"_id":"4fc6f5472441523c1a46d0d273ba8b216f96250f","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Fri Jul 31 12:25:28 2015"},"commit":"4fc6f5472441523c1a46d0d273ba8b216f96250f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jul 31 12:25:44 2015"},"message":"[stubs] Unify (and optimize) implementation of ToObject.\n\nThis is the initial (big) step towards a more uniform implementation of\nthe ToObject abstract operation (ES6 7.1.13), where we have a fallback\nimplementation in JSReceiver::ToObject() and a fast (hydrogen) CodeStub\nto deal with the fast case (we should be able to do more cleanup on this\nin a followup CL).  For natives we expose the abstract operation via a\n%_ToObject intrinsic, also exposed via a macro TO_OBJECT, that unifies\nthe previous confusion with TO_OBJECT_INLINE, ToObject, TO_OBJECT,\n$toObject and %$toObject.  Now the whole implementation of the abstract\noperation is context independent, meaning we don't need any magic in the\nbuiltins object nor the native context.\n\nR=mvstanton@chromium.org,yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/1266013006\n\nCr-Commit-Position: refs/heads/master@{#29953}\n","milestone":46},{"_id":"607ef7c6009a24ebf195b4cab7b0b436c5afd21c","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Jul 27 13:19:09 2015"},"commit":"607ef7c6009a24ebf195b4cab7b0b436c5afd21c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jul 27 13:19:36 2015"},"message":"Remove ExternalArray, derived types, and element kinds\n\nBUG=v8:3996\nR=jarin@chromium.org, mvstanton@chromium.org, bmeurer@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1254623002\n\nCr-Commit-Position: refs/heads/master@{#29872}\n","milestone":46},{"_id":"cb6e7056862ee6991d3d884a92d36bebe45b8152","author":{"name":"oth","email":"oth@chromium.org","time":"Fri Jul 24 12:02:41 2015"},"commit":"cb6e7056862ee6991d3d884a92d36bebe45b8152","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jul 24 12:03:03 2015"},"message":"[Interpreter] Add BytecodeArray class and add to SharedFunctionInfo.\n\nBUG=v8:4280\nLOG=N\n\nReview URL: https://codereview.chromium.org/1230753004\n\nCr-Commit-Position: refs/heads/master@{#29843}\n","milestone":46},{"_id":"7f6012c093ab12ab6e215d9bec8d3eaaa5dd9ce0","author":{"name":"ulan","email":"ulan@chromium.org","time":"Tue Jul 21 15:53:11 2015"},"commit":"7f6012c093ab12ab6e215d9bec8d3eaaa5dd9ce0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jul 21 15:53:25 2015"},"message":"Declare deleted copy constructor and assignment operator of v8::Global to take const parameters.\n\nThis is required in order for Globals to be stored in STL containers.\n\nPatch from Aaron Link <aaronlink@google.com>\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1244033002\n\nCr-Commit-Position: refs/heads/master@{#29776}\n","milestone":46},{"_id":"ac1c713646bf4e59115d825f1e1c4984517cb68f","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri Jul 17 09:26:42 2015"},"commit":"ac1c713646bf4e59115d825f1e1c4984517cb68f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jul 17 09:27:00 2015"},"message":"Delete APIs deprecated since last release\n\nBUG=none\nR=verwaest@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1114873002\n\nCr-Commit-Position: refs/heads/master@{#29720}\n","milestone":46},{"_id":"61130584270ebffdfc43c4ab802c6b0b75f1504b","author":{"name":"bbudge","email":"bbudge@chromium.org","time":"Thu Jul 16 19:43:21 2015"},"commit":"61130584270ebffdfc43c4ab802c6b0b75f1504b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jul 16 19:43:32 2015"},"message":"Expose SIMD.Float32x4 type to Javascript.\nThis CL exposes the constructor function, defines type related\ninformation, and implements value type semantics.\nIt also refactors test/mjsunit/samevalue.js to test SameValue and SameValueZero.\n\nTEST=test/mjsunit/harmony/simd.js, test/cctest/test-simd.cc\n\nLOG=Y\nBUG=v8:4124\n\nCommitted: https://crrev.com/e5ed3bee99807c502fa7d7a367ec401e16d3f773\nCr-Commit-Position: refs/heads/master@{#29689}\n\nReview URL: https://codereview.chromium.org/1219943002\n\nCr-Commit-Position: refs/heads/master@{#29712}\n","milestone":46},{"_id":"9aa1dac802112e8fc3c805286c314335edef1bdf","author":{"name":"adamk","email":"adamk@chromium.org","time":"Wed Jul 15 20:17:51 2015"},"commit":"9aa1dac802112e8fc3c805286c314335edef1bdf","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jul 15 20:18:01 2015"},"message":"[api] Deprecate unused Map/Set FromArray factory methods\n\nThese were added when I thought they would be useful in Blink, but as\nit turned out they were not. They could likely be deleted immediately,\nbut to play it safe I'll go through the usual deprecation process.\n\nReview URL: https://codereview.chromium.org/1236263004\n\nCr-Commit-Position: refs/heads/master@{#29690}\n","milestone":46},{"_id":"e5ed3bee99807c502fa7d7a367ec401e16d3f773","author":{"name":"bbudge","email":"bbudge@chromium.org","time":"Wed Jul 15 19:16:52 2015"},"commit":"e5ed3bee99807c502fa7d7a367ec401e16d3f773","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jul 15 19:17:06 2015"},"message":"Expose SIMD.Float32x4 type to Javascript.\nThis CL exposes the constructor function, defines type related\ninformation, and implements value type semantics.\nIt also refactors test/mjsunit/samevalue.js to test SameValue and SameValueZero.\n\nTEST=test/mjsunit/harmony/simd.js, test/cctest/test-simd.cc\n\nLOG=Y\nBUG=v8:4124\n\nReview URL: https://codereview.chromium.org/1219943002\n\nCr-Commit-Position: refs/heads/master@{#29689}\n","milestone":46},{"_id":"e6e53390cc4c2765a9104fdbceed79cf41f07551","author":{"name":"epertoso","email":"epertoso@chromium.org","time":"Wed Jul 15 12:26:06 2015"},"commit":"e6e53390cc4c2765a9104fdbceed79cf41f07551","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jul 15 12:26:11 2015"},"message":"Let the second pass phantom callbacks run in a separate task on the foreground thread.\n\nR=jochen@chromium.org\nLOG=y\nBUG=\n\nReview URL: https://codereview.chromium.org/1209403005\n\nCr-Commit-Position: refs/heads/master@{#29680}\n","milestone":46},{"_id":"a9c7712eb8e464cf1ee2f35662dbbfe5046cd77a","author":{"name":"ulan","email":"ulan@chromium.org","time":"Wed Jul 15 11:50:48 2015"},"commit":"a9c7712eb8e464cf1ee2f35662dbbfe5046cd77a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jul 15 11:51:03 2015"},"message":"Add IdleTask API to v8::Platform.\n\nBUG=chromium:490559\nLOG=NO\n\nReview URL: https://codereview.chromium.org/1225713003\n\nCr-Commit-Position: refs/heads/master@{#29676}\n","milestone":46},{"_id":"e5a77abcf8c651a1abd3949540ce6c9100ced4ef","author":{"name":"yurys","email":"yurys@chromium.org","time":"Mon Jul 13 15:02:21 2015"},"commit":"e5a77abcf8c651a1abd3949540ce6c9100ced4ef","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jul 13 15:02:29 2015"},"message":"Add convenience method for converting v8::PersistentBase to v8::Local\n\nThe CL addes convenienve method that allows to write code like the following\nv8::Local<v8::Object> local = v8::Local<v8::Object>::New(global, isolate);\nin a more readable way:\nv8::Local<v8::Object> local = global.Get(isolate);\n\nThere is already v8::Eternal::Get that does similar thing.\n\nBUG=None\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1237603003\n\nCr-Commit-Position: refs/heads/master@{#29616}\n","milestone":46},{"_id":"40b64652f9e4601dc79242239093b4bd834a584b","author":{"name":"hablich","email":"hablich@chromium.org","time":"Fri Jul 10 12:48:23 2015"},"commit":"40b64652f9e4601dc79242239093b4bd834a584b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jul 10 12:48:29 2015"},"message":"Updated version to 4.6\n\nBUG=\nTBR=machenbach@chromium.org,vogelheim@chromium.org\nNOTRY=true\n\nReview URL: https://codereview.chromium.org/1235573002\n\nCr-Commit-Position: refs/heads/master@{#29569}\n","milestone":46},{"_id":"40","message":"NO_COMMITS","milestone":40},{"_id":"38","message":"NO_COMMITS","milestone":38},{"_id":"39","message":"NO_COMMITS","milestone":39},{"_id":"286b12f5cea3f2de4c64ad4e5fb86ed62b74ee15","author":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Thu Feb 26 08:58:17 2015"},"commit":"286b12f5cea3f2de4c64ad4e5fb86ed62b74ee15","committer":{"name":"Michael Achenbach","email":"machenbach@chromium.org","time":"Thu Feb 26 08:58:35 2015"},"message":"Port public version macros.\n\nThis ports https://codereview.chromium.org/959713003/ to\nthe 4.2 branch.\n\nBUG=v8:3075\nLOG=n\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/953363002\n\nCr-Commit-Position: refs/branch-heads/4.2@{#3}\nCr-Branched-From: 3dfd929ea07487f2295553df397720d8d75d227c-refs/heads/4.2.77@{#2}\nCr-Branched-From: e0110920d6f98f0ba2ac0d680f635ae3f094a04e-refs/heads/master@{#26757}\n","milestone":42},{"_id":"58deea0ad05147ff6a5789b55a6f29315d0630d6","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Feb 12 14:38:54 2015"},"commit":"58deea0ad05147ff6a5789b55a6f29315d0630d6","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Feb 12 14:39:03 2015"},"message":"Make it possible to define arguments for CompileFunctionInContext\n\nAlso make sure that the function body really produces only one function literal.\n\nLOG=y\nBUG=none\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/925433002\n\nCr-Commit-Position: refs/heads/master@{#26617}\n","milestone":42},{"_id":"b79b985988fd3f9e09dcab506da56a9c269e9149","author":{"name":"ulan","email":"ulan@chromium.org","time":"Thu Feb 12 13:21:06 2015"},"commit":"b79b985988fd3f9e09dcab506da56a9c269e9149","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Feb 12 13:21:13 2015"},"message":"Use weak cells in dependent code.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/871253005\n\nCr-Commit-Position: refs/heads/master@{#26614}\n","milestone":42},{"_id":"8aae1b3096eb4e810231a7c23f6771d1f1a19400","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Feb 11 10:21:18 2015"},"commit":"8aae1b3096eb4e810231a7c23f6771d1f1a19400","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 11 10:21:25 2015"},"message":"Throw on range error when creating a string via API.\n\nR=jkummerow@chromium.org\nBUG=v8:3853\nLOG=Y\n\nReview URL: https://codereview.chromium.org/867373003\n\nCr-Commit-Position: refs/heads/master@{#26574}\n","milestone":42},{"_id":"79417664b2ef50f4224b660c5514591b1e94514f","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Wed Feb 11 09:28:06 2015"},"commit":"79417664b2ef50f4224b660c5514591b1e94514f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 11 09:28:12 2015"},"message":"remove undetectable strings\n\nBUG=\n\nReview URL: https://codereview.chromium.org/916753002\n\nCr-Commit-Position: refs/heads/master@{#26571}\n","milestone":42},{"_id":"30674bdeb45241836bc309e42f008e66908f65e1","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Feb 09 15:15:29 2015"},"commit":"30674bdeb45241836bc309e42f008e66908f65e1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 09 15:16:33 2015"},"message":"Introduce a compile method that takes context extensions\n\nBUG=chromium:456192\nR=yangguo@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/910683002\n\nCr-Commit-Position: refs/heads/master@{#26530}\n","milestone":42},{"_id":"313b24dbc24b64babf53c1830c2b23170ee1c269","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Mon Feb 09 11:33:36 2015"},"commit":"313b24dbc24b64babf53c1830c2b23170ee1c269","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 09 11:33:50 2015"},"message":"add support for all can read interceptors\n\nR=verwaest@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/906463002\n\nCr-Commit-Position: refs/heads/master@{#26522}\n","milestone":42},{"_id":"70079dab1386d1b5ffc80d05591597d015aeffde","author":{"name":"adamk","email":"adamk@chromium.org","time":"Fri Feb 06 17:52:20 2015"},"commit":"70079dab1386d1b5ffc80d05591597d015aeffde","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Feb 06 17:52:38 2015"},"message":"Add basic compilation support for modules\n\nThis adds an \"experimental\" API hook (v8::ScriptCompiler::CompileModule)\nallowing compilation of modules. The code gen is incredibly basic: the\nmodule body is represented by a Block in the AST. But this at least gets\nmore of the pipeline working, and opens the door to writing mjsunit tests\n(once d8 is modified to support module compilation).\n\nBUG=v8:1569\nLOG=n\n\nReview URL: https://codereview.chromium.org/902093002\n\nCr-Commit-Position: refs/heads/master@{#26496}\n","milestone":42},{"_id":"a559367956d870de38375a51e919a2c06c004e26","author":{"name":"yurys","email":"yurys@chromium.org","time":"Thu Feb 05 09:40:13 2015"},"commit":"a559367956d870de38375a51e919a2c06c004e26","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Feb 05 09:40:27 2015"},"message":"Add NativeWeakMap to v8.h\n\nA new map wich references its keys weakly is added to v8.h. Internally it uses the same storage as JSWeakMap but doesn't depend on the JavaScript part of WeakMap implementation in weak-collection.js, hence it can be instantiated without entering any context.\n\nBUG=chromium:437416\nLOG=Y\n\nReview URL: https://codereview.chromium.org/900123003\n\nCr-Commit-Position: refs/heads/master@{#26451}\n","milestone":42},{"_id":"b7d27ea58307e9201c1196cf2cf523205cd8ab60","author":{"name":"ulan","email":"ulan@chromium.org","time":"Thu Feb 05 09:35:47 2015"},"commit":"b7d27ea58307e9201c1196cf2cf523205cd8ab60","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Feb 05 09:35:59 2015"},"message":"Add a flag to track detached contexts.\n\nWhen embedder detaches the global objects, its context must be garbage\ncollected eventually.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/898663005\n\nCr-Commit-Position: refs/heads/master@{#26450}\n","milestone":42},{"_id":"8064582626f4f2e012352750fda839ae3f975127","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Wed Feb 04 13:01:34 2015"},"commit":"8064582626f4f2e012352750fda839ae3f975127","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 04 13:01:44 2015"},"message":"Move the contents of api-natives.js to c++\n\nR=verwaest@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/895053002\n\nCr-Commit-Position: refs/heads/master@{#26426}\n","milestone":42},{"_id":"ee7ed39ac8327124e74dd7ad5f1de0dede988cb7","author":{"name":"yurys","email":"yurys@chromium.org","time":"Wed Feb 04 12:52:53 2015"},"commit":"ee7ed39ac8327124e74dd7ad5f1de0dede988cb7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Feb 04 12:53:05 2015"},"message":"Add WeakKeyMap to v8.h\n\nA new map wich references its keys weakly is added to v8.h. Internally it uses the same storage as JSWeakMap but doesn't depend on the JavaScript part of WeakMap implementation in weak-collection.js, hence it can be instantiated without entering any context.\n\nBUG=chromium:437416\nLOG=Y\n\nReview URL: https://codereview.chromium.org/891473005\n\nCr-Commit-Position: refs/heads/master@{#26425}\n","milestone":42},{"_id":"37d4c57630636f21e3add8d3d1c7c978ff5fc8e0","author":{"name":"yurys","email":"yurys@chromium.org","time":"Tue Feb 03 14:28:02 2015"},"commit":"37d4c57630636f21e3add8d3d1c7c978ff5fc8e0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Feb 03 14:28:20 2015"},"message":"Add WeakMap to v8.h\n\nA new map wich references its keys weakly is added to v8.h. Internally it uses the same storage as JSWeakMap but doesn't depend on the JavaScript part of WeakMap implementation in weak-collection.js, hence it can be instantiated without entering any context.\n\nBUG=chromium:437416\nLOG=Y\n\nReview URL: https://codereview.chromium.org/886473005\n\nCr-Commit-Position: refs/heads/master@{#26401}\n","milestone":42},{"_id":"16843e239d95f5e8eaaa06d2a0a6e371298fe11f","author":{"name":"mvstanton","email":"mvstanton@chromium.org","time":"Mon Feb 02 13:55:00 2015"},"commit":"16843e239d95f5e8eaaa06d2a0a6e371298fe11f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Feb 02 13:55:21 2015"},"message":"Megamorphic KeyedLoadIC needs special handling for vector ics.\n\nWhen --vector-ics is true, we still tail-call to the hand-written\nmegamorphic KeyedLoadIC (formerly \"generic\"). Now that this code uses\nthe megamorphic cache, it needs to deal properly with the vector and\nslot registers. Achieve this with a sentinel vectors/slot combo.\n\nR=dcarney@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/892173002\n\nCr-Commit-Position: refs/heads/master@{#26381}\n","milestone":42},{"_id":"f1ba8d8f86ad1a5c8b4777f969506c88272549c3","author":{"name":"michael_dawson","email":"michael_dawson@ca.ibm.com","time":"Fri Jan 30 08:01:53 2015"},"commit":"f1ba8d8f86ad1a5c8b4777f969506c88272549c3","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 30 08:02:08 2015"},"message":"Contribution of PowerPC port (continuation of 422063005) - AIX Common1\n\nContribution of PowerPC port (continuation of 422063005 and 817143002). This patch covers\nthe key changes needed to the common files needed to support AIX. Subsequent\npatches will cover:\n- changes to update the ppc directories so they are current with the changes\nin the rest of the project.\n- remaining AIX changes not resolved by 4.8 compiler\n- individual optimizations for PPC\n\nThis is based off of the GitHub repository\nhttps://github.com/andrewlow/v8ppc\n\nR=danno@chromium.org, svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/866843003\n\nCr-Commit-Position: refs/heads/master@{#26343}\n","milestone":42},{"_id":"0deaa4b629faeae6832046c294dc7c034a0a6653","author":{"name":"bmeurer","email":"bmeurer@chromium.org","time":"Fri Jan 30 06:25:08 2015"},"commit":"0deaa4b629faeae6832046c294dc7c034a0a6653","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 30 06:25:36 2015"},"message":"Initial switch to Chromium-style CHECK_* and DCHECK_* macros.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/888613002\n\nCr-Commit-Position: refs/heads/master@{#26340}\n","milestone":42},{"_id":"eaae397c42d6744153bf8b520077875deab58108","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Thu Jan 29 14:01:13 2015"},"commit":"eaae397c42d6744153bf8b520077875deab58108","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 29 14:01:33 2015"},"message":"[V8] Added Script::is_debugger_script flag for embedders\n\nIn DevTools we need one more flag for script origin - is debugger script. We already have \"is shared origin\" flag. The new flag added by analogy with the old but new has accessor in script object.\n\nR=yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/879553002\n\nCr-Commit-Position: refs/heads/master@{#26324}\n","milestone":42},{"_id":"a18fdd61dc21648836c0c5bd5dc0b95a9fb142dd","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Fri Jan 23 11:37:33 2015"},"commit":"a18fdd61dc21648836c0c5bd5dc0b95a9fb142dd","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 23 11:37:49 2015"},"message":"Always adjust amount of external memory when change is reported.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/866413002\n\nCr-Commit-Position: refs/heads/master@{#26247}\n","milestone":42},{"_id":"8c58ed1a0c3d18bd080ef1b551fc3eee4ca03668","author":{"name":"erikcorry","email":"erikcorry@chromium.org","time":"Fri Jan 23 11:28:35 2015"},"commit":"8c58ed1a0c3d18bd080ef1b551fc3eee4ca03668","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 23 11:28:54 2015"},"message":"Support old and new weak handle API\n\nR=dcarney@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/863443005\n\nCr-Commit-Position: refs/heads/master@{#26246}\n","milestone":42},{"_id":"0aef24e2cf52d155fc0fe2ea64e97120abe74e99","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Fri Jan 23 09:07:11 2015"},"commit":"0aef24e2cf52d155fc0fe2ea64e97120abe74e99","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 23 09:07:19 2015"},"message":"CHECK that FunctionTemplates are not modified after first instantiation\n\nBUG=\n\nReview URL: https://codereview.chromium.org/862923002\n\nCr-Commit-Position: refs/heads/master@{#26237}\n","milestone":42},{"_id":"e99faf93ff85b5fc44dbf664c2d8294e7b071464","author":{"name":"verwaest","email":"verwaest@chromium.org","time":"Tue Jan 20 13:41:17 2015"},"commit":"e99faf93ff85b5fc44dbf664c2d8294e7b071464","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jan 20 13:41:31 2015"},"message":"Remove ForceDelete\n\nThis method circumvented JS semantics, and should not be used.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/854493004\n\nCr-Commit-Position: refs/heads/master@{#26157}\n","milestone":42},{"_id":"c15c737362cd756f271d627221fee5962dc873dc","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Mon Jan 19 12:17:09 2015"},"commit":"c15c737362cd756f271d627221fee5962dc873dc","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jan 19 12:17:23 2015"},"message":"remove SignatureInfo class\n\nBUG=\n\nReview URL: https://codereview.chromium.org/855903002\n\nCr-Commit-Position: refs/heads/master@{#26129}\n","milestone":42},{"_id":"6950ead0b0a8373441dc8f8d3b2c316e82549ce9","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Fri Jan 16 10:59:01 2015"},"commit":"6950ead0b0a8373441dc8f8d3b2c316e82549ce9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Jan 16 10:59:16 2015"},"message":"split api call stubs into accessor and function call stubs\n\nBUG=\n\nReview URL: https://codereview.chromium.org/836093007\n\nCr-Commit-Position: refs/heads/master@{#26097}\n","milestone":42},{"_id":"c65799e7c509bd21ce8e2817827ddf51d71e8c94","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Jan 14 14:43:58 2015"},"commit":"c65799e7c509bd21ce8e2817827ddf51d71e8c94","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 14 14:44:10 2015"},"message":"Remove support for signatures with arguments\n\nSupport for it is slow and difficult to implement, and it's not used in\nBlink. An embedder that uses this feature will have to check the\nargument types itself.\n\nBUG=none\nR=dcarney@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/848173002\n\nCr-Commit-Position: refs/heads/master@{#26058}\n","milestone":42},{"_id":"39cd762c6c1675304dc9a3ba9637ac405a6eb211","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Jan 12 15:26:20 2015"},"commit":"39cd762c6c1675304dc9a3ba9637ac405a6eb211","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jan 12 15:26:31 2015"},"message":"Embed custom script into the snapshot.\n\nR=vogelheim@chromium.org\n\nReview URL: https://codereview.chromium.org/845973003\n\nCr-Commit-Position: refs/heads/master@{#26029}\n","milestone":42},{"_id":"7db1759b656ecdc017236165c756ceb4488f5711","author":{"name":"erikcorry","email":"erikcorry@chromium.org","time":"Mon Jan 12 12:11:49 2015"},"commit":"7db1759b656ecdc017236165c756ceb4488f5711","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Jan 12 12:12:10 2015"},"message":"Unify phantom and internal fields weak handle callbacks\n\nR=dcarney@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/842153004\n\nCr-Commit-Position: refs/heads/master@{#26022}\n","milestone":42},{"_id":"a5aa01beec96441d9653f51c42dcfc388267e0e1","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Wed Jan 07 16:37:26 2015"},"commit":"a5aa01beec96441d9653f51c42dcfc388267e0e1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Jan 07 16:37:43 2015"},"message":"remove declarative accessors\n\nR=jochen@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/834443004\n\nCr-Commit-Position: refs/heads/master@{#25981}\n","milestone":42},{"_id":"18b1e6d353501a30a750ac12da68bdc0f93b923e","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Dec 22 14:27:19 2014"},"commit":"18b1e6d353501a30a750ac12da68bdc0f93b923e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Dec 22 14:27:37 2014"},"message":"Enable the embedder to specify what kind of context was disposed\n\nThis API is used by Blink to inform V8 about HTML frames being disposed.\nUsing the optional parameter, Blink can tell V8 whether the disposed\nframe was a main frame. In that case, we might want to reset GC\nparameters\n\nBUG=none\nR=hpayer@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/823583003\n\nCr-Commit-Position: refs/heads/master@{#25926}\n","milestone":42},{"_id":"c37e09d7ea1880ec128528085cf9008442041deb","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Mon Dec 22 08:51:57 2014"},"commit":"c37e09d7ea1880ec128528085cf9008442041deb","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Dec 22 08:52:22 2014"},"message":"Keep AllocationSpace and ObjectSpace enums in sync.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/806693011\n\nCr-Commit-Position: refs/heads/master@{#25917}\n","milestone":42},{"_id":"87e4bba31eabfd3b12e42b5886dc9da08d2daf13","author":{"name":"alph","email":"alph@chromium.org","time":"Sat Dec 20 07:54:03 2014"},"commit":"87e4bba31eabfd3b12e42b5886dc9da08d2daf13","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sat Dec 20 07:54:19 2014"},"message":"Support multiple interrupt requests in v8 API.\n\nThere might be a number of clients that would like to\nsetup an interrupt request on the Isolate.\n\nThe patch also deprecates ClearInterrupt API. As long as\nthe interrupt handler is called outside of locks there's no way\nto guarantee that the handler will not be called after\nClearInterrupt was invoked as it might have already started execution.\n\nReview URL: https://codereview.chromium.org/796623003\n\nCr-Commit-Position: refs/heads/master@{#25910}\n","milestone":42},{"_id":"3ff951943f60ffbfe6c29325a9a9c39195de54b5","author":{"name":"erikcorry","email":"erikcorry@chromium.org","time":"Thu Dec 18 16:09:03 2014"},"commit":"3ff951943f60ffbfe6c29325a9a9c39195de54b5","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Dec 18 16:10:15 2014"},"message":"Phantom references support internal fields\n\nBUG=\n\nReview URL: https://codereview.chromium.org/753553002\n\nCr-Commit-Position: refs/heads/master@{#25889}\n","milestone":42},{"_id":"d28b2a194de1a1e2cc9bc1902363c3ad77bf4d6f","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Wed Dec 10 14:20:12 2014"},"commit":"d28b2a194de1a1e2cc9bc1902363c3ad77bf4d6f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Dec 10 14:20:26 2014"},"message":"Extract non-IO part of mksnapshot into an API method.\n\nR=vogelheim@chromium.org\n\nReview URL: https://codereview.chromium.org/789213002\n\nCr-Commit-Position: refs/heads/master@{#25747}\n","milestone":42},{"_id":"5ce364d8173ef82e0e95fe47a1528def602c3005","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Fri Dec 05 15:21:21 2014"},"commit":"5ce364d8173ef82e0e95fe47a1528def602c3005","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Dec 05 15:21:27 2014"},"message":"new api for adding indexed interceptors\n\nR=svenpanne@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/765883003\n\nCr-Commit-Position: refs/heads/master@{#25688}\n","milestone":42},{"_id":"f434123a16e65188d944edba335c3549337b7f6a","author":{"name":"yurys","email":"yurys@chromium.org","time":"Tue Dec 02 09:13:16 2014"},"commit":"f434123a16e65188d944edba335c3549337b7f6a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 02 09:13:30 2014"},"message":"Add GetIdentityHash to v8::Name object API\n\nv8::Object already has GetIdentityHash on it. This change adds its counterpart to v8::Name.\n\nBUG=chromium:437416\nLOG=Y\n\nReview URL: https://codereview.chromium.org/753373003\n\nCr-Commit-Position: refs/heads/master@{#25598}\n","milestone":42},{"_id":"643c24eb95e702dc0a59d26dd57d21c7e3ae3611","author":{"name":"thakis","email":"thakis@chromium.org","time":"Tue Dec 02 05:23:09 2014"},"commit":"643c24eb95e702dc0a59d26dd57d21c7e3ae3611","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 02 05:23:21 2014"},"message":"Set V8_CC_GNU or V8_CC_MSVC for clang in gcc / cl mode.\n\nAlso, remove V8_CC_CLANG since it's not read anywhere (and ideally shouldn't\nbe).\n\nClang tries to be compatible with gcc in clang mode, and with msvc in clang-cl\nmode. It wants to go down the same code paths that these compilers want to go\ndown in most cases.\n\nFor example, V8PRIxPTR was set incorrectly on Windows 64-bit before this change\nsince macros.h assumed that checking for V8_CC_MSVC is enough to find LLP64\nsystems, but V8_CC_MSVC wasn't set for clang.  Most other existing checks for\nV8_CC_MSVC should be taken for clang-cl too (and for the remaining ones,\nclang-cl is happy with either code path).\n\nLikewise, V8_IMMEDIATE_CRASH is currently set to a suboptimal value with clang\nsince __builtin_trap() is only used if V8_CC_GNU is set.\n\nIncluding clang in the gcc and cl macros is also what chromium does.\n\nBUG=chromium:82385\nLOG=y\n\nReview URL: https://codereview.chromium.org/757553004\n\nCr-Commit-Position: refs/heads/master@{#25592}\n","milestone":42},{"_id":"297935b34f48c20a2152c6e4a32723c5f682c86e","author":{"name":"hpayer","email":"hpayer@chromium.org","time":"Fri Nov 28 10:59:18 2014"},"commit":"297935b34f48c20a2152c6e4a32723c5f682c86e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Nov 28 10:59:24 2014"},"message":"Use deadline in IdleNotification.\n\nBUG=417668\nLOG=n\n\nReview URL: https://codereview.chromium.org/750813003\n\nCr-Commit-Position: refs/heads/master@{#25560}\n","milestone":42},{"_id":"50ef0690b21cca416554212e5a56461650176414","author":{"name":"dcarney","email":"dcarney@chromium.org","time":"Thu Nov 27 10:21:32 2014"},"commit":"50ef0690b21cca416554212e5a56461650176414","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 27 10:21:39 2014"},"message":"Add interceptor support for symbols\n\na revival of https://codereview.chromium.org/467013003\n\nR=rossberg@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/760883002\n\nCr-Commit-Position: refs/heads/master@{#25537}\n","milestone":42},{"_id":"30b43a8aac56ae9bc09c687d99415c05b28c6577","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Nov 26 05:15:17 2014"},"commit":"30b43a8aac56ae9bc09c687d99415c05b28c6577","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Nov 26 05:15:30 2014"},"message":"Document that Isolate::GetCurrent() must not be called before initialization\n\nAlso, add a check for debug mode.\n\nBUG=none\nR=dcarney@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/758043002\n\nCr-Commit-Position: refs/heads/master@{#25507}\n","milestone":42},{"_id":"1a2a18b66cdbc68e1af70b6818abd71fb586be53","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Mon Nov 24 16:14:26 2014"},"commit":"1a2a18b66cdbc68e1af70b6818abd71fb586be53","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Nov 24 16:14:34 2014"},"message":"Remove v8::StartupData::compressed_size.\n\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/739253006\n\nCr-Commit-Position: refs/heads/master@{#25487}\n","milestone":42},{"_id":"9b8d40594a1aa6451ae6c98d518174447face04b","author":{"name":"yangguo","email":"yangguo@chromium.org","time":"Fri Nov 21 12:45:10 2014"},"commit":"9b8d40594a1aa6451ae6c98d518174447face04b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Nov 21 12:45:20 2014"},"message":"Rip out bzip compression for native sources.\n\nR=vogelheim@chromium.org\n\nReview URL: https://codereview.chromium.org/750543002\n\nCr-Commit-Position: refs/heads/master@{#25464}\n","milestone":42},{"_id":"0f57ce8f1a3d6b4f3a4b65739d719b8467ff5d9c","author":{"name":"bulach","email":"bulach@chromium.org","time":"Tue Nov 18 20:29:23 2014"},"commit":"0f57ce8f1a3d6b4f3a4b65739d719b8467ff5d9c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Nov 18 20:29:37 2014"},"message":"Forward declaration for Isolate / Platform in libplatform.h.\n\nReduces dependencies on #include files, making it easier for other\nbuild systems to include this library.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/740493002\n\nCr-Commit-Position: refs/heads/master@{#25408}\n","milestone":42},{"_id":"4f6c75f83a37c79dc6339006aabcf4f8eb97475b","author":{"name":"Daniel Vogelheim","email":"vogelheim@chromium.org","time":"Thu Nov 13 17:17:30 2014"},"commit":"4f6c75f83a37c79dc6339006aabcf4f8eb97475b","committer":{"name":"Daniel Vogelheim","email":"vogelheim@chromium.org","time":"Thu Nov 13 17:17:36 2014"},"message":"Add a version tag for cached data.\n\nBUG=399580,431699\nLOG=N\nR=dcarney@chromium.org, marja@chromium.org\n\nReview URL: https://codereview.chromium.org/718043002\n\nCr-Commit-Position: refs/heads/master@{#25339}\n","milestone":42},{"_id":"eafce666f49f13011849b6c0c40b271676ec91cf","author":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Thu Nov 13 15:42:40 2014"},"commit":"eafce666f49f13011849b6c0c40b271676ec91cf","committer":{"name":"Yang Guo","email":"yangguo@chromium.org","time":"Thu Nov 13 15:42:47 2014"},"message":"Soft fail for invalid cache data.\n\nAPI=ScriptCompiler::CachedData::rejected\nLOG=Y\nR=vogelheim@google.com, vogelheim@chromium.org\n\nReview URL: https://codereview.chromium.org/724023002\n\nCr-Commit-Position: refs/heads/master@{#25335}\n","milestone":42},{"_id":"c93c8969d1c9fbc6f926b9760cb3a230e644ea41","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Wed Nov 12 18:33:23 2014"},"commit":"c93c8969d1c9fbc6f926b9760cb3a230e644ea41","committer":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Wed Nov 12 18:33:47 2014"},"message":"Re-add dot_result_string to heap.h after 5f7b24f7b42\n\nFailed to notice it was still being used in a DCHECK, so removing\nit broke the debug build.\n\nTBR=marja@chromium.org\n\nReview URL: https://codereview.chromium.org/720793004\n\nCr-Commit-Position: refs/heads/master@{#25309}\n","milestone":42},{"_id":"5f7b24f7b42950f81a609d0eb82a9090751ac2dd","author":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Wed Nov 12 18:18:05 2014"},"commit":"5f7b24f7b42950f81a609d0eb82a9090751ac2dd","committer":{"name":"Adam Klein","email":"adamk@chromium.org","time":"Wed Nov 12 18:18:16 2014"},"message":"Remove unused dot_for and dot_result strings from heap.h\n\nThese appear to have simply been missed in r21972\n\nR=marja@chromium.org\n\nReview URL: https://codereview.chromium.org/698483004\n\nCr-Commit-Position: refs/heads/master@{#25308}\n","milestone":42},{"_id":"eacdfa0b7a5c587755b89bf12adce1042e8f423f","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org","time":"Wed Nov 12 11:34:09 2014"},"commit":"eacdfa0b7a5c587755b89bf12adce1042e8f423f","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org","time":"Wed Nov 12 11:35:18 2014"},"message":"Various clean-ups after top-level lexical declarations are done.\n\n1. Global{Context,Scope}=>Script{Context,Scope}\n2. Enable fixed tests\n3. Update comments\n\nR=rossberg@chromium.org\nBUG=v8:2198\nLOG=N\n\nReview URL: https://codereview.chromium.org/716833002\n\nCr-Commit-Position: refs/heads/master@{#25291}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@25291 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dc416ef328f2e69a59654d3cbe0d02ac8a5ec941","author":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Tue Nov 11 21:44:38 2014"},"commit":"dc416ef328f2e69a59654d3cbe0d02ac8a5ec941","committer":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Tue Nov 11 21:45:30 2014"},"message":"Rename v8::Exception::GetMessage to CreateMessage.\n\nThis is to avoid renaming to GetMessageW/GetMessageA on Windows.\n\nAPI=v8::Exception::CreateMessage\nR=yangguo@chromium.org, loislo\nLOG=Y\n\nReview URL: https://codereview.chromium.org/711353002\n\nCr-Commit-Position: refs/heads/master@{#25273}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@25273 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1a64b02dcf061bc4a60eb7e9b2a0ae674b8d34be","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org","time":"Fri Nov 07 16:29:13 2014"},"commit":"1a64b02dcf061bc4a60eb7e9b2a0ae674b8d34be","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org","time":"Fri Nov 07 16:29:45 2014"},"message":"harmony_scoping: Implement lexical bindings at top level\n\nThis implements correct semantics for \"extensible\" top level lexical scope.\nThe entire lexical scope is represented at runtime by GlobalContextTable, reachable from native context and accumulating global contexts from every script loaded into the context.\n\nWhen the new script starts executing, it does the following validation:\n- checks the GlobalContextTable and global object (non-configurable own) properties against the set of declarations it introduces and reports potential conflicts.\n- invalidates the conflicting PropertyCells on global object, so that any code depending on them will miss/deopt causing any contextual lookups to be reexecuted under the new bindings\n- adds the lexical bindings it introduces to the GlobalContextTable\n\nLoads and stores for contextual lookups are modified so that they check the GlobalContextTable before looking up properties on global object, thus implementing the shadowing of global object properties by lexical declarations.\n\nR=adamk@chromium.org, rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/705663004\n\nCr-Commit-Position: refs/heads/master@{#25220}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@25220 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d56a21ebff2ca9fe83e5ee167de2a376378ee2c4","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org","time":"Thu Nov 06 09:16:34 2014"},"commit":"d56a21ebff2ca9fe83e5ee167de2a376378ee2c4","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org","time":"Thu Nov 06 09:17:14 2014"},"message":"The idea behind of this solution is to use the existing \"relocation info\" instead of consumption the CodeLinePosition events emitted by the V8 compilers.\nDuring generation code and relocation info are generated simultaneously.\nWhen code generation is done you each code object has associated \"relocation info\".\nRelocation information lets V8 to mark interesting places in the generated code: the pointers that might need to be relocated (after garbage collection),\ncorrespondences between the machine program counter and source locations for stack walking.\n\nThis patch:\n1. Add more source positions info in reloc info to make it suitable for source level mapping.\nThe amount of data should not be increased dramatically because (1) V8 already marks interesting places in the generated code and\n(2) V8 does not write redundant information (it writes a pair (pc_offset, pos) only if pos is changed and skips other).\nI measured it on Octane benchmark - for unoptimized code the number of source positions may achieve 2x ('lin_solve' from NavierStokes benchmark).\n\n2. When a sample happens, CPU profiler finds a code object by pc, then use its reloc info to match the sample to a source line.\nIf a source line is found that hit counter is increased by one for this line.\n\n3. Add a new public V8 API to get the hit source lines by CDT CPU profiler.\nNote that it's expected a minor patch in Blink to pack the source level info in JSON to be shown.\n\n4.Add a test that checks how the samples are distributed through source lines.\nIt tests two cases: (1) relocation info created during code generation and (2) relocation info associated with precompiled function's version.\n\nPatch from Denis Pravdin <denis.pravdin@intel.com>;\n\nR=svenpanne@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/682143003\n\nPatch from Weiliang <weiliang.lin@intel.com>.\n\nCr-Commit-Position: refs/heads/master@{#25182}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@25182 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"35eaced2084861a44ef41f5d74170f0b9331965e","author":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Tue Nov 04 10:02:25 2014"},"commit":"35eaced2084861a44ef41f5d74170f0b9331965e","committer":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Tue Nov 04 10:02:43 2014"},"message":"Add debug mirror support for ES6 Map/Set iterators.\n\nThis is to show values preview of an iterator in DevTools console.\n\nAPI=v8::Value::IsMapIterator, v8::Value::IsSetIterator\nBUG=chromium:427868\nR=arv@chromium.org, yangguo@chromium.org, adamk@chromium.org\nLOG=Y\n\nReview URL: https://codereview.chromium.org/693813002\n\nCr-Commit-Position: refs/heads/master@{#25100}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@25100 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3d62e24c5f9ef27642406f7689d45051dfc4b0c7","author":{"name":"erikcorry@chromium.org","email":"erikcorry@chromium.org","time":"Mon Nov 03 17:23:55 2014"},"commit":"3d62e24c5f9ef27642406f7689d45051dfc4b0c7","committer":{"name":"erikcorry@chromium.org","email":"erikcorry@chromium.org","time":"Mon Nov 03 17:24:22 2014"},"message":"Introduce phantom weak handles in the API and use them internally for debug info\n\nR=ulan@chromium.org, jochen@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/687003005\n\nCr-Commit-Position: refs/heads/master@{#25083}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@25083 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"aeb7ba52590922b07d533b21d2799d6b67b75d9b","author":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Thu Oct 30 14:51:17 2014"},"commit":"aeb7ba52590922b07d533b21d2799d6b67b75d9b","committer":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Thu Oct 30 14:51:46 2014"},"message":"Introduce v8::Exception::GetMessage to find location of an error object.\n\nAPI=v8::Exception::GetMessage\nBUG=chromium:427954\nR=yangguo@chromium.org\nLOG=Y\n\nCommitted: https://code.google.com/p/v8/source/detail?r=25015\n\nReview URL: https://codereview.chromium.org/687253002\n\nCr-Commit-Position: refs/heads/master@{#25021}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@25021 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ad4515fd1f3ad6f517896c78468f0d1ba87e7140","author":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Thu Oct 30 13:17:57 2014"},"commit":"ad4515fd1f3ad6f517896c78468f0d1ba87e7140","committer":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Thu Oct 30 13:18:16 2014"},"message":"Introduce v8::Exception::GetMessage to find location of an error object.\n\nAPI=v8::Exception::GetMessage\nBUG=chromium:427954\nR=yangguo@chromium.org\nLOG=Y\n\nReview URL: https://codereview.chromium.org/687253002\n\nCr-Commit-Position: refs/heads/master@{#25015}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@25015 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e589ae22e427e47127961d89aea7f0116a5cd9d2","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org","time":"Thu Oct 30 09:54:37 2014"},"commit":"e589ae22e427e47127961d89aea7f0116a5cd9d2","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org","time":"Thu Oct 30 09:55:10 2014"},"message":"remove a bunch of isolate::current in api.cc\n\nR=svenpanne@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/686053003\n\nCr-Commit-Position: refs/heads/master@{#25011}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@25011 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d24cd63fff6d383e09443a5f84989f6cada2a1d5","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org","time":"Wed Oct 29 10:36:36 2014"},"commit":"d24cd63fff6d383e09443a5f84989f6cada2a1d5","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org","time":"Wed Oct 29 10:37:12 2014"},"message":"allow disabling of ArrayBuffer neutering\n\nBUG=\nR=dslomov@chromium.org\n\nReview URL: https://codereview.chromium.org/684103002\n\nCr-Commit-Position: refs/heads/master@{#24973}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24973 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f118921e3b9f9da6a7cb1b4338c2f3c613dccc6a","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org","time":"Tue Oct 28 08:43:15 2014"},"commit":"f118921e3b9f9da6a7cb1b4338c2f3c613dccc6a","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org","time":"Tue Oct 28 08:43:39 2014"},"message":"move functions in v8::V8 that should be on v8::Isolate\n\nR=marja@chromium.org, svenpanne@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/652193006\n\nCr-Commit-Position: refs/heads/master@{#24921}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24921 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"891e289d0fb9bfd90ef2b9ddc422af879f811a2f","author":{"name":"erikcorry@chromium.org","email":"erikcorry@chromium.org","time":"Mon Oct 27 11:04:33 2014"},"commit":"891e289d0fb9bfd90ef2b9ddc422af879f811a2f","committer":{"name":"erikcorry@chromium.org","email":"erikcorry@chromium.org","time":"Mon Oct 27 11:05:11 2014"},"message":"Introduce phantom weak handles in the API and use them internally for debug info\n\nR=jochen@chromium.org, ulan@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/649563006\n\nCr-Commit-Position: refs/heads/master@{#24899}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24899 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b714772c07fdb2fbb337557658bcea713d051a0f","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org","time":"Mon Oct 27 09:02:49 2014"},"commit":"b714772c07fdb2fbb337557658bcea713d051a0f","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org","time":"Mon Oct 27 09:03:16 2014"},"message":"pass isolate to Value::To* functions\n\nBUG=\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/669373002\n\nCr-Commit-Position: refs/heads/master@{#24893}\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24893 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8214cc0e56e201c0cb4d5eb6069570e40f2f3cf7","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Wed Oct 22 06:42:17 2014"},"commit":"8214cc0e56e201c0cb4d5eb6069570e40f2f3cf7","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Wed Oct 22 06:42:17 2014"},"message":"Use getauxval() if available.\n\nThis fixes the problem of not being able to detect ARM features on\nChromeOS because sandbox cannot access /proc/self/auxv and\n/proc/cpuinfo there.\n\nDrive-by-cleanup to libc detection in two other places.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/672543002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24789 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"37bd114925b6e6fcba816638beb940696205b0bc","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org","time":"Tue Oct 21 17:21:32 2014"},"commit":"37bd114925b6e6fcba816638beb940696205b0bc","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org","time":"Tue Oct 21 17:21:32 2014"},"message":"Update ObjectToString to Harmony-draft algorithm\n\nUpdates Object.prototype.toString() to use algorithm described in harmony drafts.\n\nCurrently, the behaviour is essentially the same as ES262's version, however this changes when internal structures\nsuch as Promise make use of symbolToStringTag (as they are supposed to, see v8:3241), and changes further once\nSymbol.toStringTag is exposed publicly.\n\nBUG=v8:3241, v8:3502\nLOG=N\nR=dslomov@chromium.org\n\nReview URL: https://codereview.chromium.org/546803003\n\nPatch from Caitlin Potter <caitpotter88@gmail.com>.\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24783 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"37b7dde54de1d2130f070aa5faedb737c4655c4b","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org","time":"Tue Oct 21 11:21:54 2014"},"commit":"37b7dde54de1d2130f070aa5faedb737c4655c4b","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org","time":"Tue Oct 21 11:21:54 2014"},"message":"Remove unused IsDirty\n\nBUG=\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/670703002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24767 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3de17c695007bfa4f1a76a756419588ee0b1e343","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org","time":"Tue Oct 21 08:25:14 2014"},"commit":"3de17c695007bfa4f1a76a756419588ee0b1e343","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org","time":"Tue Oct 21 08:25:14 2014"},"message":"Remove v8stdint.h, it doesn't serve a purpose anymore.\n\nBasically a follow-up to https://codereview.chromium.org/667573005/.\n\nLOG=y\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/670673002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24755 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"78f4212ed42e112eb571eeb1aac2957b81f3d1e6","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Tue Oct 21 04:55:49 2014"},"commit":"78f4212ed42e112eb571eeb1aac2957b81f3d1e6","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Tue Oct 21 04:55:49 2014"},"message":"Visual Studio provides stdint.h these days.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/667573005\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24751 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"299ed092ad605cc7b0f093727e3da8396d74d921","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Mon Oct 20 15:07:27 2014"},"commit":"299ed092ad605cc7b0f093727e3da8396d74d921","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Mon Oct 20 15:07:27 2014"},"message":"Remove deprecated Ascii-related identifiers from include/v8.h\n\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/665883002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24744 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"010f089971c5255c8f6850caef671bcac759f1b7","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Mon Oct 20 12:04:22 2014"},"commit":"010f089971c5255c8f6850caef671bcac759f1b7","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Mon Oct 20 12:04:22 2014"},"message":"Remove (untested) code for unsupported compilers.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/656143004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24735 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f3bfd04bcfdbc9eedcbb925bdfd10427f821975b","author":{"name":"haraken@chromium.org","email":"haraken@chromium.org","time":"Fri Oct 17 00:46:18 2014"},"commit":"f3bfd04bcfdbc9eedcbb925bdfd10427f821975b","committer":{"name":"haraken@chromium.org","email":"haraken@chromium.org","time":"Fri Oct 17 00:46:18 2014"},"message":"Pass an Isolate to v8::VisitHandlesWithClassIds\n\nThe Isolate version of v8::VisitHandlesWithClassIds is needed\nfor https://codereview.chromium.org/651713002/\n\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/664473002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24671 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b96b570628e89a075f5dd2a93c18c7e9694b786a","author":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Thu Oct 16 10:42:08 2014"},"commit":"b96b570628e89a075f5dd2a93c18c7e9694b786a","committer":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Thu Oct 16 10:42:08 2014"},"message":"Introduce v8::Exception::GetStackTrace API method.\n\nThis will be needed to get a stack trace from a DOMException.\n\nAPI=v8::Exception::GetStackTrace\nR=yangguo@chromium.org\nLOG=Y\n\nReview URL: https://codereview.chromium.org/655243002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24655 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dd49272c00668387afc257c430c78cc7f73c2da7","author":{"name":"ulan@chromium.org","email":"ulan@chromium.org","time":"Tue Oct 14 14:43:45 2014"},"commit":"dd49272c00668387afc257c430c78cc7f73c2da7","committer":{"name":"ulan@chromium.org","email":"ulan@chromium.org","time":"Tue Oct 14 14:43:45 2014"},"message":"Weak Cells\n\nIntroduce an object that holds a weak reference.\nDesign document: http://goo.gl/9dSvvy.\n\nBUG=\nR=erik.corry@gmail.com\n\nReview URL: https://codereview.chromium.org/640303006\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24606 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"61b68155c30c8a95fa8ba794160bcbf2380fe774","author":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org","time":"Thu Oct 09 10:44:30 2014"},"commit":"61b68155c30c8a95fa8ba794160bcbf2380fe774","committer":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org","time":"Thu Oct 09 10:44:30 2014"},"message":"Remove default NOP implementation of MonotonicallyIncreasingTime.\n\nBUG=417668\nLOG=N\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/641653002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24489 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f99fd3867bd388d7abb31b59699631051905bda2","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org","time":"Wed Oct 08 14:42:31 2014"},"commit":"f99fd3867bd388d7abb31b59699631051905bda2","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org","time":"Wed Oct 08 14:42:31 2014"},"message":"Remove premordial math functions from native context.\n\nR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/635323002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24471 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"73733bb3eb8f5f1cb375c34d5b94182326312b4c","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Wed Oct 08 08:17:04 2014"},"commit":"73733bb3eb8f5f1cb375c34d5b94182326312b4c","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Wed Oct 08 08:17:04 2014"},"message":"Fix data races and leaks related to v8::Lockers\n\nBUG=v8:3618\nR=ishell@chromium.org, svenpanne@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/637263002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24453 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"304d91d2a7718b7122f429a714fc99cfc63dae36","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Tue Oct 07 12:37:27 2014"},"commit":"304d91d2a7718b7122f429a714fc99cfc63dae36","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Tue Oct 07 12:37:27 2014"},"message":"Remove PersistentBase::ClearAndLeak\n\nEmbedders that used this method to be able to store a Persistent in a\ncontainer should use one of the containers in v8-util.h instead.\n\nOther uses are no longer supported.\n\nBUG=none\nR=dcarney@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/635513002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24436 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ec871585fc6621d75b66349e2990093967fece33","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Tue Oct 07 12:03:55 2014"},"commit":"ec871585fc6621d75b66349e2990093967fece33","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Tue Oct 07 12:03:55 2014"},"message":"Add stack trace to the promise reject callback.\n\nR=aandrey@chromium.org\nBUG=chromium:393913\nLOG=N\n\nReview URL: https://codereview.chromium.org/630373003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24432 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7cbe1ef9ca6fdfbe32eed41478196d534228a08a","author":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org","time":"Mon Oct 06 12:22:25 2014"},"commit":"7cbe1ef9ca6fdfbe32eed41478196d534228a08a","committer":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org","time":"Mon Oct 06 12:22:25 2014"},"message":"Add MonotonicallyIncreasingTime to V8 Platform.\n\nAdds a MonotonicallyIncreasingTime() function to the Platform API to enable the\nembedder to provide a time API to V8 which will be used for IdleNotification deadlines.\n\nBUG=417668\nLOG=Y\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/632663002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24411 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"43257b61aee0948fdf9a4bcfb9a9d6559454fc72","author":{"name":"erikcorry@chromium.org","email":"erikcorry@chromium.org","time":"Fri Oct 03 10:29:12 2014"},"commit":"43257b61aee0948fdf9a4bcfb9a9d6559454fc72","committer":{"name":"erikcorry@chromium.org","email":"erikcorry@chromium.org","time":"Fri Oct 03 10:29:12 2014"},"message":"Add a use counter for Intl.v8BreakIterator\n\nR=marja@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/619913002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24400 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a2099f52929f2e118638e5e61c0989b92a915f49","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Thu Oct 02 09:39:13 2014"},"commit":"a2099f52929f2e118638e5e61c0989b92a915f49","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Thu Oct 02 09:39:13 2014"},"message":"Serialize all external strings except for native source code strings.\n\nR=mvstanton@chromium.org\n\nReview URL: https://codereview.chromium.org/604373008\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24391 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6482fb3ee41670b73a1c6c3c17210d618d39b946","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org","time":"Thu Oct 02 09:20:37 2014"},"commit":"6482fb3ee41670b73a1c6c3c17210d618d39b946","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org","time":"Thu Oct 02 09:20:37 2014"},"message":"Extend CPU profiler with mapping ticks to source lines\n\nThe idea behind of this solution is to use the existing \"relocation info\" instead of consumption the CodeLinePosition events emitted by the V8 compilers.\nDuring generation code and relocation info are generated simultaneously.\nWhen code generation is done you each code object has associated \"relocation info\".\nRelocation information lets V8 to mark interesting places in the generated code: the pointers that might need to be relocated (after garbage collection),\ncorrespondences between the machine program counter and source locations for stack walking.\n\nThis patch:\n1. Add more source positions info in reloc info to make it suitable for source level mapping.\nThe amount of data should not be increased dramatically because (1) V8 already marks interesting places in the generated code and\n(2) V8 does not write redundant information (it writes a pair (pc_offset, pos) only if pos is changed and skips other).\nI measured it on Octane benchmark - for unoptimized code the number of source positions may achieve 2x ('lin_solve' from NavierStokes benchmark).\n\n2. When a sample happens, CPU profiler finds a code object by pc, then use its reloc info to match the sample to a source line.\nIf a source line is found that hit counter is increased by one for this line.\n\n3. Add a new public V8 API to get the hit source lines by CDT CPU profiler.\nNote that it's expected a minor patch in Blink to pack the source level info in JSON to be shown.\n\n4.Add a test that checks how the samples are distributed through source lines.\nIt tests two cases: (1) relocation info created during code generation and (2) relocation info associated with precompiled function's version.\n\nPatch from Denis Pravdin <denis.pravdin@intel.com>\nBUG=None\nLOG=Y\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/616963005\n\nPatch from Denis Pravdin <denis.pravdin@intel.com>.\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24389 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"906d16a7500c768c9584ccd6cd76359ee77a32a1","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Thu Oct 02 08:28:04 2014"},"commit":"906d16a7500c768c9584ccd6cd76359ee77a32a1","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Thu Oct 02 08:28:04 2014"},"message":"Update the documentation of Isolate::GetCodeRange\n\nOn Win64, the first page is reserved for the embedder.\n\nBUG=v8:3597\nR=svenpanne@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/619233003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24383 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"321dad9b8e7c78290d2a2d9b2e4613b504e4ff91","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Thu Oct 02 06:52:39 2014"},"commit":"321dad9b8e7c78290d2a2d9b2e4613b504e4ff91","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Thu Oct 02 06:52:39 2014"},"message":"Introduce v8::Object::GetIsolate().\n\nAPI=v8::Object::GetIsolate()\nLOG=Y\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/617263003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24376 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"153ec0329edde3142abd944206d67f679847847a","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Wed Oct 01 07:08:39 2014"},"commit":"153ec0329edde3142abd944206d67f679847847a","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Wed Oct 01 07:08:39 2014"},"message":"Use symbols instead of hidden properties for i18n markers.\n\nAlso refactor symbols in the root list.\n\nR=dslomov@chromium.org\n\nReview URL: https://codereview.chromium.org/614083002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24345 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e68e62c8917405e33155965303bb263fae68fcb0","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Tue Sep 30 15:29:08 2014"},"commit":"e68e62c8917405e33155965303bb263fae68fcb0","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Tue Sep 30 15:29:08 2014"},"message":"Introduce PromiseRejectCallback.\n\nR=aandrey@chromium.org, yurys@chromium.org, rossberg@chromium.org\nAPI=v8::Isolate::SetPromiseRejectCallback, v8::Promise::HasHandler\nLOG=Y\nBUG=v8:3093\n\nReview URL: https://codereview.chromium.org/600723005\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24335 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"24d1ef4868ba15eccaebb26ef651877d94c83e2a","author":{"name":"alph@chromium.org","email":"alph@chromium.org","time":"Mon Sep 29 12:59:54 2014"},"commit":"24d1ef4868ba15eccaebb26ef651877d94c83e2a","committer":{"name":"alph@chromium.org","email":"alph@chromium.org","time":"Mon Sep 29 12:59:54 2014"},"message":"Initial implementation of GetStackSample sampling profiler API.\n\nThe patch is based on https://codereview.chromium.org/578163002/#ps20001\nmade by gholap@chromium.org\n\nLOG=N\nBUG=v8:3490\nR=bmeurer@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/596533002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24285 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9b32bb22c1e516a4931ac647656bdf07bd7332be","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Mon Sep 29 12:17:31 2014"},"commit":"9b32bb22c1e516a4931ac647656bdf07bd7332be","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Mon Sep 29 12:17:31 2014"},"message":"Add a getter for the address and size of the code range to the pulic API\n\nSince the x64 backend currently doesn't emit ABI compliant code, it is\nnot possible to unwind the stack. During Win64 SEH this will cause the\nexception handling to abort, and not even call the unhandled exception\nhandler. Embedders are advised to install a custom unwind callback using\nRtlInstallFunctionTableCallback for the entire code range to catch\nunwind attempts for exception handling.\n\nBUG=v8:3598\nR=svenpanne@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/612043002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24283 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4b072d16f261baa88eb3079d3ff68be53e4cda76","author":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Mon Sep 29 10:22:56 2014"},"commit":"4b072d16f261baa88eb3079d3ff68be53e4cda76","committer":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Mon Sep 29 10:22:56 2014"},"message":"Add IsGeneratorFunction and IsGeneratorObject checks to v8::Value.\n\nR=ulan@chromium.org, yangguo@chromium.org, wingo, yangguo\n\nReview URL: https://codereview.chromium.org/608503002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24278 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4bdd165fccb957eaabc57598aea9a39a9e116d85","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Fri Sep 19 11:27:54 2014"},"commit":"4bdd165fccb957eaabc57598aea9a39a9e116d85","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Fri Sep 19 11:27:54 2014"},"message":"Remove a couple of deprecated APIs that moved to Isolate\n\nEmbedders should either pass the information to via\nIsolate::CreateParams or use Isolate::SetStackLimit where appropriate\n\nBUG=none\nR=svenpanne@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/584843002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24080 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"27f3cc1b9c3ef6f5ff46478de3ee92733b9b6e4d","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Thu Sep 18 21:07:50 2014"},"commit":"27f3cc1b9c3ef6f5ff46478de3ee92733b9b6e4d","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Thu Sep 18 21:07:50 2014"},"message":"Require V8 to be explicitly initialized before an Isolate is created\n\nWe also initialize the Isolate on creation.\n\nThis should allow for getting rid of the last remaining default isolate\ntraces. Also, it'll speed up several isolate related operations that no\nlonger require locks.\n\nEmbedders that relied on v8::Isolate to return an uninitialized Isolate\n(so they can set ResourceConstraints for example, or set flags that\nmodify the way the isolate is created) should either do the setup before\ncreating the isolate, or use the recently added CreateParams to pass e.g.\nResourceConstraints.\n\nBUG=none\nLOG=y\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/469783002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@24052 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"069a9c75ad325716ec0bd129031cc2f517ff2bec","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Tue Sep 16 09:15:02 2014"},"commit":"069a9c75ad325716ec0bd129031cc2f517ff2bec","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Tue Sep 16 09:15:02 2014"},"message":"Move configuration of ResourceConstraints to Isolate construction\n\nWe can only set resource constraints before the isolate is initialized.\nSince in the future, we want to initialize isolates at construction\ntime, we need to set constraints there.\n\nIt's possible to later modify the stack limit, so introduce an\nIsolate::SetStackLimit method for that.\n\nThe SetResourceConstraints method will be deprecated. Users should pass\nResourceConstraints to Isolate::New, and use Isolate::SetStackLimit to\nlater modify the stack limit.\n\nBUG=none\nR=svenpanne@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/559993005\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23964 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"65a1857824492a2582b9f3638276f9b201529e5d","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Mon Sep 15 11:17:00 2014"},"commit":"65a1857824492a2582b9f3638276f9b201529e5d","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org","time":"Mon Sep 15 11:17:00 2014"},"message":"Currently, a new isolate is created in an uninitialized state, and\nseveral API methods will automatically initialize it. During this\nuninitialized state, code event handlers and function entry handlers can\nbe attached to the isolate.\n\nThis CL deprecates SetFunctionEntryHook and moves the configuration of\nthose handlers to the Isolate factory method.\n\nThis will allow for initializing the Isolate at creation time in the\nfuture.\n\nUsers of V8::SetFunctionEntryHook should pass the entry hook to\nIsolate::New instead. V8::SetJitCodeEventHandler should either be passed\nto Isolate::New as well, or (if startup events are not required) invoked\nvia the Isolate.\n\nBUG=none\nLOG=y\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/570993002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23940 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"eb19fc013a3487a68ab02b38518d9722c7edc9ce","author":{"name":"marja@chromium.org","email":"marja@chromium.org","time":"Fri Sep 12 09:12:08 2014"},"commit":"eb19fc013a3487a68ab02b38518d9722c7edc9ce","committer":{"name":"marja@chromium.org","email":"marja@chromium.org","time":"Fri Sep 12 09:12:08 2014"},"message":"Add script streaming API.\n\nBlink will use this API to stream script data into V8 as the scripts\nload. During loading, V8 can already parse the scripts. They will be then\ncompiled and executed when the loading is complete.\n\nThis is a reincarnation of https://codereview.chromium.org/366153002/\nwith fixes.\n\nBUG=\nR=jochen@chromium.org, rossberg@chromium.org, svenpanne@chromium.org, yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/566553002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23904 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"96716c060d5c4eaa13e11af300b469c9c79dcee0","author":{"name":"marja@chromium.org","email":"marja@chromium.org","time":"Thu Sep 11 11:13:40 2014"},"commit":"96716c060d5c4eaa13e11af300b469c9c79dcee0","committer":{"name":"marja@chromium.org","email":"marja@chromium.org","time":"Thu Sep 11 11:13:40 2014"},"message":"Fix compilation after r23865.\n\nTBR=ulan@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/549043003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23867 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"61c9683d712e5f168b34ca79d6e94a10bb30e59f","author":{"name":"marja@chromium.org","email":"marja@chromium.org","time":"Thu Sep 11 11:06:26 2014"},"commit":"61c9683d712e5f168b34ca79d6e94a10bb30e59f","committer":{"name":"marja@chromium.org","email":"marja@chromium.org","time":"Thu Sep 11 11:06:26 2014"},"message":"Add script streaming API.\n\nBlink will use this API to stream script data into V8 as the scripts\nload. During loading, V8 can already parse the scripts. They will be then\ncompiled and executed when the loading is complete.\n\nBUG=\nR=jochen@chromium.org, rossberg@chromium.org, svenpanne@chromium.org, yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/366153002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23865 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4e670fd05e439145b3f46dd2c54d332044a72954","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Wed Sep 10 12:38:12 2014"},"commit":"4e670fd05e439145b3f46dd2c54d332044a72954","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org","time":"Wed Sep 10 12:38:12 2014"},"message":"Rename ascii to one-byte where applicable.\n\nR=dcarney@chromium.org, marja@chromium.org\n\nReview URL: https://codereview.chromium.org/559913002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23840 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bbd96b97e47ccc2720d8f3410ff44690f3d78f9a","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Tue Sep 09 14:18:17 2014"},"commit":"bbd96b97e47ccc2720d8f3410ff44690f3d78f9a","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Tue Sep 09 14:18:17 2014"},"message":"[turbofan] Add support for overflow add/sub to the MachineOperatorReducer.\n\nTEST=base-unittests,compiler-unittests,cctest\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/555833002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23809 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"51d11d4e19ededef3ed8eb0c6d9f04d5215e1d0c","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org","time":"Tue Sep 09 08:52:36 2014"},"commit":"51d11d4e19ededef3ed8eb0c6d9f04d5215e1d0c","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org","time":"Tue Sep 09 08:52:36 2014"},"message":"Fixed some undefined behavior in our external header.\n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/555053002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23788 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"30f18f0f7d6248b6792eb2a1deed50dfec23af89","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Tue Sep 02 07:07:52 2014"},"commit":"30f18f0f7d6248b6792eb2a1deed50dfec23af89","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Tue Sep 02 07:07:52 2014"},"message":"Use Chrome compatible naming for compiler specifics.\n\nLess useless creativity is best creativity!\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/526223002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23579 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"40da0e5ee62b07196f7dad19066be28202bfb12c","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Mon Sep 01 10:24:04 2014"},"commit":"40da0e5ee62b07196f7dad19066be28202bfb12c","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org","time":"Mon Sep 01 10:24:04 2014"},"message":"Use the \"enum hack\" to fix the SmiTagging constants.\n\nThe \"enum hack\" (see Item 2 of \"Effective C++\") is the only known\nportable way to define constant integral values within template\nclasses. Fixes the weird work-arounds required for certain GCC\nversions.\n\nR=jarin@chromium.org, rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/527603002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23550 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"983aa69aa193676a92b8b9f7180789c4f6f31485","author":{"name":"mvstanton@chromium.org","email":"mvstanton@chromium.org","time":"Mon Aug 25 15:17:06 2014"},"commit":"983aa69aa193676a92b8b9f7180789c4f6f31485","committer":{"name":"mvstanton@chromium.org","email":"mvstanton@chromium.org","time":"Mon Aug 25 15:17:06 2014"},"message":"Introduce two new symbols for vector based ICs.\n\nVector based load ics need a premonomorphic and generic symbol.\n\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/505763002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23365 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6190ac0882453f52c673db97b03bec49a26a9085","author":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Mon Aug 25 08:56:31 2014"},"commit":"6190ac0882453f52c673db97b03bec49a26a9085","committer":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org","time":"Mon Aug 25 08:56:31 2014"},"message":"Expose Value::IsMap, IsSet, IsWeakMap, IsWeakSet in V8 API.\n\nThese checks will be needed for DevTools.\n\nR=yangguo@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/464413002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23338 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"22d5ceb1f28a274338f854cc12138c3bcb0cd70c","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 21 12:39:33 2014"},"commit":"22d5ceb1f28a274338f854cc12138c3bcb0cd70c","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 21 12:39:33 2014"},"message":"Implement Function.prototype.toMethod.\n\nR=arv@chromium.org, verwaest@chromium.org\nBUG=v8:3330\nLOG=N\n\nReview URL: https://codereview.chromium.org/475423003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23274 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e929f5fe43d67794ac55fbf279eaea4acd4e96e1","author":{"name":"wingo@igalia.com","email":"wingo@igalia.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 20 15:25:13 2014"},"commit":"e929f5fe43d67794ac55fbf279eaea4acd4e96e1","committer":{"name":"wingo@igalia.com","email":"wingo@igalia.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 20 15:25:13 2014"},"message":"Support symbol-named properties in API\n\nAdd new \"Name\" type to API that is a supertype of Symbol and String.\n\nObject::SetDeclaredAccessor, Object::SetAccessorProperty, Template::Set,\nTemplate::SetAccessorProperty, and Template::SetDeclaredAccessor now\ntake a Name as the property name instead of a String.\n\nAdd Object::SetAccessor, Template::SetNativeDataProperty, and\nObjectTemplate::SetAccessor overloads that can define accessors for\nsymbol-named properties.\n\nR=dcarney@chromium.org, rossberg@chromium.org\nBUG=v8:3394\nTEST=cctest/test-api/TestSymbolProperties\nLOG=Y\n\nReview URL: https://codereview.chromium.org/459413002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23247 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b15a082d56fb9fa8832109970f40312761566c0d","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 20 12:10:41 2014"},"commit":"b15a082d56fb9fa8832109970f40312761566c0d","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 20 12:10:41 2014"},"message":"Fix implementation of bit count functions.\n\nThe bit counting functions provided by CompilerIntrinsics were undefined\nfor zero, which was easily overlooked and unsafe in general. Also their\nimplementation was kinda hacky and mostly untested. Fixed the\nimplementation and moved the functions to base/bits.h.\n\nTEST=base-unittests,cctest,compiler-unittests,mjsunit\nR=hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/494633002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23229 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5832ab85019d2916e51f98929f4a73fe154ad12a","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 20 11:04:05 2014"},"commit":"5832ab85019d2916e51f98929f4a73fe154ad12a","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 20 11:04:05 2014"},"message":"Expose function CheckDebugBreak in the debugger api\n\nAPI=v8::Debug::CheckDebugBreak\nLOG=Y\nR=aandrey@chromium.org, vsevik@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/473913002\n\nPatch from Sergei Vasilinetc <sergeyv@chromium.org>.\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23227 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8394975ec7da4b7887c042d750b86e5a8584195f","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 19 12:08:46 2014"},"commit":"8394975ec7da4b7887c042d750b86e5a8584195f","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 19 12:08:46 2014"},"message":"Expose well-known Symbols to C++ API.\n\nBUG=341423\nLOG=Y\nR=arv@chromium.org, dcarney@chromium.org, rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/483173002\n\nPatch from Yutaka Hirano <yhirano@chromium.org>.\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23196 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"84edfa3d0c4806ab94ddd7ffb9d7d4f2a3fece91","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 18 07:54:19 2014"},"commit":"84edfa3d0c4806ab94ddd7ffb9d7d4f2a3fece91","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 18 07:54:19 2014"},"message":"Purge unused internalized string accessors.\n\nR=marja@chromium.org\n\nReview URL: https://codereview.chromium.org/471923002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23141 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3a3d6bd4f61b679a87c30685e8ae8280570b3ec3","author":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 13 13:06:30 2014"},"commit":"3a3d6bd4f61b679a87c30685e8ae8280570b3ec3","committer":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 13 13:06:30 2014"},"message":"Expose Value::IsArgumentsObject in V8 API.\n\nR=yangguo@chromium.org, svenpanne@chromium.org, yangguo\n\nReview URL: https://codereview.chromium.org/460333002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@23105 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"159cc8ddf2bb3c661562d1486c88849bf05573ac","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 07 08:55:49 2014"},"commit":"159cc8ddf2bb3c661562d1486c88849bf05573ac","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 07 08:55:49 2014"},"message":"v8::TryCatch should cancel the scheduled exception on Reset.\n\nv8::TryCatch cancels the scheduled exception on destruction if |Rethrow|\nwas never called.\nIt is reasonable to do the same in |Reset|.\n\nBUG=362388, 359386\nLOG=\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/443853002\n\nPatch from Yutaka Hirano <yhirano@chromium.org>.\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22963 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fb7da07a13dc34340a4d4900836f41f569d54afe","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 05 11:27:44 2014"},"commit":"fb7da07a13dc34340a4d4900836f41f569d54afe","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 05 11:27:44 2014"},"message":"Removed GetConstructor from the API.\nInstead either get the \"constructor\" property stored in the prototype, or keep a side-table.\n\nLOG=y\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/438303003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22861 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a1383e2250dc5b56b777f2057f1600537f02023e","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 30 13:54:45 2014"},"commit":"a1383e2250dc5b56b777f2057f1600537f02023e","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 30 13:54:45 2014"},"message":"Land the Fan (disabled)\n\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/426233002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22709 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a56c917009ad16b74f98fa3e453b30332a264efb","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 30 11:41:48 2014"},"commit":"a56c917009ad16b74f98fa3e453b30332a264efb","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 30 11:41:48 2014"},"message":"Drop deprecated memory related notification API\n\nEmbedders should use the non-static methods on Isolate with the same\nname.\n\nBUG=397026\nR=hpayer@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/429593003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22703 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b337649d14f4107ddc3fb3f85035fd5ac851d512","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 29 17:02:52 2014"},"commit":"b337649d14f4107ddc3fb3f85035fd5ac851d512","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 29 17:02:52 2014"},"message":"Only generate a single normal IC per kind per slow-mode map.\n\nBUG=\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/429543004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22680 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4a956ab1c2ebf59a21ca3e73f04225b564b7eebe","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 25 18:32:11 2014"},"commit":"4a956ab1c2ebf59a21ca3e73f04225b564b7eebe","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 25 18:32:11 2014"},"message":"Change Has* and Get*Attributes to return Maybe<*>, indicating possible exceptions.\n\nBUG=\nR=ishell@chromium.org\n\nReview URL: https://codereview.chromium.org/418383002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22624 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cb8105e223237d5f676d3c4709539a161d7a6c92","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 24 08:28:02 2014"},"commit":"cb8105e223237d5f676d3c4709539a161d7a6c92","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 24 08:28:02 2014"},"message":"Move gc notifications from V8 to Isolate and make idle hint mandatory\n\nEmbedders should use e.g. isolate->IdleNotification(1000) instead\nof v8::V8::IdleNotification()\n\nBUG=397026\nR=hpayer@chromium.org, ernstm@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/412163003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22584 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a42612b4a788841f8043bf4d4ec1440c337bae25","author":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 16 12:18:33 2014"},"commit":"a42612b4a788841f8043bf4d4ec1440c337bae25","committer":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 16 12:18:33 2014"},"message":"Change ScriptCompiler::CompileOptions to allow for two 'cache' modes\n(parser or code) and to be explicit about cache consumption or production\n(rather than making presence of cached_data imply one or the other.)\n\nAlso add a --cache flag to d8, to allow testing the functionality.\n\n-----------------------------\nAPI change\n\nReason: Currently, V8 supports a 'parser cache' for repeatedly executing the same script. We'd like to add a 2nd mode that would cache code, and would like to let the embedder decide which mode they chose (if any).\n\nNote: Previously, the 'use cached data' property was implied by the presence of the cached data itself. (That is, kNoCompileOptions and source->cached_data != NULL.) That is no longer sufficient, since the presence of data is no longer sufficient to determine /which kind/ of data is present.\n\nChanges from old behaviour:\n\n- If you previously didn't use caching, nothing changes.\nExample:\n  v8::CompileUnbound(isolate, source, kNoCompileOptions);\n\n- If you previously used caching, it worked like this:\n\n  - 1st run:\n  v8::CompileUnbound(isolate, source, kProduceToCache);\n  Then, source->cached_data would contain the\n  data-to-be cached. This remains the same, except you\n  need to tell V8 which type of data you want.\n  v8::CompileUnbound(isolate, source, kProduceParserCache);\n\n  - 2nd run:\n  v8::CompileUnbound(isolate, source, kNoCompileOptions);\n  with source->cached_data set to the data you received in\n  the first run. This will now ignore the cached data, and\n  you need to explicitly tell V8 to use it:\n  v8::CompileUnbound(isolate, source, kConsumeParserCache);\n-----------------------------\n\nBUG=\nR=marja@chromium.org, yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/389573006\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22431 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"319e5226e900bfe9fb066e2baca10c22a547ac02","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 15 08:13:42 2014"},"commit":"319e5226e900bfe9fb066e2baca10c22a547ac02","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 15 08:13:42 2014"},"message":"fix the vtune support bug.\n\nDuring https://code.google.com/p/v8/source/detail?r=19925 checkin context bound scripts (Script)\nand context unbound scripts (UnboundScript) are Distinguished.\n\nAnd then Sven Panne helped to fix the vtune support compilation\nerror in https://code.google.com/p/v8/source/detail?r=20955.\n\nThe problem is that there is runtime error for vtune\nsupport.\nIn our original implementation, we encapsulated and passed v8::internal::Script\nto V8 API. It will leads to type check error for current V8::Script definition.\n\nSo I changed the Handle<Script> definition in JitCodeEvent\nto Handle<UnboundScript>\n and add the corresponding change in log.cc.\n\nIf you do NOT prefer to change in include/v8.h. I think I can change the definition of\nCodeEventLogger::LogRecordedBuffer(...) so that the we can pass the correct\ntype (JSFunction) as V8::Script to V8 API.\n\nBUG=\nR=danno@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/334263018\n\nPatch from Chunyang Dai <chunyang.dai@intel.com>.\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22393 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6466ff39fb244390554a8354c5864fe90cd37655","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 14 14:52:24 2014"},"commit":"6466ff39fb244390554a8354c5864fe90cd37655","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 14 14:52:24 2014"},"message":"Remove PropertyAttributes from SetProperty\n\nBUG=\nR=ishell@chromium.org\n\nReview URL: https://codereview.chromium.org/390833003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22383 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"339bc81390580433813b7d99b9e626c2b5acf3a9","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 10 10:28:05 2014"},"commit":"339bc81390580433813b7d99b9e626c2b5acf3a9","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 10 10:28:05 2014"},"message":"Refactor ScriptData class for cached compile data.\n\nR=marja@chromium.org, vogelheim@chromium.org\n\nReview URL: https://codereview.chromium.org/376223002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22314 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c1f6a0306e0c25610ed077d78ce156137673b9ae","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 09 14:03:05 2014"},"commit":"c1f6a0306e0c25610ed077d78ce156137673b9ae","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 09 14:03:05 2014"},"message":"Remove deprecate counter/histogram methods\n\nCallers should use the methods with the same name on Isolate instead.\n\nBUG=none\nR=dcarney@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/371023004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22304 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6302fc67713d5c9ab88eac76c956e83b7d87752b","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 07 14:03:20 2014"},"commit":"6302fc67713d5c9ab88eac76c956e83b7d87752b","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 07 14:03:20 2014"},"message":"Add ScriptID field into ScriptOrigin class.\nAnonymous script has empty resource name. To identify this script we need its id.\n\nR=ulan@chromium.org, yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/363553005\n\nPatch from Alexey Kozyatinskiy <kozyatinskiy@google.com>.\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22248 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6d5d4b44b512eaa982adc1f8d03e9c649b5b08d9","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 07 07:19:46 2014"},"commit":"6d5d4b44b512eaa982adc1f8d03e9c649b5b08d9","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 07 07:19:46 2014"},"message":"Remove a bunch of Isolate::UncheckedCurrent calls\n\nThe callbacks are per isolate, so we shouldn't get the isolate implicitly\nfrom TLS. Also, we shouldn't allow calls to these methods prior to\ninitializing the respective isolate (and silently ignore them).\n\nEsp. add a per-isolate API to set the stats counter callbacks and\nmake it possible to set the stats counter callback after the isolate\nwas touched.\n\nEmbedders should use e.g. isolate->SetCounterFunction(callback) instead\nof v8::V8::SetCounterFunction(callback).\n\nBUG=none\nR=svenpanne@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/365153002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22223 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"952a986dd13dfaf001638558d9e3c24aa31fb936","author":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 03 15:56:01 2014"},"commit":"952a986dd13dfaf001638558d9e3c24aa31fb936","committer":{"name":"aandrey@chromium.org","email":"aandrey@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 03 15:56:01 2014"},"message":"Introduce debug events for Microtask queue.\n\nR=yangguo@chromium.org, adamk@chromium.org, rafaelw@chromium.org, rossberg@chromium.org\nBUG=chromium:272416\nLOG=Y\n\nReview URL: https://codereview.chromium.org/362783002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22204 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1859b04071521c78fc0a0286bb6897d5440432c5","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 03 10:04:57 2014"},"commit":"1859b04071521c78fc0a0286bb6897d5440432c5","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 03 10:04:57 2014"},"message":"add GetOwnPropertyDescriptor to api\n\nR=verwaest@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/364923006\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22190 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c1231d426f389475b1dc3a0e1dcb1e0760527d61","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 03 09:33:36 2014"},"commit":"c1231d426f389475b1dc3a0e1dcb1e0760527d61","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 03 09:33:36 2014"},"message":"Add an API to pump the message loop to libplatform\n\nBUG=none\nLOG=n\nR=marja@chromium.org\n\nReview URL: https://codereview.chromium.org/363303002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22187 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7b94143287ee47c73d3f81328411d4191860b952","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 03 08:50:52 2014"},"commit":"7b94143287ee47c73d3f81328411d4191860b952","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 03 08:50:52 2014"},"message":"Don't even include v8.h from libbase or libplatform\n\nBUG=none\nR=yangguo@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/369073002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22182 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ca16bb7ae2259672f5ae6b38e51d3a8790f6f05a","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 03 07:37:27 2014"},"commit":"ca16bb7ae2259672f5ae6b38e51d3a8790f6f05a","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 03 07:37:27 2014"},"message":"Split out libplatform into a separate libary\n\nAlso remove the \"use default platform\" compile flag. Instead, the embedder\nhas to provide the platform.\n\nChange all binaries to use the default platfrom from libplatform.\n\nUnless --job-based-sweeping is passed, nothing uses the platform yet, so\nnothing will break for embedders (yet).\n\nBUG=none\nR=jkummerow@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/345903004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22180 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1f24d32b0022066059f28de5c696a2e928817168","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 02 10:34:13 2014"},"commit":"1f24d32b0022066059f28de5c696a2e928817168","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 02 10:34:13 2014"},"message":"Remove deprecated v8::Context::HasOutOfMemoryException.\n\nLOG=Y\nR=ulan@chromium.org\n\nReview URL: https://codereview.chromium.org/369463005\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22151 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7717f2366f764bce20dcda94228ee98accccd0d5","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 02 07:01:31 2014"},"commit":"7717f2366f764bce20dcda94228ee98accccd0d5","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 02 07:01:31 2014"},"message":"Handle \"//# sourceURL\" comments in the Parser instead of the JS.\n\nBUG=v8:2948\nLOG=N\nR=svenpanne@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/316173002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22137 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"570a0bf8f54ccb3b9dfc3fc69779294f5b848eec","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 30 13:35:16 2014"},"commit":"570a0bf8f54ccb3b9dfc3fc69779294f5b848eec","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 30 13:35:16 2014"},"message":"Parser: add usage counters for \"use asm\".\n\nR=jochen@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/336863007\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22093 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e1d80e28580bdc8f70046b407761df2c6630b742","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 30 11:48:20 2014"},"commit":"e1d80e28580bdc8f70046b407761df2c6630b742","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 30 11:48:20 2014"},"message":"Fix stack trace accessor behavior.\n\nR=verwaest@chromium.org\nBUG=v8:3404\nLOG=N\n\nReview URL: https://codereview.chromium.org/343563009\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22089 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f6c4178aa70c5adc3d4ccdba02dae6b88b08197c","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 30 11:12:42 2014"},"commit":"f6c4178aa70c5adc3d4ccdba02dae6b88b08197c","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 30 11:12:42 2014"},"message":"Introduce debug events for promises.\n\nR=aandrey@chromium.org, rossberg@chromium.org\nBUG=v8:3093\nLOG=Y\n\nReview URL: https://codereview.chromium.org/357603005\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22086 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cea1824f58128330928207918c4756612b5c37de","author":{"name":"ishell@chromium.org","email":"ishell@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 30 09:44:43 2014"},"commit":"cea1824f58128330928207918c4756612b5c37de","committer":{"name":"ishell@chromium.org","email":"ishell@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 30 09:44:43 2014"},"message":"Replace HeapNumber as doublebox with an explicit MutableHeapNumber.\n\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/355793003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22082 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0133d96be397ab725813880c47b09973bd867787","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 27 12:10:43 2014"},"commit":"0133d96be397ab725813880c47b09973bd867787","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 27 12:10:43 2014"},"message":"Remove script collected debug event.\n\nR=yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/358873005\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22063 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0339d069d9a3978ba59dd9dadf8b326f2cebd2b4","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 26 16:03:52 2014"},"commit":"0339d069d9a3978ba59dd9dadf8b326f2cebd2b4","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 26 16:03:52 2014"},"message":"Add OnCompileError handler and v8::CompileError debug event.\nThis event is generated when the parser can not generate code.\n\nR=vsevik@chromium.org, yangguo@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/264333007\n\nPatch from Alexey Kozyatinskiy <kozyatinskiy@google.com>.\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@22043 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"62ffc7de209589400f012b063bef38a93438a863","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 24 14:03:24 2014"},"commit":"62ffc7de209589400f012b063bef38a93438a863","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 24 14:03:24 2014"},"message":"New try: Parser: Delay internalizing strings and values\n\nThis is a reincarnation of r21841.\n\nThe previous try was https://codereview.chromium.org/314603004/ but it regressed\nJSBench and morejs.\n\nBUG=\nR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/335293004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21972 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"52fa41c3df98db6381e99ae5afaa4905f763abdb","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 24 09:47:25 2014"},"commit":"52fa41c3df98db6381e99ae5afaa4905f763abdb","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 24 09:47:25 2014"},"message":"Make Object::IsFoo const.\n\nRemoved a few useless const_casts on the way.\n\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/351573002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21961 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7b7bb25a24deeeb1ff4304b9922c05aaba8db5e3","author":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 23 13:52:17 2014"},"commit":"7b7bb25a24deeeb1ff4304b9922c05aaba8db5e3","committer":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 23 13:52:17 2014"},"message":"Support external startup data in V8.\n\n[Re-retry of r21696 and r21739]\n\nIf the embedder chooses, the 'natives' (library sources) and the\nprecompiled startup blob can be written to files during the build\nprocess and handed over to V8 at startup. The main purpose would be\nto reduce the size of the compiled binary for space constrained\nplatforms.\n\nThe build-time option is off by default. Nothing should change if\nit's not enabled.\n\nBUG=\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/334913004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21941 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ce02221828185d864a1b9226478afd8ce50b6661","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 23 09:46:58 2014"},"commit":"ce02221828185d864a1b9226478afd8ce50b6661","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 23 09:46:58 2014"},"message":"Add a use counter API\n\nThis lets embedders track certain features of v8 and the number of times\nthey are used\n\nBUG=none\nR=svenpanne@chromium.org, marja@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/346233002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21925 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b6b57605eda23e200975931985ccdab79da38c90","author":{"name":"plind44@gmail.com","email":"plind44@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 20 23:02:36 2014"},"commit":"b6b57605eda23e200975931985ccdab79da38c90","committer":{"name":"plind44@gmail.com","email":"plind44@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 20 23:02:36 2014"},"message":"MIPS: Fix big-endian after r21774/r21803.\n\nFix big-endian ordering of InstanceType and BitField by always loading\nthe pair as a 16-bit value, even in the API accessor. Clean up some\nassertions.\n\nR=danno@chromium.org, mtbrandy@gmail.com\n\nReview URL: https://codereview.chromium.org/334403003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21906 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a862f7819bfcae928c6e6d4170ee0783a2eb7e3e","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 20 07:44:05 2014"},"commit":"a862f7819bfcae928c6e6d4170ee0783a2eb7e3e","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 20 07:44:05 2014"},"message":"Added Message::GetScripOrigin.\nReplaced Message::GetResourceName with GetScriptOrigin().ResourceName().\n\nNow, GetScriptOrigin().ResourceName() function returns the resource name or sourceURL (from //# sourceURL=) for the script from where the function causing the error originates.\n\nMethod GetScriptResourceName() deprecated. Use GetScriptOrigin()->ResourceName() instead.\n\nFunction used in Blink: https://codereview.chromium.org/260513004/\n\nR=yangguo@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/265593002\n\nPatch from Alexey Kozyatinskiy <kozyatinskiy@google.com>.\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21893 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"48e1ae334f2c25f0587dba412bd00ce2a6ea0593","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 20 07:20:44 2014"},"commit":"48e1ae334f2c25f0587dba412bd00ce2a6ea0593","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 20 07:20:44 2014"},"message":"Make the internal parts of our external API a bit more const-correct.\n\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/343583002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21891 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a290cf8cda13f90921c3a2e2c421f909b202f241","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 13 13:31:56 2014"},"commit":"a290cf8cda13f90921c3a2e2c421f909b202f241","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 13 13:31:56 2014"},"message":"Parser: Delay internalizing strings and values.\n\nThis is needed so that we can run Parser on a non-main thread (independent\nof the Isolate and the V8 heap).\n\nBUG=\nR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/314603004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21841 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6e29768eb60fa060360a4cd0afaae337465a5064","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 13 12:19:04 2014"},"commit":"6e29768eb60fa060360a4cd0afaae337465a5064","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 13 12:19:04 2014"},"message":"Have one, long-lived map for bound functions.\n\nThis avoids creating a new map for every bound function. Bonus: some cleanup in Runtime_FunctionBindArguments.\n\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/335653002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21839 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dfb1c7dc9e1a0504f108c06bb15fb7c563215203","author":{"name":"wingo@igalia.com","email":"wingo@igalia.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 12 17:31:54 2014"},"commit":"dfb1c7dc9e1a0504f108c06bb15fb7c563215203","committer":{"name":"wingo@igalia.com","email":"wingo@igalia.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 12 17:31:54 2014"},"message":"For-of calls [Symbol.iterator]() on RHS to get iterator\n\nR=rossberg@chromium.org\nBUG=http://code.google.com/p/v8/issues/detail?id=2735\nLOG=N\n\nReview URL: https://codereview.chromium.org/332663004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21820 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d757f378d31174738220178df59cdfc3286e75e9","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 12 11:33:30 2014"},"commit":"d757f378d31174738220178df59cdfc3286e75e9","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 12 11:33:30 2014"},"message":"Add v8::Promise::Then.\n\nBlink needs v8::Promise::Then to implement ScriptPromise::then.\nBlink-side CL: https://codereview.chromium.org/316453002\n\nBUG=371288\nLOG=Y\nR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/314553002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21805 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f67f8fc4c5dd5247fd89af34eed11ed8c249ce25","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jun 11 09:12:35 2014"},"commit":"f67f8fc4c5dd5247fd89af34eed11ed8c249ce25","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jun 11 09:12:35 2014"},"message":"Removed dead API entries.\n\nR=ulan@chromium.org\n\nReview URL: https://codereview.chromium.org/322293003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21763 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e02158e8c15cfb8c589c0efa3ad3730c77bc84bd","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 10 09:24:00 2014"},"commit":"e02158e8c15cfb8c589c0efa3ad3730c77bc84bd","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 10 09:24:00 2014"},"message":"Make presubmit script happy again.\n\nNo clue why this seems to be an issue only for me, though...\n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/321123002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21735 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ba9f391bc066268dfc520b7ddde95b8700bd9740","author":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 05 13:06:21 2014"},"commit":"ba9f391bc066268dfc520b7ddde95b8700bd9740","committer":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 05 13:06:21 2014"},"message":"Support external startup data in V8.\n\n[Retry of crrev.com/293993021, which caused problems with 'ninja all' in Chromium. First patch set if a clean apply\nof crrev.com/293993021. Subsequent sets are the actual fix\nfor that issue.]\n\nIf the embedder chooses, the 'natives' (library sources) and the\nprecompiled startup blob can be written to files during the build\nprocess and handed over to V8 at startup. The main purpose would be\nto reduce the size of the compiled binary for space constrained\nplatforms.\n\nThe build-time option is off by default. Nothing should change if\nit's not enabled.\n\nBUG=\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/315033002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21696 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"16be5bb3771c289d7710f457d0b49297e451604f","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 05 13:02:18 2014"},"commit":"16be5bb3771c289d7710f457d0b49297e451604f","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 05 13:02:18 2014"},"message":"Compilation API: next step of deprecations.\n\nRemove deprecated functions and deprecated Script::GetId (which was supposed to\nbe deprecated, but Chrome was using it).\n\nR=dcarney@chromium.org, svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/315003003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21695 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a83b1b9cb3114308ee59b842570787a9c0005b0c","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 05 08:44:42 2014"},"commit":"a83b1b9cb3114308ee59b842570787a9c0005b0c","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 05 08:44:42 2014"},"message":"Move most of the implementation of AdjustAmountOfExternalMemory to v8.h\n\nThis reduces the overhead of reporting allocations to v8 to an\nacceptable level.\n\nBUG=none\nLOG=n\nR=dcarney@chromium.org, hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/310393003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21688 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"13d2f365cc278b7636260814751e351525aaaf6a","author":{"name":"adamk@chromium.org","email":"adamk@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 03 20:12:19 2014"},"commit":"13d2f365cc278b7636260814751e351525aaaf6a","committer":{"name":"adamk@chromium.org","email":"adamk@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 03 20:12:19 2014"},"message":"Add API support for passing a C++ function as a microtask callback\n\nThis allows embedders to enqueue microtasks without having any v8::Context\nhandy, as happens in Blink in some cases (such as DOM mutations due to editing\ntriggering MutationObservers).\n\nLOG=Y\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/306053003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21658 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"61509aaea57b767dcdc47e2b74842c3c462457ca","author":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 03 14:38:35 2014"},"commit":"61509aaea57b767dcdc47e2b74842c3c462457ca","committer":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 03 14:38:35 2014"},"message":"Support external startup data in V8.\n\nIf the embedder chooses, the 'natives' (library sources) and the\nprecompiled startup blob can be written to files during the build\nprocess and handed over to V8 at startup. The main purpose would be\nto reduce the size of the compiled binary for space constrained\nplatforms.\n\nThe build-time option is off by default. Nothing should change if\nit's not enabled.\n\nBUG=\nR=bmeurer@chromium.org, jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/293993021\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21646 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"60a71d8a8ca9c30a1b59b46d0e5e560b80047908","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 02 11:02:06 2014"},"commit":"60a71d8a8ca9c30a1b59b46d0e5e560b80047908","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 02 11:02:06 2014"},"message":"Remove PROHIBITS_OVERWRITING as it is subsumed by non-configurable properties.\n\nv8::DontDelete is set for Unforgeable properties, so just not setting PROHIBITS_OVERWRITING should be enough.\n\nThe secondary \"feature\" of not allowing accessors to be installed in extending objects is incorrect and confusing, given that it only applies to accessors but not to regular properties:\nObject.defineProperty({__proto__:window}, \"location\", { value: 10 })\nworks where\nObject.defineProperty({__proto__:window}, \"location\", { get: function() {} })\ndoesn't work.\n\nLOG=y\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/306203002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21596 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"50cba82cb9e877052bf88f380989b27dd6029bd7","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 02 06:22:09 2014"},"commit":"50cba82cb9e877052bf88f380989b27dd6029bd7","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 02 06:22:09 2014"},"message":"Remove unused debug API.\n\nR=yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/303693010\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21590 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"20eeff9ae433374956cd5f2bccf08042734405e2","author":{"name":"adamk@chromium.org","email":"adamk@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 28 18:40:04 2014"},"commit":"20eeff9ae433374956cd5f2bccf08042734405e2","committer":{"name":"adamk@chromium.org","email":"adamk@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 28 18:40:04 2014"},"message":"Allow microtasks to throw exceptions and handle them gracefully\n\nIf the embedder calls V8::TerminateExecution while we're running microtasks, bail out\nand clear any pending microtasks.\n\nAll other exceptions are simply swallowed. No current Blink or V8 microtasks throw, this\njust ensures something sane happens if another embedder decides to pass a throwing\nmicrotask (or if ours unexpectedly throw due to, e.g., stack exhaustion).\n\nBUG=371566\nLOG=Y\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/294943009\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21574 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"06086a90e04070c1a558355d43edf9f8b2d2a74f","author":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 27 09:31:06 2014"},"commit":"06086a90e04070c1a558355d43edf9f8b2d2a74f","committer":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 27 09:31:06 2014"},"message":"Fix the \"PersistentValueMap\" memory leak reported here:\nhttp://build.chromium.org/p/client.v8/builders/V8%20Linux64%20ASAN\n\nThe bug:\nThe code assumed that a weak Persistent whose weak callback is being\ncalled would still be weak. That isn't true since the persistent is\nun-weakened by the garbage collector before calling the weak callback. [1]\n\nSpecifically, PersistentValueMap would funnel all 'remove' actions\nthrough its Release method, which uses PersistentBase::ClearWeak to\nobtain the callback data. [2] For 'removes' caused by the weak callback,\nClearWeak always returns a NULL-pointer since by that time the weak\npersistent was already un-weakend. The result was a memory leak in\nthe test, since the code to delete the weak callback data would\ndelete NULL.\n\nThe fix:\nI explicity call Traits::DisposeCallbackData from the weak callback\nwith the data obtained from the v8::WeakCallbackData. To avoid invalid\ncalls to DisposeCallbackData, I also check whether this instance is\n(still) weak before calling it. (That check could easily be elided\nif it's expensive, for the price of having two 'remove' code paths.)\n\nSeverety:\nProbably low. At least in Chromium, noone uses the API in a way to\ntrigger this; only the test does.\n\n[1] https://code.google.com/p/chromium/codesearch#chromium/src/v8/src/global-handles.cc&q=global-handles.cc&sq=package:chromium&type=cs&l=231\n[2] https://code.google.com/p/chromium/codesearch#chromium/src/v8/include/v8-util.h&sq=package:chromium&l=332-345\n\nR=dcarney@chromium.org, dcarney\n\nBUG=\n\nReview URL: https://codereview.chromium.org/297193004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21514 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f0527ae6852bda50d3b15b91b8f0ab683e4e4bf4","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 26 09:36:13 2014"},"commit":"f0527ae6852bda50d3b15b91b8f0ab683e4e4bf4","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 26 09:36:13 2014"},"message":"Always fully qualify the namespace to use in v8.h\n\nAlso, remove some unused methods.\n\nBUG=none\nR=dcarney@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/297223006\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21487 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"06f746a5769e3ab077b0280afea39cff1f15e034","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 22 15:27:57 2014"},"commit":"06f746a5769e3ab077b0280afea39cff1f15e034","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 22 15:27:57 2014"},"message":"Consistently say 'own' property\n\nR=yangguo@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/291153005\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21441 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"875132370101cf83ee67d327d6a9985e0421a91c","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 22 11:26:48 2014"},"commit":"875132370101cf83ee67d327d6a9985e0421a91c","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 22 11:26:48 2014"},"message":"Add support for ES6 Symbol in heap profiler\n\nHeap profiler will create a node with name Symbol and type kSymbol.\n\nBUG=chromium:376194\nLOG=Y\nR=loislo@chromium.org, yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/290013004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21433 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1b70812e7d9f90ea19beb478b6e679c1893139d9","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 19 13:45:45 2014"},"commit":"1b70812e7d9f90ea19beb478b6e679c1893139d9","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 19 13:45:45 2014"},"message":"filter out .caller from  other worlds\n\nR=verwaest@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/261103002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21366 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"33fba3bfa1b3b104051e69d14142cdff0ac0ccac","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 14 16:28:46 2014"},"commit":"33fba3bfa1b3b104051e69d14142cdff0ac0ccac","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 14 16:28:46 2014"},"message":"Remove DebuggerAgent.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/279423004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21315 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"98849dd1cec1e8c28b3debd3ac3676a867e5304b","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 14 10:44:34 2014"},"commit":"98849dd1cec1e8c28b3debd3ac3676a867e5304b","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 14 10:44:34 2014"},"message":"Drop thenable coercion cache\n\nR=dslomov@chromium.org\nBUG=372788\nLOG=Y\n\nReview URL: https://codereview.chromium.org/281753004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21301 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"20a627183f48c779a978cbb5e195598853d516da","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 14 08:07:21 2014"},"commit":"20a627183f48c779a978cbb5e195598853d516da","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 14 08:07:21 2014"},"message":"Rename debug API methods.\n\nR=yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/281733002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21295 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"631b66190bb378e64f49f49cc7eebfd306210f16","author":{"name":"ishell@chromium.org","email":"ishell@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 12 19:32:12 2014"},"commit":"631b66190bb378e64f49f49cc7eebfd306210f16","committer":{"name":"ishell@chromium.org","email":"ishell@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 12 19:32:12 2014"},"message":"v8::TryCatch now works correctly with ASAN's UseAfterReturn mode enabled.\n\nBUG=chromium:369962\nLOG=N\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/273383003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21273 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cf8327994db39d1f9ac864cc7a21770a0bf4f948","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 12 07:41:06 2014"},"commit":"cf8327994db39d1f9ac864cc7a21770a0bf4f948","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 12 07:41:06 2014"},"message":"Drop unused static microtask API\n\nBUG=none\nLOG=y\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/261413003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21251 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"988ea995c49d24f83aafe9bab6a1490301c7cfa3","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 12 06:27:38 2014"},"commit":"988ea995c49d24f83aafe9bab6a1490301c7cfa3","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 12 06:27:38 2014"},"message":"Introduce an api to query the microtask autorun state of an isolate\n\nBUG=none\nR=adamk@chromium.org, svenpanne@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/264333004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21250 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"03905e47536563435039a407cd90d0e4707a18c4","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 17:59:15 2014"},"commit":"03905e47536563435039a407cd90d0e4707a18c4","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 17:59:15 2014"},"message":"Directly create API functions with readonly prototypes rather than converting. Remove FunctionSetReadOnlyPrototype.\n\nBUG=\nR=ishell@chromium.org\n\nReview URL: https://codereview.chromium.org/274463003\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21243 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"623f2371eba0096cfbac4283af6b7c6e32c13d30","author":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 15:36:51 2014"},"commit":"623f2371eba0096cfbac4283af6b7c6e32c13d30","committer":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 15:36:51 2014"},"message":"Prevent calls to ReturnValue::Set with pointer-valued types.\n  [2nd try, after the previous version broke the build]\n\nCurrently, this code will compile:\nSomePointer* p = ...;\nReturnValue r = ...;\nr.Set(p);\n\nWhat happens is that ReturnValue::Set has no pointer-ish overloads, but\na bool one, and hence C++ will convert the pointer to a bool and use\nthe Set(bool) overload. In other words, the example above is equivalent\nto: r.Set(p ? true : false); Which probably isn't what the author had\nin mind. This change adds a Set(void*) overload whose body forces a\ncompile error, to prevent this from happening inadvertently. The only\nuse of this indeed turned out to be an error.\n\n(Said error was fixed/removed in crrev.com/267393002.)\n\nWhy was crrev.com/240013004 reverted?\nThe orginal version compiled fine on gcc (+ MSVC), but not on clang.\nThere's no clang try-bots, but the ASAN-based buildbots used clang\nand hence the build broke. I'm slightly unsure on why, but clang -\nunlike those other compilers - eagerly compiled the non-compilable\nsetter, which predictably broke. Now, the non-compilable setter uses\nthe same template logic that all other, comparable cases use. I've\ntried 'make qc' with both gcc and clang versions.\n\nBUG=\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/279883002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21228 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ff2d004f85c02a95c7077eaf5dff8d67fd3e1fab","author":{"name":"ishell@chromium.org","email":"ishell@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 12:59:24 2014"},"commit":"ff2d004f85c02a95c7077eaf5dff8d67fd3e1fab","committer":{"name":"ishell@chromium.org","email":"ishell@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 12:59:24 2014"},"message":"Presubmit checks recover:\n1) runtime/references checks temporarily disabled (56 items left)\n2) other errors fixed\n\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/277913002\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21222 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6b1f74260acd8b0a05e22b376c6854e82d079040","author":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 12:07:38 2014"},"commit":"6b1f74260acd8b0a05e22b376c6854e82d079040","committer":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 12:07:38 2014"},"message":"Prevent calls to ReturnValue::Set with pointer-valued types.\n\nCurrently, this code will compile:\n  SomePointer* p = ...;\n  ReturnValue r = ...;\n  r.Set(p);\n\nWhat happens is that ReturnValue::Set has no pointer-ish overloads, but\na bool one, and hence C++ will convert the pointer to a bool and use\nthe Set(bool) overload. In other words, the example above is equivalent\nto: r.Set(p ? true : false); Which probably isn't what the author had\nin mind. This change adds a Set(void*) overload whose body forces a\ncompile error, to prevent this from happening inadvertently. The only\nuse of this indeed turned out to be an error.\n\n(Wait for issue 364025 before submitting.)\n\nBUG=\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/240013004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21217 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f56701f30ccc24095785d7ed119a54f58f3a819e","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 09:24:32 2014"},"commit":"f56701f30ccc24095785d7ed119a54f58f3a819e","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 09:24:32 2014"},"message":"Clean up Debugger::NotifyMessageHandler.\n\nR=ulan@chromium.org\n\nReview URL: https://codereview.chromium.org/276433004\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21210 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"de21c8a245915e3313eab009ba17fa749e78f4ce","author":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 08:38:27 2014"},"commit":"de21c8a245915e3313eab009ba17fa749e78f4ce","committer":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 09 08:38:27 2014"},"message":"Simplify ConfigureHeap and change --max_new_space_size to --max_semi_space_size.\n\nBUG=\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/271843005\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@21204 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c165fbd29852b9eb457e12fb7acc5b34dc2d4647","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 05 07:43:29 2014"},"commit":"c165fbd29852b9eb457e12fb7acc5b34dc2d4647","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 05 07:43:29 2014"},"message":"Remove Message::GetScriptData declaration\n\nThis is a left-over after r20683\n\nBUG=None\nLOG=N\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/266983003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@21136 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4dd8b111714fc42ecb1159629695ffc2089316a9","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 02 19:30:54 2014"},"commit":"4dd8b111714fc42ecb1159629695ffc2089316a9","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 02 19:30:54 2014"},"message":"Introduce a microtask suppression scope and move microtask methods to isolate\n\nBUG=369503\nR=adamk@chromium.org\nLOG=y\nTEST=cctest/test-api/SetAutorunMicrotasks\n\nReview URL: https://codereview.chromium.org/263933002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@21128 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"eed0e7e7a3775f835c5b63b253573b9c5ec3ae36","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 30 14:17:40 2014"},"commit":"eed0e7e7a3775f835c5b63b253573b9c5ec3ae36","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 30 14:17:40 2014"},"message":"Trigger exception debug event for promises at the throw site.\n\nR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/260723002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@21092 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3a92c26e36640158271c3e3243e444060fe7be96","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 29 14:03:06 2014"},"commit":"3a92c26e36640158271c3e3243e444060fe7be96","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 29 14:03:06 2014"},"message":"Rename debug event enum to be consistent.\n\nR=aandrey@chromium.org\n\nReview URL: https://codereview.chromium.org/255163004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@21054 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d4b533d41b5d9f692aa19f2b2731aae04b119bb2","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 29 06:42:26 2014"},"commit":"d4b533d41b5d9f692aa19f2b2731aae04b119bb2","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 29 06:42:26 2014"},"message":"Bulk update of Google copyright headers in source files.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/259183002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@21035 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ee0cd292d764ddbe6ad2645fd696c5c4ebb067e6","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 28 13:42:03 2014"},"commit":"ee0cd292d764ddbe6ad2645fd696c5c4ebb067e6","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 28 13:42:03 2014"},"message":"Tighten OpenHandle's extra checks.\n\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/240113010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@21022 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a9655b7d37e68187fe24807400b4e04ca37d8099","author":{"name":"alph@chromium.org","email":"alph@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 25 18:53:06 2014"},"commit":"a9655b7d37e68187fe24807400b4e04ca37d8099","committer":{"name":"alph@chromium.org","email":"alph@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 25 18:53:06 2014"},"message":"Add timestamps to CPU profile samples.\n\nBUG=363976\nLOG=Y\nR=bmeurer@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/259803002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20993 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c27da0c9b21343b2fa5e76ab8cc2dfccf5572715","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 25 13:49:22 2014"},"commit":"c27da0c9b21343b2fa5e76ab8cc2dfccf5572715","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 25 13:49:22 2014"},"message":"Remove static CallCompletedCallback handlers\n\nBUG=none\nR=svenpanne@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/249313002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20985 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"28f5cf398ed8752d22f28e279f04910aadd5c677","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 25 07:03:05 2014"},"commit":"28f5cf398ed8752d22f28e279f04910aadd5c677","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 25 07:03:05 2014"},"message":"Trigger debug event on not yet caught exception in promises.\n\nR=aandrey@chromium.org, rossberg@chromium.org, yurys@chromium.org\nBUG=v8:3093\nLOG=Y\n\nReview URL: https://codereview.chromium.org/249503002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20956 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b0f91095bdbea79a08577b88ccacd711e5c154cf","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 22 12:24:28 2014"},"commit":"b0f91095bdbea79a08577b88ccacd711e5c154cf","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 22 12:24:28 2014"},"message":"Cache maps for externalized typed array objects.\n\nAfter this, the maps do not garbage-collect, and typed array\nconstructors do not deopt.\n\nR=ulan@chromium.org\nBUG=363855\nLOG=N\n\nReview URL: https://codereview.chromium.org/247343002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20887 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2c394ad00ddfac23ee8f0fd92ad05cfe00dd8cf6","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 22 07:33:20 2014"},"commit":"2c394ad00ddfac23ee8f0fd92ad05cfe00dd8cf6","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 22 07:33:20 2014"},"message":"Introduce exception object and remove some uses of MaybeObject::IsFailure().\n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/240883003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20871 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b97a2a258545bac1af67133982918904737bb5ff","author":{"name":"alph@chromium.org","email":"alph@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sat Apr 19 14:33:18 2014"},"commit":"b97a2a258545bac1af67133982918904737bb5ff","committer":{"name":"alph@chromium.org","email":"alph@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sat Apr 19 14:33:18 2014"},"message":"Switch CPU profile start/stop markers to monotonic time.\n\nLOG=N\nBUG=363976\nR=bmeurer@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/243033002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20866 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"39b5090f8e5fde9af6b88e4970458f3e5868369d","author":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 17 11:27:45 2014"},"commit":"39b5090f8e5fde9af6b88e4970458f3e5868369d","committer":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 17 11:27:45 2014"},"message":"Grow old generation slower on low-memory devices.\n\nBUG=\nR=mstarzinger@chromium.org, rmcilroy@chromium.org\n\nReview URL: https://codereview.chromium.org/236063015\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20837 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cd89f90bd1df5d3275668191881cddf16670e956","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 15 07:47:33 2014"},"commit":"cd89f90bd1df5d3275668191881cddf16670e956","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 15 07:47:33 2014"},"message":"Removed GetDefaultIsolate{Debugger,ForLocking,StackGuard}.\n\nSome first steps towards removing the default Isolate. Fixed argument\norder on the way, incl. temporary helpers.\n\nBUG=359977\nLOG=y\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/238803002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20747 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"22f7451e6c7538ed60331b4a152fcb483fe85e7e","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 14 19:34:32 2014"},"commit":"22f7451e6c7538ed60331b4a152fcb483fe85e7e","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 14 19:34:32 2014"},"message":"Export [Dis]allowJavascriptExecutionScope\n\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/236833009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20737 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9843789de0bb6b6894a0eab20a3de2953ede112d","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 14 06:55:42 2014"},"commit":"9843789de0bb6b6894a0eab20a3de2953ede112d","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 14 06:55:42 2014"},"message":"Remove ConfigureDefaults version that does not take the amount of virtual mem\n\nR=dcarney@chromium.org\nLOG=n\nBUG=none\n\nReview URL: https://codereview.chromium.org/230553003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20702 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"069d783a910705d0a51d90ca237daeb269944697","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 11 11:44:49 2014"},"commit":"069d783a910705d0a51d90ca237daeb269944697","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 11 11:44:49 2014"},"message":"Remove the PreCompile API and ScriptData.\n\nThe new compilation API (ScriptCompiler::Compile) can produce the same data, so\nthe separate precompilation phase is not needed. ScriptData is replaced by\nScriptCompiler::CachedData.\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/225753004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20683 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5633dfa6f5828e095435cb609834f26fda523c98","author":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 10 13:51:30 2014"},"commit":"5633dfa6f5828e095435cb609834f26fda523c98","committer":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 10 13:51:30 2014"},"message":"Remove V8_ALLOW_ACCESS_TO_RAW_HANDLE_CONSTRUCTOR.\n\nThe usage of this define has been obsoleted by removal of UnsafePersistent\nfrom Chromium.\n\nDepends on https://codereview.chromium.org/230613005\n\nR=dcarney@chromium.org\nBUG=276323\nLOG=N\n\nReview URL: https://codereview.chromium.org/230443004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20656 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dc4ba08d17ea156f800542f4a72756726c09414c","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 09 12:45:56 2014"},"commit":"dc4ba08d17ea156f800542f4a72756726c09414c","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 09 12:45:56 2014"},"message":"Allow the embedder to pass the virtual memory limit to v8\n\nThe getrlimit() call might be sandboxed, so it's not safe to use it.\n\nBUG=none\nR=mstarzinger@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/228923002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20615 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"902ad4a17afe10dd4bf7a1a484d83c9ca12ad12c","author":{"name":"adamk@chromium.org","email":"adamk@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 08 20:06:35 2014"},"commit":"902ad4a17afe10dd4bf7a1a484d83c9ca12ad12c","committer":{"name":"adamk@chromium.org","email":"adamk@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 08 20:06:35 2014"},"message":"Use OrderedHashTables as the backing store of JSSet and JSMap\n\nThis also deletes ObjectHashSet as it's no longer used.\n\nBUG=v8:1793\nLOG=N\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/225183009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20585 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8601ddc73ba5388f5fef5638cc3a6bbcdff71d7b","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 07 11:11:25 2014"},"commit":"8601ddc73ba5388f5fef5638cc3a6bbcdff71d7b","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 07 11:11:25 2014"},"message":"Deprecate Context::HasOutOfMemoryException.\n\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/225723004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20539 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"448486ed48169c67e21393ea3bcbff7cca6eac9d","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 07 09:41:13 2014"},"commit":"448486ed48169c67e21393ea3bcbff7cca6eac9d","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 07 09:41:13 2014"},"message":"Use distinct maps for oddballs with special handling in the type system.\n\nR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/227473002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20531 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"82279ba02230f934eb723e0d8c1be96dee7f452a","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 03 07:51:27 2014"},"commit":"82279ba02230f934eb723e0d8c1be96dee7f452a","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 03 07:51:27 2014"},"message":"Add API for adding and removing CallCompletedCallbacks to Isolate\n\nThe API currently just forwards to the global methods. A follow-up\nchange will move the callback handling to the Isolate and deprecate the\nglobal versions.\n\nBUG=\nR=dcarney@chromium.org, svenpanne@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/215893005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20463 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ebe0c79594c77fe346ec61cbe8ceb72c41653cdb","author":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 02 12:07:10 2014"},"commit":"ebe0c79594c77fe346ec61cbe8ceb72c41653cdb","committer":{"name":"vogelheim@chromium.org","email":"vogelheim@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 02 12:07:10 2014"},"message":"Remove V8_INLINE from v8-util.h.\n\n(These have been causing compilation problems on some\nplatforms. For VS, V8_INLINE turns into 'force inline',\nwhich will then cause a problem when the compiler won't\nactually inline. Search for \"C4714 warning\" for details.)\n\nBUG=\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/212693006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20432 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5838d03291520fec2e2f6c3f1ca3ffca309a7326","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 01 18:04:06 2014"},"commit":"5838d03291520fec2e2f6c3f1ca3ffca309a7326","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 01 18:04:06 2014"},"message":"Remove V8_INLINE to prevent C4714 warning under Win64.\n\nBUG=\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/217123004\n\nPatch from Daniel Vogelheim <vogelheim@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20412 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"997ce1cac7618ed0ee5236bca48991df3a68455d","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 01 12:34:08 2014"},"commit":"997ce1cac7618ed0ee5236bca48991df3a68455d","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 01 12:34:08 2014"},"message":"Remove remnants of internalized cons strings.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/216603005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20397 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"681c15eb4e541255af1d7e1dd4e634913f26565c","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 01 11:23:23 2014"},"commit":"681c15eb4e541255af1d7e1dd4e634913f26565c","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 01 11:23:23 2014"},"message":"Remove debugger_auto_break flag\n\nThe flag was introduced to support console debugger in Chrome. That debugger was replaced by DevTools long time ago and the flag is always true now.\n\nBUG=None\nLOG=Y\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/220743003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20393 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d486f52cf49611b5d8a73e2a13d16212572cb1e9","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 31 13:35:12 2014"},"commit":"d486f52cf49611b5d8a73e2a13d16212572cb1e9","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 31 13:35:12 2014"},"message":"Finalisation disclaimer\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/219403002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20355 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8b304a683215a264c3dae3f659904d05d2ebadee","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 31 10:03:20 2014"},"commit":"8b304a683215a264c3dae3f659904d05d2ebadee","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 31 10:03:20 2014"},"message":"Implement PersistentValueVector, analogous to PersistentValueMap.\n\nBUG=\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/216973002\n\nPatch from Daniel Vogelheim <vogelheim@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20341 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6730ec84331c97f0c07f05faa6cfeb0bae5cc415","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 28 09:35:50 2014"},"commit":"6730ec84331c97f0c07f05faa6cfeb0bae5cc415","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 28 09:35:50 2014"},"message":"Amend PersistentValueMap:\n- Use the surrounding map (instead of Traits::Impl) for weak callback.\n- Provide for a fast reference to a mapped value.\n- Restructure Traits to accomondate for the first point above.\n\n[Why?] As discussed, I proceeded to replace Impl with the map.\nThe problem I encountered with that version is that now the\nTraits class depends on itself: The weak-related methods require the\nmap type in their signature. But the map type includes the Traits class\nand hence the Traits class method signatures depend on the specific Traits class. That\nmakes them practically un-derivable: While you can derive a Traits class\nfrom another one, since the compiler now expects methods with a different\nsignature. To accommodate, I pulled the dispose traits into the weak traits\nclass. I also removed the Impl*/MapType* parameter from the Dispose call,\nsince no implementation seems to need it.\n\nR=dcarney@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/212893007\n\nPatch from Daniel Vogelheim <vogelheim@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20326 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f7b437d086c17cce1c1fe08e89ee589ee5cf43d6","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 28 09:24:49 2014"},"commit":"f7b437d086c17cce1c1fe08e89ee589ee5cf43d6","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 28 09:24:49 2014"},"message":"Deprecate Start/StopCpuProfiling methods\n\nBUG=v8:3213\nLOG=Y\nR=alph@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/197513005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20325 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"085dddc69d135724794f26e25fc5b37a9d60bd29","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 27 12:15:14 2014"},"commit":"085dddc69d135724794f26e25fc5b37a9d60bd29","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 27 12:15:14 2014"},"message":"Removed 'executable' bits from header.\n\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/212793011\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20298 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"76b8f25edbea72df2e58b86eeaf201cfbc86eea1","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 26 12:50:13 2014"},"commit":"76b8f25edbea72df2e58b86eeaf201cfbc86eea1","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 26 12:50:13 2014"},"message":"This implements allocating small typed arrays in heap.\n\nR=mvstanton@chromium.org, verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/150813004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20279 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"654b6a27d10e9c144027689cae88e49389a4ef0c","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 25 13:21:58 2014"},"commit":"654b6a27d10e9c144027689cae88e49389a4ef0c","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 25 13:21:58 2014"},"message":"This implements allocating small typed arrays in heap.\n\nR=mvstanton@chromium.org, verwaest@chromium.org\n\nCommitted: https://code.google.com/p/v8/source/detail?r=20240\n\nReview URL: https://codereview.chromium.org/150813004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20244 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"322a474bf2597ca749cff9e3f383a0d2b2edcf8b","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 25 12:51:49 2014"},"commit":"322a474bf2597ca749cff9e3f383a0d2b2edcf8b","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 25 12:51:49 2014"},"message":"This implements allocating small typed arrays in heap.\n\nR=mvstanton@chromium.org, verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/150813004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20240 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"04eefb86f46a43d56f19b4c63581c03eec08b2f4","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 25 12:05:33 2014"},"commit":"04eefb86f46a43d56f19b4c63581c03eec08b2f4","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 25 12:05:33 2014"},"message":"Roll ICU 239289:258359 and add support for external ICU data tables\n\nThe only binary that supports ICU data tables is d8. The location of the\ndata table file has to be passed via a command line switch:\n\n  $ out/x64.optdebug/d8 --icu-data-file=out/x64.optdebug/icudtl.dat\n\nBUG=72633,v8:3142\nR=danno@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/209323014\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20239 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5664936497434a71523d38f9db55e092e0b14cb6","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 24 19:36:59 2014"},"commit":"5664936497434a71523d38f9db55e092e0b14cb6","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 24 19:36:59 2014"},"message":"fix FunctionCallbackInfo ambiguity\n\n- when compiling tools that embed v8 with g++ FunctionCallbackInfo is currently ambigous\n- more info: https://github.com/joyent/node/issues/7337\n- original patch is here: https://codereview.appspot.com/78770045/\n\nTBR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/201573012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20217 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ff1186c834c54d5d6dff0561d864bdd85cbcca37","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 24 16:34:06 2014"},"commit":"ff1186c834c54d5d6dff0561d864bdd85cbcca37","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 24 16:34:06 2014"},"message":"Add support for per-isolate private symbols\n\nR=mstarzinger@chromium.org\nBUG=\nLOG=Y\n\nReview URL: https://codereview.chromium.org/196103004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20209 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e5f5cc951a2c4425593c0840b156d935db5a303f","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 24 12:13:58 2014"},"commit":"e5f5cc951a2c4425593c0840b156d935db5a303f","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 24 12:13:58 2014"},"message":"Fix component build some more.\n\nNot V8_EXPORTing ScriptCompiler::Source got rid of the last errors. This fixes\nthe new ones created by it. V8_INLINEing these funcs makes sense anyway.\n\nIn addition, added declared-private-and-unimplemented assignment operators\nwhich were accidentally omitted.\n\nR=dcarney@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/209873004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20188 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"62f65d8697a6516a00df20ba8819e2a7e99b921b","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 24 08:47:45 2014"},"commit":"62f65d8697a6516a00df20ba8819e2a7e99b921b","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 24 08:47:45 2014"},"message":"Remove Failure::OutOfMemory propagation and V8::IgnoreOutOfMemoryException.\n\nR=dcarney@chromium.org\nBUG=v8:3060\nLOG=Y\n\nReview URL: https://codereview.chromium.org/208263002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20179 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3ab0622b9619cd9b60f6ec875d02d581d96be41c","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 24 08:41:59 2014"},"commit":"3ab0622b9619cd9b60f6ec875d02d581d96be41c","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 24 08:41:59 2014"},"message":"add setaccessorproperty to object\n\nR=svenpanne@chromium.org\n\nLOG=N\nBUG=v8:2964\n\nReview URL: https://codereview.chromium.org/209853002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20178 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"be4c4953b7afefa3589cc399c440061663e0b068","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 21 15:24:36 2014"},"commit":"be4c4953b7afefa3589cc399c440061663e0b068","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 21 15:24:36 2014"},"message":"Tentative Windows dll build fix: Don't V8_EXPORT ScriptCompiler::Source.\n\nFor more information, see the bug. Compare to ScriptOrigin\nwhich is not exported either.\n\nBUG=v8:3228\nLOG=Y\nR=dcarney@chromium.org, jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/207703004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20170 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0f71f617998dacd8c2ed8e7fa98c3e8ece4090d8","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 20 12:26:27 2014"},"commit":"0f71f617998dacd8c2ed8e7fa98c3e8ece4090d8","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 20 12:26:27 2014"},"message":"Implement ES6 symbol registry and predefined symbols\n\nR=mstarzinger@chromium.org, arv@chromium.org\nBUG=\nLOG=Y\n\nReview URL: https://codereview.chromium.org/203243004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20118 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9cd1057c3e185047d78874845e52f142c579dbe9","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 20 09:29:48 2014"},"commit":"9cd1057c3e185047d78874845e52f142c579dbe9","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 20 09:29:48 2014"},"message":"Remove unnecessary 'explicit' attribute.\n\nR=marja@chromium.org\n\nReview URL: https://codereview.chromium.org/206183002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20104 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"99b115b120a94e6a1a8962fcd85749f0631dd539","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 19 15:35:02 2014"},"commit":"99b115b120a94e6a1a8962fcd85749f0631dd539","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 19 15:35:02 2014"},"message":"Provide default traits for PersistentValueMap\n\nRe-try of issue 201643003. This caused linker errors on Win64, since the\nlinker insists on seeing the StrongMapTrait method implementations even\nthough they are never used. This will provide default implementations\nfor them.\n\nR=dcarney@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/204343006\n\nPatch from Daniel Vogelheim <vogelheim@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20084 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"932a29a66a407d42abb670f352a903821f768fed","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 19 13:24:13 2014"},"commit":"932a29a66a407d42abb670f352a903821f768fed","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 19 13:24:13 2014"},"message":"New compilation API, part 2.\n\nThis CL makes the Parser produce the data PreParser used to produce. This\nenables us to get rid of the unnecessary preparsing phase.\n\nThe first part is here: https://codereview.chromium.org/199063003/\n\nBUG=\nR=dcarney@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/203353002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20075 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d8c3c5ef0a83ee3311c93412acf938646738e020","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 19 13:06:53 2014"},"commit":"d8c3c5ef0a83ee3311c93412acf938646738e020","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 19 13:06:53 2014"},"message":"Introduce API to trigger exception on JS execution.\n\nR=jochen@chromium.org, pmarch@chromium.org\n\nReview URL: https://codereview.chromium.org/203223013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20070 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0bc684a7945d725bb55ab445d76c02810ff6ff50","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 19 11:31:43 2014"},"commit":"0bc684a7945d725bb55ab445d76c02810ff6ff50","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 19 11:31:43 2014"},"message":"Introduce per-isolate assert scopes and API to guard JS execution.\n\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/198253004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20062 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6deb7b0db45c1710d4ad655ed9cdf5b83ffd430b","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 18 15:01:12 2014"},"commit":"6deb7b0db45c1710d4ad655ed9cdf5b83ffd430b","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 18 15:01:12 2014"},"message":"First attempt at providing default traits for PersistentValueMap.\n\nBUG=\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/201643003\n\nPatch from Daniel Vogelheim <vogelheim@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@20038 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4c20e76b4b3cc03e6661763c5985586554ab4843","author":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 17 10:38:45 2014"},"commit":"4c20e76b4b3cc03e6661763c5985586554ab4843","committer":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 17 10:38:45 2014"},"message":"heap: allow allocation in gc prologue/epilogue\n\nBUG=\nR=hpayer@chromium.org, danno@chromium.org\n\nReview URL: https://codereview.chromium.org/177243012\n\nPatch from Fedor Indutny <fedor.indutny@gmail.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19978 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0a2f4c86bd9fa97d376a012400270132b4d7051a","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 17 09:57:25 2014"},"commit":"0a2f4c86bd9fa97d376a012400270132b4d7051a","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 17 09:57:25 2014"},"message":"Split Promise API into Promise/Resolver\n\nR=svenpanne@chromium.org\nBUG=\nLOG=Y\n\nReview URL: https://codereview.chromium.org/196943014\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19972 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"386063bf9ee184ce863c8f63352c0084b75f3422","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 17 07:09:49 2014"},"commit":"386063bf9ee184ce863c8f63352c0084b75f3422","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 17 07:09:49 2014"},"message":"Fix compile error after r19955\n\nBUG=None\nTBR=svenpanne@chromium.org\nLOG=N\n\nReview URL: https://codereview.chromium.org/201573002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19956 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"587b54482ffe97986ccb10791add586f8d452467","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 17 07:02:39 2014"},"commit":"587b54482ffe97986ccb10791add586f8d452467","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 17 07:02:39 2014"},"message":"Move profiler callback interfaces from v8.h to v8-profiler.h\n\nOutputStream and ActivityControl are used only by heap profiler so I moved their definition in v8-profiler.h to not clutter v8.h\n\nDrive-by: removed OutputStream::GetOutputEncoding which is unused.\n\nBUG=None\nLOG=Y\nR=alph@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/196383015\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19955 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"45ffad09d8de3779c74b63b9b6d7ca2e42aee4fd","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 14 14:57:04 2014"},"commit":"45ffad09d8de3779c74b63b9b6d7ca2e42aee4fd","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 14 14:57:04 2014"},"message":"Move PersitentValueMap into seperate header, to avoid excessive polution\nof v8.h.\n\nR=dcarney@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/195793024\n\nPatch from Daniel Vogelheim <vogelheim@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19936 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6923d84785569a944ab3cf32daf42a05a2588ca4","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 14 10:20:33 2014"},"commit":"6923d84785569a944ab3cf32daf42a05a2588ca4","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 14 10:20:33 2014"},"message":"New Compilation API, part 1, try 2\n\n- Distinguish between context bound scripts (Script) and context unbound scripts\n(UnboundScript).\n- Add ScriptCompiler (which will later contain functions for async compilation).\n\nThis is a breaking change, in particular, Script::New no longer exists (it is\nreplaced by ScriptCompiler::CompileUnbound). Script::Compile remains as a\nbackwards-compatible shorthand for ScriptCompiler::Compile.\n\nPassing CompilerOptions with produce_data_to_cache = true doesn't do anything\nyet; the only way to generate the data to cache is the old preparsing API. (To\nbe fixed in the next version.)\n\nThis is a fixed version of https://codereview.chromium.org/186723005/\n\nBUG=\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/199063003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19925 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0a61b7c996f94a7cafe7a538aaa6a65b636522ad","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 14 09:26:31 2014"},"commit":"0a61b7c996f94a7cafe7a538aaa6a65b636522ad","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 14 09:26:31 2014"},"message":"StopCpuProfiling should return non-const CpuProfile\n\nStopCpuProfiling is replaced with StopProfiling which returns non-const CpuProfile which allows to call CpuProfile::Delete on it without const_cast. Also replaced StartCpuProfiling with StartProfiling to have symmetric names for start/stop actions.\n\nBUG=v8:3213\nLOG=Y\nR=alph@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/197873015\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19918 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"52c0098f0d0cd78fed1e4580bdbdc70b701bbcce","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 13 08:54:11 2014"},"commit":"52c0098f0d0cd78fed1e4580bdbdc70b701bbcce","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 13 08:54:11 2014"},"message":"New Compilation API, part 1\n\n- Distinguish between context bound scripts (Script) and context unbound scripts\n(UnboundScript).\n- Add ScriptCompiler (which will later contain functions for async compilation).\n\nThis is a breaking change, in particular, Script::New no longer exists (it is\nreplaced by ScriptCompiler::CompileUnbound). Script::Compile remains as a\nbackwards-compatible shorthand for ScriptCompiler::Compile.\n\nPassing CompilerOptions with produce_data_to_cache = true doesn't do anything\nyet; the only way to generate the data to cache is the old preparsing API. (To\nbe fixed in the next version.)\n\nBUG=\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/186723005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19881 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"75ad285860cfc6a07a8904c954d523aaf66bc75b","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 13 07:10:59 2014"},"commit":"75ad285860cfc6a07a8904c954d523aaf66bc75b","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 13 07:10:59 2014"},"message":"Implement PersistentValueMap, a map that stores UniquePersistent values.\nThis is preparatory work to get rid of UnsafePersistent in blink.\n\nThe previous version had to be reverted due to timeouts in win32/Debug: https://codereview.chromium.org/197173002/\n\nThe timeouts happened because the STL version on that platform contains sanity checking code which opens a 'debug window' in the GUI, patiently waiting for the user to click ok/cancel/somethirdoption. It turns out, the cause for that debug window was totally valid and the test had a use-after-free issue.\n\nThe 1st patch set is the code as before. The 2nd patch set contains the fix.\n\nRelated blink changes are here: https://codereview.chromium.org/180363004/\n\nThis patch is largely based on https://codereview.chromium.org/175503003/, with some methods added to support the blink change mentioned above.\n\nBUG=\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/197263002\n\nPatch from Daniel Vogelheim <vogelheim@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19873 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"25468478e3e06af59b7ee42ed176e36e6387442f","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 12 09:11:25 2014"},"commit":"25468478e3e06af59b7ee42ed176e36e6387442f","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 12 09:11:25 2014"},"message":"Implement PersistentValueMap, a map that stores UniquePersistent values.\nThis is preparatory work to get rid of UnsafePersistent in blink.\n\nRelated blink changes are here: https://codereview.chromium.org/180363004/\n\nThis patch is largely based on https://codereview.chromium.org/175503003/, with some methods added to support the blink change mentioned above.\n\nBUG=\nR=dcarney@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/189463019\n\nPatch from Daniel Vogelheim <vogelheim@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19833 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"94b5180db08a48cc45ca6e33cdd0f9da686da484","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 11 16:17:20 2014"},"commit":"94b5180db08a48cc45ca6e33cdd0f9da686da484","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 11 16:17:20 2014"},"message":"API support for promises\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/194663003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19811 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d3a16a2e2a4db65606a23d54ddb656fc864ca583","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 10 08:56:48 2014"},"commit":"d3a16a2e2a4db65606a23d54ddb656fc864ca583","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 10 08:56:48 2014"},"message":"Add support for allowing an embedder to get the V8 profile timer event logs.\n\nContributed by fmeawad@chromium.org\n\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/186163002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19745 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2c74163f598bba140bb46f7fdaac98f087f9c7dd","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 10 08:20:56 2014"},"commit":"2c74163f598bba140bb46f7fdaac98f087f9c7dd","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 10 08:20:56 2014"},"message":"initialize v8::Private with v8::String\n\nR=rossberg@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/179983002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19741 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7d8cda6ea0ee0502f7bfc4d08b36ddd91ab8cd80","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 10 08:18:57 2014"},"commit":"7d8cda6ea0ee0502f7bfc4d08b36ddd91ab8cd80","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 10 08:18:57 2014"},"message":"Allow Object::InternalFieldCount and Object::GetAlignedPointerFromInternalField to be called from Persistent classes\n\nR=svenpanne@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/177343002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19740 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1d3652ebe60926034d05e1a822a39df2070ac5c5","author":{"name":"mvstanton@chromium.org","email":"mvstanton@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 07 09:10:18 2014"},"commit":"1d3652ebe60926034d05e1a822a39df2070ac5c5","committer":{"name":"mvstanton@chromium.org","email":"mvstanton@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 07 09:10:18 2014"},"message":"Symbols for type cells. We can make more efficient code to check against type cells in the future if we use symbols, guaranteed not to conflict with user code. Currently, the \"symbols\" are the hole and undefined. Undefined may come in from the outside.\n\nBUG=\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/181283003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19706 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bd1fb97d5c9b57b8d5e57242571f29bdc744ea11","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 07 08:43:54 2014"},"commit":"bd1fb97d5c9b57b8d5e57242571f29bdc744ea11","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 07 08:43:54 2014"},"message":"Remove Script::SetData and the script_data parameter from Script::(Compile|New).\n\nThis feature makes it possible to associate data with a script and get it back\nwhen the script is compiled or when an event is handled. It was historically\nused by Chromium Dev Tools, but not any more. It is not used by node.js.\n\nNote: this has nothing to do with the preparse data, despite the confusing name.\nThe preparse data is passed as ScriptData*.\n\nNote 2: This is the same as r19616 ( https://codereview.chromium.org/184403002/ )\nwith a unused variable fix in bootstrapper.cc.\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/185533014\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19702 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1aeaeb2b903487914eac78cf084d2d411edd14b8","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 04 12:43:05 2014"},"commit":"1aeaeb2b903487914eac78cf084d2d411edd14b8","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 04 12:43:05 2014"},"message":"Allow objects with \"\" properties to stay fast.\n\nR=danno@chromium.org\n\nReview URL: https://codereview.chromium.org/184453003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19648 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"55750b1c62c30cb08184038aa50a21c2f5a31033","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Feb 28 13:54:14 2014"},"commit":"55750b1c62c30cb08184038aa50a21c2f5a31033","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Feb 28 13:54:14 2014"},"message":"Remove Script::SetData and the script_data parameter from Script::(Compile|New).\n\nThis feature makes it possible to associate data with a script and get it back\nwhen the script is compiled or when an event is handled. It was historically\nused by Chromium Dev Tools, but not any more. It is not used by node.js.\n\nNote: this has nothing to do with the preparse data, despite the confusing name.\nThe preparse data is passed as ScriptData*.\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/184403002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19616 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1bace575f03b451734f2e536c2b3b04a85bb75b5","author":{"name":"alph@chromium.org","email":"alph@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Feb 18 13:22:07 2014"},"commit":"1bace575f03b451734f2e536c2b3b04a85bb75b5","committer":{"name":"alph@chromium.org","email":"alph@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Feb 18 13:22:07 2014"},"message":"Allow self_size to be larger than 2GB in heap snapshots.\n\nLOG=N\nR=dslomov@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/166383002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19445 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7f6dc1ff9b6f4325475e69e8980aa164c19ba6ff","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 17 10:41:25 2014"},"commit":"7f6dc1ff9b6f4325475e69e8980aa164c19ba6ff","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 17 10:41:25 2014"},"message":"Do not visit smis in the root list during GC.\n\nR=mstarzinger@chromium.org\nBUG=328804\nLOG=N\n\nReview URL: https://codereview.chromium.org/166023003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19400 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6b5a4cdef28826e9d9dd1fd9469515f4721e2f5f","author":{"name":"rafaelw@chromium.org","email":"rafaelw@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 12 22:04:19 2014"},"commit":"6b5a4cdef28826e9d9dd1fd9469515f4721e2f5f","committer":{"name":"rafaelw@chromium.org","email":"rafaelw@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 12 22:04:19 2014"},"message":"V8 Microtask Queue & API\n\nThis patch generalizes Object.observe callbacks and promise resolution into a FIFO queue called a \"microtask queue\".\n\nIt also exposes new V8 API which exposes the microtask queue to the embedder. In particular, it allows the embedder to\n\n-schedule a microtask (EnqueueExternalMicrotask)\n-run the microtask queue (RunMicrotasks)\n-control whether the microtask queue is run automatically within V8 when the last script exits (SetAutorunMicrotasks).\n\nR=dcarney@chromium.org, rossberg@chromium.org, dcarney, rossberg, svenpanne\nBUG=\n\nReview URL: https://codereview.chromium.org/154283002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19344 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3f86546bb45d839761f3f5d6b1486f935de795cd","author":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Feb 07 09:54:52 2014"},"commit":"3f86546bb45d839761f3f5d6b1486f935de795cd","committer":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Feb 07 09:54:52 2014"},"message":"The allocation sites scratchpad becomes a heap data structure.\n\nBUG=\nR=mstarzinger@chromium.org, mvstanton@chromium.org\n\nReview URL: https://codereview.chromium.org/143153008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@19189 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"99ce5a24845d20c7404fa1249777de38e2c69307","author":{"name":"jarin@chromium.org","email":"jarin@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 30 10:33:53 2014"},"commit":"99ce5a24845d20c7404fa1249777de38e2c69307","committer":{"name":"jarin@chromium.org","email":"jarin@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 30 10:33:53 2014"},"message":"The current\nversion is passing all the existing test + a bunch of new tests\n(packaged in the change list, too).\n\nThe patch extends the SlotRef object to describe captured and duplicated\nobjects. Since the SlotRefs are not independent of each other anymore,\nthere is a new SlotRefValueBuilder class that stores the SlotRefs and\nlater materializes the objects from the SlotRefs.\n\nNote that unlike the previous implementation of SlotRefs, we now build\nthe SlotRef entries for the entire frame, not just the particular\nfunction.  This is because duplicate objects might refer to previous\ncaptured objects (that might live inside other inlined function's part\nof the frame).\n\nWe also need to store the materialized objects between other potential\ninvocations of the same arguments object so that we materialize each\ncaptured object at most once.  The materialized objects of frames live\nin the new MaterielizedObjectStore object (contained in Isolate),\nindexed by the frame's FP address.  Each argument materialization (and\ndeoptimization) tries to lookup its captured objects in the store before\nbuilding new ones.  Deoptimization also removes the materialized objects\nfrom the store. We also schedule a lazy deopt to be sure that we always\nget rid of the materialized objects and that the optmized function\nadopts the materialized objects (instead of happily computing with its\ncaptured representations).\n\nConcerns:\n\n- Is the FP address the right key for a frame? (Note that deoptimizer's\nrepresentation of frame is different from the argument object\nmaterializer's one - it is not easy to find common ground.)\n\n- Performance is suboptimal in several places, but a quick local run of\nbenchmarks does not seem to show a perf hit. Examples of possible\nimprovements: smarter generation of SlotRefs (build other functions'\nSlotRefs only for captured objects and only if necessary), smarter\nlookup of stored materialized objects.\n\n- Ideally, we would like to share the code for argument materialization\nwith deoptimizer's materializer.  However, the supporting data structures\n(mainly the frame descriptor) are quite different in each case, so it\nlooks more like a separate project.\n\nThanks for any feedback.\n\nR=danno@chromium.org, mstarzinger@chromium.org\nLOG=N\nBUG=\n\nCommitted: https://code.google.com/p/v8/source/detail?r=18918\n\nReview URL: https://codereview.chromium.org/103243005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18936 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"868ad01ecb6cce36f129102fc7fa510e1792fdc6","author":{"name":"jarin@chromium.org","email":"jarin@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 29 15:14:15 2014"},"commit":"868ad01ecb6cce36f129102fc7fa510e1792fdc6","committer":{"name":"jarin@chromium.org","email":"jarin@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 29 15:14:15 2014"},"message":"This is a preview of the captured arguments object materialization,\nmostly to make sure that it is going in the right direction. The current\nversion is passing all the existing test + a bunch of new tests\n(packaged in the change list, too).\n\nThe patch extends the SlotRef object to describe captured and duplicated\nobjects. Since the SlotRefs are not independent of each other anymore,\nthere is a new SlotRefValueBuilder class that stores the SlotRefs and\nlater materializes the objects from the SlotRefs.\n\nNote that unlike the previous implementation of SlotRefs, we now build\nthe SlotRef entries for the entire frame, not just the particular\nfunction.  This is because duplicate objects might refer to previous\ncaptured objects (that might live inside other inlined function's part\nof the frame).\n\nWe also need to store the materialized objects between other potential\ninvocations of the same arguments object so that we materialize each\ncaptured object at most once.  The materialized objects of frames live\nin the new MaterielizedObjectStore object (contained in Isolate),\nindexed by the frame's FP address.  Each argument materialization (and\ndeoptimization) tries to lookup its captured objects in the store before\nbuilding new ones.  Deoptimization also removes the materialized objects\nfrom the store. We also schedule a lazy deopt to be sure that we always\nget rid of the materialized objects and that the optmized function\nadopts the materialized objects (instead of happily computing with its\ncaptured representations).\n\nConcerns:\n\n- Is there a simpler/more correct way to store the already-materialized\nobjects? (At the moment there is a custom root reference to JSArray\ncontaining frames' FixedArrays with their captured objects.)\n\n- Is the FP address the right key for a frame? (Note that deoptimizer's\nrepresentation of frame is different from the argument object\nmaterializer's one - it is not easy to find common ground.)\n\n- Performance is suboptimal in several places, but a quick local run of\nbenchmarks does not seem to show a perf hit. Examples of possible\nimprovements: smarter generation of SlotRefs (build other functions'\nSlotRefs only for captured objects and only if necessary), smarter\nlookup of stored materialized objects.\n\n- Ideally, we would like to share the code for argument materialization\nwith deoptimizer's materializer.  However, the supporting data structures\n(mainly the frame descriptor) are quite different in each case, so it\nlooks more like a separate project.\n\nThanks for any feedback.\n\nR=mstarzinger@chromium.org, danno@chromium.org\nLOG=N\nBUG=\n\nReview URL: https://codereview.chromium.org/103243005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18918 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"215da5eca3c1ec7901b6ed43d85e52c30685648b","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 28 19:11:13 2014"},"commit":"215da5eca3c1ec7901b6ed43d85e52c30685648b","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 28 19:11:13 2014"},"message":"v8config.h: introduce V8_LIBC_MSVCRT\n\nUse this for detecting MSVCRT library features instead of\nV8_CC_MSVC.\n\nOne use case for this is when compiling with Clang together with the\nMSVC library. In that case, V8_CC_MSVC will be false, but V8_LIBC_MSVCRT\nwill be true.\n\nBUG=82385\nLOG=n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/145593003\n\nPatch from Hans Wennborg <hans@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18888 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1a67b7f86a5d262fa74eba8f6d8937b2d3c1f844","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 24 16:01:15 2014"},"commit":"1a67b7f86a5d262fa74eba8f6d8937b2d3c1f844","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 24 16:01:15 2014"},"message":"External Array renaming and boilerplate scrapping\n\nReplaced symbolic names with correct JS name (byte -> int8, unsigned int -> uint32 etc).\nUsing macros to scrap the boilerplate\nBUG=\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/145133013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18835 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f93f8ded96365c29a60bc79175286e9bbe799fcf","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 20 09:52:54 2014"},"commit":"f93f8ded96365c29a60bc79175286e9bbe799fcf","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 20 09:52:54 2014"},"message":"String:WriteUtf8: Add REPLACE_INVALID_UTF8 option\n\nThis patch makes String::WriteUtf8 replace invalid code points (i.e. unmatched\nsurrogates) with the unicode replacement character when REPLACE_INVALID_UTF8 is\nset.  This is done to avoid creating invalid UTF-8 output which can lead to\ncompatibility issues with software requiring valid UTF-8 inputs (e.g. the\nWebSocket protocol requires valid UTF-8 and terminates connections when invalid\nUTF-8 is encountered).\n\nR=dcarney@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/121173009\n\nPatch from Felix Geisendörfer <haimuiba@gmail.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18683 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e8f935a630546592ba640646bed5d12f3833e567","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 17 10:52:00 2014"},"commit":"e8f935a630546592ba640646bed5d12f3833e567","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 17 10:52:00 2014"},"message":"Various extension-related cleanup and simplifications.\n\nRemoves the embarrassing \"static\"s, shuffles some code around, doing various cleanups on the way.\n\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/130213009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18659 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5da41be7b82691aff1ee3d66dbdec5add67cc241","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 16 17:08:45 2014"},"commit":"5da41be7b82691aff1ee3d66dbdec5add67cc241","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 16 17:08:45 2014"},"message":"Implement in-heap backing store for typed arrays.\n\nThis adds a fixed array sub-type that will represent a backing store for\ntyped arrays allocated with TypedArray(length) construtor.\n\nR=mvstanton@chromium.org, verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/101413006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18651 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"97040ce67b42b35ee6dea0ac48d9a54c39b5bc6e","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 16 15:01:27 2014"},"commit":"97040ce67b42b35ee6dea0ac48d9a54c39b5bc6e","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 16 15:01:27 2014"},"message":"Implement in-heap backing store for typed arrays.\n\nThis adds a fixed array sub-type that will represent a backing store for\ntyped arrays allocated with TypedArray(length) construtor.\n\nR=mvstanton@chromium.org, verwaest@chromium.org\n\nCommitted: https://code.google.com/p/v8/source/detail?r=18646\n\nReview URL: https://codereview.chromium.org/101413006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18649 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0c960c2e96a2e1c780ca58ad31dbc9fc2628ae5f","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 16 14:18:37 2014"},"commit":"0c960c2e96a2e1c780ca58ad31dbc9fc2628ae5f","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 16 14:18:37 2014"},"message":"Implement in-heap backing store for typed arrays.\n\nThis adds a fixed array sub-type that will represent a backing store for\ntyped arrays allocated with TypedArray(length) construtor.\n\nR=mvstanton@chromium.org, verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/101413006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18646 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b25bb230cd12cfbc92b1f19ac25991c143a53672","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 16 08:17:40 2014"},"commit":"b25bb230cd12cfbc92b1f19ac25991c143a53672","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 16 08:17:40 2014"},"message":"Removed apiutils.h and related cleanup.\n\nExtensionConfiguration is just a simple container for extension names\n(in a perfect world we would use vector<string> and range-based for\nloops), and HandleScopeData was in the totally wrong place. Some\nadditional cleanup on the way, e.g. using the null pattern behind our\nexternal API.\n\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/139393002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18632 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2638dca48f535bfb6991a924370865c4f5507d93","author":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 15 11:42:19 2014"},"commit":"2638dca48f535bfb6991a924370865c4f5507d93","committer":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 15 11:42:19 2014"},"message":"Make cells pointing to JSObjects weak in optimized code.\n\nThis is done similar to weak embedded objects in optimized code (r17102). The\nreference from optimized code to a cell is treated weakly in marking visitors\nif the cell points to a JSObject. After marking we iterate over all cells\nembedded in optimized code. If a cell is not marked but its value is marked,\nthen we revive the cell by marking it. Otherwise, the cell value is dead, so\nwe mark the code for deoptimization.\n\nBUG=v8:2073\nTEST=cctest/test-heap/CellsInOptimizedCodeAreWeak\nLOG=Y\nR=hpayer@chromium.org, mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/117483002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18616 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"38cde8572914dbf8788a3e5dbdda0efd2056134e","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 13 12:03:31 2014"},"commit":"38cde8572914dbf8788a3e5dbdda0efd2056134e","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 13 12:03:31 2014"},"message":"Introduce an API mirroring the gc extension\n\nBUG=none\nR=mstarzinger@chromium.org, svenpanne@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/131443008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18563 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1d4c0532d7833285da8d970e88e21e458690d6f3","author":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 13 10:57:49 2014"},"commit":"1d4c0532d7833285da8d970e88e21e458690d6f3","committer":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 13 10:57:49 2014"},"message":"Introduce kGCCallbackForced flag.\n\nThis flag will be passed to GC prologue/epilogue callbacks if GC was forced through GC extension.\n\nBUG=\nR=dcarney@chromium.org, mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/104023011\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18558 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"21f1ca58509769afead8d78119ac0b61fcd5e063","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 13 10:51:40 2014"},"commit":"21f1ca58509769afead8d78119ac0b61fcd5e063","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 13 10:51:40 2014"},"message":"Remove ScriptData::PreCompile which takes const char*.\n\nThe version taking a Handle should be used instead.\n\nIt's not used by Chromium and complicates the ongoing lexer work.\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/136413003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18556 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8f7720aa25fafde77ee372d0cdbd9f8c1e2d1fab","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 09 10:37:15 2014"},"commit":"8f7720aa25fafde77ee372d0cdbd9f8c1e2d1fab","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 09 10:37:15 2014"},"message":"Add Isolate parameter to HandleScope::NumberOfHandles.\n\nLOG=y\nBUG=324225\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/128233002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18510 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c2514db4582a2a17a90667f62348d9da8348896f","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 08 12:22:42 2014"},"commit":"c2514db4582a2a17a90667f62348d9da8348896f","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 08 12:22:42 2014"},"message":"Removed v8::AssertNoGCScope.\n\nEverything was private, so no object could ever be constructed, which\nimplies that nobody uses it. Furthermore, it contained a TODO and was\noverly complicated, an #ifdef-less simple pimpl idiom would have been\nenough.\n\nLOG=y\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/128113002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18493 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"80c2c4080de0663996a1063733d122cd9978a3d4","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 07 13:28:33 2014"},"commit":"80c2c4080de0663996a1063733d122cd9978a3d4","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 07 13:28:33 2014"},"message":"Make -Wshadow happy.\n\nLOG=y\nBUG=v8:3073\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/119983003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18463 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0899da3697fe651b6c997dc51d217a3eca95b112","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 02 07:04:05 2014"},"commit":"0899da3697fe651b6c997dc51d217a3eca95b112","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 02 07:04:05 2014"},"message":"Add support for the QNX operating system.\n\nThis patch contains contributions from the following members of the\nBlackBerry Web Technologies team:\n\nEli Fidler <efidler@blackberry.com>\nKonrad Piascik <kpiascik@blackberry.com>\nJeff Rogers <jrogers@blackberry.com>\nCosmin Truta <ctruta@blackberry.com>\nPeter Wang <peter.wang@torchmobile.com.cn>\nXiaobo Wang <xiaobwang@blackberry.com>\nMing Xie <mxie@blackberry.com>\nLeo Yang <leoyang@blackberry.com>\n\nR=bmeurer@chromium.org, jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/61153009\n\nPatch from Cosmin Truta <ctruta@blackberry.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18430 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"78ab4379d3f44a7bd93dc678f2cb120d823395a3","author":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 30 11:23:59 2013"},"commit":"78ab4379d3f44a7bd93dc678f2cb120d823395a3","committer":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 30 11:23:59 2013"},"message":"Out-of-line constant pool on Arm: Stage 3 - Set Constant Pool Pointer on Function Entry\n\nThird stage of implementing an out-of-line constant pool for Arm.  This CL adds\na ConstantPool field to Code objects and initializes the pp register on\nfunction entry, and saves the pp register on the stack frame. The ConstantPool\nobject is always empty and is unused currently.\n\nR=ulan@chromium.org\n\nReview URL: https://codereview.chromium.org/88043002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18425 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"18e865d4fa54c44454cf526cc6a290003aaf8667","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 23 09:33:16 2013"},"commit":"18e865d4fa54c44454cf526cc6a290003aaf8667","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 23 09:33:16 2013"},"message":"Delete v8::HeapGraphNode::GetHeapValue\n\nBUG=chromium:324769\nLOG=N\nR=hpayer@chromium.org, mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/98633009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18404 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"61c1692c9bfb262fc6aef0133dc60df707234ee9","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 23 08:04:54 2013"},"commit":"61c1692c9bfb262fc6aef0133dc60df707234ee9","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 23 08:04:54 2013"},"message":"This adds functionality for getting original functions from bound functions.\n\nIt's of much use when information about function calls is shown on the Events timeline in DevTools: instead of referencing to v8natives.js where bound functions are created, we'll be able to show real function data (name, resource, script line and column numbers) retrieved from original functions.\n\nBUG=None\nLOG=Y\nR=yangguo@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/106763002\n\nPatch from Alexandra Mikhaylova <amikhaylova@google.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18401 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d54a4e6d4041c4df746ffe5fb4fbba74a47ebb67","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Dec 20 10:49:27 2013"},"commit":"d54a4e6d4041c4df746ffe5fb4fbba74a47ebb67","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Dec 20 10:49:27 2013"},"message":"More API cleanup.\n\n* Removed String::Empty, Number::New, Integer::New, Integer::NewFromUnsigned, FunctionTemplate::New and Object::New without Isolate* parameter.\n\n* Removed Integer::New and Integer::NewUnsigned with weird argument order.\n\nChrome CLs matching this change are prepared, BTW.\n\nLOG=y\nBUG=324225\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/118523003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18383 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"64d2dfa2324ad936364673b75d6e68e7d16df3d0","author":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 18 18:38:35 2013"},"commit":"64d2dfa2324ad936364673b75d6e68e7d16df3d0","committer":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 18 18:38:35 2013"},"message":"Introduce API to temporarily interrupt long running JavaScript code.\n\nIt is different from termination API as interrupted JavaScript will continue to execute normally when registered InterruptCallback returns.\n\n  /**\n   * Request V8 to interrupt long running JavaScript code and invoke\n   * the given |callback| passing the given |data| to it. After |callback|\n   * returns control will be returned to the JavaScript code.\n   * At any given moment V8 can remember only a single callback for the very\n   * last interrupt request.\n   * Can be called from another thread without acquiring a |Locker|.\n   * Registered |callback| must not reenter interrupted Isolate.\n   */\n  void RequestInterrupt(InterruptCallback callback, void* data);\n\n  /**\n   * Clear interrupt request created by |RequestInterrupt|.\n   * Can be called from another thread without acquiring a |Locker|.\n   */\n  void ClearInterrupt();\n\nFix Hydrogen SCE pass to avoid eliminating stack guards too aggressively. Only normal JavaScript functions are guaranteed to have stack guard in the prologue. If function is a builtin or has a custom call IC it will lack one.\n\nBUG=\nR=danno@chromium.org, dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/102063004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18363 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"19b6b7ada8a3310e3061af113de3e3ac7eed6084","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 18 08:59:09 2013"},"commit":"19b6b7ada8a3310e3061af113de3e3ac7eed6084","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 18 08:59:09 2013"},"message":"Delete several deprecated methods on v8::CpuProfiler\n\nAll methods for accessing collected profiles by index are deprecated. The indexed storage may well be implemented by the embedder should he need it. CpuProfiler's responsibility is just to create CpuProfile object that contains all collected data and whose lifetime can be managed by the embedder.\n\nBUG=chromium:327298\nLOG=Y\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/117353002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18337 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8b542494c3bdd990fc4715ed96b0912b5adace71","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 18 08:17:03 2013"},"commit":"8b542494c3bdd990fc4715ed96b0912b5adace71","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 18 08:17:03 2013"},"message":"Add methods for finding object by its snapshot id and id for an object\n\nObject<-->id mapping doesn't depend on a particular snapshot, actually same object may appear in several heap snapshots. The API for converting between id and heap object should be provided by HeapProfiler itself. There is already GetObjectId method which I extended with FindObjectById/ClearObjectIds. As the next step I'm going to deprecate and remove HeapGraphNode::GetHeapValue.\n\nBUG=chromium:324769\nLOG=N\nR=alph@chromium.org, hpayer@chromium.org, mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/93843004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18334 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"402139f686d495d82d7bbd246068fabe46d3119d","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 18 08:09:37 2013"},"commit":"402139f686d495d82d7bbd246068fabe46d3119d","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 18 08:09:37 2013"},"message":"Remove all stuff marked as V8_DEPRECATED.\n\nR=jochen@chromium.org, mstarzinger@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/99193002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18333 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"19f29c380ee96a345142013e2be0e52d3ff48720","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 11 14:39:18 2013"},"commit":"19f29c380ee96a345142013e2be0e52d3ff48720","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 11 14:39:18 2013"},"message":"Do not stop profiling if all finished profiles were deleted\n\nDeleting finished profiles shouldn't interrupt profile recording.\n\nBUG=chromium:327298\nLOG=N\nR=alph@chromium.org, jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/103893003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18302 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d5787278bce7d551a585da4b4006bf02b4c0eacf","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 11 13:51:48 2013"},"commit":"d5787278bce7d551a585da4b4006bf02b4c0eacf","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 11 13:51:48 2013"},"message":"Fixed global object leak caused by overwriting the global receiver (the global proxy) in the global object with the global object itself.\n\nThis CL additionally removes the API function to reattach a global proxy to a\nglobal object.\n\nBUG=324812\nLOG=y\nR=dcarney@chromium.org, titzer@chromium.org\n\nReview URL: https://chromiumcodereview.appspot.com/101733002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18299 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e87fe7b71f5c25f09bd8d6d3a14b76822ea4b03b","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 02 14:27:24 2013"},"commit":"e87fe7b71f5c25f09bd8d6d3a14b76822ea4b03b","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 02 14:27:24 2013"},"message":"Simplify allocation tracker API\n\nDeprecated separate methods for starting/stopping allocation tracking in favor of a bool param to Start/StopTrackingHeapObjects.\n\nBUG=None\nLOG=N\nR=loislo@chromium.org, mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/96933003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18197 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"52649593744241b20c04a9e4d8581ca88ecd7dbe","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 28 14:30:20 2013"},"commit":"52649593744241b20c04a9e4d8581ca88ecd7dbe","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 28 14:30:20 2013"},"message":"Undeprecate Persistent::ClearAndLeak\n\nWe depend on this in blink, and won't be able to replace it in\nthe near future\n\nR=svenpanne@google.com, svenpanne@chromium.org\nBUG=none\nLOG=n\n\nReview URL: https://codereview.chromium.org/95003004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18128 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c1da40c08dbd746287fa150c172daf03d06793dc","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 28 08:21:26 2013"},"commit":"c1da40c08dbd746287fa150c172daf03d06793dc","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 28 08:21:26 2013"},"message":"Mark deprecated APIs with relatively little use as deprecated\n\nBUG=none\nR=svenpanne@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/91503002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18114 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"89fb55c463851e4d9ef8a07bb9e0373c68bd872f","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 27 09:30:49 2013"},"commit":"89fb55c463851e4d9ef8a07bb9e0373c68bd872f","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 27 09:30:49 2013"},"message":"Split Persistent into Persistent and UniquePersistent\n\nR=svenpanne@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/88013002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18093 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4765788a115cb8878f06fbab51e5c3aaf6046e26","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 26 09:45:17 2013"},"commit":"4765788a115cb8878f06fbab51e5c3aaf6046e26","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 26 09:45:17 2013"},"message":"Add Isolate* parameter to static API methods that don't take one.\n\nWe cannot yet deprecate the versions that don't take one, because\nthere's too much test code in v8 using them. To keep this CL small and\nmanagable, I'll first introduce the new APIs.\n\nBUG=none\nR=dcarney@chromium.org, svenpanne@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/84833006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18068 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5e177bd658362be737f9b59e9b5a3eac77522d6a","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 25 14:30:59 2013"},"commit":"5e177bd658362be737f9b59e9b5a3eac77522d6a","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 25 14:30:59 2013"},"message":"Add versions with an Isolate parameter for inlined API methods that need one\n\nWe shouldn't have APIs that call Isolate::GetCurrent() internally. This\nchange removes all remaining occurrences of inlined methods in v8.h\n\nBUG=none\nR=svenpanne@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/85693002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18058 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"24814616b907dc21ac59d439faad47fd3d9d5976","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Nov 22 14:23:32 2013"},"commit":"24814616b907dc21ac59d439faad47fd3d9d5976","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Nov 22 14:23:32 2013"},"message":"Deprecate old versions of Isolate::SetData and GetData\n\nBUG=none\nR=svenpanne@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/83363003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18021 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4452341b55913f6532f1ab9e5c4aeb3f85ec34c8","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Nov 22 10:57:55 2013"},"commit":"4452341b55913f6532f1ab9e5c4aeb3f85ec34c8","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Nov 22 10:57:55 2013"},"message":"Clean up incorrect V8_DEPRECATION macro usage and enable deprecatitions\n\nWe turn the default for standalone builds on, however, I added overrides\nto all targets to turn it locally off again. In follow up CLs, I'll\nclean up one target at a time.\n\nBUG=v8:3023\nR=dcarney@chromium.org, machenbach@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/82763004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18002 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"662dd448750b767e89761f3bf28f29e24b17179e","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 21 13:47:37 2013"},"commit":"662dd448750b767e89761f3bf28f29e24b17179e","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 21 13:47:37 2013"},"message":"Remove preemption thread and API\n\nBUG=v8:3004\nR=svenpanne@chromium.org, yangguo@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/62283010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17967 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9318e1cc4af0f80fe557b044e1fb8de91b264a55","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 21 08:06:02 2013"},"commit":"9318e1cc4af0f80fe557b044e1fb8de91b264a55","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 21 08:06:02 2013"},"message":"API: Change AdjustAmountOfExternalAllocatedMemory calls to use int64_t instead\nof intptr_t\n\nThis prevents an overflow in FreeArrayBuffer, which in turn caused needless GCs\nas well as crashes on isolate teardown.\n\nLOG=Y\nR=ulan@chromium.org\n\nReview URL: https://codereview.chromium.org/70233010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17944 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"782040d27552abc2de993ae4ff032d7ea83d49cb","author":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 20 11:21:51 2013"},"commit":"782040d27552abc2de993ae4ff032d7ea83d49cb","committer":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 20 11:21:51 2013"},"message":"Remove deprecated v8::SetResourceConstraints without Isolate parameter\n\nLOG=Y\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/62193003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17910 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"57dc3139cb0bd94daeb6f9dcb357ec87f0bd40a3","author":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 20 11:20:01 2013"},"commit":"57dc3139cb0bd94daeb6f9dcb357ec87f0bd40a3","committer":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 20 11:20:01 2013"},"message":"Remove deprecated v8-defaults.h and defaults.cc.\n\nBUG=312241\nLOG=Y\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/59823008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17909 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4515fb5c4f4f00400d533c75bd4d483b7b9296e9","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 20 10:59:13 2013"},"commit":"4515fb5c4f4f00400d533c75bd4d483b7b9296e9","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 20 10:59:13 2013"},"message":"Make it possible to add more than one piece of embedder data to isolates\n\nThis will allow for using gin and blink bindings in the same process\n\nBUG=317398\nR=svenpanne@chromium.org, dcarney@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/77913003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17907 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"611e1185be25a4f9002a4f5815269af6541a5fc7","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 19 14:00:45 2013"},"commit":"611e1185be25a4f9002a4f5815269af6541a5fc7","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 19 14:00:45 2013"},"message":"Fix typo in header guard of v8-platform.h\n\nTBR=svenpanne@chromium.org\nBUG=none\nLOG=n\n\nReview URL: https://codereview.chromium.org/76313002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17879 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c24ce076e9fb1eda4f77e724d7906ee550bf32ce","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 19 13:44:36 2013"},"commit":"c24ce076e9fb1eda4f77e724d7906ee550bf32ce","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 19 13:44:36 2013"},"message":"Introduce a v8::Platform class that bundles embedder callbacks\n\nAlso provide a default implementation to use in cctests.\n\nFor now, there are just two thread releated callbacks. In future CLs, I will\nmove callbacks registered e.g. via V8::SetFooCallback over.\n\nBUG=v8:3015\nR=svenpanne@chromium.org, danno@chromium.org\nLOG=no\n\nReview URL: https://codereview.chromium.org/75283002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17877 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"34b534c9060497ddb734a8cd55bf97cd9daec5ef","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 19 13:08:37 2013"},"commit":"34b534c9060497ddb734a8cd55bf97cd9daec5ef","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 19 13:08:37 2013"},"message":"Add a proper way to pass the number of processors to V8\n\nBUG=321060\nLOG=n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/73463004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17874 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"062f0b0b217f9866e110db03b878c8d0ab2f569c","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 19 12:20:08 2013"},"commit":"062f0b0b217f9866e110db03b878c8d0ab2f569c","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 19 12:20:08 2013"},"message":"Deprecate v8::External::New without Isolate parameter\n\nR=bmeurer@chromium.org, machenbach@chromium.org, svenpanne@chromium.org\nLOG=y\nBUG=none\n\nReview URL: https://codereview.chromium.org/63093004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17869 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e2563d7a8ec2ea1f053d96a9dbb2ca714d25cb18","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 19 11:52:47 2013"},"commit":"e2563d7a8ec2ea1f053d96a9dbb2ca714d25cb18","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 19 11:52:47 2013"},"message":"Make number of available threads isolate-dependent and expose it to ResourceConstraints.\n\nR=svenpanne@chromium.org\nBUG=v8:2991\nLOG=Y\n\nReview URL: https://codereview.chromium.org/68203029\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17866 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c6705f5e40fe155b5325ae448c147e5d4b1aa1a6","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 14 11:37:32 2013"},"commit":"c6705f5e40fe155b5325ae448c147e5d4b1aa1a6","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 14 11:37:32 2013"},"message":"Deprecate v8::Locker::{Start,Stop}Preemption\n\nBUG=v8:3004\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/63173022\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17736 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"96b18590fd27e2174bce2c81ebbf9736793a95b3","author":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 13 14:05:06 2013"},"commit":"96b18590fd27e2174bce2c81ebbf9736793a95b3","committer":{"name":"rmcilroy@chromium.org","email":"rmcilroy@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 13 14:05:06 2013"},"message":"Enable physical memory argument to be passed as an argument to ConfigureResourceConstraintsForPlatform.\n\nBUG=312241\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/68203003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17696 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"67edfbaef8594c21df699a4b7e1aff07d926b9fc","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 13 12:18:52 2013"},"commit":"67edfbaef8594c21df699a4b7e1aff07d926b9fc","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 13 12:18:52 2013"},"message":"Fix warnings\n\nR=yangguo@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/71373003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17688 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cec8383cff10f620e93a51a5a6c22bec048950dc","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 13 10:34:06 2013"},"commit":"cec8383cff10f620e93a51a5a6c22bec048950dc","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 13 10:34:06 2013"},"message":"Provide private symbols through internal APIs\n\nAdds a notion of private symbols, mainly intended for internal use, especially, self-hosting of built-in types that would otherwise require new C++ classes.\n\nOn the JS side (i.e., in built-ins), private properties can be created and accessed through a set of macros:\n\n  NEW_PRIVATE(print_name)\n  HAS_PRIVATE(obj, sym)\n  GET_PRIVATE(obj, sym)\n  SET_PRIVATE(obj, sym, val)\n  DELETE_PRIVATE(obj, sym)\n\nIn the V8 API, they are accessible via a new class Private, and respective HasPrivate/Get/Private/SetPrivate/DeletePrivate methods on calss Object.\n\nThese APIs are designed and restricted such that their implementation can later be replaced by whatever ES7+ will officially provide.\n\nR=yangguo@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/48923002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17683 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6aad7fb992e5cbf06229b55bd31bb7b8c8fd01c4","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 12 12:09:38 2013"},"commit":"6aad7fb992e5cbf06229b55bd31bb7b8c8fd01c4","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 12 12:09:38 2013"},"message":"Fix compilation with GCC 4.8\n\nBUG=v8:2767,v8:2149\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/69413002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17641 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7df10557a57bb0c3e5e0bf832ec2ac4e6b664a96","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 12 11:44:58 2013"},"commit":"7df10557a57bb0c3e5e0bf832ec2ac4e6b664a96","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 12 11:44:58 2013"},"message":"Add explicit Isolate parameter to External::New\n\nWe can't deprecate the non-Isolate version yet but soon will.\n\nR=svenpanne@chromium.org, svenpanne@google.com\nBUG=266838\n\nReview URL: https://codereview.chromium.org/70163002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17638 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3e9786ef24da5ab027dcc5f1631a2598ebb26505","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 06 17:05:50 2013"},"commit":"3e9786ef24da5ab027dcc5f1631a2598ebb26505","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 06 17:05:50 2013"},"message":"Add three string constants from parser to the root-set.\n\nR=ulan@chromium.org\n\nReview URL: https://codereview.chromium.org/62143002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17531 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3c8cee2f8ddaf82ac1a9e45a61fdb3203abadd87","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 06 06:59:32 2013"},"commit":"3c8cee2f8ddaf82ac1a9e45a61fdb3203abadd87","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 06 06:59:32 2013"},"message":"Add isolate parameter to SetResourceConstraints, and deprecate version which depends on current isolate.\n\nBUG=None\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/38993005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17509 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8385804c55938e482adb7eb8cbd982bb20397980","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Oct 23 12:38:06 2013"},"commit":"8385804c55938e482adb7eb8cbd982bb20397980","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Oct 23 12:38:06 2013"},"message":"Expose v8::Function::GetDisplayName to public API.\n\nBUG=chromium:17356\nR=mstarzinger@chromium.org, yurys@chromium.org, yangguo@chromium.org, yurys\n\nCommitted: https://code.google.com/p/v8/source/detail?r=17324\n\nReview URL: https://codereview.chromium.org/26709011\n\nPatch from Andrey Adaikin <aandrey@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17340 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5177d5b5cd402a729cd92568f2df6d6bb950ace0","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 22 14:57:19 2013"},"commit":"5177d5b5cd402a729cd92568f2df6d6bb950ace0","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 22 14:57:19 2013"},"message":"Expose v8::Function::GetDisplayName to public API.\n\nBUG=chromium:17356\nR=mstarzinger@chromium.org, yurys@chromium.org, yangguo@chromium.org, yurys\n\nReview URL: https://codereview.chromium.org/26709011\n\nPatch from Andrey Adaikin <aandrey@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17324 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c71eccf95f32e2cf552d094cd5a693545153f1b9","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 22 14:50:20 2013"},"commit":"c71eccf95f32e2cf552d094cd5a693545153f1b9","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 22 14:50:20 2013"},"message":"Expose v8::Function::IsBuiltin to public API.\n\nThis will be used by DevTools so that we could generate a better preview in console. Namely, we could assume that a preview of an object is lossless if all its member functions are builtin.\n\nWe also may want to expose this to DevTools users via remote debugging protocol in Debugger.FunctionDetails struct.\n\nBUG=chromium:261470\nR=mstarzinger@chromium.org, yurys@chromium.org, dcarney@chromium.org, yurys\n\nReview URL: https://codereview.chromium.org/27701002\n\nPatch from Andrey Adaikin <aandrey@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17323 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f039f334f50a5c20053927fcf1d133ae41c25d90","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 17 11:48:03 2013"},"commit":"f039f334f50a5c20053927fcf1d133ae41c25d90","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 17 11:48:03 2013"},"message":"Enable calling the SetReference* & SetObjectGroupId functions with a Persistent<SubclassOfValue>.\n\nThis is needed for https://codereview.chromium.org/26792002/\n\nBUG=\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/27512003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17253 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"83c63cf555e60a73802296993be87cf1b0a6cf1d","author":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 14 13:35:06 2013"},"commit":"83c63cf555e60a73802296993be87cf1b0a6cf1d","committer":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 14 13:35:06 2013"},"message":"Out-of-line constant pool on Arm: Stage 2 - Introduce ConstantPoolArray object.\n\nSecond stage of implementing an out-of-line constant pool on Arm.  This CL\nIntroduces the ConstantPoolArray object which will be used as the backing\nstore of out-of-line constant pools.  Nothing uses this object yet.\n\nBUG=\nR=ulan@chromium.org\n\nReview URL: https://chromiumcodereview.appspot.com/22601003\n\nPatch from Ross McIlroy <rmcilroy@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17197 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"15db1d7c3a47ab64bddda15230f5c61b9bb342ed","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 14 12:41:28 2013"},"commit":"15db1d7c3a47ab64bddda15230f5c61b9bb342ed","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 14 12:41:28 2013"},"message":"Track JS allocations as they arrive with no affection on performance when tracking is switched off.\n\nBUG=277984\nR=hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/22852024\n\nPatch from Alexandra Mikhaylova <amikhaylova@google.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17191 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"344d836d0f973642b833494356b519b7d6361fe2","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 10 13:15:47 2013"},"commit":"344d836d0f973642b833494356b519b7d6361fe2","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 10 13:15:47 2013"},"message":"Add column getter to CpuProfileNode\n\nCpuProfileNode currently exposes only line number which is not enough for the cases when there is more than one function on the same line. This change exposes column number on CpuProfileNode.\n\nBUG=302537\nR=jkummerow@chromium.org, loislo@chromium.org\n\nReview URL: https://codereview.chromium.org/25541003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17142 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"49b739dec2aa7f5ad385019f2668624cb392551e","author":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 10 10:59:02 2013"},"commit":"49b739dec2aa7f5ad385019f2668624cb392551e","committer":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 10 10:59:02 2013"},"message":"Fix windows shared library build.\n\nR=svenpanne@chromium.org\n\nReview URL: https://chromiumcodereview.appspot.com/26814002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17131 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3c8e87d840933e1d910da6c2f43d2de6d2cfedb1","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 04 16:21:23 2013"},"commit":"3c8e87d840933e1d910da6c2f43d2de6d2cfedb1","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 04 16:21:23 2013"},"message":"Remove obsolete preparser binary.\n\nR=danno@chromium.org\n\nReview URL: https://codereview.chromium.org/25277003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17113 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7fae9959e9490f43453fac72054048321abde1f0","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 01 09:56:04 2013"},"commit":"7fae9959e9490f43453fac72054048321abde1f0","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 01 09:56:04 2013"},"message":"remove Isolate::Current from ScriptData and Script\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/25037002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17041 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b267a955d8d8ebf3aa87b29d1b23b407f17df461","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 01 09:24:13 2013"},"commit":"b267a955d8d8ebf3aa87b29d1b23b407f17df461","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 01 09:24:13 2013"},"message":"Refactor PropertyCallbackInfo & FunctionCallbackInfo, part 3.\n\nThis CL starts using positive array indices instead of negative array indices\nfor the PropertyCallbackInfo and FunctionCallbackInfo fields. Also, the indices\nmatch now, so they can be unified in the next step.\n\nBUG=\nR=dcarney@chromium.org, mstarzinger@chromium.org\n\nCommitted: https://code.google.com/p/v8/source/detail?r=17015\n\nReview URL: https://codereview.chromium.org/24488006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17032 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9674a7b1bd00730b5de3b87bacfbd6f69864304b","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 30 14:45:40 2013"},"commit":"9674a7b1bd00730b5de3b87bacfbd6f69864304b","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 30 14:45:40 2013"},"message":"convert remainder of v8.h to use V8_DEPRECATED\n\nR=danno@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/25173005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17016 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a81d7b1e7c7424e5ce892eb21ac3a426aa2473b2","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 30 14:09:51 2013"},"commit":"a81d7b1e7c7424e5ce892eb21ac3a426aa2473b2","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 30 14:09:51 2013"},"message":"Refactor PropertyCallbackInfo & FunctionCallbackInfo, part 3.\n\nThis CL starts using positive array indices instead of negative array indices\nfor the PropertyCallbackInfo and FunctionCallbackInfo fields. Also, the indices\nmatch now, so they can be unified in the next step.\n\nBUG=\nR=dcarney@chromium.org, mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/24488006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17015 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6dd72b6416a5ea14814c754291b31b576d187b4b","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 30 13:28:23 2013"},"commit":"6dd72b6416a5ea14814c754291b31b576d187b4b","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 30 13:28:23 2013"},"message":"change of V8_DEPRECATED to be enabled behind a gyp flag\n\nalso add a deprecation message for newer gcc versions\n\nR=danno@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/25226002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17006 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f03dbcff949262687073e5764e52ee884b5fa23c","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 30 11:47:36 2013"},"commit":"f03dbcff949262687073e5764e52ee884b5fa23c","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 30 11:47:36 2013"},"message":"Function::Call and Object::CallAsFunction APIs should allow v8::Value as a receiver\n\nSince the primitive values can be a receiver of strict mode functions in\nECMA262 5.1th, v8::Function::Call and Object::CallAsFunction should take\nv8::Value as a receiver instead of v8::Object.\n\nBUG=v8:2915\nTEST=cctest/test-api\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/24920003\n\nPatch from Yusuke Suzuki <yusukesuzuki@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@17003 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ca2bcdf8889ed75b9a6bd4a8c1af0799a2917868","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 30 09:31:10 2013"},"commit":"ca2bcdf8889ed75b9a6bd4a8c1af0799a2917868","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 30 09:31:10 2013"},"message":"Remove ArrayBufferView::BaseAddress method.\n\nWe should not expose a raw pointer to typed array's backing store.\n\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/25221002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16999 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"112b59efbb7a084798ca7c55c5145a077bf867bb","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 27 15:32:26 2013"},"commit":"112b59efbb7a084798ca7c55c5145a077bf867bb","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 27 15:32:26 2013"},"message":"Try to make MSVC happy about EscapableHandleScope.\n\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/25077002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16994 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b81c581b38379a83875e5506470b763835c57d02","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 27 11:32:13 2013"},"commit":"b81c581b38379a83875e5506470b763835c57d02","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 27 11:32:13 2013"},"message":"make v8::Locker not use Isolate::GetCurrent()\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/25002004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16988 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7fcd0f395ef32f45b0b8af0d4e73226e672961e0","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 27 07:04:02 2013"},"commit":"7fcd0f395ef32f45b0b8af0d4e73226e672961e0","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 27 07:04:02 2013"},"message":"remove Local::New with no isolate parameter\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24550006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16972 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"47e32d0339eaaf241c5f48fff061d1df906e9519","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 13:46:37 2013"},"commit":"47e32d0339eaaf241c5f48fff061d1df906e9519","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 13:46:37 2013"},"message":"Add EscapableHandleScope to api to fix problems with HandleScope::Close\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24245005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16965 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a57300fb9ea6e65fe02824304bd3f52ffdd8935e","author":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 13:31:19 2013"},"commit":"a57300fb9ea6e65fe02824304bd3f52ffdd8935e","committer":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 13:31:19 2013"},"message":"Add methods to enable configuration of ResourceConstraints based on limits derived at runtime.\n\nAdds ConfigureResourceConstraintsForCurrentPlatform and SetDefaultResourceConstraintsForCurrentPlatform which configure the heap based on the available physical memory, rather than hard-coding by platform as previous.  This change also adds OS::TotalPhysicalMemory to platform.h.\n\nBUG=292928\nR=danno@chromium.org, hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/24269003\n\nPatch from Ross McIlroy <rmcilroy@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16964 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2dc3eca47dfd0d2413a24c7e5213aa91b6cdb5d6","author":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 10:28:00 2013"},"commit":"2dc3eca47dfd0d2413a24c7e5213aa91b6cdb5d6","committer":{"name":"marja@chromium.org","email":"marja@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 10:28:00 2013"},"message":"Refactoring PropertyCallbackInfo & FunctionCallbackInfo, step 2.\n\nThis step reorders the FunctionCallbackInfo fields.\n\nBUG=\nR=dcarney@chromium.org, mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/23484037\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16961 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4078a89a27b624b4def577ea808b92a97174d0a5","author":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 09:40:13 2013"},"commit":"4078a89a27b624b4def577ea808b92a97174d0a5","committer":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 09:40:13 2013"},"message":"Add -optimize-for-size flag to optimize for memory size (will be used by pre-aging CL), and remove the is_memory_constrained ResourceConstraint.\n\nBUG=292928\nR=hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/24018009\n\nPatch from Ross McIlroy <rmcilroy@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16960 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7bad4ba648b2db6ea9c477236ccb68359645c96f","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 08:21:48 2013"},"commit":"7bad4ba648b2db6ea9c477236ccb68359645c96f","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 08:21:48 2013"},"message":"remove uses of static oddball accessors using GetCurrent in advance of removal from api\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24508006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16957 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8d549fb1c0c339ea8e8b642e850996823d79d2c3","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 07:43:09 2013"},"commit":"8d549fb1c0c339ea8e8b642e850996823d79d2c3","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 07:43:09 2013"},"message":"fix copy/paste error in r16955\n\nTBR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24721002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16956 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2efd6aa17970d0ae65cea0e3f8593b497cae9825","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 07:37:59 2013"},"commit":"2efd6aa17970d0ae65cea0e3f8593b497cae9825","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 26 07:37:59 2013"},"message":"add isolate parameter to ThrowException\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24538002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16955 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"45ab50673e5ed78502065be8dcc5a10b6e7f4285","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 24 16:51:43 2013"},"commit":"45ab50673e5ed78502065be8dcc5a10b6e7f4285","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 24 16:51:43 2013"},"message":"Expose SameValue equality comparison algorithm\n\nSince SameValue algorithm is defined formally in ECMA262 and V8 already\nexported Equals and StrictEquals algorithms, SameValue should be exposed.\nAnd in this issue, we fix the issue of Object::SameValue implementation,\nSameValue(0.0, -0.0) returnes true.\n\nBUG=v8:2909\nTEST=cctest/test-api/Equality\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/24360017\n\nPatch from Yusuke Suzuki <yusukesuzuki@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16924 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d59b8fe5d746a4bcea86f650206fbff5e4f52895","author":{"name":"machenbach@chromium.org","email":"machenbach@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 23 14:43:41 2013"},"commit":"d59b8fe5d746a4bcea86f650206fbff5e4f52895","committer":{"name":"machenbach@chromium.org","email":"machenbach@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 23 14:43:41 2013"},"message":"[Sheriff] Revert \"Let SetEntropySource() fail if called after V8::Initialize().\"\n\nThis reverts commit 16889 for breaking the webkit tests.\n\nTBR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/23530071\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16896 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c5751ce72cde2785ae778dd4a3a39f712cb7f808","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 23 14:11:32 2013"},"commit":"c5751ce72cde2785ae778dd4a3a39f712cb7f808","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 23 14:11:32 2013"},"message":"Let SetEntropySource() fail if called after V8::Initialize().\n\nBUG=v8:2905\nR=dslomov@chromium.org\n\nReview URL: https://codereview.chromium.org/24357002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16889 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9a62b1dab75d52a4a49785c23c8f58b6ad0599c1","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 23 11:27:07 2013"},"commit":"9a62b1dab75d52a4a49785c23c8f58b6ad0599c1","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 23 11:27:07 2013"},"message":"move CopyablePersistentTraits to v8.h\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24356002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16880 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"86a2e4849a288efa6f35f8bf931d336ffc7b9703","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 23 11:25:52 2013"},"commit":"86a2e4849a288efa6f35f8bf931d336ffc7b9703","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 23 11:25:52 2013"},"message":"remove Isolate::GetCurrent from Context api functions\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24345003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16877 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c96a606e774a91a87acaa931fd296a8d07e27baa","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 19 07:33:45 2013"},"commit":"c96a606e774a91a87acaa931fd296a8d07e27baa","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 19 07:33:45 2013"},"message":"Remove default isolate usage from almost all tests\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24220003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16809 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f34340033e4fc3aa88a15aa952663dc00235e7fd","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 17 12:37:22 2013"},"commit":"f34340033e4fc3aa88a15aa952663dc00235e7fd","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 17 12:37:22 2013"},"message":"new gc callbacks with isolate parameters\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24065005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16770 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0020146f24e457461767f0583a09aab6d32cf6a3","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 17 07:19:50 2013"},"commit":"0020146f24e457461767f0583a09aab6d32cf6a3","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 17 07:19:50 2013"},"message":"add context save for GenerateFastApiCall\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/23461039\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16744 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7b41d6d491bbeb7d9f9b2e2680e178b0821e26a4","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 16 12:08:30 2013"},"commit":"7b41d6d491bbeb7d9f9b2e2680e178b0821e26a4","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 16 12:08:30 2013"},"message":"Fixed shared_library build on Windows.\n\nBUG=v8:2879\nR=ulan@chromium.org\n\nReview URL: https://codereview.chromium.org/24054008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16729 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"34edb73332835f7fcdd6cd57c8473b31f1b61570","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 12 14:32:14 2013"},"commit":"34edb73332835f7fcdd6cd57c8473b31f1b61570","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 12 14:32:14 2013"},"message":"Refactoring PropertyCallbackInfo & FunctionCallbackInfo, step 1.\n\nThe goal is to unify PropertyCallbackInfo and FunctionCallbackInfo so that they\ncontain the same fields.\n\nThe field order will be:\nholder\nisolate\nreturn value default value\nreturn value\ndata\nthis\n\nThis step 1 reorders the PropertyCallbackInfo fields.\n\nBUG=\nR=dcarney@chromium.org, mstarzinger@chromium.org\n\nCommitted: http://code.google.com/p/v8/source/detail?r=16673\n\nReview URL: https://codereview.chromium.org/23620036\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16688 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"541840f8c16cb68d2290322fd994886236cbd909","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 12 09:09:39 2013"},"commit":"541840f8c16cb68d2290322fd994886236cbd909","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 12 09:09:39 2013"},"message":"Refactoring PropertyCallbackInfo & FunctionCallbackInfo, step 1.\n\nThe goal is to unify PropertyCallbackInfo and FunctionCallbackInfo so that they\ncontain the same fields.\n\nThe field order will be:\nholder\nisolate\nreturn value default value\nreturn value\ndata\nthis\n\nThis step 1 reorders the PropertyCallbackInfo fields.\n\nBUG=\nR=dcarney@chromium.org, mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/23620036\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16673 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"488ba18a1399a7133714d0f678c26762557ed309","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 11 12:54:28 2013"},"commit":"488ba18a1399a7133714d0f678c26762557ed309","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 11 12:54:28 2013"},"message":"Clean-up v8::ArrayBuffer::Allocator interface\n\nBUG=v8:2823\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/23514050\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16650 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b60d340e085bd050900d7bfffd8c7b647a66e55c","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 11 10:28:09 2013"},"commit":"b60d340e085bd050900d7bfffd8c7b647a66e55c","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 11 10:28:09 2013"},"message":"Deuglify V8_INLINE and V8_NOINLINE.\n\nR=dslomov@chromium.org\n\nReview URL: https://codereview.chromium.org/23494047\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16641 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"562d8ddcb99b25b14924fc0992ace5f955650893","author":{"name":"titzer@chromium.org","email":"titzer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 11 08:58:38 2013"},"commit":"562d8ddcb99b25b14924fc0992ace5f955650893","committer":{"name":"titzer@chromium.org","email":"titzer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 11 08:58:38 2013"},"message":"Remove dead strings from heap.h\nBUG=\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/23600023\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16639 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a797a3597558b715b7610dd8d0ec87754fcae9d9","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 11 08:47:02 2013"},"commit":"a797a3597558b715b7610dd8d0ec87754fcae9d9","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 11 08:47:02 2013"},"message":"Refactor and cleanup VirtualMemory.\n\nRemove a lot of platform duplication, and simplify the virtual\nmemory implementation. Also improve readability by avoiding bool\nparameters for executability (use a dedicated Executability type\ninstead).\n\nGet rid of the Isolate::UncheckedCurrent() call in the platform\ncode, as part of the Isolate TLS cleanup.\n\nUse a dedicated random number generator for the address\nrandomization, instead of messing with the per-isolate random\nnumber generators.\n\nTEST=cctest/test-virtual-memory\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/23641009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16637 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ce687e4bed9d5ee8f67e0cf32ac79889aab07aa4","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 14:26:07 2013"},"commit":"ce687e4bed9d5ee8f67e0cf32ac79889aab07aa4","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 14:26:07 2013"},"message":"thread isolate for DebugMessage\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/23904012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16621 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f6b7ec4da0ed11afc072d613fbbab9d1db9154c8","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 11:12:35 2013"},"commit":"f6b7ec4da0ed11afc072d613fbbab9d1db9154c8","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 11:12:35 2013"},"message":"HeapProfiler: very slow ~4min \"take snapshot time\" for 80MB gmail heap.\n\nThe reason of that is a number of cons strings in the app.\nThe app constructs a json string and as a result v8 heap has\na very long chain of cons strings.\n\nProfiler counts all these strings as plain String objects and\nassign the content of the strings as node names.\n\nIt required O(n^2) time and O(n^2) memory.\n\nSolution: I introduced two new types, kConsString and kSliced string.\nThey do not use the content of the string for names. So the problem disappeared.\n\nThe heap profiler usability problem will be solved on Blink side.\n\nBUG=285770\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/23460027\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16611 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4ef84b9240035eccdeb8d15a5fed2643f49332e5","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 10:57:00 2013"},"commit":"4ef84b9240035eccdeb8d15a5fed2643f49332e5","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 10:57:00 2013"},"message":"Add a ResourceConstraint for the embedder to specify that V8 is running on a memory constrained device.\n\nThis enables us to specialize certain operations such that we limit memory\nusage on low-memory devices, without reducing performance on devices which\nare not memory constrained.\n\nBUG=chromium:280984\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/23464022\n\nPatch from Ross McIlroy <rmcilroy@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16608 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d9bc6f70781c5cdd8250e5be718633eab1e76f89","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 10:53:33 2013"},"commit":"d9bc6f70781c5cdd8250e5be718633eab1e76f89","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 10:53:33 2013"},"message":"Move Maybe template into v8.h so it can be used by SetResourceConstraints\n\nBUG=\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/23767009\n\nPatch from Ross McIlroy <rmcilroy@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16607 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dcc93c914496fb64c7738408bcdc2f5882e0df6f","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 09:24:53 2013"},"commit":"dcc93c914496fb64c7738408bcdc2f5882e0df6f","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 09:24:53 2013"},"message":"restore persistent dtor\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/23581010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16606 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d571a91e4ae55441b3430a2cab740fe4046c20b2","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 06:43:23 2013"},"commit":"d571a91e4ae55441b3430a2cab740fe4046c20b2","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 10 06:43:23 2013"},"message":"Remove HandleScope default ctor.\n\nBUG=chromium:236173\nR=bmeurer@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/23530045\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16605 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3d855d4707b399c0e1e85644719f392bd294f367","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 09 10:26:25 2013"},"commit":"3d855d4707b399c0e1e85644719f392bd294f367","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 09 10:26:25 2013"},"message":"remove commented out code in v8.h\n\nTBR=dslomov@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/23676007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16591 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8fa8ca8b1aec464fee17c571c7ba5c7e87d68e10","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 09 10:10:26 2013"},"commit":"8fa8ca8b1aec464fee17c571c7ba5c7e87d68e10","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 09 10:10:26 2013"},"message":"temporarily remove persistent destructor to allow trunk push\n\nTBR=dslomov@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24023004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16590 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"66c8b527e8fd5c2991826fd3408bd55394151d34","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 09 09:25:23 2013"},"commit":"66c8b527e8fd5c2991826fd3408bd55394151d34","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 09 09:25:23 2013"},"message":"new persistent semantics\n\nadds copying and autodispose as traits\n\nR=marja@chromium.org, mstarzinger@chromium.org, svenpanne@chromium.org\n\nBUG=\n\nReview URL: https://codereview.chromium.org/23401003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16588 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c20f87a6541ad0869ba63f5fa8ed3ecd5199401c","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 09 07:52:52 2013"},"commit":"c20f87a6541ad0869ba63f5fa8ed3ecd5199401c","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 09 07:52:52 2013"},"message":"add uncached Function::New\n\nTBR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/24071002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16586 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ddc5d437bb307f3b1dd4b1741bf03677296bd9ce","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 09 07:08:34 2013"},"commit":"ddc5d437bb307f3b1dd4b1741bf03677296bd9ce","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 09 07:08:34 2013"},"message":"add uncached Function::New\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/23561007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16584 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"63c817cc55919c129ab6b574f99ab1231eccc909","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 06 11:29:13 2013"},"commit":"63c817cc55919c129ab6b574f99ab1231eccc909","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 06 11:29:13 2013"},"message":"Drop GetCurrentThreadId() and TerminateExecution(int) from the external API.\n\nR=dcarney@chromium.org\n\nReview URL: https://codereview.chromium.org/23538007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16570 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bbd26abedb2d37ca4ce201523146c2dd002833d4","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 05 13:20:51 2013"},"commit":"bbd26abedb2d37ca4ce201523146c2dd002833d4","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 05 13:20:51 2013"},"message":"Functions may not be optimized and we would like to know in cpu profiler what was the reason.\n\nCurrent v8 implementation may disable optimization for a particular function or block it with help of dont_optimize flag.\nThe patch propagates the reason of that to the SharedFunctionInfo where cpu profiler can get it.\n\nSharedFunctionInfo is a heap object so I extracted 8 bits from OptsCount for handling bailout reason code.\n\nBUG=none\nTEST=test-profile-generator/BailoutReason\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/23817003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16555 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c034bb48b504192a35b07762a8b5bebc0b3973c7","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 04 11:55:28 2013"},"commit":"c034bb48b504192a35b07762a8b5bebc0b3973c7","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 04 11:55:28 2013"},"message":"Allow configuring CPU profiler sampling interval using public API\n\nThe only way to change it at the moment is using a command line flag. We are going to add a setting to Chrome DevTools which would allow chaning default interval and that requires proper v8 API.\n\nBUG=v8:2814\nR=bmeurer@chromium.org, loislo@chromium.org\n\nReview URL: https://codereview.chromium.org/23902004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16525 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"913b244bb528534b1669638a7257593b1999c2d1","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 04 08:19:14 2013"},"commit":"913b244bb528534b1669638a7257593b1999c2d1","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 04 08:19:14 2013"},"message":"invert Eternal::IsEmpty logic\n\nR=svenpanne@chromium.org\nBUG=v8:2870\n\nReview URL: https://codereview.chromium.org/23914004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16517 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"615c34869c06b894346b06fd0ab7357e3ea7b507","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 04 07:45:36 2013"},"commit":"615c34869c06b894346b06fd0ab7357e3ea7b507","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 04 07:45:36 2013"},"message":"Push SetAccessor to Template\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/23182003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16515 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"625874a48c974f7ebcec0f1f9efe4843e7d863af","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 03 07:34:34 2013"},"commit":"625874a48c974f7ebcec0f1f9efe4843e7d863af","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 03 07:34:34 2013"},"message":"Deprecate Persistent functions which were marked to be deprecated.\n\nBUG=\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/23707009\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16493 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7bd61f8ca40b4d6a5ce6a571165b0ac0ac4dfd10","author":{"name":"titzer@chromium.org","email":"titzer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 02 10:35:34 2013"},"commit":"7bd61f8ca40b4d6a5ce6a571165b0ac0ac4dfd10","committer":{"name":"titzer@chromium.org","email":"titzer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 02 10:35:34 2013"},"message":"Remove OptimizedCodeEntry *sigh*.\n\nBUG=\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/23584004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16465 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1379f4efebb7672478906059449dd6b60fc4806c","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 30 14:54:59 2013"},"commit":"1379f4efebb7672478906059449dd6b60fc4806c","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 30 14:54:59 2013"},"message":"Add scriptId to StackTrace frames.\n\nBUG=v8:2865\nR=verwaest@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/23536007\n\nPatch from Vsevolod Vlasov <vsevik@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16459 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8292b68acf30c5770b7e90082ba92525bbd89606","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 30 12:30:09 2013"},"commit":"8292b68acf30c5770b7e90082ba92525bbd89606","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 30 12:30:09 2013"},"message":"Fix typo breaking Mac build after commit r16450.\n\nTBR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/23522010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16451 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d4ff9ce39fe434ccc52a7ae5ba695a646eb659a4","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 30 12:09:50 2013"},"commit":"d4ff9ce39fe434ccc52a7ae5ba695a646eb659a4","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 30 12:09:50 2013"},"message":"Improve feature detection.\n\nAdd V8_GLIBC_PREREQ() macro to test the version of the GNU C library.\nMake V8_GNUC_PREREQ() work for compilers that masquerade as GCC (you\ncan always use V8_CC_* to test for a specific one if you need to).\nAdd V8_LIBC_* to detect the C library in use.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/23717009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16450 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"740bfa5dd02379cf600f2da544f3b3a8974768a7","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 30 09:03:27 2013"},"commit":"740bfa5dd02379cf600f2da544f3b3a8974768a7","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 30 09:03:27 2013"},"message":"fix eternal casts\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/23532017\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16442 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1083d1f817ae5a2c4f61d1ade3349667ae59abb5","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 29 10:42:55 2013"},"commit":"1083d1f817ae5a2c4f61d1ade3349667ae59abb5","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 29 10:42:55 2013"},"message":"Remove deprecated profiler API\n\nThis change removes --prof-lazy command line flag that was introduced for the old CPU profiler implementation in Chrome DevTools. DevTools now use profiler API defined in v8-profiler.h\n\nThis change also removes methods for pausing resuming --prof profiler. These methods were deprecated in v.3.20 (https://code.google.com/p/v8/source/browse/branches/3.20/include/v8.h#4629)\n\nAfter this change the profiler will always start if --prof option is passed and can be stopped either in the tests or if write to log file fails.\n\nBUG=None\nR=bmeurer@chromium.org, loislo@chromium.org\n\nReview URL: https://codereview.chromium.org/23478010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16417 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"22b70b050845dd1dc5fe312e6246070b46f5bc73","author":{"name":"titzer@chromium.org","email":"titzer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 28 16:48:40 2013"},"commit":"22b70b050845dd1dc5fe312e6246070b46f5bc73","committer":{"name":"titzer@chromium.org","email":"titzer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 28 16:48:40 2013"},"message":"Add OptimizedCodeEntry as a new heap object type. An optimized code entry represents an association between the native context, a function, optimized code, and the literals. Such associations are needed by the deoptimizer and optimized code cache to efficiently find related optimized code and functions for a given context or shared function info.\n\nBUG=\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/23691002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16407 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4f60ee6bd7d23917f79e10c05cc8cc81bc490192","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 28 07:11:37 2013"},"commit":"4f60ee6bd7d23917f79e10c05cc8cc81bc490192","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 28 07:11:37 2013"},"message":"Remove deprecated methods from debugger API\n\nDeleting SetDebugEventListener and SetMessageHandler from v8::Debug. this methods were deprecated in 3.20\nhttps://code.google.com/p/v8/source/browse/branches/3.20/include/v8-debug.h but in fact they have been superseded by SetDebugEventListener2 and SetMessageHandler2 long ago.\n\nBUG=None\nR=bmeurer@chromium.org, loislo@chromium.org\n\nReview URL: https://codereview.chromium.org/23576002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16379 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dc670f441215e5d7a69d8013da51bb767b88be4b","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 15:12:04 2013"},"commit":"dc670f441215e5d7a69d8013da51bb767b88be4b","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 15:12:04 2013"},"message":"Remove implementation of CpuProfileNode methods deprecated in v8 3.20\n\nGetTotalTime, GetSelfTime and GetTotalSamplesCount were deprecated in 3.20 (https://code.google.com/p/v8/source/browse/branches/3.20/include/v8-profiler.h) and can be safely removed.\n\nBUG=None\nR=bmeurer@chromium.org, loislo@chromium.org\n\nReview URL: https://codereview.chromium.org/23554002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16367 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5857d951dd7343183b3ac2acfcb32959a7a3a274","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 14:16:34 2013"},"commit":"5857d951dd7343183b3ac2acfcb32959a7a3a274","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 14:16:34 2013"},"message":"Fix definition of V8_*_C() macros.\n\nMake V8_INT64_C() and V8_UINT64_C() available in 32-bit mode as well,\nso we can write readable constants (base 10) instead of having to\nobfuscate them using V8_2PART_UINT64_C().\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/23557002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16366 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b2ca7e0b0a4cd9f3b12e1b108ad48e144b443292","author":{"name":"haitao.feng@intel.com","email":"haitao.feng@intel.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 14:13:40 2013"},"commit":"b2ca7e0b0a4cd9f3b12e1b108ad48e144b443292","committer":{"name":"haitao.feng@intel.com","email":"haitao.feng@intel.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 14:13:40 2013"},"message":"Introduce SmiValuesAre31Bits and SmiValuesAre32Bits global predicate functions\n\nR=danno@chromium.org\n\nReview URL: https://codereview.chromium.org/22350005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16365 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"166b6d07479da6983746f10a1cd3a1ffb1e21fa1","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 11:47:52 2013"},"commit":"166b6d07479da6983746f10a1cd3a1ffb1e21fa1","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 11:47:52 2013"},"message":"remove old style callbacks\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/23513004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16354 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"09f5042adf250d278517498cb6e81e4af77e75fc","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 09:21:16 2013"},"commit":"09f5042adf250d278517498cb6e81e4af77e75fc","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 09:21:16 2013"},"message":"Add V8_NOINLINE() and define INLINE()/NO_INLINE() in terms of their V8_*() counterparts.\n\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/23414003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16351 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2f102680458be6825d9e6a2929808ee1cc0a5b66","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 08:27:42 2013"},"commit":"2f102680458be6825d9e6a2929808ee1cc0a5b66","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 27 08:27:42 2013"},"message":"Fix test for warn_unused_result and move it to v8config.h.\n\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/23546002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16347 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fc68cb74e52c1044b0ba1caf97072a4959c3ed52","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 17:40:03 2013"},"commit":"fc68cb74e52c1044b0ba1caf97072a4959c3ed52","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 17:40:03 2013"},"message":"Add RemovePrototype to FunctionTemplate\n\nThis allows functions created from a FunctionTemplate to not have a\nprototype property, which is required by DOM methods.\n\nR=mstarzinger@chromium.org\nBUG=chromium:272440\n\nReview URL: https://codereview.chromium.org/22990003\n\nPatch from Erik Arvidsson <arv@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16341 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ad9cc8e716e823bce9e57243710f2c59f1bba75b","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 11:59:14 2013"},"commit":"ad9cc8e716e823bce9e57243710f2c59f1bba75b","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 11:59:14 2013"},"message":"js accessor creation on Template\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/22903012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16321 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"10a4570282c1182624b4a3f75f4621cce560621e","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 11:18:28 2013"},"commit":"10a4570282c1182624b4a3f75f4621cce560621e","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 11:18:28 2013"},"message":"Add V8_ALIGNAS() and V8_ALIGNOF() and use that in lazy-instance.h.\n\nThis renames the existing V8_ALIGNAS() to V8_ALIGNED(), and introduces\nV8_ALIGNAS(type, alignment) which aligns according to the type and falls\nback to aligning according to alignment.\n\nAlso use __attribute__((aligned(n))) instead of __attribute__((__aligned__(n))).\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/22999052\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16318 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b1bc71a51030c26f4ab1e3d6d5aee3975647c47b","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 09:41:22 2013"},"commit":"b1bc71a51030c26f4ab1e3d6d5aee3975647c47b","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 09:41:22 2013"},"message":"abstract eternal into class\n\nR=rossberg@chromium.org, svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/22795004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16316 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1a6dd16270640be7c114d1f70501789d37fe5c66","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 08:10:10 2013"},"commit":"1a6dd16270640be7c114d1f70501789d37fe5c66","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 08:10:10 2013"},"message":"Deprecate CpuProfileNode::GetSelfSamplesCount\n\nThis method is being replaced by GetHitCount.\n\nBUG=267595\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/22295009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16312 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fb190fb6ae207938f9e21eab2cea07bef362f683","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 08:06:15 2013"},"commit":"fb190fb6ae207938f9e21eab2cea07bef362f683","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 26 08:06:15 2013"},"message":"Add V8_ALIGNOF() and use that in lazy-instance.h.\n\nAlso fix the inconsistent attribute naming, and make V8_GNUC_PREREQ() test work for GCC compatible compilers.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/22888008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16311 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bb19c48faa0e743efca0440c0e0c2e7c1162d13e","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sat Aug 24 16:58:32 2013"},"commit":"bb19c48faa0e743efca0440c0e0c2e7c1162d13e","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sat Aug 24 16:58:32 2013"},"message":"Workaround 'inlining failed' build error with older GCC 4.x releases.\n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/22867047\n\nPatch from Ben Noordhuis <info@bnoordhuis.nl>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16309 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7a2c253e24f439e5b00b141ed455d96935dc99ee","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 23 07:32:25 2013"},"commit":"7a2c253e24f439e5b00b141ed455d96935dc99ee","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 23 07:32:25 2013"},"message":"Move OS/compiler/feature detection to public v8config.h header.\n\nFrom now on the v8config.h header should be the one and\nonly file where we do (freaky) checks to detect OS, C++\ncompiler or certain compiler features. Since we need that\nboth internally and for the public API, the new v8config.h\nis the proper place to add (everything is prefixed with V8_\nso we are safe).\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/23248006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16281 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"798809ce7341469b4f827f9de23bfdbc173fb3bd","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 21 10:49:29 2013"},"commit":"798809ce7341469b4f827f9de23bfdbc173fb3bd","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 21 10:49:29 2013"},"message":"Adding missing operator!= for Handle and Persistent.\n\nBUG=\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/22932004\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16255 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"aca068462ff1c63f34427aad3294553631098fff","author":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 09 10:33:08 2013"},"commit":"aca068462ff1c63f34427aad3294553631098fff","committer":{"name":"bmeurer@chromium.org","email":"bmeurer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 09 10:33:08 2013"},"message":"Fix -Wconversion warnings in external V8 headers.\n\nBUG=v8:2830\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/22549003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16127 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"85d8178d87b95d6c01cb022d9b0ae0d7002e0d55","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 09 07:38:26 2013"},"commit":"85d8178d87b95d6c01cb022d9b0ae0d7002e0d55","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 09 07:38:26 2013"},"message":"Deprecate self and total time getters and total sample count getter on CpuProfileNode\n\nAll of these values are derived from the self samples count and there is no need to evaluate them in v8 when clients can do that when needed on their side.\n\nAlso added unsigned GetHitCount() which should be used instead of double GetSelfSamplesCount(). I'm going to deprecate the latter one once Blink has switched to GetHitCount.\n\nBUG=267595\nTBR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/22710006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16119 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"122327d1c676ec1c6be38b8a9553f551448db0aa","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 08 13:39:57 2013"},"commit":"122327d1c676ec1c6be38b8a9553f551448db0aa","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 08 13:39:57 2013"},"message":"Deprecate self and total time getters and total sample count getter on CpuProfileNode\n\nAll of these values are derived from the self samples count and there is no need to evaluate them in v8 when clients can do that when needed on their side.\n\nAlso added unsigned GetHitCount() which should be used instead of double GetSelfSamplesCount(). I'm going to deprecate the latter one once Blink has switched to GetHitCount.\n\nBUG=267595\nR=loislo@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/22347003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16116 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"707fdd4c6ad0d3a2c863a0a9a2fbdc07f57d4949","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 07 17:04:27 2013"},"commit":"707fdd4c6ad0d3a2c863a0a9a2fbdc07f57d4949","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 07 17:04:27 2013"},"message":"Support idle time in CPU profiler\n\nThis change provides an API for the embedder to tell CPU profiler if it is idle or busy with some task. This way we can discriminate between idle time and some native code execution.\n\nBUG=268947\nR=alph@chromium.org, yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/22412003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16109 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5818d831c5b92a2ec415e4a59cf6625a757c6249","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 07 09:11:39 2013"},"commit":"5818d831c5b92a2ec415e4a59cf6625a757c6249","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 07 09:11:39 2013"},"message":"Make JSON::Parse return Local<Value>\n\nIt should be able to return Smi, etc. Not only JSObject.\n\nBUG=v8:2821\nTEST=cctest/test-api/JSONParseNumber\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/22416003\n\nPatch from Takeshi Yoshino <tyoshino@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16092 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cd74a0988688cd79d143ee927ac70390f9816c8b","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 07 08:26:23 2013"},"commit":"cd74a0988688cd79d143ee927ac70390f9816c8b","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 07 08:26:23 2013"},"message":"expose eternal handle api\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/22384003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16089 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2144dc2d0fad2032048498703dfab2a44252a6e4","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 06 14:37:35 2013"},"commit":"2144dc2d0fad2032048498703dfab2a44252a6e4","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 06 14:37:35 2013"},"message":"Define V8EXPORT only in v8.h and use it in the other headers\n\nV8EXPORT is defined in each header of V8 public API and the definitions already have some slight discrepancies. This CL makes all headers use the same definition in v8.h\n\nBUG=None\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/22363003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16078 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e06343431ab5cd6d0b63a942259e6115560cfa95","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 06 08:00:58 2013"},"commit":"e06343431ab5cd6d0b63a942259e6115560cfa95","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 06 08:00:58 2013"},"message":"Return start/end profiling time in microseconds instead of milliseconds\n\nThe start and end time are now measured in microseconds and the type is int64_t.\nThis way it seems more natural as we are going to support submilisecond sampling\nrate soon. Also it fixes cctest/test-cpu-profiler/ProfileStartEndTime test\nfailure caused by comparison between long double and double.\n\nTEST=cctest/test-cpu-profiler/ProfileStartEndTime\nBUG=v8:2824\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/22155003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16067 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d38bbe354b19690b232d960673a559677351a9e2","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 05 11:48:24 2013"},"commit":"d38bbe354b19690b232d960673a559677351a9e2","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 05 11:48:24 2013"},"message":"Return start/end profiling time in microseconds instead of milliseconds\n\nThe start and end time are now measured in microseconds and the type is int64_t. This way it seems more natural as we are going to support submilisecond sampling rate soon. Also it fixes cctest/test-cpu-profiler/ProfileStartEndTime test failure caused by comparison between long double and double.\n\nTEST=cctest/test-cpu-profiler/ProfileStartEndTime\nBUG=v8:2824\nR=alph@chromium.org, bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/22172002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16049 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cb68e2cd9be2b3054223a8608d935c258db27f33","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 05 11:14:46 2013"},"commit":"cb68e2cd9be2b3054223a8608d935c258db27f33","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 05 11:14:46 2013"},"message":"Expose JSON parser through V8 API\n\nBUG=v8:2821\nTEST=cctest/test-api/JSONParse\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/21959003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16048 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"207396101f3cd04c981b29fd31fa921d13b8dd3e","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 05 09:46:23 2013"},"commit":"207396101f3cd04c981b29fd31fa921d13b8dd3e","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 05 09:46:23 2013"},"message":"introduce eternal handles\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/21133006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16045 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"411d21b2b19c80b1ee84c8563d987e3cb9906525","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 05 07:17:08 2013"},"commit":"411d21b2b19c80b1ee84c8563d987e3cb9906525","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 05 07:17:08 2013"},"message":"Add start and end profiling time to v8::CpuProfile\n\nI'm going to change CPU profiler API and deprecate GetSelfTime, GetTotalTime and GetTotalSamplesCount on CpuProfileNode as all of those values are derived from self samples count and sampling rate. The sampling rate in turn is calculate based on the profiling duration so having start/end time and total sample count is enough for calculating smpling rate.\n\nBUG=267595\nR=alph@chromium.org, bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/21918002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16039 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"eb52c66fd01259c57f59e98107955416cb74e6d5","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 05 06:58:48 2013"},"commit":"eb52c66fd01259c57f59e98107955416cb74e6d5","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 05 06:58:48 2013"},"message":"IsNearDeath needs to include pending nodes\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/21466003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16037 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5230c19d8bcd0d220c399a83be4971eda0efa674","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 02 13:03:06 2013"},"commit":"5230c19d8bcd0d220c399a83be4971eda0efa674","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 02 13:03:06 2013"},"message":"Add size_t length argument to v8::ArrayBuffer::Allocator::Free.\nThe previous implementation of Free is a deprecated overload now.\n\nR=mstarzinger@chromium.org\n\nCommitted: https://code.google.com/p/v8/source/detail?r=16031\n\nReview URL: https://codereview.chromium.org/21803002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16033 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1688f3c167fb5858276a445aecb4177d2f29c7aa","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 02 12:19:22 2013"},"commit":"1688f3c167fb5858276a445aecb4177d2f29c7aa","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 02 12:19:22 2013"},"message":"Add size_t length argument to v8::ArrayBuffer::Allocator::Free.\nThe previous implementation of Free is a deprecated overload now.\n\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/21803002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16031 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4ebeda216de6cfba8fea666295ff38fb1a2569ba","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 01 08:52:21 2013"},"commit":"4ebeda216de6cfba8fea666295ff38fb1a2569ba","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 01 08:52:21 2013"},"message":"Speed-up 'new TypedArray(arrayLike)'.\n\nHandle specially the cases when the argument is a typed array,\nin particular of the same type as the one we create.\n\nAllocate backing store uninitialized in cases when we can guarantee\ncomplete initialization.\n\nR=bmeurer@chromium.org\n\nCommitted: https://code.google.com/p/v8/source/detail?r=15998\n\nReview URL: https://codereview.chromium.org/21369002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16005 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d208eea478d9cb025d1b209d530b155921c2dd75","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 01 08:19:51 2013"},"commit":"d208eea478d9cb025d1b209d530b155921c2dd75","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 01 08:19:51 2013"},"message":"Speed-up 'new TypedArray(arrayLike)'.\n\nHandle specially the cases when the argument is a typed array,\nin particular of the same type as the one we create.\n\nAllocate backing store uninitialized in cases when we can guarantee\ncomplete initialization.\n\nR=bmeurer@chromium.org\n\nReview URL: https://codereview.chromium.org/21369002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15998 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e53471dbaa21d6a063de63e0662bf5b0f707bbeb","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 31 17:08:50 2013"},"commit":"e53471dbaa21d6a063de63e0662bf5b0f707bbeb","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 31 17:08:50 2013"},"message":"Remove elements transitions from the transition array.\n\nThis is preparatory work for reordering the transition tree. Since elements transitions will be at the root of the transition tree, runtime access to them is slow since we have to walk the transition tree backwards first. Hence remove the optimization that promoted them to a special field, requiring a pointer (mostly NULL) in every non-simple transition array.\n\nR=titzer@chromium.org\n\nReview URL: https://chromiumcodereview.appspot.com/21228002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15993 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"96fc677d25a5a69522d4316f1b2a179fb66d621b","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 30 17:05:50 2013"},"commit":"96fc677d25a5a69522d4316f1b2a179fb66d621b","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 30 17:05:50 2013"},"message":"Pipe a script's CORS status through V8 during compilation.\n\nIn order to properly sanitize exception data during a 'window.onerror'\nhandler, we need to know whether a script was served with proper CORS\nheaders at the time it was loaded into V8. This patch adds a single bool\nto ScriptOrigin, and pipes that through the compiler to land on the\nScript object. We can then retrieve the parameter when calling the\nembedder's exception callback.\n\nBUG=crbug.com/159566\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/20646006\n\nPatch from Mike West <mkwst@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15963 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"31e56df122d32e81bfbdbb2394836f80d224fecc","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 30 07:05:15 2013"},"commit":"31e56df122d32e81bfbdbb2394836f80d224fecc","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 30 07:05:15 2013"},"message":"Prepare some ValueOf renamings.\n\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/20992005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15945 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0826f85a025bc11859cd4c8a9893bb8f0eb7a0fa","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 25 16:01:02 2013"},"commit":"0826f85a025bc11859cd4c8a9893bb8f0eb7a0fa","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 25 16:01:02 2013"},"message":"Put object templates of the i18n extension on the heap object.\n\nUsing function local statics doesn't work, as we need the templates per\nisolate.\n\nI'm not #ifdef'ing the definitions out, because kEmptyStringRootIndex\nchanges depending on whether the two additional slots are present or\nnot.\n\nBUG=v8:2745\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/20299002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15888 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3c0483af52cb1f502be7c310dcbeebad59a58d2f","author":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 23 19:05:00 2013"},"commit":"3c0483af52cb1f502be7c310dcbeebad59a58d2f","committer":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 23 19:05:00 2013"},"message":"Fix TargetSpace() method for box type.\n\nBUG=\nR=danno@chromium.org\n\nReview URL: https://codereview.chromium.org/19978003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15838 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"682a0d65c6406d47b664ccb971f7df4e7e223843","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 23 13:44:15 2013"},"commit":"682a0d65c6406d47b664ccb971f7df4e7e223843","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 23 13:44:15 2013"},"message":"Deprecate v8::V8::Pause/ResumeProfiler\n\nThe methods were added to the public API in r1185 when Chrome DevTools were using the same output as produced for tick processor when --prof option is specified.\n\nI don't see any existing clients of these methods and since they add a noticeable complexity to the profiler code I'd like to remove them.\n\nBUG=None\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/19591006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15828 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"260af16edece8e4bbaebeac6ea4f5d765dae44b2","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 19 09:38:18 2013"},"commit":"260af16edece8e4bbaebeac6ea4f5d765dae44b2","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 19 09:38:18 2013"},"message":"Deprecate some debugger methods\n\nThese methods have been superceeded by equivalents accepting object arguments exposing more details.\n\nThis is exactly the same change as r15708 which was reverted in r15710 due to pending Blink changes. Now that Blink is rolled to 154493 it should be safe to land this (required Blink change is 154386).\n\nBUG=None\nTBR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/19541005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15769 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9f65cf6bffd2da760804f1edfe10c5cc8bdc3dfd","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 18 06:51:03 2013"},"commit":"9f65cf6bffd2da760804f1edfe10c5cc8bdc3dfd","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 18 06:51:03 2013"},"message":"Deprecate some debugger methods\n\nThese methods have been superceeded by equivalents accepting object arguments exposing more details.\n\nThis is exactly the same change as r15708 which was reverted in r15710 due to pending Blink changes.\n\nBUG=None\nTBR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/19542003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15734 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"16bb1dc210fba22db0a4ba0eac38da1777a43aca","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 17 09:20:16 2013"},"commit":"16bb1dc210fba22db0a4ba0eac38da1777a43aca","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 17 09:20:16 2013"},"message":"Deprecate some debugger methods\n\nThese methods have been superceeded by equivalents accepting object arguments exposing more details.\n\nBUG=None\nR=loislo@chromium.org, yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/19549002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15708 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"625a0e97594ee4e8ceb05f1c949d2625cad147c2","author":{"name":"adamk@chromium.org","email":"adamk@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sat Jul 13 00:20:40 2013"},"commit":"625a0e97594ee4e8ceb05f1c949d2625cad147c2","committer":{"name":"adamk@chromium.org","email":"adamk@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sat Jul 13 00:20:40 2013"},"message":"Add map transition for observed objects\n\nThis patch enables objects to undergo a single transition when they become observed, avoiding the need to create a new map for every observed objects.\n\nObserved objects which become unobserved does not cause another map transition and unobserved does not clear the observed bit on the map. The unobserved object.\n\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/18221006\n\nPatch from Rafael Weinstein <rafaelw@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15650 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"97409c236396144d94c1403ecd0a2cb69f12a036","author":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 11 09:58:54 2013"},"commit":"97409c236396144d94c1403ecd0a2cb69f12a036","committer":{"name":"jochen@chromium.org","email":"jochen@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 11 09:58:54 2013"},"message":"Move InitializeICU() to the V8 API and use it.\n\nI can't get rid of the enable_i18n flag yet, as we need to be able to\nturn off all extensions for creating the snapshot.\n\nBUG=v8:2745\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/18860007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15618 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"67d9051bcdd6b5c9125b90838a93216ed24292ab","author":{"name":"mvstanton@chromium.org","email":"mvstanton@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 08 10:02:16 2013"},"commit":"67d9051bcdd6b5c9125b90838a93216ed24292ab","committer":{"name":"mvstanton@chromium.org","email":"mvstanton@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 08 10:02:16 2013"},"message":"Create AllocationSite objects, pointed to by AllocationSiteInfo.\nThis creates a platform where we can do additional things with allocation sites,\nother than just aid in reducing array transitions.\n\nBUG=\nR=hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/15094018\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15545 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"696090196d7bbd1b347376f72432e30289509720","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sat Jul 06 09:12:09 2013"},"commit":"696090196d7bbd1b347376f72432e30289509720","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sat Jul 06 09:12:09 2013"},"message":"Delete deprecated CPU profiler code that supports filtering by security token\n\nThe methods that allow to filter CPU profile by security token were introduced to support console.profiles in WebKit. Now that console.profiles is removed and corresponding V8 API methods have been deprecated in 3.19 branch(https://code.google.com/p/v8/source/browse/branches/3.19/include/v8-profiler.h) it is safe to remove all that code.\n\nBUG=None\nR=jkummerow@chromium.org, loislo@chromium.org\n\nReview URL: https://codereview.chromium.org/18709003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15528 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7e0ee5301ef8f2302fd7f6ca2b6fb634cc337e5f","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 05 10:12:36 2013"},"commit":"7e0ee5301ef8f2302fd7f6ca2b6fb634cc337e5f","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 05 10:12:36 2013"},"message":"Add internal fields to JSArrayBufferViews (JSTypedArray and JSDataView)\n\nIn Blink, JSTypedArray and JSDataView objects act as \"wrappers\" for C++\nobjects. Wrapping protocol in Blink requires all wrapper JavaScript objects\nto have a certain amount of internal fields that Blink uses for\nbook-keeping (essentially a pointer to C++ object and some type\ninformation). This change adds those internal fields to JSTypedArray and\nJSDataView, in a similiar way to how it is done for JSArrayBuffer.\n\nR=titzer@chromium.org\n\nReview URL: https://codereview.chromium.org/18695004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15511 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"44981e4f5e3ad103c2321dbf37a0aa01d785e27a","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 04 16:34:07 2013"},"commit":"44981e4f5e3ad103c2321dbf37a0aa01d785e27a","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 04 16:34:07 2013"},"message":"Remove deprecated heap profiler methods from V8 public API\n\nv8::HeapProfiler::FindHeapSnapshot was already deprecated when 3.19 branch was created (https://code.google.com/p/v8/source/browse/branches/3.19/include/v8-profiler.h).\n\nBUG=None\nR=loislo@chromium.org, yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/18701002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15493 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a0140093ba73ea2f00d5c49e35152b4a6c3bcc5c","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 02 06:14:01 2013"},"commit":"a0140093ba73ea2f00d5c49e35152b4a6c3bcc5c","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 02 06:14:01 2013"},"message":"CPUProfiler: propagate scriptId to the front-end\n\nEach CpuProfileNode has resource_name string property.\nIt cost us N * strlen(resource_name) where N is number of functions in the collected profile.\nWe could transfer script_id instead of resource_name so it would reduce transfer\nsize and help us to solve the problem with evals and sourceURL.\n\nBUG=none\nTEST=test-cpu-profiler/CollectCpuProfile\nR=jkummerow@chromium.org, yurys@chromium.org\n\nCommitted: https://code.google.com/p/v8/source/detail?r=15429\n\nReview URL: https://codereview.chromium.org/17642009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15433 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bc9f6c607f2dd7b36b5b32c8662dd0c7823bd001","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 01 15:15:57 2013"},"commit":"bc9f6c607f2dd7b36b5b32c8662dd0c7823bd001","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 01 15:15:57 2013"},"message":"CPUProfiler: propagate scriptId to the front-end\n\nEach CpuProfileNode has resource_name string property.\nIt cost us N * strlen(resource_name) where N is number of functions in the collected profile.\nWe could transfer script_id instead of resource_name so it would reduce transfer\nsize and help us to solve the problem with evals and sourceURL.\n\nBUG=none\nTEST=test-cpu-profiler/CollectCpuProfile\nR=jkummerow@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/17642009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15429 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"de07db147f183dbe559ebb5bc26e505444c1856c","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 01 12:57:15 2013"},"commit":"de07db147f183dbe559ebb5bc26e505444c1856c","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 01 12:57:15 2013"},"message":"Ensure CheckInitialized is present independent of define.\n\nThis makes sure that the same symbols are present, independent of which\ndefines have been used while building V8. Otherwise only embedders with\ncompatible defines would be able to link against that binary.\n\nR=danno@chromium.org\nBUG=chromium:255779\n\nReview URL: https://codereview.chromium.org/18305004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15417 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cc2f01d31ffaaf5b615cd033741cb96697b1c2ab","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 01 10:54:39 2013"},"commit":"cc2f01d31ffaaf5b615cd033741cb96697b1c2ab","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 01 10:54:39 2013"},"message":"Restore message when rethrowing in TryCatch.\n\nBased on a patch contributed by Andrew Paprocki <andrew@ishiboo.com>.\n\nR=jkummerow@chromium.org\nBUG=\nTEST=cctest/test-api/TryCatchNestedSyntax\n\nReview URL: https://codereview.chromium.org/17694002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15408 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1642f32d1c568dea0ebe4f6e7d8e68e994815276","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 28 13:40:41 2013"},"commit":"1642f32d1c568dea0ebe4f6e7d8e68e994815276","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 28 13:40:41 2013"},"message":"Improved function entry hook coverage\n\nAdds more coverage for function entry hook, sufficient to capture profiles that are contiguous from C++, through JS and back out to C++.\n\nR=danno@chromium.org\n\nCommitted: http://code.google.com/p/v8/source/detail?r=15361\n\nReview URL: https://codereview.chromium.org/16578008\n\nPatch from Sigurður Ásgeirsson <siggi@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15384 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8494f3bf2559eda4b712070fb3b8aa8a961faf21","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 27 14:39:37 2013"},"commit":"8494f3bf2559eda4b712070fb3b8aa8a961faf21","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 27 14:39:37 2013"},"message":"Improved function entry hook coverage\n\nAdds more coverage for function entry hook, sufficient to capture profiles that are contiguous from C++, through JS and back out to C++.\n\nR=danno@chromium.org\n\nReview URL: https://codereview.chromium.org/16578008\n\nPatch from Sigurður Ásgeirsson <siggi@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15361 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"53eb53f4afb1014f77989f1e5e132eaa7b89d1ba","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 25 14:57:47 2013"},"commit":"53eb53f4afb1014f77989f1e5e132eaa7b89d1ba","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 25 14:57:47 2013"},"message":"CPUProfiler: It is not clear why we are using Handle<Object> for scriptId. Lets flip it into Smi/int.\n\nBy the nature it is integer. So we can work with it as with Smi internaly and use int in the external API.\n\nBUG=none\nTEST=existing tests\nR=jkummerow@chromium.org\n\nReview URL: https://codereview.chromium.org/17600006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15327 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4308fb462d8a606916808c6d97adb58b3bdbbdd2","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 24 11:23:50 2013"},"commit":"4308fb462d8a606916808c6d97adb58b3bdbbdd2","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 24 11:23:50 2013"},"message":"API for DataView.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/17155014\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15282 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1c22b2cd98f89f0f6c7112d9cdfa35ea2375edd1","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 24 09:34:56 2013"},"commit":"1c22b2cd98f89f0f6c7112d9cdfa35ea2375edd1","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 24 09:34:56 2013"},"message":"Make a Persistent ctor take const Persistent& instead of Persistent&.\n\nBUG=\nR=mstarzinger@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/17580010\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15278 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9ef18efff60d0bd1832b5d7166c79fea58874ac5","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 24 08:58:01 2013"},"commit":"9ef18efff60d0bd1832b5d7166c79fea58874ac5","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 24 08:58:01 2013"},"message":"Remove IsInitialized checks from inlined API functions.\n\nR=marja@chromium.org, svenpanne@chromium.org\nTEST=cctest/test-api\n\nReview URL: https://codereview.chromium.org/17068006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15277 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"91eb5f8d2550a117fec3a41c3e2241ee13460dd0","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 21 13:02:38 2013"},"commit":"91eb5f8d2550a117fec3a41c3e2241ee13460dd0","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 21 13:02:38 2013"},"message":"DataView implementation.\n\nR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/17153011\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15269 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6f09cb471b194dbdedfbe96b4f3e3eb94e98331d","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 21 07:56:22 2013"},"commit":"6f09cb471b194dbdedfbe96b4f3e3eb94e98331d","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 21 07:56:22 2013"},"message":"Delete deprecated methods from v8-profiler.h\n\nAll these methods were already marked as V8_DEPRECATED in V8 Version 3.18.0 (see https://code.google.com/p/v8/source/browse/trunk/include/v8-profiler.h?r=14304) so it is time to delete them.\n\nBUG=None\nR=loislo@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/17524007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15260 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8202410ccaa872797582d6c71e6f5ad2d85874b0","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 20 12:53:19 2013"},"commit":"8202410ccaa872797582d6c71e6f5ad2d85874b0","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 20 12:53:19 2013"},"message":"deprecate old style callbacks\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/17069003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15239 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"43a805fc2750e2777b30ef4cf5e3261a942a39a4","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 18 07:39:15 2013"},"commit":"43a805fc2750e2777b30ef4cf5e3261a942a39a4","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 18 07:39:15 2013"},"message":"added type checks on fast return values\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16939003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15188 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"eeded306fd0a3bd73ef2fb52cc439fda653f47ec","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 14 12:53:19 2013"},"commit":"eeded306fd0a3bd73ef2fb52cc439fda653f47ec","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 14 12:53:19 2013"},"message":"webkit build fix for 15142\n\nTBR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/17076003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15149 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a1d359d20e4884a8c534216482933e0a17a6517e","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 14 09:46:43 2013"},"commit":"a1d359d20e4884a8c534216482933e0a17a6517e","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 14 09:46:43 2013"},"message":"remove V8_USE_UNSAFE_HANDLES define\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16896004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15142 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8b2c26d736ebbf96895b0687254f344044932643","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 13 09:27:09 2013"},"commit":"8b2c26d736ebbf96895b0687254f344044932643","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 13 09:27:09 2013"},"message":"remove most uses of raw handle constructors\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/15817014\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15107 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9103afa291f56c2ff0f79b1aa477369ad7110f98","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 13 07:23:23 2013"},"commit":"9103afa291f56c2ff0f79b1aa477369ad7110f98","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 13 07:23:23 2013"},"message":"Deprecate the version of MakeWeak which takes an Isolate.\n\nBUG=NONE\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/16528009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15105 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1b89cbf817c11642917b02b53fbd5d9305d6e59a","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jun 12 15:03:44 2013"},"commit":"1b89cbf817c11642917b02b53fbd5d9305d6e59a","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jun 12 15:03:44 2013"},"message":"Separate Cell and PropertyCell spaces\n\nThis makes it possible to store additional information on property cells, for example Type and optimized Code dependencies.\n\nR=mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/16631002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15089 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9278a4b7b1e22dea6c6a6b6e06ea264946c86c45","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 11 10:41:14 2013"},"commit":"9278a4b7b1e22dea6c6a6b6e06ea264946c86c45","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 11 10:41:14 2013"},"message":"Change ArrayBuffer API and implementation to use embedder-provided allocator.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/15855012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15056 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c90e697a3003436ef2cf1e4e1965e50528006ba0","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 11 07:42:12 2013"},"commit":"c90e697a3003436ef2cf1e4e1965e50528006ba0","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 11 07:42:12 2013"},"message":"make empty string returnable by ReturnValue\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16621004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15054 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a9ce5bb5ea4a55a94949b01691ab126bee75f286","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 10 07:41:16 2013"},"commit":"a9ce5bb5ea4a55a94949b01691ab126bee75f286","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 10 07:41:16 2013"},"message":"add a default value for return value\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16642003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15024 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cbb11dbe6c269a8e78e6e3500ba036c4a718f93c","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 07 15:02:20 2013"},"commit":"cbb11dbe6c269a8e78e6e3500ba036c4a718f93c","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 07 15:02:20 2013"},"message":"Neutering API for v8::ArrayBuffer\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/16562005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15006 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b3282c290e077a571eb6619b45b5e786406105ba","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 07 10:52:11 2013"},"commit":"b3282c290e077a571eb6619b45b5e786406105ba","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 07 10:52:11 2013"},"message":"Recording array buffer views.\n\nR=hpayer@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/15562008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@15000 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a0f786f02203d0208d6e3be85288960310e4e9be","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 07 10:46:51 2013"},"commit":"a0f786f02203d0208d6e3be85288960310e4e9be","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 07 10:46:51 2013"},"message":"Make ReturnValue a friend of Persistent, so it can use operator*.\n\nBUG=\nR=dcarney@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/15848010\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14999 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"72098711b7e2321570b47584aacd679874425c51","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 07 08:46:39 2013"},"commit":"72098711b7e2321570b47584aacd679874425c51","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 07 08:46:39 2013"},"message":"Add Value::Cast.\n\nIt's needed for upcasting Persistent<Object> to Persistent<Value> after\nhandlepocalypse (with Persistent::As or Persistent::Cast).\n\nBUG=\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/16206014\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14995 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3c8a79cabadeaa8c356b7789a8b621464d643b2d","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 07 07:34:25 2013"},"commit":"3c8a79cabadeaa8c356b7789a8b621464d643b2d","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 07 07:34:25 2013"},"message":"ReturnValue::Set(uint32_t) is wrong\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16365008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14990 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"372457a79301b11a26d4d2bb3a07a2aa47e685ed","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 06 15:40:28 2013"},"commit":"372457a79301b11a26d4d2bb3a07a2aa47e685ed","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 06 15:40:28 2013"},"message":"Allow smis for singleton types\n\nTo that end, introduce a generic Box struct.\n\nR=danno@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16562003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14987 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"16199c63d86a3171132a8d08d7d85aad42d36bd3","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 06 14:21:35 2013"},"commit":"16199c63d86a3171132a8d08d7d85aad42d36bd3","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 06 14:21:35 2013"},"message":"Initialized representations of computed values to None.\n\nR=danno@chromium.org\n\nReview URL: https://chromiumcodereview.appspot.com/14721009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14982 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6f5d899248e92d2b0f5d54d65d911a99578f7672","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 06 13:16:52 2013"},"commit":"6f5d899248e92d2b0f5d54d65d911a99578f7672","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 06 13:16:52 2013"},"message":"add function to test whether string contents are definitely one byte\n\nR=yangguo@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16530003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14976 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c6519a142fba527d50edeff386e0d35235d7d996","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 06 12:23:37 2013"},"commit":"c6519a142fba527d50edeff386e0d35235d7d996","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 06 12:23:37 2013"},"message":"update test to test new style property handlers\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/15769014\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14973 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2380eff265b5c2b41bf7d92afa32bf585c12563a","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 04 13:36:18 2013"},"commit":"2380eff265b5c2b41bf7d92afa32bf585c12563a","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 04 13:36:18 2013"},"message":"Remove V8_USE_OLD_STYLE_PERSISTENT_HANDLE_VISITORS.\n\nBlink has migrated to use the new style visitors.\n\nBUG=\nR=dcarney@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/16360005\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14936 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7f8a3d803cf1136f3e502e533c5a3e1dc8cb3163","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 03 15:32:22 2013"},"commit":"7f8a3d803cf1136f3e502e533c5a3e1dc8cb3163","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 03 15:32:22 2013"},"message":"Make assertion scopes thread safe.\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/15691017\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14919 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7d55c1638910c1af33727065f404c358e2016fa4","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 03 10:02:02 2013"},"commit":"7d55c1638910c1af33727065f404c358e2016fa4","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 03 10:02:02 2013"},"message":"remove V8_ALLOW_ACCESS_TO_PERSISTENT_IMPLICIT and V8_ALLOW_ACCESS_TO_PERSISTENT_ARROW\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/15979014\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14914 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"595d0ea8b0c96b42249bcd8b2e0d53592cb82846","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 03 08:17:04 2013"},"commit":"595d0ea8b0c96b42249bcd8b2e0d53592cb82846","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 03 08:17:04 2013"},"message":"remove old MakeWeak\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16160010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14911 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0fbfdf16992a8084626a12c6510c595dc18418df","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 31 11:06:50 2013"},"commit":"0fbfdf16992a8084626a12c6510c595dc18418df","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 31 11:06:50 2013"},"message":"ReturnValue::Set needs to check for empty handles\n\nR=jkummerow@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16073010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14898 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"09959efe41fe37de9e0a6ba457518e4449e3e399","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 12:40:21 2013"},"commit":"09959efe41fe37de9e0a6ba457518e4449e3e399","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 12:40:21 2013"},"message":"Add support for //# sourceURL similar to deprecated //@ sourceURL one.\n\nBUG=v8:2702\nR=yangguo@chromium.org, yurys@chromium.org\n\nReview URL: https://codereview.chromium.org/15859010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14883 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ccae2a75ca8c77163228ca4876430b24462f1297","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 11:04:10 2013"},"commit":"ccae2a75ca8c77163228ca4876430b24462f1297","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 11:04:10 2013"},"message":"remove remaining V8_ALLOW_ACCESS_TO* defines from test classes\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16032010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14875 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f16ebc61c9ab55aa01873e8f099e59ff5eb0edc8","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 08:52:01 2013"},"commit":"f16ebc61c9ab55aa01873e8f099e59ff5eb0edc8","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 08:52:01 2013"},"message":"Delete old GC related APIs.\n\nBlink doesn't use them any more, and they have no other known users either.\n\nBUG=\nR=dcarney@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/16124004\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14872 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"515aec2014c7f42824b20a353c235b52ad4daa39","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 08:48:37 2013"},"commit":"515aec2014c7f42824b20a353c235b52ad4daa39","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 08:48:37 2013"},"message":"Transforming PersistentHandleVisitor to not need to copy Persistent handles.\n\nThis gets rid of more places where Persistent handles are copied\n(see crbug.com/236290 ).\n\nTransition plan: after this CL, Blink will be modified to work both with and\nwithout the #define, then the #define will be removed from V8.\n\nThe corresponding Blink side changes are in https://codereview.chromium.org/15670010/ .\n\nBUG=\nR=dcarney@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/15974006\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14871 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fec64cd698f961e1d4868929e83a24b73109a4f1","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 08:39:37 2013"},"commit":"fec64cd698f961e1d4868929e83a24b73109a4f1","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 08:39:37 2013"},"message":"remove most remaining V8_ALLOW_ACCESS_TO* defines\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/15994003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14870 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7b82ad9b987c7c5f0eda6d55c313a04bf6c5494b","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 08:32:45 2013"},"commit":"7b82ad9b987c7c5f0eda6d55c313a04bf6c5494b","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 29 08:32:45 2013"},"message":"de-isolate remaining persistent calls\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16153003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14868 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ff2a76b5d572930eef0f2798d0c6f5781603ba24","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 28 11:54:52 2013"},"commit":"ff2a76b5d572930eef0f2798d0c6f5781603ba24","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 28 11:54:52 2013"},"message":"remove most V8_ALLOW_ACCESS_TO_* defines from test classes\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/15964004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14849 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"eecc9ff8f1bb79592af8dcff8e60291fa64a49a4","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 28 10:36:21 2013"},"commit":"eecc9ff8f1bb79592af8dcff8e60291fa64a49a4","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 28 10:36:21 2013"},"message":"remove use of context scope with persistent argument\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/15837007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14844 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9974d932b29bdb97b777a97a77e94d2ad38300eb","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 28 08:00:16 2013"},"commit":"9974d932b29bdb97b777a97a77e94d2ad38300eb","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 28 08:00:16 2013"},"message":"Deprecate profiler methods that accept security origin\n\nNow that the only known client console.profiles was removed from Blink:\nhttps://src.chromium.org/viewvc/blink?revision=151136&view=revision\nhttps://src.chromium.org/viewvc/blink?revision=151196&view=revision\nthis method can be deprecated and all the code that supports filtering\nCPU profiles based on security origins can be later removed.\n\nDrive-by fix: in line with CpuProfiler changes deprecated HeapProfiler::FindHeapSnapshot to reduce v8 API surface. FindHeapSnapshot may well be implemented based on existing GetSnapshotCount/GetSnapshot and it is only used in the tests.\n\nBUG=None\nR=jkummerow@chromium.org, loislo@chromium.org\n\nReview URL: https://codereview.chromium.org/16114002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14833 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f69727d8498fc653b8daa3d1d075c44aa2758eb0","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 27 14:34:16 2013"},"commit":"f69727d8498fc653b8daa3d1d075c44aa2758eb0","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 27 14:34:16 2013"},"message":"Add template parameter to ReturnValue::Set.\n\nE.g., v8-i18n wants to set the return value with a different type of a Persistent.\n\nBUG=NONE\nR=dcarney@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/16102002\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14826 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"81e5778718f9c9714c4f377d3862541b82f4e996","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 27 11:50:08 2013"},"commit":"81e5778718f9c9714c4f377d3862541b82f4e996","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 27 11:50:08 2013"},"message":"make isolate accessible from returnvalue\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/16021010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14819 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fc73052dc2970aac5c232e74c8dce9215c9137db","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 23 10:01:42 2013"},"commit":"fc73052dc2970aac5c232e74c8dce9215c9137db","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 23 10:01:42 2013"},"message":"Externalization API for ArrayBuffer\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/15001041\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14770 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"366948840ad87f68e36e29434d07fe1c3f8e093b","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 23 08:19:27 2013"},"commit":"366948840ad87f68e36e29434d07fe1c3f8e093b","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 23 08:19:27 2013"},"message":"de-isolate Persistent::Dispose\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/15648008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14764 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"36e91242fd6ec5f991865b41707bcecc168e3ee9","author":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 23 07:05:58 2013"},"commit":"36e91242fd6ec5f991865b41707bcecc168e3ee9","committer":{"name":"verwaest@chromium.org","email":"verwaest@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 23 07:05:58 2013"},"message":"Make Object.freeze fast\n\nThis patch both speeds up the freeze operation itself, but also\nallows properties to remain in fast mode. Objects with non-empty\nelements backing stores still end up with slow elements.\n\nRelanding r14758 and r14759 with fix for Test262: only mark properties\nand elements READ_ONLY if they are not JS setter/getters. Tightened up\ntests to assert frozen-ness, and added targeted tests for the new code\n(covering accessors).\n\nBUG=v8:1858, 115960\nR=verwaest@chromium.org\n\nReview URL: https://chromiumcodereview.appspot.com/15691007\n\nPatch from Adam Klein <adamk@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14762 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"648e99e3087221f919065201a3be18dab830793f","author":{"name":"adamk@chromium.org","email":"adamk@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 22 18:53:58 2013"},"commit":"648e99e3087221f919065201a3be18dab830793f","committer":{"name":"adamk@chromium.org","email":"adamk@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 22 18:53:58 2013"},"message":"Make Object.freeze fast\n\nThis patch both speeds up the freeze operation itself, but also\nallows properties to remain in fast mode. Objects with non-empty\nelements backing stores still end up with slow elements.\n\nBUG=v8:1858, 115960\nR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/14888005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14758 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"aadfc39a12723bd4e28bb8a969264cca96ca523f","author":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 22 15:12:07 2013"},"commit":"aadfc39a12723bd4e28bb8a969264cca96ca523f","committer":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 22 15:12:07 2013"},"message":"Fix Windows shared library build.\n\nWe cannot dll-export templates.\n\nR=jkummerow@chromium.org\n\nReview URL: https://chromiumcodereview.appspot.com/15697006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14751 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1045d627335d7f595b52ba750d6a7ee6ec25c29c","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 22 06:35:38 2013"},"commit":"1045d627335d7f595b52ba750d6a7ee6ec25c29c","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 22 06:35:38 2013"},"message":"implement fast ReturnValue setters\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/15398008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14738 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"881476a7afec14b5ef03f8ff6400849af3cfe632","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 21 06:36:24 2013"},"commit":"881476a7afec14b5ef03f8ff6400849af3cfe632","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 21 06:36:24 2013"},"message":"new style of property/function callbacks\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/12494012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14725 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2ff3e2e0f4f127c02e2ca9bb764f9ff98217a449","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 15 15:23:53 2013"},"commit":"2ff3e2e0f4f127c02e2ca9bb764f9ff98217a449","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 15 15:23:53 2013"},"message":"Preallocate transitioned maps for TypedArrays.\n\nR=hpayer@chromium.org\n\nReview URL: https://codereview.chromium.org/15172003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14693 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cfe3e039ca95b2373377f1800105a7f029ef21a4","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 14 12:04:04 2013"},"commit":"cfe3e039ca95b2373377f1800105a7f029ef21a4","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 14 12:04:04 2013"},"message":"Don't use anonymous types declared in an anonymous union.\n\nThey are a non-standard extension (probably in C1X, IIRC), but clang is unhappy\nwith them when -Wnested-anon-types is enabled, which seems to be implied by\n-pedantic.\n\nWith this change and the previous fix for clang, we are now -Werror clean, even\non clang 3.3.\n\nR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/14850016\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14659 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b774c3edfe4c540c3c7bbb8b2433e92aa02950ea","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 13 14:18:05 2013"},"commit":"b774c3edfe4c540c3c7bbb8b2433e92aa02950ea","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 13 14:18:05 2013"},"message":"stop using AsciiValue\n\nTBR=svenpanne@chomium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/15129002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14645 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"05e8e0e7b407736f72ad500528cfd19c01ff8b07","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 13 07:35:26 2013"},"commit":"05e8e0e7b407736f72ad500528cfd19c01ff8b07","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 13 07:35:26 2013"},"message":"Elide hole checks on KeyedLoads of holey double arrays\n\nImproves NavierStokes by about 5%\n\nR=ulan@chromium.org\n\nReview URL: https://codereview.chromium.org/15014020\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14630 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d97fe8d4dfa468f8b14a96de07e288aab8c253f8","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 10 14:04:51 2013"},"commit":"d97fe8d4dfa468f8b14a96de07e288aab8c253f8","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 10 14:04:51 2013"},"message":"Add Persistent::ClearAndLeak.\n\nThis will be relevant after Persistent is changed to Dispose itself when\ndestructed. With Persistent::ClearAndLeak, Blink can take the ownership of the\nobject pointed by a Persistent and avoid it getting destructed.\n\nBUG=\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/15023010\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14624 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3f09e0a3d82541d251613596a57e1d8adca90629","author":{"name":"wingo@igalia.com","email":"wingo@igalia.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 10 12:59:20 2013"},"commit":"3f09e0a3d82541d251613596a57e1d8adca90629","committer":{"name":"wingo@igalia.com","email":"wingo@igalia.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 10 12:59:20 2013"},"message":"Remove separate maps for function instances\n\nES3 specified that functions created via Function() would have\nenumerable prototypes, unlike function literals.  For this reason, V8\nhas always had two prototypes for functions: \"function_map\" for\nliterals, and \"function_instance_map\" for \"function instances\": those\nfunctions created by Function().\n\nHowever, since 2009 or so, both maps have been the same!  Both have had\nwritable, non-enumerable prototypes.  Moreover, ES5 changed to specify\nthat function instances would have non-enumerable prototypes.\n\nThis patch removes the separate maps for function instances in sloppy\nand strict mode.\n\nR=mstarzinger@chromium.org\nTEST=mjsunit/function-prototype\nBUG=\n\nReview URL: https://codereview.chromium.org/14829005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14619 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0a224352ad5a2ad138e416d567e0542a88ae7ff5","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 10 12:48:53 2013"},"commit":"0a224352ad5a2ad138e416d567e0542a88ae7ff5","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 10 12:48:53 2013"},"message":"Deprecate the version of Context::New which returns a Persistent.\n\nBUG=\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/15059016\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14618 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"386de8010b60c157ed70403f2c829a6bf37a8432","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 07 13:29:24 2013"},"commit":"386de8010b60c157ed70403f2c829a6bf37a8432","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 07 13:29:24 2013"},"message":"deprecate Context::New which returns Persistent\n\nBUG=\nTBR=marja@chromium.org\n\nReview URL: https://codereview.chromium.org/14793004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14573 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"44ec65b1e11d5b7ffe2f3e361e27c2758bf18944","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 07 12:37:22 2013"},"commit":"44ec65b1e11d5b7ffe2f3e361e27c2758bf18944","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 07 12:37:22 2013"},"message":"Add Persistent<T>::Reset which disposes the handle and redirects it to point to another object.\n\nBUG=\nR=dcarney@chromium.org, svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/14788013\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14570 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"42a8ff87ba5798a8b4df2385c9c902453d04deae","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 07 10:44:30 2013"},"commit":"42a8ff87ba5798a8b4df2385c9c902453d04deae","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 07 10:44:30 2013"},"message":"add weakcallback without persistent copying\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/14908004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14566 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0cf128390f245b27f39c22ea52869e5404bd624b","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 03 06:47:24 2013"},"commit":"0cf128390f245b27f39c22ea52869e5404bd624b","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 03 06:47:24 2013"},"message":"deprecate WriteAscii and MayContainNonAscii\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/14638003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14533 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2e856d2c1629f4f065c4b17836b1d4904fa8d117","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 02 20:28:02 2013"},"commit":"2e856d2c1629f4f065c4b17836b1d4904fa8d117","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 02 20:28:02 2013"},"message":"expose AssertNoAllocation to api\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/14625003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14531 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cf5ff5a14cd677ff603b55ccf196e2913837008a","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 02 20:18:42 2013"},"commit":"cf5ff5a14cd677ff603b55ccf196e2913837008a","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 02 20:18:42 2013"},"message":"first step to remove unsafe handles\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/12729023\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14530 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6e861419167d6ada9c621a261b0fc4840f7802b3","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 02 11:36:48 2013"},"commit":"6e861419167d6ada9c621a261b0fc4840f7802b3","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 02 11:36:48 2013"},"message":"Implementation of Uint8ClampedArray.\n\nR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/14657003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14517 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1469acaa7fad002c4e1613a949606b77da21f582","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 30 18:53:27 2013"},"commit":"1469acaa7fad002c4e1613a949606b77da21f582","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 30 18:53:27 2013"},"message":"Add Value::Is* methods for typed arrays and ArrayBuffer\n\nR=rossberg\nBUG=\n\nCommitted https://code.google.com/p/v8/source/detail?r=14506\n\nReview URL: https://codereview.chromium.org/13977018\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14508 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b029ad420151d76ddbfb2674b26dd0988a488d83","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 30 18:02:22 2013"},"commit":"b029ad420151d76ddbfb2674b26dd0988a488d83","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 30 18:02:22 2013"},"message":"Fix typo\n\nR=rossberg@chromium.org\n\nBUG=\n\nCommitted: https://code.google.com/p/v8/source/detail?r=14505\n\nReview URL: https://codereview.chromium.org/13993029\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14506 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3fd6bb51f08dbcf855420b489808ffae00ee4c60","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 29 11:09:03 2013"},"commit":"3fd6bb51f08dbcf855420b489808ffae00ee4c60","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 29 11:09:03 2013"},"message":"First cut at API for native Typed Arrays.\n\nR=rossberg@chromium.org\n\nReview URL: https://codereview.chromium.org/14195034\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14476 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0a32b57594f36971ebb61c5299daf008018cff33","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 26 11:34:44 2013"},"commit":"0a32b57594f36971ebb61c5299daf008018cff33","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 26 11:34:44 2013"},"message":"HasOnlyAsciiChars can return incorrect results. Fixup usages and rename.\n\nR=ulan@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/14509012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14453 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f28bd182b04bea6f2cfe5d9d2b10363183c9df95","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 26 10:52:14 2013"},"commit":"f28bd182b04bea6f2cfe5d9d2b10363183c9df95","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 26 10:52:14 2013"},"message":"forgot parends around macro arg\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/14334009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14452 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d0f9b7386b164611936a04743a9ae2a2da06828a","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 26 07:28:08 2013"},"commit":"d0f9b7386b164611936a04743a9ae2a2da06828a","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 26 07:28:08 2013"},"message":"Defer slow branch of GetAlignedPointerFromInternalField\n\nBUG=\n\nReview URL: https://codereview.chromium.org/14137026\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14444 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7ed7af2f9fb88e72d4d0e568c2b6782e18bfd0f5","author":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 25 12:08:10 2013"},"commit":"7ed7af2f9fb88e72d4d0e568c2b6782e18bfd0f5","committer":{"name":"hpayer@chromium.org","email":"hpayer@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 25 12:08:10 2013"},"message":"Tell the GC prologues to construct RetainedObjectInfos only when needed.\n\nThe GC prologue is called by the GC, but also by the heap snapshotter. The\nRetainedObjectInfos are only needed by the heap snapshotter, so it's wasteful to\nconstruct them always. (And it will be even more wasteful when Blink migrates to\nthe new GC APIs, since after that point it no longer knows about object groups.)\n\nBUG=\n\nReview URL: https://codereview.chromium.org/14471028\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14439 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"44f2d534b162edc5da6f03d73a44c993b7dcdeb3","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 25 12:02:23 2013"},"commit":"44f2d534b162edc5da6f03d73a44c993b7dcdeb3","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 25 12:02:23 2013"},"message":"First cut at API for ES6 ArrayBuffers\n\nR=rossberg@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/13958007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14438 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e7c1f322a466b807079ed56e569e121a79918258","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 24 15:59:23 2013"},"commit":"e7c1f322a466b807079ed56e569e121a79918258","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 24 15:59:23 2013"},"message":"New GC APIs, try 2.\n\nWith these APIs, the embedder doesn't need to copy Persistent handles around.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/14007008\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14423 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"061f523b5a744a651eb9bf54ae99714756dcdf38","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 24 14:23:46 2013"},"commit":"061f523b5a744a651eb9bf54ae99714756dcdf38","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 24 14:23:46 2013"},"message":"Change cctest/test-lockers to not copy persistent handles around.\n\nInstead, create Local handles to pass them around. This also means that the\ncode needs to be shifted around a bit such that a handle scope exists when\ncreating threads.\n\nReview URL: https://codereview.chromium.org/14150017\n\nPatch from Jochen Eisinger <jochen@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14420 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"555c78c5136f49370ed3c9d60603891431c2bcc6","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 22 15:20:28 2013"},"commit":"555c78c5136f49370ed3c9d60603891431c2bcc6","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 22 15:20:28 2013"},"message":"create uniform string api\n\nR=yangguo@chromium.org\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/12426015\n\nPatch from Dan Carney <dcarney@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14379 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4d1362720f2cf782b7f1c3759d09aea7c0e10331","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 22 15:01:45 2013"},"commit":"4d1362720f2cf782b7f1c3759d09aea7c0e10331","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 22 15:01:45 2013"},"message":"Add methods to allow resuming execution after calling TerminateExecution().\n\nR=mvstanton@chromium.org\nBUG=v8:2361\n\nReview URL: https://chromiumcodereview.appspot.com/14401008\n\nPatch from Andrew Paprocki <andrew@ishiboo.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14378 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d666b24255f07a6a94acb430b7d25ffa16fd15ec","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 16 14:55:45 2013"},"commit":"d666b24255f07a6a94acb430b7d25ffa16fd15ec","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 16 14:55:45 2013"},"message":"Fix shared library build of preparser: properly #undef V8EXPORT\n\nReview URL: https://codereview.chromium.org/14293010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14290 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e8bc8d76ae8870306349793094c498ffc605d392","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 16 12:57:01 2013"},"commit":"e8bc8d76ae8870306349793094c498ffc605d392","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 16 12:57:01 2013"},"message":"New GC related APIs: Implicit references.\n\nWhen using these APIs, the embedder doesn't need to copy Persistent handles around.\n\nBUG=NONE\n\nReview URL: https://codereview.chromium.org/14175005\n\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14283 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f5b660ac9775bb4f8ea49322304b965bbf52d2e4","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 12 12:48:27 2013"},"commit":"f5b660ac9775bb4f8ea49322304b965bbf52d2e4","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 12 12:48:27 2013"},"message":"Intel VTune integration for V8/d8\n\nIn this patch, we added the JIT code event handler for Vtune. Most of the code is in the\nfolder src/third_party/vtune. Two APIs are added in include/v8.h to get the requirement info\nfrom V8.\n\nWe add the v8_enable_vtunejit parameter for GYP to enable these Vtune code compilation.\nvTune::InitilizeVtuneForV8() is invoked in the embedder of V8 to make sure it's invokded if\nvtune support is enabled.\n\nReview URL: https://codereview.chromium.org/11574031\nPatch from Chunyang Dai <chunyang.dai@intel.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14253 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1c8f45f7860e9d97f8eb5e4dec2f0f58ddb4ee41","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 10 15:29:05 2013"},"commit":"1c8f45f7860e9d97f8eb5e4dec2f0f58ddb4ee41","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 10 15:29:05 2013"},"message":"Mark non-isolatified profiler API as V8_DEPRECATED\n\nBUG=None\n\nReview URL: https://codereview.chromium.org/12413027\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14216 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"45125e64802b7f6ac758cd2c75582064fbdc78f1","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 10 14:53:03 2013"},"commit":"45125e64802b7f6ac758cd2c75582064fbdc78f1","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 10 14:53:03 2013"},"message":"New GC related APIs.\n\nWhen using these APIs, the embedder doesn't need to copy Persistent handles around.\n\nBUG=NONE\n\nReview URL: https://codereview.chromium.org/13786002\nPatch from Marja Hölttä <marja@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14215 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dc72037e1095ddc5a6edbc6772bafd070b3a5687","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 10 12:16:29 2013"},"commit":"dc72037e1095ddc5a6edbc6772bafd070b3a5687","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 10 12:16:29 2013"},"message":"ES6 symbols: extend V8 API to support symbols\n\nSpecifically:\n- Introduce Symbol and SymbolObject classes.\n- Generalise Object::Has and Object::Delete to arbitrary Value-typed keys.\n- Generalise some places in the API implementation from String to Name.\n\nIt is not possible to intercept symbol-named properties. That is consistent with the idea that symbols are private and should not leak.\n\nR=svenpanne@chromium.org\nBUG=v8:2158\n\nReview URL: https://codereview.chromium.org/13626002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14210 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a22790bfed00803826893c983360915f57cb8290","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 10 09:34:37 2013"},"commit":"a22790bfed00803826893c983360915f57cb8290","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 10 09:34:37 2013"},"message":"Change Context::New to not create persistent handles.\n\nThis moves the responsibility of putting a new context into a persistent\nhandle to the embedder. Also it removes one API function where the copy\nconstructor for persistent handles is needed.\n\nR=svenpanne@chromium.org\n\nReview URL: https://codereview.chromium.org/13799003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14203 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d04de1fe1a9ccbcd48e96849df646d04c9a91d14","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 09 07:34:32 2013"},"commit":"d04de1fe1a9ccbcd48e96849df646d04c9a91d14","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 09 07:34:32 2013"},"message":"Move context retrieval method around. Use delegation for implementation.\n\nThis is a refactoring of https://code.google.com/p/v8/source/detail?r=14146.\n\nReview URL: https://codereview.chromium.org/13940003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14171 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c63855585302e65c805de8f1a615038ed2479078","author":{"name":"haraken@chromium.org","email":"haraken@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 05 02:17:56 2013"},"commit":"c63855585302e65c805de8f1a615038ed2479078","committer":{"name":"haraken@chromium.org","email":"haraken@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 05 02:17:56 2013"},"message":"Pass an isolate to GetCurrent()\n\nTEST=test-api.cc:GetCallingContextCallback\n\nReview URL: https://chromiumcodereview.appspot.com//13426002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14146 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9e757a604c9aa264e5cd5018fa2ad139c52b67f2","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 04 12:10:23 2013"},"commit":"9e757a604c9aa264e5cd5018fa2ad139c52b67f2","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 04 12:10:23 2013"},"message":"Make __proto__ a real JavaScript accessor property.\n\nThis turns the __proto__ callback from a foreign callback into a real\nJavaScript accessor. It makes the accessor behavior of this property\nexplicit.\n\nR=rossberg@chromium.org\nBUG=v8:1949,v8:2606\nTEST=mjsunit/regress/regress-2606\n\nReview URL: https://codereview.chromium.org/13533004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14139 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"359d4a2869759e7f95958c258e6253abe5bd031d","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 02 08:16:53 2013"},"commit":"359d4a2869759e7f95958c258e6253abe5bd031d","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 02 08:16:53 2013"},"message":"Isolatify CPU profiler public API\n\nRelanding r14006 and r14009 that were reverted in r14031\n\nTBR=danno\nBUG=None\n\nReview URL: https://codereview.chromium.org/13460002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14108 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"04cb86899cb01887f0455dd19b66e9a8ccde1560","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 02 08:09:59 2013"},"commit":"04cb86899cb01887f0455dd19b66e9a8ccde1560","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 02 08:09:59 2013"},"message":"Deprecate HeapSnapshot type\n\nRe-landing r14005 that was reverted in r14031\n\nTBR=danno\nBUG=None\n\nReview URL: https://codereview.chromium.org/13430003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14107 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"047f6f97d99e3192a1ea33e6ff0c798dcd1a8c63","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 02 08:03:01 2013"},"commit":"047f6f97d99e3192a1ea33e6ff0c798dcd1a8c63","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 02 08:03:01 2013"},"message":"Isolatify HeapProfiler\n\nRe-landing r13997 that was reverted in r14031\n\nTBR=danno\nBUG=None\n\nReview URL: https://codereview.chromium.org/13458003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14106 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c7532f0f0b1c96e2b68940b4953d5e48f38deb17","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 02 07:48:25 2013"},"commit":"c7532f0f0b1c96e2b68940b4953d5e48f38deb17","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 02 07:48:25 2013"},"message":"Allow recording individual samples in addition to the aggregated CPU profiles\n\nRe-landing r13980 that was reverted in r14031\n\nTBR=danno\nBUG=None\n\nReview URL: https://codereview.chromium.org/13454002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14104 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"83d4a41dec58e6dc72dd0b40161d022d75f056e2","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 22 16:33:50 2013"},"commit":"83d4a41dec58e6dc72dd0b40161d022d75f056e2","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 22 16:33:50 2013"},"message":"ES6 symbols: turn symbols into a proper primitive type\n\n(qua last week's TC39)\n\nSpecifically:\n- Install Symbol constructor function on the global object.\n- Adjust code generation for typeof.\n- Remove IsSymbol built-in, IS_SYMBOL macro now defined using typeof.\n- Remove hack that allowed symbols as constructor results, and some other special cases.\n- Remove symbol_delegate and GetDelegate function.\n- Extend ToBoolean stub to handle symbols.\n- Extend ToNumber to return NaN on symbols.\n- Poison symbol's toString function, and thereby ToString on symbols.\n\nR=mstarzinger@chromium.org\nBUG=v8:2158\n\nReview URL: https://codereview.chromium.org/12957004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14051 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ed3809c3181ac940ff9c89686180e2b5580ee50e","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 21 14:42:17 2013"},"commit":"ed3809c3181ac940ff9c89686180e2b5580ee50e","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 21 14:42:17 2013"},"message":"Maintain API compatibility with older versions of V8.\n\nRevert \"Allow recording individual samples in addition to the aggregated CPU profiles\"\nRevert \"Isolatify CPU profiler\"\nRevert \"Isolatify HeapProfiler\"\nRevert \"Deprecate HeapSnapshot type\"\nRevert \"Isolatify CPU profiler public API\"\nRevert \"MSVS compilation fix after r14006\"\nRevert \"Add methods to allow resuming execution after calling TerminateExecution().\"\n\nR=jkummerow@chromium.org,mstarzinger@chromium.org\n\nReview URL: https://codereview.chromium.org/12475016\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14031 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"53adf3b19c97e88d6db2fe15eab8d5401de6b3c6","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 21 10:47:34 2013"},"commit":"53adf3b19c97e88d6db2fe15eab8d5401de6b3c6","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 21 10:47:34 2013"},"message":"Add methods to allow resuming execution after calling TerminateExecution().\n\nTwo new methods are added to allow embedders to determine that execution\nshould be resumed at a particular point in the stack without being forced\nto unwind all JS frames.\n\n* V8::CancelTerminateExecution() -- When execution is terminated via a call\n  to V8::TerminateExecution(), this method can be called to clear the\n  termination exception so that the engine can continue to be used.\n\n* TryCatch::HasTerminated() -- When a TryCatch has caught a termination\n  exception, HasTerminated() will return true to indicate it is valid to\n  call V8::ResumeExecution() if desired.\n\nA test case is added to cctest/test-thread-termination.cc.\n\nBUG=v8:2361\n\nPatch from Andrew Paprocki <andrew@ishiboo.com>.\n\nReview URL: https://chromiumcodereview.appspot.com/11142013\nPatch from Andrew Paprocki <andrew@ishiboo.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14022 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"95bfca8828f96128f0eb94ff3b3cbde5ff6a8a0b","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 20 13:07:48 2013"},"commit":"95bfca8828f96128f0eb94ff3b3cbde5ff6a8a0b","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 20 13:07:48 2013"},"message":"Isolatify CPU profiler public API\n\nBUG=None\n\nReview URL: https://codereview.chromium.org/12950004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14006 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8204dfa186ab3e7a88aaf9482fdaddec833fa18b","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 20 12:41:00 2013"},"commit":"8204dfa186ab3e7a88aaf9482fdaddec833fa18b","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 20 12:41:00 2013"},"message":"Deprecate HeapSnapshot type\n\nThere is only one type of heap snapshot - kFull and we are not going to add any new types.\n\nBUG=None\n\nReview URL: https://codereview.chromium.org/12943004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@14005 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d4477160290a6a3c11ee05f6439e5cb60cfd75d9","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 20 08:38:17 2013"},"commit":"d4477160290a6a3c11ee05f6439e5cb60cfd75d9","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 20 08:38:17 2013"},"message":"Isolatify HeapProfiler\n\nAdded instance method on v8::Isolate for retrieving instance of v8::HeapProfiler for that isolate. All static methods of v8::HeapProfiler are deprecated, corresponding instance methods are added to v8::HeapProfiler.\n\nAll static methods on v8::internal::HeapProfiler were converted into instance ones.\n\nBUG=None\n\nReview URL: https://codereview.chromium.org/12907006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13997 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"31e51f98fa0a22808481aa029f136dfe97db12fb","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 19 15:17:22 2013"},"commit":"31e51f98fa0a22808481aa029f136dfe97db12fb","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 19 15:17:22 2013"},"message":"Sort forward declarations in v8.h in alphabetical order\n\nBUG=None\n\nReview URL: https://codereview.chromium.org/12554013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13990 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a5be5da2e83485a81153571eff8946974dd7ff5b","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 19 08:11:56 2013"},"commit":"a5be5da2e83485a81153571eff8946974dd7ff5b","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 19 08:11:56 2013"},"message":"Allow recording individual samples in addition to the aggregated CPU profiles\n\nCPU profiler API is extended with methods that allow to retrieve individual samples from profile. Each sample is presented as a pointer to a node in the top-down profile tree. The samples will let us tie JS performance to time.\n\nBUG=None\n\nReview URL: https://codereview.chromium.org/12919002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13980 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9f7300043b34d8782ba7bca41b4f4b8d4af49397","author":{"name":"alph@chromium.org","email":"alph@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 15 13:07:39 2013"},"commit":"9f7300043b34d8782ba7bca41b4f4b8d4af49397","committer":{"name":"alph@chromium.org","email":"alph@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 15 13:07:39 2013"},"message":"Remove kContext node type introduced in r13936\n\nIt has been decided not to pollute node types with extra values.\n\nReview URL: https://codereview.chromium.org//12833005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13959 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b3ee84d361a15a38d89e9b27de59e01ec8f4cf27","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 15 12:46:45 2013"},"commit":"b3ee84d361a15a38d89e9b27de59e01ec8f4cf27","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 15 12:46:45 2013"},"message":"Remove bottom-up CPU profile\n\nBottom-up view of CPU profile can be restored based on top-down profile data. So there is no need to spend resources on creating both of them inside V8.\n\nBUG=None\n\nReview URL: https://codereview.chromium.org/12825003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13958 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"53310ac152bd58c9d9c297084345f6163307436c","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 15 12:06:53 2013"},"commit":"53310ac152bd58c9d9c297084345f6163307436c","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 15 12:06:53 2013"},"message":"Added a version of the v8::HandleScope constructor with an Isolate and use that consistently.\n\nI tried to limit the use of v8::Isolate::GetCurrent() and v8::internal::Isolate::Current() as much as possible, but sometimes this would have involved restructuring tests quite a bit, which is better left for a separate CL.\n\nBUG=v8:2487\n\nReview URL: https://codereview.chromium.org/12716010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13953 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fbe34d4ba5755effdde6389992d5e9dacdc74cbe","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 13 20:04:50 2013"},"commit":"fbe34d4ba5755effdde6389992d5e9dacdc74cbe","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 13 20:04:50 2013"},"message":"remove latin-1 flag\n\nR=yangguo@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/12700008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13939 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1afc70a3327494f0bdaf18bc96c98ada0a6c287f","author":{"name":"alph@chromium.org","email":"alph@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 13 17:38:04 2013"},"commit":"1afc70a3327494f0bdaf18bc96c98ada0a6c287f","committer":{"name":"alph@chromium.org","email":"alph@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 13 17:38:04 2013"},"message":"Fix huge heap snapshot when a heavily shared context has many variables\n\nPrevously v8 put a link to each context variable into a function where\nthe variable is visible.\nBecause of that if there are N functions sharing a context having M variables\nthen N*M links were created for the snapshot.\nThe fix makes v8 to put the links into the context object.\n\nBUG=145687\nTEST=test-heap-snapshot/ManyLocalsInSharedContext\n\nReview URL: https://codereview.appspot.com/7715044\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13936 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8db737a58302d90b414d572953fe8cdb0dddc452","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 13 13:15:09 2013"},"commit":"8db737a58302d90b414d572953fe8cdb0dddc452","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 13 13:15:09 2013"},"message":"Made AdjustAmountOfExternalAllocatedMemory an instance method of Isolate\n\nBUG=v8:2487\n\nReview URL: https://codereview.chromium.org/12790004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13933 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"17500545a4fc9e44bd8467c295ca8e4791470e76","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 08 08:37:28 2013"},"commit":"17500545a4fc9e44bd8467c295ca8e4791470e76","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 08 08:37:28 2013"},"message":"Enable deprecatations (again).\n\nHopefully we will win the race this time...\n\nBUG=v8:2487\n\nReview URL: https://codereview.chromium.org/12554004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13878 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"25058ddd855b8877ee1078cab022a61677065f86","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 07 11:42:58 2013"},"commit":"25058ddd855b8877ee1078cab022a61677065f86","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 07 11:42:58 2013"},"message":"Runtime version of declarative native accessors.\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/12297012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13856 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4a7991321d9ddd575911359affa2d63b830beab9","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 07 11:30:36 2013"},"commit":"4a7991321d9ddd575911359affa2d63b830beab9","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 07 11:30:36 2013"},"message":"Enable deprecations again.\n\nReview URL: https://codereview.chromium.org/12590003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13855 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"764e1a0fcf7dd10616e86b09cbbb87d8e503393f","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 01 10:34:31 2013"},"commit":"764e1a0fcf7dd10616e86b09cbbb87d8e503393f","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 01 10:34:31 2013"},"message":"ES6 symbols: Introduce Symbol class, along with abstract Name class\n\nThe new instance type 'Symbol' represents ES6 symbols (a.k.a. private/unique names). Currently, symbols are simple data objects that only carry a hash code, random-generated upon allocation.\n\nThe new type 'Name' now serves as the common super class for strings and symbols, and is supposed to represent property names. We will eventually migrate APIs from String to Name for the standard key type.\n\nStrings and symbols share the same hash field representation, via the Name class. This way, we should be able to use the same code paths for symbols and internalized strings in most cases. Also, Symbol's instance type code is allocated adjacent to internalized string codes in the enum, allowing a simple range check for the common case.\n\nBaseline CL: https://codereview.chromium.org/12210083/\n\nR=mstarzinger@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/12223071\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13783 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"55f93b5532643e38e9b84aaddca477f60d5b65b2","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Feb 28 17:03:34 2013"},"commit":"55f93b5532643e38e9b84aaddca477f60d5b65b2","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Feb 28 17:03:34 2013"},"message":"Renamed \"symbols\" to \"internalized strings\" throughout the code base,\nin preparation of the introduction of ES6 'symbols' (aka private/unique names).\n\nThe SymbolTable became the StringTable. I also made sure to adapt all comments. The only remaining use of the term \"symbol\" (other than unrelated uses in the parser and such) is now 'NewSymbol' in the API and the 'V8.KeyedLoadGenericSymbol' counter, changing which might break embedders.\n\nThe one functional change in this CL is that I removed the former 'empty_string' constant, since it is redundant given the 'empty_symbol' constant that we also had (and both were used inconsistently).\n\nR=yangguo@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/12210083\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13781 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"714567139288954e861dd1c6e2a81b454b53b1ed","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 27 14:35:39 2013"},"commit":"714567139288954e861dd1c6e2a81b454b53b1ed","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 27 14:35:39 2013"},"message":"Make message listener API backwards compatible.\n\nR=ulan@chromium.org\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/12217066\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13762 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"be8e8f7528d03ffc55defde653fb82f08e3068e2","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 18 18:06:12 2013"},"commit":"be8e8f7528d03ffc55defde653fb82f08e3068e2","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 18 18:06:12 2013"},"message":"Improve the JitCodeEventHandler API to add support for line position information.\n\nThis includes:\n\n* adding the CODE_ADD_LINE_POS_INFO, CODE_START_LINE_INFO_RECORDING, CODE_END_LINE_INFO_RECORDING event and the corresponding functionality.\n * adding the JITCodeLineInfo struct to record the code line info. I added this definition because Danno mentioned that \"we'd like to cleanup and decouple the external debugging functionality\"\n * some other small changes.\n\nReview URL: https://chromiumcodereview.appspot.com/12223027\nPatch from Chunyang Dai <chunyang.dai@intel.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13686 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"072bad2ed530f5fba93abec477d2d7ed83cbd400","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 18 10:27:46 2013"},"commit":"072bad2ed530f5fba93abec477d2d7ed83cbd400","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 18 10:27:46 2013"},"message":"Enable Latin-1\n\nR=yangguo@chromium.org\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/12039038\nPatch from Dan Carney <dcarney@google.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13682 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0da6e525b7bc24a203cd5af76fb48c6954a38c41","author":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Feb 12 14:33:08 2013"},"commit":"0da6e525b7bc24a203cd5af76fb48c6954a38c41","committer":{"name":"dcarney@chromium.org","email":"dcarney@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Feb 12 14:33:08 2013"},"message":"Split AccessorInfo into DeclaredAccessorInfo and ExecutableAccessorInfo\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://codereview.chromium.org/12213012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13649 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3b08a1f82c312a68bd889419ab4d3536d9d802ef","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Feb 08 12:41:55 2013"},"commit":"3b08a1f82c312a68bd889419ab4d3536d9d802ef","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Feb 08 12:41:55 2013"},"message":"Added new GetHeapStatistics API entry and deprecated old one.\n\nSimplified the HeapStatistics class a bit, following Uncle Bob's advice that\nadding accessors to DTOs only satisfies some design fundamentalists, but serves\nno other purpose. :-)\n\nReview URL: https://codereview.chromium.org/12207076\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13631 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"52d10a68cbd428f90e91e3dd91fa5c06acceac5b","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 25 08:31:46 2013"},"commit":"52d10a68cbd428f90e91e3dd91fa5c06acceac5b","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 25 08:31:46 2013"},"message":"Add Isolate parameter to Persistent class.\n\nBUG=v8:2487\n\nReview URL: https://codereview.chromium.org/12033011\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13501 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c8cf5d90aa1b8bde03258ea2dec550d1163bd3e8","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 24 15:53:16 2013"},"commit":"c8cf5d90aa1b8bde03258ea2dec550d1163bd3e8","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 24 15:53:16 2013"},"message":"Implement VisitHandlesInNewSpaceWithClassIds()\n\nBUG=\nTEST=test-api.cc::PersistentHandleInNewSpaceVisitor\n\nReview URL: https://codereview.chromium.org/11365131\nPatch from Kentaro Hara <haraken@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13496 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"250023a68da6959856dc28c36a2caa614dfc6db7","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 24 07:54:40 2013"},"commit":"250023a68da6959856dc28c36a2caa614dfc6db7","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 24 07:54:40 2013"},"message":"Implicit references are missing in heap profiles\nReview URL: https://codereview.chromium.org/11953043\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13486 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8404f71d147f888b489dc0c3e297f7c4cd074d93","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 23 12:04:55 2013"},"commit":"8404f71d147f888b489dc0c3e297f7c4cd074d93","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 23 12:04:55 2013"},"message":"Added a workaround for Windows compilation problems related to V8EXPORT.\n\nThe underlying problem is a bit unclear, but at least this CL makes VS happy.\n\nBUG=v8:2507\n\nReview URL: https://codereview.chromium.org/12039037\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13470 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fab9a39d9ddf85048bbf1e1f0e99267f24e54cf1","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 18 07:20:17 2013"},"commit":"fab9a39d9ddf85048bbf1e1f0e99267f24e54cf1","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 18 07:20:17 2013"},"message":"Make the Isolate parameter mandatory in Locker and Unlocker classes.\n\nNote that leaving out the Isolate parameter previously had a very special\nmeaning, namely \"use the *default* Isolate\", i.e. the one magically created at\nprogram initialization time. All other API entries use the meaning \"current\nIsolate\", which is different in a multi-threaded setting and confusing.\n\nTemporarily disabled deprecations until Chrome is ready.\n\nBUG=v8:2487\n\nReview URL: https://codereview.chromium.org/11970009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13419 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fd4d32e7338680fbf838a242562bf759695f7330","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 16 16:33:09 2013"},"commit":"fd4d32e7338680fbf838a242562bf759695f7330","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 16 16:33:09 2013"},"message":"Inline SetWrapperClassId() and WrapperClassId()\n\nBUG=\nTEST=test-api.cc (WrapperClassId)\n\nReview URL: https://codereview.chromium.org/11961014\nPatch from Kentaro Hara <haraken@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13405 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"10436443fee70b420c8376dbac87a5ba891c5529","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 16 12:27:38 2013"},"commit":"10436443fee70b420c8376dbac87a5ba891c5529","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 16 12:27:38 2013"},"message":"Avoid pointer underflow in CopyCharsUnsigned.\n\nR=dcarney@chromium.org\nBUG=v8:2493\n\nReview URL: https://chromiumcodereview.appspot.com/11961012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13398 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6e6426627e1a6ba7fcc625a2e6805386f9fb1ba7","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 16 12:11:43 2013"},"commit":"6e6426627e1a6ba7fcc625a2e6805386f9fb1ba7","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 16 12:11:43 2013"},"message":"Implement Context::GetIsolate()\n\nBUG=\nTEST=test-api.cc (IsolateOfContext)\n\nReview URL: https://codereview.chromium.org/11968011\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13397 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4e6525da7e19d3d3980057967b241dbc8c62ace5","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 16 10:10:53 2013"},"commit":"4e6525da7e19d3d3980057967b241dbc8c62ace5","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 16 10:10:53 2013"},"message":"Inline MarkIndependent(), MarkPartiallyDependent(), IsIndependent()\n\nTEST=test-api.cc (IndependentWeakHandle, ApiObjectGroupsCycleForScavenger)\n\nReview URL: https://codereview.chromium.org/11879044\nPatch from Kentaro Hara <haraken@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13391 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"59ec70ce77c0dcbd5c22cf4de7f6ef1d2d3c0954","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 15 10:04:18 2013"},"commit":"59ec70ce77c0dcbd5c22cf4de7f6ef1d2d3c0954","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 15 10:04:18 2013"},"message":"Fix windows build wrt symbol export.\n\nR=dcarney@chromium.org\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/11888022\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13381 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1ac3949a93e4bdc38f7720317593cf88b94560a5","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 14 13:41:08 2013"},"commit":"1ac3949a93e4bdc38f7720317593cf88b94560a5","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 14 13:41:08 2013"},"message":"Removed deprecated functions from v8's external API.\n\nRemoved the following deprecated functions:\n\n   * Object::GetPointerFromInternalField\n   * Object::SetPointerInInternalField\n   * External::Wrap\n   * External::Unwrap\n   * Context::GetData\n   * Context::SetData\n\nThey have been deprecated in the 3.15 branch and are not used by Chrome anymore.\nFurthermore, judging from bug reports and email threads, embedders like node.js\nand others are already using 3.15, too. All removed API entries can be emulated\nby a one-liner, so adapting should not be hard for anybody.\n\nWe want to introduce more deprecations soon, but to keep things simple and avoid\nhaving old and not-so-old deprecations in v8.h, the 3.15 deprecations are now\nremoved.\n\nIn general, the strategy of keeping deprecated things for one stable release and\nthen removing them seems to be a good compromise between a maintenance nightmare\nand annoying external embedders. :-)\n\nReview URL: https://codereview.chromium.org/11885019\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13372 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cc3bb60317e17a0ef747fdaecd0b1840d3142feb","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 14 11:22:05 2013"},"commit":"cc3bb60317e17a0ef747fdaecd0b1840d3142feb","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 14 11:22:05 2013"},"message":"Prepare API for webkit use of Latin-1\n\nR=yangguo@chromium.org\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/11852019\nPatch from Dan Carney <dcarney@google.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13369 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7bea34038dbfeae3de40f462eed7c96aa3df6eb8","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 14 07:30:13 2013"},"commit":"7bea34038dbfeae3de40f462eed7c96aa3df6eb8","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 14 07:30:13 2013"},"message":"Consistently use V8EXPORT on all classes and not on individual methods.\n\nReview URL: https://codereview.chromium.org/11861006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13365 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"529f801fde4ce90da02eb5424beb8ee78769d797","author":{"name":"mvstanton@chromium.org","email":"mvstanton@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 08 09:03:16 2013"},"commit":"529f801fde4ce90da02eb5424beb8ee78769d797","committer":{"name":"mvstanton@chromium.org","email":"mvstanton@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 08 09:03:16 2013"},"message":"Adapt Danno's Track Allocation Info idea to fast literals. When allocating a literal array,\nwe store an AllocationSiteInfo object right after the JSArray, with a pointer to the\nboilerplate object. Later, if the array transitions we check for the continued existence\nof the temporary AllocationSiteInfo object (has no roots). If found, we'll use it to\ntransition the boilerplate array as well.\n\nDanno's original changeset: https://codereview.chromium.org/10615002/\n\nReview URL: https://codereview.chromium.org/11663005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13330 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b25c040c2c0978814add19fee645470407c7292b","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 19 10:28:36 2012"},"commit":"b25c040c2c0978814add19fee645470407c7292b","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 19 10:28:36 2012"},"message":"Extend API to allow setting length property for function templates.\n\nR=yangguo@chromium.org\nBUG=125308\n\nReview URL: https://codereview.chromium.org/11631002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13240 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7597d5011e1b82aed0ae2bdd07e8ef1721069bd8","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 18 09:22:25 2012"},"commit":"7597d5011e1b82aed0ae2bdd07e8ef1721069bd8","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 18 09:22:25 2012"},"message":"include: fix String::New() comment\n\nReview URL: https://chromiumcodereview.appspot.com/11446035\nPatch from Ben Noordhuis <ben@c9.io>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13231 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4cd41edcd9bf5556e685ca534bfaa34d668f22ca","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Dec 13 16:38:49 2012"},"commit":"4cd41edcd9bf5556e685ca534bfaa34d668f22ca","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Dec 13 16:38:49 2012"},"message":"Add methods to allow resuming execution after calling TerminateExecution().\n\nTwo new methods are added to allow embedders to determine that execution\nshould be resumed at a particular point in the stack without being forced\nto unwind all JS frames.\n\n* V8::ResumeExecution() -- When execution is terminated via a call to\n  V8::TerminateExecution(), this method can be called to clear the\n  termination exception so that the engine can continue to be used.\n\n* TryCatch::HasTerminated() -- When a TryCatch has caught a termination\n  exception, HasTerminated() will return true to indicate it is valid to\n  call V8::ResumeExecution() if desired.\n\nA test case is added to cctest/test-thread-termination.cc.\n\nBUG=v8:2361\n\nPatch from Andrew Paprocki <andrew@ishiboo.com>.\n\nReview URL: https://chromiumcodereview.appspot.com/11142013\nPatch from Andrew Paprocki <andrew@ishiboo.com>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13218 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"608bce502377448ac9d23f4a27e70bd750458603","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Dec 07 13:47:42 2012"},"commit":"608bce502377448ac9d23f4a27e70bd750458603","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Dec 07 13:47:42 2012"},"message":"Remove SlidingStateWindow and related code.\n\nReview URL: https://codereview.chromium.org/11441034\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13172 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e46b251324d5fe7225797124dedc1c02311e53c7","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 05 10:14:10 2012"},"commit":"e46b251324d5fe7225797124dedc1c02311e53c7","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 05 10:14:10 2012"},"message":"Pass Isolate to MakeWeak(), IsWeak(), and AddObjectGroup().\n\nBUG=\nTEST=cctest/test-api/ApiObjectGroupsCycle\n\nReview URL: https://codereview.chromium.org/11360082\nPatch from Kentaro Hara <haraken@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13139 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0e3fece02d574f2bae16b77e8a44c5dd2b4555c6","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 05 09:13:53 2012"},"commit":"0e3fece02d574f2bae16b77e8a44c5dd2b4555c6","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 05 09:13:53 2012"},"message":"Pass Isolate to Local<T>::New()\n\nOur profiling revealed that Local<T>::New() is one of bottlenecks of DOM bindings.\n\nBUG=\nTEST=cctest/test-api/LocalHandle\n\nReview URL: https://codereview.chromium.org/11316331\nPatch from Kentaro Hara <haraken@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13138 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cec0745aa26114b2022ca8bd855088140a4d7253","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 04 17:17:55 2012"},"commit":"cec0745aa26114b2022ca8bd855088140a4d7253","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 04 17:17:55 2012"},"message":"Introduce callback for resolving global object name while taking heap snapshot\n\nHeap profiler currently gets \"document\" of global objects while taking snapshot (to later retrieve its \"URL\"). This is unsafe as there may be no current v8 context when the property is requested while corresponding property accessor may make some assumptions about the context stack during its invokation. Several crashes were reported due to this problem:\nhttps://bugs.webkit.org/show_bug.cgi?id=103076\nhttps://crbug.com/162121\nhttps://crbug.com/132727\n\nThis patch adds a callback for resolving global object names and avoid the crashes.\nReview URL: https://codereview.chromium.org/11415203\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13137 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1d716ec259bcf484ec0bbd3de261fe6f2de39986","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 04 13:54:22 2012"},"commit":"1d716ec259bcf484ec0bbd3de261fe6f2de39986","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 04 13:54:22 2012"},"message":"Force inlining for hot interface functions.\n\nReview URL: https://codereview.chromium.org/11411355\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13135 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"76dfa8ed608dc22eaf42ebfe907b1ee7419a3577","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 04 12:14:19 2012"},"commit":"76dfa8ed608dc22eaf42ebfe907b1ee7419a3577","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 04 12:14:19 2012"},"message":"Enforce stack allocation of TryCatch blocks.\n\nR=svenpanne@chromium.org\nBUG=v8:2166,chromium:152389\n\nReview URL: https://codereview.chromium.org/11411353\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13130 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c8bc4db52ff529780b1f66271f899a7fc02ad606","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 21 10:16:07 2012"},"commit":"c8bc4db52ff529780b1f66271f899a7fc02ad606","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 21 10:16:07 2012"},"message":"Enable deprecations.\n\nIn addition, use a more common style in the preprocessor condition, making\ne.g. '-DV8_ENABLE_DEPRECATIONS=0' do the expected thing. Removed a useles\n\nReview URL: https://codereview.chromium.org/11413113\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@13024 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a65e166aa7f2c131ff3c21b4e5b40e154912c59e","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 08 15:01:26 2012"},"commit":"a65e166aa7f2c131ff3c21b4e5b40e154912c59e","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 08 15:01:26 2012"},"message":"Implement MarkIndependent(Isolate*) and MarkPartiallyDependent(Isolate*)\n\nBUG=\nTEST=cctest/test-api/IndependentWeakHandle\n\nReview URL: https://codereview.chromium.org/11369131\nPatch from Kentaro Hara <haraken@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12904 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"762c36b6fba497ed1cee6f135e50ec9b31b0cb6f","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 06 17:32:15 2012"},"commit":"762c36b6fba497ed1cee6f135e50ec9b31b0cb6f","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 06 17:32:15 2012"},"message":"Allow collection of DOM objects in minor GC cycles.\n\nA design document: https://docs.google.com/a/google.com/document/d/16DeHrzkm3cO9XCPT1aK3Y5qgUxXB3RFmueqQWYmN2rI/edit\n\nPerformance & memory results: https://docs.google.com/a/google.com/document/d/1h0-EsHu7T0sSMuZm5eE0r1e8sCAzY3weLvsDUpOSngE/edit\n\nThe WebKit side patch: https://bugs.webkit.org/show_bug.cgi?id=98725\n\nAt present no one is using the V8 APIs this patch is going to add. After this patch is landed, the WebKit side patch will use it.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/11085015\nPatch from Kentaro Hara <haraken@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12874 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c54fc70f13d877f1e7c02b989f3752113f40874d","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 06 16:47:15 2012"},"commit":"c54fc70f13d877f1e7c02b989f3752113f40874d","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 06 16:47:15 2012"},"message":"Store Object.observe state per-isolate rather than per-context\n\nThis requires adding a new JSObject to the strong root list and populating it from\nobject-observe.js. The main other change is that we now directly use ObjectHashTable\nfrom JS rather than using WeakMap, since using the latter would end up leaking whichever\nContext initialized that observation state.\n\nAdded a test via the API showing that different contexts all end up working on the same state.\n\nReview URL: https://codereview.chromium.org/11274014\nPatch from Adam Klein <adamk@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12873 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b22aacc68ec9b35b627ea783c167da0c7cb20a88","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 06 13:07:06 2012"},"commit":"b22aacc68ec9b35b627ea783c167da0c7cb20a88","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 06 13:07:06 2012"},"message":"Fixed visibility attribute for GetPointerFromInternalField\n\nTBR=verwaest@chromium.org\n\nReview URL: https://codereview.chromium.org/11312099\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12868 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b77e629f1ada1f6db1ed8a9a346dedcb95b17848","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 05 13:20:45 2012"},"commit":"b77e629f1ada1f6db1ed8a9a346dedcb95b17848","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 05 13:20:45 2012"},"message":"Implement IsIndependent(Isolate*)\n\nBUG=\nTEST=cctest/test-api/IndependentWeakHandle\n\nCommitted: https://code.google.com/p/v8/source/detail?r=12852\n\nReview URL: https://codereview.chromium.org/11368053\nPatch from Kentaro Hara <haraken@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12854 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ea00c51e24c365b1ac2aa21e0f409bd7f105ad45","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 05 12:35:51 2012"},"commit":"ea00c51e24c365b1ac2aa21e0f409bd7f105ad45","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 05 12:35:51 2012"},"message":"Implement IsIndependent(Isolate*)\n\nBUG=\nTEST=cctest/test-api/IndependentWeakHandle\n\nReview URL: https://codereview.chromium.org/11368053\nPatch from Kentaro Hara <haraken@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12852 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f3807ca17b54f0504ff0041b830ff72d4cc1013c","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 05 10:25:32 2012"},"commit":"f3807ca17b54f0504ff0041b830ff72d4cc1013c","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 05 10:25:32 2012"},"message":"Heavy cleanup of the external pointer API.\n\nAdded highly efficient Object::SetAlignedPointerInInternalField and\nObject::GetAlignedPointerFromInternalField functions for 2-byte-aligned\npointers. Their non-aligned counterparts Object::GetPointerFromInternalField and\nObject::SetPointerInInternalField are now deprecated utility functions.\n\nExternal is now a true Value again, with New/Value/Cast using a JSObject with an\ninternal field containing a Foreign. External::Wrap, and External::Unwrap are now\ndeprecated utility functions.\n\nAdded Context::GetEmbedderData and Context::SetEmbedderData. Deprecated\nContext::GetData and Context::SetData, these are now only wrappers to access\ninternal field 0.\n\nAdded highly efficient Context::SetAlignedPointerInEmbedderData and\nContext::GetAlignedPointerFromEmbedderData functions for 2-byte-aligned\npointers.\n\nReview URL: https://codereview.chromium.org/11190050\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12849 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"64793b3f0d926401631a311559427a09aaafa929","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Nov 02 12:45:00 2012"},"commit":"64793b3f0d926401631a311559427a09aaafa929","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Nov 02 12:45:00 2012"},"message":"Correctly visit all external strings.\n\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/11340010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12841 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"37759f4d646cec8f859ac15a3e89955b29959404","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 22 16:33:10 2012"},"commit":"37759f4d646cec8f859ac15a3e89955b29959404","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 22 16:33:10 2012"},"message":"Implement committed physical memory stats for Linux.\n\nThe patch introduces CommittedPhysicalMemory function to\nthe Heap class that reports committed *physical* memory acquired\nfor the heap from the OS.\nIt is important because some OSes may defer actual committment on e.g.\nfirst access to the region.\nSo reporting just plain committed size led to various weird artifacts\nlike showing V8 allocated memory higher than the whole process\nprivate size.\n\nBUG=v8:2191\n\nReview URL: https://codereview.chromium.org/11066118\nPatch from Alexei Filippov <alph@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12793 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"063609280eebe237e49022c1ed7f5f4f946233e0","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 19 11:15:04 2012"},"commit":"063609280eebe237e49022c1ed7f5f4f946233e0","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 19 11:15:04 2012"},"message":"Add a faster API for creating v8::Integer objects\n\nIn WebKit, we have a small integer cache because calling v8::Integer::New is\nslow. This patch adds a faster API for creating integers that requires the\ncaller to supply the v8::Isolate, saving us the work of looking up the isolate\nin thread-local storage.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/11212004\nPatch from Adam Barth <abarth@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12773 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5fa8f2f485b71dd1aead6e07bc67d3247489f8d3","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 19 08:45:24 2012"},"commit":"5fa8f2f485b71dd1aead6e07bc67d3247489f8d3","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 19 08:45:24 2012"},"message":"Pass pending exception to the message listener.\n\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/11014017\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12768 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9dc2c5b83dfcf9abb68bceccf0c11c0e96688037","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 18 06:52:37 2012"},"commit":"9dc2c5b83dfcf9abb68bceccf0c11c0e96688037","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 18 06:52:37 2012"},"message":"Add an API for enumerating persistent handles\n\nThis API lets the embedder enumerate handles that have class ids. WebKit will\nuse this feature during garbage collection to compute object groups for DOM\nnodes. Previously, we kept a list of DOM nodes on the WebKit side, but that\nlist is redundant with the global handles list in V8.\n\nReview URL: https://codereview.chromium.org/11190011\nPatch from Adam Barth <abarth@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12750 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"329cf12363b790a8e4c62956528a50e358e09e44","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 05 12:47:34 2012"},"commit":"329cf12363b790a8e4c62956528a50e358e09e44","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 05 12:47:34 2012"},"message":"Make sure that names of temporaries do not clash with real variables.\n\nR=mstarzinger@chromium.org\nBUG=v8:2322\n\nReview URL: https://codereview.chromium.org/11035054\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12668 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"974a2268bb6315ea2d513341f3ac75018e8c753f","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 27 13:27:50 2012"},"commit":"974a2268bb6315ea2d513341f3ac75018e8c753f","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 27 13:27:50 2012"},"message":"Implement committed physical memory stats for Linux.\n\nThe patch introduces CommittedPhysicalMemory function to the Heap class\nthat reports committed *physical* memory acquired from the OS.\nIt is important because some OSes may postpone actual commitment on e.g.\nfirst access to the previously committed region.\nSo reporting just plain committed size led to various weird artifacts\nlike DevTools showing V8 allocated memory higher than the whole process\nprivate size.\n\nBUG=v8:2191\n\nReview URL: https://codereview.chromium.org/10961042\nPatch from Alexei Filippov <alph@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12625 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4bd4fb1aa4e85fbe58d0c94a14740c7e993e07cc","author":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 17 09:58:22 2012"},"commit":"4bd4fb1aa4e85fbe58d0c94a14740c7e993e07cc","committer":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 17 09:58:22 2012"},"message":"Throw a more descriptive exception when blocking 'eval' via CSP.\n\nBUG=140191\n\nR=svenpanne@chromium.org,mkwst@chromium.org\n\nReview URL: https://chromiumcodereview.appspot.com/10837358\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12525 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"48d327d0b4d5c87cdf276cd9c7c0aaf63edc9d59","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 14 16:13:23 2012"},"commit":"48d327d0b4d5c87cdf276cd9c7c0aaf63edc9d59","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 14 16:13:23 2012"},"message":"Let the embedder store arbitrary Values via Context::SetData\n\nIn WebKit, we would like to store a void* to a data structure that contains\nlots of exciting per-context data. The current API restricts us to storing only\nStrings, which is less useful.\n\nI've also cleaned up the implementation of GetData to be less convoluted.\n\nReview URL: https://codereview.chromium.org/10907189\nPatch from Adam Barth <abarth@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12520 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6a9e4048aa7a2896735f0a54c180cd30c350820b","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 12 11:29:50 2012"},"commit":"6a9e4048aa7a2896735f0a54c180cd30c350820b","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 12 11:29:50 2012"},"message":"Introduce new API to expose external string resource regardless of encoding.\n\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/10917211\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12488 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bf229e93eb659f52a062b064fbecf93f4a240e8e","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 10 09:24:17 2012"},"commit":"bf229e93eb659f52a062b064fbecf93f4a240e8e","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 10 09:24:17 2012"},"message":"Enable/disable LiveEdit using the (C++) debug API.\n\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/10875072\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12472 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7af6883098689f21eedb8db3bd7d19d24d9596fe","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 07 09:01:54 2012"},"commit":"7af6883098689f21eedb8db3bd7d19d24d9596fe","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 07 09:01:54 2012"},"message":"Fixed deoptimization of inlined getters.\n\nIt is necessary to explicitly handle the internal frame lying between the caller\nof the getter and the getter itself in the deoptimizer: When the getter is\ninlined, leaving the internal frame restores the correct context.\n\nBUG=http://crbug/134609\nTEST=mjsunit/regress/regress-crbug-134609\n\nReview URL: https://chromiumcodereview.appspot.com/10910110\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12470 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"74f06b1f998bf66378db1d310dd533b0be172928","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 03 15:06:36 2012"},"commit":"74f06b1f998bf66378db1d310dd533b0be172928","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 03 15:06:36 2012"},"message":"Add basic support for Latin1 to the API.\n\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/10857030\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12430 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5dd51bafef2564ece854f7fe1d54349bc738e528","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 31 09:28:01 2012"},"commit":"5dd51bafef2564ece854f7fe1d54349bc738e528","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 31 09:28:01 2012"},"message":"Cache results in SearchRegExpMultiple.\n\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/10837290\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12416 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5cd4e83bbc1046a6e55669ca7aa633eeb6743d09","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 29 16:12:23 2012"},"commit":"5cd4e83bbc1046a6e55669ca7aa633eeb6743d09","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 29 16:12:23 2012"},"message":"Remove obsolete method declarations from HeapEntry class.\n\nBUG=none\nTEST=none\n\nReview URL: https://chromiumcodereview.appspot.com/10892033\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12410 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f9d4856289aec52a8671631d5f2841152e178bcc","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 28 14:43:28 2012"},"commit":"f9d4856289aec52a8671631d5f2841152e178bcc","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 28 14:43:28 2012"},"message":"Add a new API V8::SetJitCodeEventHandler to push code name and location to users such as profilers.\n\nBUG=None\nTEST=Included in CL.\n\nCommitted: https://code.google.com/p/v8/source/detail?r=12389\n\nReview URL: https://chromiumcodereview.appspot.com/10795074\nPatch from Sigurður Ásgeirsson <siggi@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12401 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0a6493b5a8274c605e34acb1e66b054fa33c6f59","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 27 18:03:38 2012"},"commit":"0a6493b5a8274c605e34acb1e66b054fa33c6f59","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 27 18:03:38 2012"},"message":"Add a new API V8::SetJitCodeEventHandler to push code name and location to users such as profilers.\n\nBUG=None\nTEST=Included in CL.\n\nReview URL: https://chromiumcodereview.appspot.com/10795074\nPatch from Sigurður Ásgeirsson <siggi@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12389 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cd585f26ab6bcf64d4e50cdae15c916f7b486da1","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 27 09:40:26 2012"},"commit":"cd585f26ab6bcf64d4e50cdae15c916f7b486da1","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 27 09:40:26 2012"},"message":"Introduce global contexts to represent lexical global scope(s).\n\nThey are yet unused; actual allocation of global lexical bindings in these contexts is implemented in a separate follow-up CL.\n\nR=svenpanne@chromium.org\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/10876067\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12384 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"89cd0677dceb727ecaa9519b91ae23414427a4cd","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 24 13:01:52 2012"},"commit":"89cd0677dceb727ecaa9519b91ae23414427a4cd","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 24 13:01:52 2012"},"message":"Add check to external string resource.\n\nExtensions are a source of external strings where we don't perform check yet.\n\nR=ulan@chromium.org\nBUG=\n\nReview URL: https://chromiumcodereview.appspot.com/10878025\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12379 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b10d5d7f08003059c5d241d4672329089d653dda","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 17 10:43:32 2012"},"commit":"b10d5d7f08003059c5d241d4672329089d653dda","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 17 10:43:32 2012"},"message":"Deoptimization support for accessors.\n\nHighlights of this CL:\n\n * Introduced a new opcode in the deoptimizer for a setter stub frame.\n\n * Added a global setter stub for returning after deoptimizing a setter.\n\n * We do not need special deopt support for getters, although the getter stub creates an internal frame. The normal machinery works just right for this case, although we generate a stack that can never occur during normal fullcode execution. If this hurts us one day, we can parameterize and reuse the setter deopt machinery.\n\nReview URL: https://chromiumcodereview.appspot.com/10855098\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12328 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4d1d1eb53edebcc4f26b9fceed5026d46e068798","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 26 09:18:09 2012"},"commit":"4d1d1eb53edebcc4f26b9fceed5026d46e068798","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 26 09:18:09 2012"},"message":"Fix building with GCC 3.x\n\nR=yangguo@chromium.org\nBUG=v8:2016, v8:2017\nTEST=\n\nReview URL: https://chromiumcodereview.appspot.com/10823034\nPatch from James Pike <g00gle@chilon.net>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12199 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6b489d97533a859ad42ebb05c7781d4680a85271","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 23 14:22:46 2012"},"commit":"6b489d97533a859ad42ebb05c7781d4680a85271","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 23 14:22:46 2012"},"message":"Improve String::WriteAscii and add PRESERVE_ASCII_NULL option.\n\nThe PRESERVE_ASCII_NULL option prevents WriteAscii from converting\n\\0 to white space.\n\nR=verwaest@chromium.org\nBUG=v8:2252\nTEST=test-api/StringWrite\n\nReview URL: https://chromiumcodereview.appspot.com/10810056\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12174 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"43d0ed048d2c411acbac03e6023c3204601378cb","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 17 15:18:15 2012"},"commit":"43d0ed048d2c411acbac03e6023c3204601378cb","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 17 15:18:15 2012"},"message":"Implements a new API to set a function entry hook for profiling.\n\nExposes a new API; V8::SetFunctionEntryHook.\nIf a non-NULL function entry hook is set, the code generator(s) will invoke on the entry hook at the very start of each generated function.\n\nCommitted: https://code.google.com/p/v8/source/detail?r=12069\n\nCommitted: https://code.google.com/p/v8/source/detail?r=12083\n\nReview URL: https://chromiumcodereview.appspot.com/10706002\nPatch from Sigurður Ásgeirsson <siggi@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12107 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5c8c4bec4606109aef9badfc47e75096c7655d69","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 13 16:18:37 2012"},"commit":"5c8c4bec4606109aef9badfc47e75096c7655d69","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 13 16:18:37 2012"},"message":"Implements a new API to set a function entry hook for profiling.\n\nExposes a new API; V8::SetFunctionEntryHook.\nIf a non-NULL function entry hook is set, the code generator(s) will invoke on the entry hook at the very start of each generated function.\n\nCommitted: https://code.google.com/p/v8/source/detail?r=12069\n\nReview URL: https://chromiumcodereview.appspot.com/10706002\nPatch from Sigurður Ásgeirsson <siggi@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12083 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d6edbdd436c5c0ed46545b95a22f8775558c7be5","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 12 15:42:39 2012"},"commit":"d6edbdd436c5c0ed46545b95a22f8775558c7be5","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 12 15:42:39 2012"},"message":"Implements a new API to set a function entry hook for profiling.\n\nExposes a new API; V8::SetFunctionEntryHook.\nIf a non-NULL function entry hook is set, the code generator(s) will invoke on the entry hook at the very start of each generated function.\n\nReview URL: https://chromiumcodereview.appspot.com/10706002\nPatch from Sigurður Ásgeirsson <siggi@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@12069 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"791632cf06322cfc502254ed62da63ae5fc9d41f","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 05 16:23:14 2012"},"commit":"791632cf06322cfc502254ed62da63ae5fc9d41f","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 05 16:23:14 2012"},"message":"Fix compilation when disabling debugger support.\n\nBased on a patch by Remi Duraffort <remi.duraffort@st.com>: http://codereview.chromium.org/10702093/\n\nR=mstarzinger@chromium.org\nBUG=\nTEST=build with debuggersupport=off\n\nReview URL: https://chromiumcodereview.appspot.com/10697085\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11995 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"680797234cea6997bcdae18a8f4090ded8f4d455","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 28 16:29:53 2012"},"commit":"680797234cea6997bcdae18a8f4090ded8f4d455","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 28 16:29:53 2012"},"message":"Further extend TypedArray support in d8:\n\n- Add copy constructors.\n- Add subarray methods.\n- Make instanceof and constructor property work.\n- Rename PixelArray to Uint8ClampedArray.\n\nAlso fix broken definition of assertInstanceof in MJSUnit test harness.\n\nR=mstarzinger@chromium.org\nBUG=\nTEST=\n\nReview URL: https://chromiumcodereview.appspot.com/10558005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11949 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c1944660f5f41e6246de6afef8029819aab2be0f","author":{"name":"alexeif@chromium.org","email":"alexeif@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jun 13 11:02:24 2012"},"commit":"c1944660f5f41e6246de6afef8029819aab2be0f","committer":{"name":"alexeif@chromium.org","email":"alexeif@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jun 13 11:02:24 2012"},"message":"Implement heap profiler memory usage reporting.\n\nReview URL: https://chromiumcodereview.appspot.com/10535096\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11793 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"81e8aa00164f17c327b9227e1cea5785704abd7c","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 08 07:45:11 2012"},"commit":"81e8aa00164f17c327b9227e1cea5785704abd7c","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 08 07:45:11 2012"},"message":"Implement implicit instance checks for API accessors.\n\nThis allows to specify a constructor against which an implicit instance\ncheck is performed for API accessors. If the receiver is incompatible,\nan implicit TypeError is thrown and no callback is invoked.\n\nR=svenpanne@chromium.org\nBUG=v8:2075\nTEST=cctest/test-api/InstanceCheckOn[*]\n\nReview URL: https://chromiumcodereview.appspot.com/10442129\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11734 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"463a6ffdd497525bf24ce75ef743bb13e95ae1dc","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 01 16:10:52 2012"},"commit":"463a6ffdd497525bf24ce75ef743bb13e95ae1dc","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 01 16:10:52 2012"},"message":"Expose last seen heap object id via v8 public api.\n\nBUG=none\nTEST=none\n\nReview URL: https://chromiumcodereview.appspot.com/10444137\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11702 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"70408d49b172aaa17a3e78daaa0ce21eecde093d","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 18 09:52:09 2012"},"commit":"70408d49b172aaa17a3e78daaa0ce21eecde093d","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 18 09:52:09 2012"},"message":"Define V8_EXPORT to nothing for clients of v8.\n\nThis is to make sure that inline functions are only exported by\nlibv8.so and not also by all clients. This is the v8 version of\nhttps://chromiumcodereview.appspot.com/10386108/\n\nThis CL depends on http://codereview.chromium.org/10310156/ landing\nfirst.\n\nBUG=chromium:90078\n\nReview URL: https://chromiumcodereview.appspot.com/10399036\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11590 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6aeed46180baea2cd3e83df0d05926360c3f69d9","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 25 08:45:45 2012"},"commit":"6aeed46180baea2cd3e83df0d05926360c3f69d9","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 25 08:45:45 2012"},"message":"Make String::Empty inlineable.\n\nR=svenpanne@chromium.org\nTEST=cctest/test-api/StringEmpty\n\nReview URL: https://chromiumcodereview.appspot.com/10199019\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11429 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c25a92d76b4b07657fddd472c21e73881259164a","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 24 14:37:53 2012"},"commit":"c25a92d76b4b07657fddd472c21e73881259164a","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 24 14:37:53 2012"},"message":"Make Isolate::GetData and Isolate::SetData inlineable.\n\nR=svenpanne@chromium.org\nTEST=cctest/test-api/IsolateEmbedderData\n\nReview URL: https://chromiumcodereview.appspot.com/10196013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11426 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5113cc1bbc7436c6ad0cb3a15a8051c74870c522","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 23 15:09:59 2012"},"commit":"5113cc1bbc7436c6ad0cb3a15a8051c74870c522","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 23 15:09:59 2012"},"message":"Make static API getters inlineable again.\n\nThis relands r11376 with minor fixes for Windows where offsets are\nslightly different from Linux for unaligned fields.\n\nR=svenpanne@chromium.org\nTEST=cctest/test-api/StaticGetters\n\nReview URL: https://chromiumcodereview.appspot.com/10176004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11417 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"841158fb6acd4f85acaf52c35c32e92ce7712a40","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 18 17:18:56 2012"},"commit":"841158fb6acd4f85acaf52c35c32e92ce7712a40","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 18 17:18:56 2012"},"message":"Fix presubmit failure in r11376.\n\nR=jkummerow@chromium.org\nTEST=cctest/test-api/StaticGetters[AfterDeath]\n\nReview URL: https://chromiumcodereview.appspot.com/10021057\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11379 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3b3e701a27cb3069885012f5a19000f633003132","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 18 16:07:08 2012"},"commit":"3b3e701a27cb3069885012f5a19000f633003132","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 18 16:07:08 2012"},"message":"Make static API getters inlineable.\n\nR=danno@chromium.org\nTEST=cctest/test-api/StaticGetters[AfterDeath]\n\nReview URL: https://chromiumcodereview.appspot.com/10116024\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11376 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a13e41f328e63c179e7af133bdc4ceab64676cae","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 18 15:51:34 2012"},"commit":"a13e41f328e63c179e7af133bdc4ceab64676cae","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 18 15:51:34 2012"},"message":"Make Value::IsUndefined and Value::IsNull inlineable.\n\nR=danno@chromium.org\nTEST=cctest/test-api\n\nReview URL: https://chromiumcodereview.appspot.com/10091035\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11375 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b2024c531c441e0fb4e30dd49a866f31079011df","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 17 13:10:17 2012"},"commit":"b2024c531c441e0fb4e30dd49a866f31079011df","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 17 13:10:17 2012"},"message":"Push heap stats as HeapStatsUpdate struct instead of raw array of uint32_t values.\nWe are pushing stats data as a raw array of uint32_t values at the moment.\nIt makes tricky the process of updating the API between v8 and WebKit.\n\nBUG=none\nTEST=HeapSnapshotObjectsStats\n\nReview URL: https://chromiumcodereview.appspot.com/10110001\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11355 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1ce7d5d0d418d5d7b398672be0d4214839375046","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 16 15:36:19 2012"},"commit":"1ce7d5d0d418d5d7b398672be0d4214839375046","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 16 15:36:19 2012"},"message":"Add method for resolving SnapshotObjectId by given object\nReview URL: https://chromiumcodereview.appspot.com/10094011\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11339 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"17632e447c38a581b75f0572f17e203ed2aef7f7","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 16 09:44:42 2012"},"commit":"17632e447c38a581b75f0572f17e203ed2aef7f7","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 16 09:44:42 2012"},"message":"Add size metric into Heap Stats.\nThe stats data have only count field at the moment.\nA constantly growing array of integers also can be a reason of a leak.\nAns we have to have a way to detect such kind of leaks.\n\nDrive by fix:\nFindObject and AddEntry were replaced with FindEntry/FindOrAddEntry pair.\n\nBUG=none\nTEST=HeapSnapshotObjectsStats\n\nReview URL: https://chromiumcodereview.appspot.com/10086004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11327 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"48777a7f5bee5234d7b77eed3d657122fe9b25dc","author":{"name":"alexeif@chromium.org","email":"alexeif@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 13 12:50:48 2012"},"commit":"48777a7f5bee5234d7b77eed3d657122fe9b25dc","committer":{"name":"alexeif@chromium.org","email":"alexeif@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 13 12:50:48 2012"},"message":"Split nodes and edges into separate arrays in heap snapshot serialization.\n\nReview URL: https://chromiumcodereview.appspot.com/10037004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11315 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f0ea13846d9023abb1702b34461954d96202e20f","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 13 10:57:17 2012"},"commit":"f0ea13846d9023abb1702b34461954d96202e20f","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 13 10:57:17 2012"},"message":"Provide empty default implementation of OutputStream::WriteUint32Chunk to make Webkit V8 bindings compile\n\nReview URL: https://chromiumcodereview.appspot.com/10084001\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11311 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"20777bf0c5442ef8585d8b53a6f62510cb87c1d8","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 13 09:58:29 2012"},"commit":"20777bf0c5442ef8585d8b53a6f62510cb87c1d8","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 13 09:58:29 2012"},"message":"Fix several ancient presubmit failures.\n\nR=jkummerow@chromium.org\n\nReview URL: https://chromiumcodereview.appspot.com/10038046\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11308 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2f732c27280b22aefb45cd0aeac18dfa738a716e","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 13 09:38:00 2012"},"commit":"2f732c27280b22aefb45cd0aeac18dfa738a716e","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 13 09:38:00 2012"},"message":"Add isolate accessor to AccessorInfo and Arguments.\n\nThis passes the isolate through to API callback functions so that it is\navailable through AccessorInfo and Arguments. This allows bindings to\navoid unnecessary TLS lookups to retrieve the current isolate.\n\nR=danno@chromium.org\nTEST=cctest/test-api,cctest/test-accessors\n\nReview URL: https://chromiumcodereview.appspot.com/10069050\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11306 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d1f83dd95a30fe9d7147ca19b4bf31ac80361189","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 13 08:52:25 2012"},"commit":"d1f83dd95a30fe9d7147ca19b4bf31ac80361189","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 13 08:52:25 2012"},"message":"This patch is introducing a way to grab heap stats.\nThe idea is to monitor the heap regulary and track each object in the heap.\nWith this data we will be able do draw heap usage diagram.\nWhere X is time and Y is the number of objects.\n\nBUG=none\nTEST=HeapSnapshotObjectsStats\n\nReview URL: https://chromiumcodereview.appspot.com/10049002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11302 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a3629daa2ce797cc170e12192119c690a9c59a77","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 11 09:23:57 2012"},"commit":"a3629daa2ce797cc170e12192119c690a9c59a77","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 11 09:23:57 2012"},"message":"Fix external allocated memory accounting to use 64 bit values on\n64 bit architectures.\nReview URL: https://chromiumcodereview.appspot.com/10020032\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11265 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b84b44d86c1eb0fc38cb79ad834acb1880f758bf","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 27 11:54:47 2012"},"commit":"b84b44d86c1eb0fc38cb79ad834acb1880f758bf","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 27 11:54:47 2012"},"message":"This value is required for showing the heap snapshot delta in Summary view of DevTools.Profiler.\nAt the moment it is evaluating on the front-end side and this is cost us 2 * (load time + parse time + traverse via snapshot) because I need this value for two previous snapshots.\n\nBUG=none\nTEST=test-heap-profiler\n\nReview URL: https://chromiumcodereview.appspot.com/9858016\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11161 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"410f3a33753815caf4cf99ab5cf95806747d4327","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 27 08:52:00 2012"},"commit":"410f3a33753815caf4cf99ab5cf95806747d4327","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 27 08:52:00 2012"},"message":"This value is required for showing the heap snapshot delta in Summary view of DevTools.Profiler.\nAt the moment it is evaluating on the front-end side and this is cost us 2 * (load time + parse time + traverse via snapshot) because I need this value for two previous snapshots.\n\nBUG=none\nTEST=test-heap-profiler\n\nReview URL: https://chromiumcodereview.appspot.com/9858016\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11150 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b414adb1f331fda4acae7e0afe34a093232e40d3","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 26 13:47:37 2012"},"commit":"b414adb1f331fda4acae7e0afe34a093232e40d3","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 26 13:47:37 2012"},"message":"Complete switch to SnapshotObjectId.\n\nBUG=none\nTEST=test-heap-profiler\n\nReview URL: https://chromiumcodereview.appspot.com/9858010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11145 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bcd0fd00e3e221c8078a60cb0a1cedc729f37c72","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 19 09:51:36 2012"},"commit":"bcd0fd00e3e221c8078a60cb0a1cedc729f37c72","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 19 09:51:36 2012"},"message":"Add API call that identifies strings that are guaranteed\nonly to contain ASCII characters.\nReview URL: https://chromiumcodereview.appspot.com/9724022\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@11079 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8604da7f06a210aefb09aac2832ee23eae34ab46","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 09 11:11:55 2012"},"commit":"8604da7f06a210aefb09aac2832ee23eae34ab46","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 09 11:11:55 2012"},"message":"New class for Date objects: caches individual date components.\nFirst step, cache slots not used yet.\n\nR=ulan@chromium.org\nBUG=\nTEST=\n\nReview URL: https://chromiumcodereview.appspot.com/9117034\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10981 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"47b6027c37db666973aa1dfe0a31c7ccc3ce6740","author":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 07 17:38:50 2012"},"commit":"47b6027c37db666973aa1dfe0a31c7ccc3ce6740","committer":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 07 17:38:50 2012"},"message":"Add HeapProfiler::GetPersistentHandleCount to be able to track the number of persistent handles\n\nIt turns out that an increasing number of persistent handles is a good signal for bugs in the bindings layer\n\nBUG=none\nTEST=cctest/test-heap-profiler/PersistentHandleCount\n\nReview URL: https://chromiumcodereview.appspot.com/9620007\nPatch from Jochen Eisinger <jochen@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10960 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2350d11dacfc56d933f761dc4731768ca075ccac","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 27 15:42:36 2012"},"commit":"2350d11dacfc56d933f761dc4731768ca075ccac","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 27 15:42:36 2012"},"message":"Remove now unused CalculateExactRetainedSize function & co.\n\nThis patch changes the signature of the v8::HeapGraphNode::GetRetainedSize method, but it's not used in Chromium, and it should be easy for other clients (if any) to adjust to this change.\n\nBUG=none\nTEST=none\n\nReview URL: https://chromiumcodereview.appspot.com/9466014\nPatch from Alexei Filippov <alexeif@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10846 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c112fdc3987b98e209068c73c4867ba4566c97e7","author":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 27 15:15:53 2012"},"commit":"c112fdc3987b98e209068c73c4867ba4566c97e7","committer":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 27 15:15:53 2012"},"message":"Adds a new API where the host can supply a callback function. The callback function can resolve the location of a return address on stack to the location where a return-address rewriting profiler stashed the original return address.\n\nReview URL: https://chromiumcodereview.appspot.com/9401019\nPatch from Sigurður Ásgeirsson <siggi@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10845 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"36a91e30f7cb3d12408a90cb5d5d73116fd65630","author":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Feb 24 14:34:01 2012"},"commit":"36a91e30f7cb3d12408a90cb5d5d73116fd65630","committer":{"name":"mstarzinger@chromium.org","email":"mstarzinger@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Feb 24 14:34:01 2012"},"message":"Fix redefining of attributes on aliased arguments.\n\nThis allows elements of the non-strict arguments object to be redefined\nwith custom attributes and still maintain an alias into the context.\nSuch a slow alias is maintained by placing a special marker into the\ndictionary backing store of the arguments object.\n\nR=rossberg@chromium.org\nBUG=v8:1772\nTEST=test262,mjsunit/object-define-property\n\nReview URL: https://chromiumcodereview.appspot.com/9460004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10827 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1336b913d0f199285fbeb744146d9324e6804b4f","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 20 13:48:24 2012"},"commit":"1336b913d0f199285fbeb744146d9324e6804b4f","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 20 13:48:24 2012"},"message":"Make built-ins strict mode conforming, and support a --use-strict flag.\n\n* Turned all uses of 'const' into 'var'.\n* Turned all uses of local 'function' into 'var'.\n* Added a couple of missing toplevel 'var' declarations.\n\nOne consequence is that the properties on the builtin object  are no longer\nnon-writable, and I had to adapt one test. Is that a problem?\n\nUnfortunately, we cannot actually switch the library scripts to strict mode\nby default, because that makes observable things like poisoned .caller properties\nfor library functions.\n\nAlso removed dead flag code in Compiler::Compile.\n\nR=yangguo@chromium.org\nBUG=\nTEST=\n\nReview URL: https://chromiumcodereview.appspot.com/9415010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10758 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0177aa62da31e89d91e7f15edc4f3f87ce6b58f9","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 20 12:57:23 2012"},"commit":"0177aa62da31e89d91e7f15edc4f3f87ce6b58f9","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 20 12:57:23 2012"},"message":"Count ICs that have type information.\n\nHidden behind --type-info-threshold=X flag, usage dependent on experimental profiler.\n\nReview URL: https://chromiumcodereview.appspot.com/9403009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10753 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dc3f16a321f5451f73ceb4b257192169663d941e","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Feb 07 05:21:00 2012"},"commit":"dc3f16a321f5451f73ceb4b257192169663d941e","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Feb 07 05:21:00 2012"},"message":"I will apply it to the nodes that can't be mapped to Heap object or Native object.\nAs example there are 'Detached DOM Tree' nodes in WebKit. It is very useful to be able to see all such\nnodes grouped together. It can be done with help of some post processing but I did this explicitly\non v8 side because it is much faster. At the moment this kind of nodes has kNative type.\nI'd like to hide these nodes from the Retainment View but I can filter them only by name.\n\nBUG=none\nTEST=HeapSnapshotRetainedObjectInfo\n\nReview URL: https://chromiumcodereview.appspot.com/9323064\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10614 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"882ede30531dc6364527aed1ef6e5866be1ab7d1","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 01 12:58:34 2012"},"commit":"882ede30531dc6364527aed1ef6e5866be1ab7d1","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 01 12:58:34 2012"},"message":"Add a getter for value set with AllowCodeGenerationFromStrings\nReview URL: https://chromiumcodereview.appspot.com/9223016\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10578 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"07d720ec415b4b0e90eaaf24ebef7ddd11332d16","author":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 27 12:02:57 2012"},"commit":"07d720ec415b4b0e90eaaf24ebef7ddd11332d16","committer":{"name":"loislo@chromium.org","email":"loislo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 27 12:02:57 2012"},"message":"Detailed heap snapshot usability improvement.\n\nThe detailed heap snapshot has two groups of nodes. The first one\nis the group for v8 heap nodes and the second one is the group for\nnative objects. At the moment we have two different sets of native\nobjects. There are 'Detached DOM trees' and 'Document DOM trees' type of objects.\n\nI think it'd be nice to replace one group containing all native objects with\nseparate groups for different types of native objects.\n\nBUG=none\nTEST=HeapSnapshotRetainedObjectInfo\n\nReview URL: https://chromiumcodereview.appspot.com/9223009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10528 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"09ff5c4c44be36b0a781d0ef2d6e742f59dda0c9","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 25 12:45:54 2012"},"commit":"09ff5c4c44be36b0a781d0ef2d6e742f59dda0c9","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 25 12:45:54 2012"},"message":"Provide access to function inferred name in v8 public API\nReview URL: https://chromiumcodereview.appspot.com/9146039\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10499 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"12f982cf6aeb02110ec30d8b4f1063dcd0ddf30f","author":{"name":"kmillikin@chromium.org","email":"kmillikin@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 25 00:16:07 2012"},"commit":"12f982cf6aeb02110ec30d8b4f1063dcd0ddf30f","committer":{"name":"kmillikin@chromium.org","email":"kmillikin@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 25 00:16:07 2012"},"message":"Include what you use in accessors.{h,cc}.\n\nR=fschneider@chromium.org\nBUG=\nTEST=\n\nReview URL: https://chromiumcodereview.appspot.com/9113041\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10493 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b0607b71271b75098176e9f630a831bb4235a7c2","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 24 13:07:21 2012"},"commit":"b0607b71271b75098176e9f630a831bb4235a7c2","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 24 13:07:21 2012"},"message":"Fix bug 542, misleading documentation of v8::Locker.\nReview URL: https://chromiumcodereview.appspot.com/9160028\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10488 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ebb75c23a1f66eb4ecfd0f990d4eb397fdec24c9","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 13 15:14:45 2012"},"commit":"ebb75c23a1f66eb4ecfd0f990d4eb397fdec24c9","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 13 15:14:45 2012"},"message":"Provide a way for iterating through all external strings referenced from the JS heap\nReview URL: http://codereview.chromium.org/9139018\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10400 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6997dbe13ea08bc29f91a7953f10f87664124a23","author":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 10 16:12:16 2012"},"commit":"6997dbe13ea08bc29f91a7953f10f87664124a23","committer":{"name":"svenpanne@chromium.org","email":"svenpanne@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 10 16:12:16 2012"},"message":"Fixed AccessorPair handling\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10372 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d9f7cf819c754ec95363080ca6d118b075452aa3","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 04 08:48:35 2012"},"commit":"d9f7cf819c754ec95363080ca6d118b075452aa3","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 04 08:48:35 2012"},"message":"Implement callback when script finishes running in V8 API.\n\nTEST=test-api/LeaveScriptCallback\n\nReview URL: http://codereview.chromium.org/8937003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10323 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dae713f0adb67ee00bdfa65fa5170a18766c0003","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 06 17:41:47 2011"},"commit":"dae713f0adb67ee00bdfa65fa5170a18766c0003","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 06 17:41:47 2011"},"message":"Reapply r10158: Distinguish weak references in heap snapshots, group GC roots.\n\n[Fixed the bug revealed by the Win32 bot]\n\nSeveral changes to better organize snapshot data:\n\n1. Provide information about weak references.\n2. Group (GC roots) children.\n3. Prettify debug snapshot printing.\n\nBUG=v8:1832\nTEST=cctest/test-heap-profiler/*Weak*\nTBR=vitalyr@chromium.org\n\nInitial CL: http://codereview.chromium.org/8716009\n\nReview URL: http://codereview.chromium.org/8822019\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10182 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"857aa0977298997b099d5ac4aa35f74f9560c8c2","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 05 16:35:57 2011"},"commit":"857aa0977298997b099d5ac4aa35f74f9560c8c2","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 05 16:35:57 2011"},"message":"Distinguish weak references in heap snapshots, group GC roots.\n\nSeveral changes to better organize snapshot data:\n\n1. Provide information about weak references.\n2. Group (GC roots) children.\n3. Prettify debug snapshot printing.\n\nBUG=v8:1832\nTEST=cctest/test-heap-profiler/*Weak*\n\nReview URL: http://codereview.chromium.org/8716009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10158 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8dc728126e3a721bcc4871c4abc33f44952cf439","author":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 30 11:13:36 2011"},"commit":"8dc728126e3a721bcc4871c4abc33f44952cf439","committer":{"name":"ulan@chromium.org","email":"ulan@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 30 11:13:36 2011"},"message":"Start incremental marking on idle notification.\n\nBUG=v8:1458\nTEST=cctest/test-api/IdleNotification*\n\nReview URL: http://codereview.chromium.org/8519002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10093 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0a7010458a67f19ea064df18d6daae6a39d94a42","author":{"name":"kmillikin@chromium.org","email":"kmillikin@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 29 10:56:11 2011"},"commit":"0a7010458a67f19ea064df18d6daae6a39d94a42","committer":{"name":"kmillikin@chromium.org","email":"kmillikin@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 29 10:56:11 2011"},"message":"Remove the static qualifier from functions in header files.\n\nThis shaves 416+ KB, just under 1% off the size of the debug d8 executable\non Linux (mostly because the CheckHelper functions for assertions were\ngetting separate copies for each compilation unit).  The difference in\nrelease builds is negligible---a size reduction of 0.1%.\n\nAlso, change namespace-level 'static const' variables to remove the static\nstorage class as it's the default.\n\nR=danno@chromium.org\nBUG=\nTEST=\n\nReview URL: http://codereview.chromium.org/8680013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@10083 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8b7bcc4e8073847c7509d9af784ac576f35ae224","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 09 14:18:30 2011"},"commit":"8b7bcc4e8073847c7509d9af784ac576f35ae224","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 09 14:18:30 2011"},"message":"Add getters for column number and script id to v8::Function\nReview URL: http://codereview.chromium.org/8508008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@9935 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2b54dd5e8fc452766c88b8c5021d865988ac3cab","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 28 11:01:17 2011"},"commit":"2b54dd5e8fc452766c88b8c5021d865988ac3cab","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 28 11:01:17 2011"},"message":"Make MSVS happy with ExternalAsciiStringResourceImpl\n\nTEST=MSVS 2008 no longer generates warning C4251 for ExternalAsciiStringResourceImpl\n\nReview URL: http://codereview.chromium.org/8056019\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@9462 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c05354ecc408da0f111a85a605fdaaa27b76f140","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 26 14:38:29 2011"},"commit":"c05354ecc408da0f111a85a605fdaaa27b76f140","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 26 14:38:29 2011"},"message":"Add v8::HeapGraphNode::GetHeapValue method.\n\nThis allows getting a heap object by a heap snapshot node for further\ninspection. Very useful for objects from bindings that mostly have\ngetter-provided fields.\n\nR=vegorov@google.com\nBUG=webkit/61179\nTEST=test-heap-profiler/GetHeapValue,GetHeapValueForDeletedObject\n\nReview URL: http://codereview.chromium.org/8046006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@9430 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fdade92c20d1d7a797175dc901348de57393ef1a","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 21 14:46:54 2011"},"commit":"fdade92c20d1d7a797175dc901348de57393ef1a","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 21 14:46:54 2011"},"message":"Reorganize object type enum, such that proxies are no longer in the middle\nof the range of proper JS objects.\n\nUnfortunately, callable types no longer form a range now. However, there\nare only two anyway. We put them at either end of the range of JS object\ntypes so that certain compares can be combined.\n\nR=erik.corry@gmail.com,kmillikin@chromium.org\nBUG=\nTEST=\n\nReview URL: http://codereview.chromium.org/7737036\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@9370 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fdaadb78d6529f5b00e487bceeacbb865c1d8b69","author":{"name":"fschneider@chromium.org","email":"fschneider@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 21 13:28:09 2011"},"commit":"fdaadb78d6529f5b00e487bceeacbb865c1d8b69","committer":{"name":"fschneider@chromium.org","email":"fschneider@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 21 13:28:09 2011"},"message":"Landing for miket@chromium.org: Add an optional source length field to the Extension constructor.\n\nOriginal code review: http://codereview.chromium.org/7889046/\nReview URL: http://codereview.chromium.org/7978028\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@9365 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"731a70ce1328efcc5a6c1c624ed67a259132fc6c","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 21 11:34:05 2011"},"commit":"731a70ce1328efcc5a6c1c624ed67a259132fc6c","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 21 11:34:05 2011"},"message":"API: Added Debug::DisableAgent to match existing Debug::EnableAgent\n\nBUG=v8:1573\nTEST=cctest test-debug/TestDebuggerAgent\n\nReview URL: http://codereview.chromium.org/7978025\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@9361 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ac36cb4504409229002a2bf3845b0f81b08a94e4","author":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 19 18:36:47 2011"},"commit":"ac36cb4504409229002a2bf3845b0f81b08a94e4","committer":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 19 18:36:47 2011"},"message":"Merge experimental/gc branch to the bleeding_edge.\nReview URL: http://codereview.chromium.org/7945009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@9328 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"44d931c9d58bef1b82af4a8972d797855e11afca","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 15 11:30:45 2011"},"commit":"44d931c9d58bef1b82af4a8972d797855e11afca","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 15 11:30:45 2011"},"message":"Add asserts to ensure that we:\n1) Don't make a call to C without having a valid frame on the stack.\n2) Don't generate a call to a stub while generating a stub, unless we can be\nsure that the stub we are calling has already been generated (the stub\ngeneration code is not reentrant wrt. GC).\nReview URL: http://codereview.chromium.org/7891042\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@9297 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"86a62d0da3454732fe0e762e9716a4cefb2ecf2c","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 01 11:28:10 2011"},"commit":"86a62d0da3454732fe0e762e9716a4cefb2ecf2c","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 01 11:28:10 2011"},"message":"Added check for trailing whitespaces and corrected existing violations.\n\nReview URL: http://codereview.chromium.org/7826007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@9094 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2d538fe6a6e6991e2dc929954c0bae3e791ff427","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 23 13:57:37 2011"},"commit":"2d538fe6a6e6991e2dc929954c0bae3e791ff427","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 23 13:57:37 2011"},"message":"removed executable bit in those files.\n\nReview URL: http://codereview.chromium.org/7710019\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@9003 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"011b136ee057af3554e64e816e6b98113c2cd8ca","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 23 11:11:12 2011"},"commit":"011b136ee057af3554e64e816e6b98113c2cd8ca","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 23 11:11:12 2011"},"message":"Slight API change enabling opting out from null termination in String::Write*().\nBUG=v8:1537\nTEST=cctest test-api/StringWrite\n\nReview URL: http://codereview.chromium.org/7706002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8996 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"891b0eb9193352c2c8b5ea15f164e74bfb7147cc","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 22 13:01:25 2011"},"commit":"891b0eb9193352c2c8b5ea15f164e74bfb7147cc","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 22 13:01:25 2011"},"message":"Added forgotten V8EXPORT attributes for v8::Array::CheckCast and v8::Number::CheckCast.\nBUG=v8:1618\n\nReview URL: http://codereview.chromium.org/7692020\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8986 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7904a8559284bb66d62fbc3560748bd5ef1822d4","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 17 10:29:05 2011"},"commit":"7904a8559284bb66d62fbc3560748bd5ef1822d4","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 17 10:29:05 2011"},"message":"Remove some unnecessary namespace alias definitions.\n\nWe can pick the namespace alias 'i' from v8.h which is already included\nin those files.\n\nBUG=None\nTEST=None\n\nR=mnaganov@chromium.org\n\nSigned-off-by: Thiago Farina <tfarina@chromium.org>\n\nReview URL: http://codereview.chromium.org/7621035\n\n--------------\n\nInline the implementation of Handle default ctor.\n\nBUG=None\nTEST=None\n\nR=mnaganov@chromium.org\n\nSigned-off-by: Thiago Farina <tfarina@chromium.org>\n\nReview URL: http://codereview.chromium.org/7669013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8953 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"76aad1a07bb3896198cd98ddf053d53a21ffe790","author":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 08 09:34:18 2011"},"commit":"76aad1a07bb3896198cd98ddf053d53a21ffe790","committer":{"name":"yangguo@chromium.org","email":"yangguo@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 08 09:34:18 2011"},"message":"Fixed a known issue in D8 (read file), enabled D8 shared library build on Windows.\n\nReview URL: http://codereview.chromium.org/7586001\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8853 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0aab25fabfee7fccb69a1017a3f5c0ab66e78837","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 25 15:01:45 2011"},"commit":"0aab25fabfee7fccb69a1017a3f5c0ab66e78837","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 25 15:01:45 2011"},"message":"Fix: FunctionTemplate::SetPrototypeAttributes broke prototype object\n\nBUG=v8:1539\nTEST=cctest test-api/SetPrototypeAttributes\n\nReview URL: http://codereview.chromium.org/7324027\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8737 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"645bb1b1ba20ff6e14aae745da00ef922f6df3ed","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 18 17:44:57 2011"},"commit":"645bb1b1ba20ff6e14aae745da00ef922f6df3ed","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 18 17:44:57 2011"},"message":"Add GetPropertyAttribute method for Object in the API\n\nPatch by Peter Varga.\n\nBUG=none\nTEST=cctest/test-api/PropertyAttributes\n\nReview URL: http://codereview.chromium.org/7321006\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8679 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"78f173c47b88bd4ca8561f0ab6e34706c954f2ba","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sun Jul 17 09:16:28 2011"},"commit":"78f173c47b88bd4ca8561f0ab6e34706c954f2ba","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sun Jul 17 09:16:28 2011"},"message":"Introduce a random entropy source which can optionally be provided at initialization.\n\nBUG=89462\n\nReview URL: http://codereview.chromium.org/7395012\nPatch from Chris Neckar <cdn@chromium.org>.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8666 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"615add84639fe78656fb2741b75f4a77a32ad321","author":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 14 11:00:04 2011"},"commit":"615add84639fe78656fb2741b75f4a77a32ad321","committer":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 14 11:00:04 2011"},"message":"Expose APIs for detecting boxed primitives, native errors and Math.\n\nWhile implementing structured clone I found that I need support\nfor detecting and creating objects using the builtin Number, String\nand Boolean constructors; this CL adds this support. I also need\nto be able to detect entities of \"native object type (e.g., Error)\",\nhence the new IsNativeError() calls.\n\n(ref: http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#safe-passing-of-structured-data)\n\nPatch by Luke Zarko.\n\nReview URL: http://codereview.chromium.org/7344013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8653 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5c57d0d64357c3d22f62b737eded1605bb874f87","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 13 11:31:22 2011"},"commit":"5c57d0d64357c3d22f62b737eded1605bb874f87","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 13 11:31:22 2011"},"message":"Remove support for logging into a memory buffer.\n\nThe only usage of it was in logging tests, I've switched them for\nusing a file.\n\nI've left out support for \"--logfile=*\" for now, as Chromium uses it.\nWill be removed after the next V8 roll.\n\nR=sgjesse@chromium.org\nBUG=859\nTEST=mjsunit/log-*\n\nReview URL: http://codereview.chromium.org/7310025\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8629 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"33177880c8ee87b0deb707a08c82103ed99abd44","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 01 09:35:16 2011"},"commit":"33177880c8ee87b0deb707a08c82103ed99abd44","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 01 09:35:16 2011"},"message":"Remove \"modules\" and \"tags\" of the logging CPU profiler.\n\nModules now makes a little sense, as there is only one module.\nTags was a simplistic attempt of supporting nested profiles.\n\nR=sgjesse@chromium.org\nBUG=859\n\nReview URL: http://codereview.chromium.org/7276046\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8507 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f4bf8f8feeaa890d7dbdd651c74cd0662ff9a026","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 24 11:38:47 2011"},"commit":"f4bf8f8feeaa890d7dbdd651c74cd0662ff9a026","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 24 11:38:47 2011"},"message":"Remove obsolete aggregating and non-working producers heap profilers.\n\n2000 LOC are gone!\n\nR=sgjesse@chromium.org\nBUG=1481\n\nReview URL: http://codereview.chromium.org/7247018\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8406 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1e1387f12c8822a2df0d024e938f1b6874c50f25","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jun 22 12:39:45 2011"},"commit":"1e1387f12c8822a2df0d024e938f1b6874c50f25","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jun 22 12:39:45 2011"},"message":"Add possibility to configure 'prototype' property via FunctionTemplate\n\nBUG=v8:1479\nTEST=test-api/SetPrototypeProperties\n\nReview URL: http://codereview.chromium.org/7229007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8366 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bf9b2f8c2ce1d7bc9c1ec692fff7bc52c3b55612","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 21 08:02:34 2011"},"commit":"bf9b2f8c2ce1d7bc9c1ec692fff7bc52c3b55612","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 21 08:02:34 2011"},"message":"Heap profiler: add an ability to iterate over snapshot's nodes.\n\nThis is a preparation for removing aggregated heap snapshots.\nW/o this API, counting object instances in a snapshot is very hard.\n\nR=sgjesse@chromium.org\nBUG=1481\nTEST=cctest/test-heap-profiler/NodesIteration\n\nReview URL: http://codereview.chromium.org/7204040\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8342 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b7a93d417d5e8a52be4f4bd7f1b64bf938217749","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 10 12:33:55 2011"},"commit":"b7a93d417d5e8a52be4f4bd7f1b64bf938217749","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 10 12:33:55 2011"},"message":"Add GetOwnPropertyNames method for Object in the API\n\nPatch by Peter Varga.\n\nBUG=none\nTEST=cctest/test-api/PropertyEnumeration\n\nReview URL: http://codereview.chromium.org/7129058\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8264 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"508b22c436cf9b0837e948dbb407d3aa25f21725","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 10 09:54:04 2011"},"commit":"508b22c436cf9b0837e948dbb407d3aa25f21725","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 10 09:54:04 2011"},"message":"\"Deiceolate\" Thread classes.\n\nThread class was receiving an isolate parameter by default.\nThis approact violates the assumption that only VM threads\ncan have an associated isolate, and can lead to troubles,\nbecause accessing the same isolate from different threads\nleads to race conditions.\n\nThis was found by investigating mysterious failures of the\nCPU profiler layout test on Linux Chromium. As almost all\nthreads were associated with some isolate, the sampler was\ntrying to sample them.\n\nAs a side effect, we have also fixed the DebuggerAgent test.\n\nThanks to Vitaly for help in fixing isolates handling!\n\nR=vitalyr@chromium.org\nBUG=none\nTEST=none\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8259 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e1db94c0cb28c36aa568f08d9087e0b3e4fee832","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 10 09:36:35 2011"},"commit":"e1db94c0cb28c36aa568f08d9087e0b3e4fee832","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 10 09:36:35 2011"},"message":"trying to fix test\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8256 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4de3bb500c4d4c482ee63924c956c404b06960c1","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 09 10:03:35 2011"},"commit":"4de3bb500c4d4c482ee63924c956c404b06960c1","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 09 10:03:35 2011"},"message":"Implement core support for FixedDoubleArrays.\n\nUnder a flag without IC or Crankshaft support.\n\nBUG=none\nTEST=none\n\nReview URL: http://codereview.chromium.org/7089002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8229 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7ff41d4322585afba38fe885de2c39be7eee262d","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 07 15:01:52 2011"},"commit":"7ff41d4322585afba38fe885de2c39be7eee262d","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 07 15:01:52 2011"},"message":"Reduce TLS overhead in v8::TryCatch.\n\nR=vegorov@chromium.org\nBUG=v8:1426\n\nReview URL: http://codereview.chromium.org/6982059\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8208 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3b2470d296995e3b8508d67c3a918dfb9d348076","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 07 07:17:46 2011"},"commit":"3b2470d296995e3b8508d67c3a918dfb9d348076","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 07 07:17:46 2011"},"message":"Fix presubmit errors catched by a more recent version of cpplint.py.\n\nMainly, there were errors concerning blank lines before and after class access\ncontrol sections [whitespace/blank_line].\n\nBEFORE an access control section (e.g. public:, private:) there should be a\nblank line (except for the section right after the class declaration).\n\nAFTER an access control section there should be no blank line.\n\nTBR=ager@chromium.org\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8193 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2373771d2ee7a870bd81f010044fab5e8ab55457","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 06 20:58:25 2011"},"commit":"2373771d2ee7a870bd81f010044fab5e8ab55457","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 06 20:58:25 2011"},"message":"Fix presubmit after r8189\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8190 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f1309b0417c9faa99cfb1902140b43bc48f13bef","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 06 20:47:30 2011"},"commit":"f1309b0417c9faa99cfb1902140b43bc48f13bef","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 06 20:47:30 2011"},"message":"Compress sources of JS libraries in addition to the snapshot.\nThis saves ~170K on current sources.\n\nR=sgjesse@chromium.org\nBUG=none\nTEST=none\n\nReview URL: http://codereview.chromium.org/7066048\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8189 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c0a0c82b70f98e074988382735ae3ab288359ead","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 06 13:15:11 2011"},"commit":"c0a0c82b70f98e074988382735ae3ab288359ead","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 06 13:15:11 2011"},"message":"Per-Isolate cache for polymorphic stubs\n\nBUG=1385\nTEST=Existing tests still pass; running d8 with --dump-counters shows fewer polymorphic stubs being compiled\n\nReview URL: http://codereview.chromium.org/7094003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8183 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"670f947a5cff9bd908a7ef688ef27cdb8b6223f9","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 31 16:38:40 2011"},"commit":"670f947a5cff9bd908a7ef688ef27cdb8b6223f9","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 31 16:38:40 2011"},"message":"Implement set trap for proxies, and revamp class hierarchy in preparation:\n\n- Introduce a class JSReceiver, that is a common superclass of JSObject and\n  JSProxy. Use JSReceiver where appropriate (probably lots of places that we\n  still have to migrate, but we will find those later with proxy test suite).\n\n- Move appropriate methods to JSReceiver class (SetProperty,\n  GetPropertyAttribute, Get/SetPrototype, Lookup, and so on).\n\n- Introduce new JSFunctionProxy subclass of JSProxy. Currently only a stub.\n\n- Overhaul enum InstanceType:\n  * Introduce FIRST/LAST_SPEC_OBJECT_TYPE that ranges over all types that\n    represent JS objects, and use that consistently to check language types.\n  * Rename FIRST/LAST_JS_OBJECT_TYPE and FIRST/LAST_FUNCTION_CLASS_TYPE\n    to FIRST/LAST_[NON]CALLABLE_SPEC_OBJECT_TYPE for clarity.\n  * Eliminate the overlap over JS_REGEXP_TYPE.\n  * Also replace FIRST_JS_OBJECT with FIRST_JS_RECEIVER, but only use it where\n    we exclusively talk about the internal representation type.\n  * Insert JS_PROXY and JS_FUNCTION_PROXY in the appropriate places.\n\n- Fix all checks concerning classification, especially for functions, to\n  use the CALLABLE_SPEC_OBJECT range (that includes funciton proxies).\n\n- Handle proxies in SetProperty (that was the easiest part :) ).\n\n- A few simple test cases.\n\nR=kmillikin@chromium.org\n\nReview URL: http://codereview.chromium.org/6992072\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8126 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c5fc4b90993e3f9f056287910c98e0e46b21ef8e","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 31 12:38:45 2011"},"commit":"c5fc4b90993e3f9f056287910c98e0e46b21ef8e","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 31 12:38:45 2011"},"message":"Add asserts and state tracking to ensure that we do not call\ninto C++ without having a valid stack frame that can be\ntraversed at GC.\nAlso add asserts to track that we do not try to generate a stub\nwhile we are generating a stub, since the stub creation code is\nnot GC safe.\nReview URL: http://codereview.chromium.org/7084032\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@8122 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"abd77ad439ee626a1423b2c27ecc11aeb509d178","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 19 11:47:34 2011"},"commit":"abd77ad439ee626a1423b2c27ecc11aeb509d178","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 19 11:47:34 2011"},"message":"Rename Proxy class to Foreign, to avoid confusion with Harmony proxies.\n\nAlso fix grokdump, which was off by one after intro of JSProxy type.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7959 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c5c57d722a03f2d080e635a88966720f15e1aaa6","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 18 23:26:38 2011"},"commit":"c5c57d722a03f2d080e635a88966720f15e1aaa6","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 18 23:26:38 2011"},"message":"Put 7942 \"Per-isolate embedder-specific data\" back\n\nTBR=\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7947 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"469c55f058045f3632da65efbfdde3ef1049e8af","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 18 16:20:45 2011"},"commit":"469c55f058045f3632da65efbfdde3ef1049e8af","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 18 16:20:45 2011"},"message":"Per-isolate embedder-specific data\n\nBUG=\nTEST=\n\nReview URL: http://codereview.chromium.org/6975020\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7942 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"925107046e1dabdcd5a0a802966e544038858cd6","author":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 17 12:18:19 2011"},"commit":"925107046e1dabdcd5a0a802966e544038858cd6","committer":{"name":"vegorov@chromium.org","email":"vegorov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 17 12:18:19 2011"},"message":"Extend Handle API with MarkIndependent.\n\nGarbage collector is free to ignore object groups for independent handles and can collect then in minor collections.\n\nReview URL: http://codereview.chromium.org/7031005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7915 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c5ff1f2155281ff4e54e312383a849b7d064cfcc","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 16 06:36:43 2011"},"commit":"c5ff1f2155281ff4e54e312383a849b7d064cfcc","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 16 06:36:43 2011"},"message":"Fix typos in include/*.h inline documentation.\n\nPatch by Nicolas Kaiser <nikai@nikai.net>\n\nR=sgjesse@chromium.org\nBUG=none\nTEST=none\n\nReview URL: http://codereview.chromium.org/7030008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7891 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e14402b1df1229945156dff36b01cab400d120ee","author":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 13 10:58:25 2011"},"commit":"e14402b1df1229945156dff36b01cab400d120ee","committer":{"name":"rossberg@chromium.org","email":"rossberg@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 13 10:58:25 2011"},"message":"A first skeleton for introducing Harmony proxies.\n\n1) Add new type JSProxy for representing proxy objects.\n   Currently devoid of functionality, i.e., all properties are undefined.\n\n2) Some rudimentary global $Proxy functions to create proxies.\n\nNext step: Hook up getProperty and getOwnProperty handlers. Will probably\nrequire introducing a new LookupResult type, which is a mixture of\nINTERCEPTOR (handles any property) and CALLBACK (calls back to JS).\nCan we unify this somehow?\n\nTODO: Should probably rename existing Proxy type to something like\n\"Foreign\", to avoid confusion.\n\nReview URL: http://codereview.chromium.org/6932068\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7887 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8033be880e2163d30a4099867f06493562e483b8","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 09 15:24:48 2011"},"commit":"8033be880e2163d30a4099867f06493562e483b8","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 09 15:24:48 2011"},"message":"Add IsCallable method for Object in the API\n\nPatch by Peter Varga.\n\nBUG=none\nTEST=cctest/test-api/CallableObject\n\nReview URL: http://codereview.chromium.org/6964005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7828 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1a169aa3f016139d1de22c867911c2eeccbec651","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 06 11:41:15 2011"},"commit":"1a169aa3f016139d1de22c867911c2eeccbec651","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 06 11:41:15 2011"},"message":"Strict mode detection in preparser.\n\nHandle octal escapes in everything but RegExps.\nExtend preparser test suite to test whether the preparser reports\nexceptions to throw.\n\nTEST=preparser/*\n\nReview URL: http://codereview.chromium.org/6927075\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7804 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cf191792668b27267790ee9895314f6090896092","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 06 11:07:52 2011"},"commit":"cf191792668b27267790ee9895314f6090896092","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 06 11:07:52 2011"},"message":"Implement CallAsConstructor method for Object in the API\n\nPatch by Peter Varga.\n\nBUG=v8:1348\nTEST=cctest/test-api/ConstructorForObject\n\nReview URL: http://codereview.chromium.org/6902108\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7803 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2500f148681aa7abb05129a2abe7b5fd9a7b3d9c","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 05 18:55:31 2011"},"commit":"2500f148681aa7abb05129a2abe7b5fd9a7b3d9c","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 05 18:55:31 2011"},"message":"This implements per-isolate locking and unlocking, including tests\n\nBUG=\nTEST=\n\nCommitted: http://code.google.com/p/v8/source/detail?r=7734\n\nCommitted: http://code.google.com/p/v8/source/detail?r=7784\n\nReview URL: http://codereview.chromium.org/6788023\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7797 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d54fe47fad0a47e8f74a973c2ecbf734bf59ddc8","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 04 21:04:32 2011"},"commit":"d54fe47fad0a47e8f74a973c2ecbf734bf59ddc8","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 04 21:04:32 2011"},"message":"This implements per-isolate locking and unlocking, including tests\n\nBUG=\nTEST=\n\nCommitted: http://code.google.com/p/v8/source/detail?r=7734\n\nReview URL: http://codereview.chromium.org/6788023\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7784 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"82a04c7fdcfe76badf2cc8b477d814d077ee9c10","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 04 13:03:08 2011"},"commit":"82a04c7fdcfe76badf2cc8b477d814d077ee9c10","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 04 13:03:08 2011"},"message":"Add CallAsFunction method to the Object class in the API\n\nPatch by Peter Varga.\n\nBUG=v8:1336\nTEST=cctest/test-api/CallAsFunction\n\nReview URL: http://codereview.chromium.org/6883045\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7781 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"24f19608d4dc319377f9eb260da2bbba618d6b23","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 04 11:07:09 2011"},"commit":"24f19608d4dc319377f9eb260da2bbba618d6b23","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 04 11:07:09 2011"},"message":"Actually revert \"Add Call method to the Object class in the API\"\n\nTests are failing in debug mode.\n\nThis also reapplies the change \"Make Date and RegExp inherit from\nObject in the API\" that I accidentally reverted.\n\nR=sgjesse@chromium.org\nBUG=\nTEST=\n\nReview URL: http://codereview.chromium.org/6927009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7775 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b8cdecb5170a232a919df88780f6d2a2e19244aa","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 04 10:03:49 2011"},"commit":"b8cdecb5170a232a919df88780f6d2a2e19244aa","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 04 10:03:49 2011"},"message":"Add Call method to the Object class in the API\n\nPatch by Peter Varga.\n\nBUG=v8:1336\nTEST=cctest/test-api/CallAsFunction\n\nReview URL: http://codereview.chromium.org/6883045\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7773 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"87f225936f4956d9b373d21ce0c16476840b9c9e","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 04 07:28:27 2011"},"commit":"87f225936f4956d9b373d21ce0c16476840b9c9e","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 04 07:28:27 2011"},"message":"Make Date and RegExp inherit from Object in the API.\n\nThey are objects and the API inheritance hierarchy should reflect that.\n\nR=sgjesse@chromium.org\nBUG=\nTEST=\n\nReview URL: http://codereview.chromium.org/6929008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7772 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8aeaa5e90a94b26c58b39c1aec7b4f69107d2727","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 03 05:40:47 2011"},"commit":"8aeaa5e90a94b26c58b39c1aec7b4f69107d2727","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 03 05:40:47 2011"},"message":"Implement API to disallow code generation from strings for a context.\n\nR=sgjesse@chromium.org\nBUG=v8:1258\nTEST=test-api/AllowCodeGenFromStrings\n\nReview URL: http://codereview.chromium.org/6905167\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7753 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f4c120d6159b22a1f2d136091f302dfe505de66c","author":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 29 21:26:03 2011"},"commit":"f4c120d6159b22a1f2d136091f302dfe505de66c","committer":{"name":"dslomov@chromium.org","email":"dslomov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 29 21:26:03 2011"},"message":"This implements per-isolate locking and unlocking, including tests\n\nBUG=\nTEST=\n\nReview URL: http://codereview.chromium.org/6788023\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7734 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ec58c05f4ee7245e6f778a1fde1d2a1f8da5d6e9","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 29 12:08:33 2011"},"commit":"ec58c05f4ee7245e6f778a1fde1d2a1f8da5d6e9","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 29 12:08:33 2011"},"message":"Add support for startup data (snapshot) compression.\n\nThis is for mobile platforms where application footprint size is\nimportant. To avoid including compression libraries into V8, we assume\nthat the host machine have them (true for Linux), and rely on embedder\nto provide decompressed data.\n\nCurrently, only snapshot data can be comressed. It is also possible to\ncompress libraries sources, but it is more involved and will be\naddressed in another CL.\n\nBUG=none\nTEST=none\n\nReview URL: http://codereview.chromium.org/6901090\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7724 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"32732fbc86a902dc187116807634e83363bab570","author":{"name":"karlklose@chromium.org","email":"karlklose@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 28 09:27:40 2011"},"commit":"32732fbc86a902dc187116807634e83363bab570","committer":{"name":"karlklose@chromium.org","email":"karlklose@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 28 09:27:40 2011"},"message":"Expose hasOwnProperty() through API.\n\nBUG=http://code.google.com/p/v8/issues/detail?id=1342\nTEST=test-api/HasOwnProperty\n\nReview URL: http://codereview.chromium.org/6903059\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7699 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bc8f6943bbca8a03c82c0aac1084b95a80a1f395","author":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 21 07:15:43 2011"},"commit":"bc8f6943bbca8a03c82c0aac1084b95a80a1f395","committer":{"name":"jkummerow@chromium.org","email":"jkummerow@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 21 07:15:43 2011"},"message":"Support Float64Arrays\n\nBUG=None\nTEST=mjsunit/external-arrays.js; updated cctest; existing unit tests\n\nReview URL: http://codereview.chromium.org/6879009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7675 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"690093effea97757ecb2d104a5499579b272aa4b","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 11 11:38:34 2011"},"commit":"690093effea97757ecb2d104a5499579b272aa4b","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Apr 11 11:38:34 2011"},"message":"Mark single-argument inline constructors as 'explicit'.\n\nThere is currently a bug in cpplint.py hiding this problem.\n\nR=sgjesse@chromium.org\nBUG=1304\nTEST=none\n\nReview URL: http://codereview.chromium.org/6820028\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7567 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c7c57227ddfbd9a5ed130046b0124ae3061d4417","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 07 08:41:37 2011"},"commit":"c7c57227ddfbd9a5ed130046b0124ae3061d4417","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 07 08:41:37 2011"},"message":"Make preparser api be exported in shared libraries.\n\nAdds missing V8EXPORT declarations to types in v8-preparser.h.\n\nBUG=\nTEST=\n\nReview URL: http://codereview.chromium.org/6812012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7531 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"56b53dd5dc307c93f58e66ef57251911fa8ef382","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 01 12:17:20 2011"},"commit":"56b53dd5dc307c93f58e66ef57251911fa8ef382","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 01 12:17:20 2011"},"message":"Introduce v8::Object::CreationContext method.\n\nThat allows to find out a global context in which the object\nwas created.\n\nReview URL: http://codereview.chromium.org/6759054\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7476 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4e502c5e5a8c324502ec00ccacaeebf5e87c4cbd","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 30 10:13:11 2011"},"commit":"4e502c5e5a8c324502ec00ccacaeebf5e87c4cbd","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 30 10:13:11 2011"},"message":"PreParser build fix\n\nPatch from Peter Varga <pvarga@inf.u-szeged.hu>.\n\nBUG=none\nTEST=none\n\nReview URL: http://codereview.chromium.org/6773009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7430 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2d95ed4b2536f305a29963b111165b0fb2e09f99","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 29 12:52:07 2011"},"commit":"2d95ed4b2536f305a29963b111165b0fb2e09f99","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 29 12:52:07 2011"},"message":"Remove snapshots-related code that is implemented in DevTools heap profiler.\n\nDiffs and retaining paths are implemented on JS side. There is no need\nto maintain native implementation.\n\nR=vitalyr@chromium.org\nBUG=none\nTEST=none\n\nReview URL: http://codereview.chromium.org/6770009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7412 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"41f30cac90b873042e32446c1339319b5be07fe9","author":{"name":"podivilov@chromium.org","email":"podivilov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 22 18:02:23 2011"},"commit":"41f30cac90b873042e32446c1339319b5be07fe9","committer":{"name":"podivilov@chromium.org","email":"podivilov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 22 18:02:23 2011"},"message":"Fix crash in Debug::SendCommand.\n\nR=vitalyr@chromium.org\nBUG=\nTEST=\n\nReview URL: http://codereview.chromium.org/6715029\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7310 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b2b5d2777e1ba05f8127c28e5f006896ef0fc12c","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 22 16:10:01 2011"},"commit":"b2b5d2777e1ba05f8127c28e5f006896ef0fc12c","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 22 16:10:01 2011"},"message":"Add support for CPU and heap profiles deletion.\n\nR=vitalyr@chromium.org\nBUG=none\nTEST=none\n\nReview URL: http://codereview.chromium.org/6685084\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7308 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7976ca2cbcf127d8daa3e2a32591e8d5e6355e89","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 18 20:35:07 2011"},"commit":"7976ca2cbcf127d8daa3e2a32591e8d5e6355e89","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 18 20:35:07 2011"},"message":"Merge isolates to bleeding_edge.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7271 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6ff7fdebd37872826227cf9a880e24412e7810b5","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 18 18:49:56 2011"},"commit":"6ff7fdebd37872826227cf9a880e24412e7810b5","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 18 18:49:56 2011"},"message":"Merge isolates to bleeding_edge.\nReview URL: http://codereview.chromium.org/6685088\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7268 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4f7fe371b28251382c9b710baebd914337d9b23c","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 16 19:55:31 2011"},"commit":"4f7fe371b28251382c9b710baebd914337d9b23c","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 16 19:55:31 2011"},"message":"Fix Array::New(length) in the API to return an array with the provided length.\n\nThe internal factory method initializes the elements but does not set\nthe length property of the array.\n\nAdd array api test case for length.\n\nR=antonm@chromium.org\nBUG=v8:1256\nTEST=cctest/test-api/Array\n\nReview URL: http://codereview.chromium.org/6674034\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7210 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a7bb1d527898477118f228df212dd0c56e036cd2","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 16 12:02:28 2011"},"commit":"a7bb1d527898477118f228df212dd0c56e036cd2","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 16 12:02:28 2011"},"message":"Introduce one way dependencies into object grouping.\n\nThose are necessary to properly manage relationship between objects in cases\nwhen they don't form proper tree structure.\n\nReview URL: http://codereview.chromium.org/6686053\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7202 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bc9ddf20bb569b6191b7dc33bc80934e7e73f376","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 10 13:58:20 2011"},"commit":"bc9ddf20bb569b6191b7dc33bc80934e7e73f376","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 10 13:58:20 2011"},"message":"ARM: Port r7089 to ARM\n\nEnsure that there is always enough bytes between consequtive calls in optimized code to write a call instruction at the return points without overlapping.\n\nAdd a call to deoptimize all functions after running tests with --stress-opt. This will catch some issues with functions which cannot be forcefully deoptimized. Some of the tests failed on ARM with that change without the rest of the changes in this change.\nReview URL: http://codereview.chromium.org/6661022\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7132 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dee9c002672717fc1e1afecde9fbdd3c26f06078","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 10 12:05:31 2011"},"commit":"dee9c002672717fc1e1afecde9fbdd3c26f06078","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 10 12:05:31 2011"},"message":"Add an interface for an embedder to provide information about native\nobjects retained by object groups and global handles.\n\nThis information is then used during heap snapshot generation\nto provide a more complete memory picture.\n\nThis patch will be needed to fix https://bugs.webkit.org/show_bug.cgi?id=53659.\n\nReview URL: http://codereview.chromium.org/6626043\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7125 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9cca7d2733bfa388599a8c2e34a907f91afce011","author":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 09 15:01:16 2011"},"commit":"9cca7d2733bfa388599a8c2e34a907f91afce011","committer":{"name":"danno@chromium.org","email":"danno@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 09 15:01:16 2011"},"message":"Combine typed and pixel arrays.\n\nWorth mentioning:\n- Specialized versions of pixel array and store/loads inside the generic stubs have been removed, since to have parity for all external arrays, 8 different versions would have to be inlined/checked.\n- There's a new constant in v8.h for external arrays with pixel array elements.\n\nReview URL: http://codereview.chromium.org/6546036\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@7106 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d5851dcde0751f7a8fff0ef124d4ee02f77b71af","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 09 14:51:38 2011"},"commit":"d5851dcde0751f7a8fff0ef124d4ee02f77b71af","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 09 14:51:38 2011"},"message":"x64: Enable inline smi code patching to reenable the inlined code in\nthe code generated by the full code generator after my previous\nchange.\n\nThe generated code is the same as on ia32 and so is the patching.\n\nReview URL: http://codereview.chromium.org/6456023\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@6703 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"73a4ecfae10affc700aa29806c693bedfabf7671","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 02 13:31:52 2011"},"commit":"73a4ecfae10affc700aa29806c693bedfabf7671","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 02 13:31:52 2011"},"message":"A MessageObject is a purely internal object to hold information about\nan error message that needs to be generated and reported. This change\nhides all of the error information from JavaScript code so user\ncallbacks cannot get hold of it.\n\nReview URL: http://codereview.chromium.org/6368051\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@6574 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3d4c4951aacd479241fe07407154db05242bb53d","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 28 13:41:19 2011"},"commit":"3d4c4951aacd479241fe07407154db05242bb53d","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 28 13:41:19 2011"},"message":"Clarify some details of global objects implementation.\n\nReview URL: http://codereview.chromium.org/6386011\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@6525 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b0abe13ed2c7b468a333139301634f6f7c29828f","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 19 11:16:23 2011"},"commit":"b0abe13ed2c7b468a333139301634f6f7c29828f","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jan 19 11:16:23 2011"},"message":"Using unsigned shifts and masks when dealing with 64-bit addresses.\n\nBUG=v8:1037\n\nReview URL: http://codereview.chromium.org/6242005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@6388 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8805509f28f33a10f60910a3a15fbc1e38628089","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 13 15:56:33 2011"},"commit":"8805509f28f33a10f60910a3a15fbc1e38628089","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 13 15:56:33 2011"},"message":"Wrap external pointers more carefully.\n\nOn 32-bit platforms any pointer with 0 as LSB can be wrapped into Smi.  However, on 64-bit\nplatforms it's currently not the case as x64 Smis must have 0s in lower 32 bit word.\nEven worse, macroassembler Move instruction will try to fetch integer value from Smi\nand will shift by 32 bits to the right rendering stored pointer incorrect.\n\nBUG=v8:1037\n\nReview URL: http://codereview.chromium.org/6119009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@6301 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6f72caf92d6d07216108bc06423b78603255cc7d","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 11 12:36:09 2011"},"commit":"6f72caf92d6d07216108bc06423b78603255cc7d","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 11 12:36:09 2011"},"message":"Add reporting of JS heap size limit to GetHeapStatistics.\n\nI found it useful to know inside the heap profiler to avoid\ncrashes due to heap overflow.\n\nReview URL: http://codereview.chromium.org/6111007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@6266 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"58782c556a361e2cc0818e14c29dc59d16d077f1","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 04 09:27:46 2011"},"commit":"58782c556a361e2cc0818e14c29dc59d16d077f1","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jan 04 09:27:46 2011"},"message":"Export external array data accessors.\n\nBUG=v8:1016\nReview URL: http://codereview.chromium.org/6013011\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@6142 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"218944fe6a95a97e66a60a2eb2c2c8f2a8f44876","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 03 10:17:08 2011"},"commit":"218944fe6a95a97e66a60a2eb2c2c8f2a8f44876","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 03 10:17:08 2011"},"message":"Add more documentation to Context::New in the API header file.\n\nReview URL: http://codereview.chromium.org/6043005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@6130 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"648fcd906ec17703afaa14fe673f356537a7cef2","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Dec 17 12:45:27 2010"},"commit":"648fcd906ec17703afaa14fe673f356537a7cef2","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Dec 17 12:45:27 2010"},"message":"Adding Date::ResetCache() API so that the cache values in the Date object\ncan be reset to allow DST / timezone changes to be re-cached and reflected\nin the Date object.\n\nPatch by Mark Lam from Hewlett-Packard Development Company, LP\n\nReview URL: http://codereview.chromium.org/5978001\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@6067 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5b55e1ad9a7f038a9048dc9e8358302c0d7b1670","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 14 13:21:46 2010"},"commit":"5b55e1ad9a7f038a9048dc9e8358302c0d7b1670","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Dec 14 13:21:46 2010"},"message":"API: Correct documentation of String::WriteUtf8, String::Write\nand String::WriteAscii and add test.  Correct implementation of\nString::Write, fixing bug 975 (the patch in that bug was not\nused, however).\nReview URL: http://codereview.chromium.org/5718005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@6011 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5cf643aa422251553a68759ace499fd8b4f2cf8d","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 13 10:42:06 2010"},"commit":"5cf643aa422251553a68759ace499fd8b4f2cf8d","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 13 10:42:06 2010"},"message":"New heap profiler: add support for progress reporting and control.\n\nAs taking a snapshot of a large heap takes noticeable time, it's\ngood to be able to monitor and control it.\n\nThe change itself is small, big code deletes and additions are in\nfact moves. The only significant change is simplification of\napproximated retained sizes calculation algorithm.\n\nReview URL: http://codereview.chromium.org/5687003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5978 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"095a71e99d2b0a2339662cdf75d0bc23959b1c2f","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 08 10:06:40 2010"},"commit":"095a71e99d2b0a2339662cdf75d0bc23959b1c2f","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 08 10:06:40 2010"},"message":"Changed interface to preparser to not require pushback support.\nChanged implementation of pushback in preparer character stream.\nRemoved assert that isn't satisfied by in test-cases, but only by the real code.\nMake preparser compile again.\n\nReview URL: http://codereview.chromium.org/5593004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5946 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dd1a7fa2b394c6d5906c4416460436c1f7736cfb","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Dec 02 15:38:51 2010"},"commit":"dd1a7fa2b394c6d5906c4416460436c1f7736cfb","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Dec 02 15:38:51 2010"},"message":"New Heap Profiler: add API method for finding a graph node by id.\n\nTEST=cctest/test-heap-profiler/HeapSnapshotGetNodeById\n\nReview URL: http://codereview.chromium.org/5537001\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5914 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"84f2f5ee90b0081f09aa8a646d9f7441e9617d89","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 29 13:24:37 2010"},"commit":"84f2f5ee90b0081f09aa8a646d9f7441e9617d89","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 29 13:24:37 2010"},"message":"Preparser extracted into separate files that can be compiled to a library.\nNo scons target yet.\n\nReview URL: http://codereview.chromium.org/5295004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5899 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9137e4a8c95d8bfef9e15673c3fc4e2bc087d92d","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 25 08:04:12 2010"},"commit":"9137e4a8c95d8bfef9e15673c3fc4e2bc087d92d","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 25 08:04:12 2010"},"message":"Expose a method for getting JSObject constructor name\nReview URL: http://codereview.chromium.org/5256004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5890 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1cfc63cf8ac7bf68e6758044b0c338987e1c1f50","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 22 14:00:40 2010"},"commit":"1cfc63cf8ac7bf68e6758044b0c338987e1c1f50","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 22 14:00:40 2010"},"message":"New heap profiler: implement fast retaining sizes approximation.\n\nApproximation is done by building a dominators tree for the heap graph.\nDominator nodes and retained sizes are serialized into JSON.\n\nRemoved:\n - reachable size (it is useless, after all);\n - HeapEntryCalculatedData (size is now stored in the node, retaining\n   paths in a hash map);\n\nReview URL: http://codereview.chromium.org/5154007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5867 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5418f64e1e9c32c1e9cf5f3cace283b281f5a6ad","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 18 10:49:34 2010"},"commit":"5418f64e1e9c32c1e9cf5f3cace283b281f5a6ad","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 18 10:49:34 2010"},"message":"A follow-up to r5849 -- fix Chromium build.\n\nTBR=sgjesse@chromium.org\n\nReview URL: http://codereview.chromium.org/5198003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5851 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"051f314a99ff29c07071e90eccd56f7983dda32d","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 18 10:38:25 2010"},"commit":"051f314a99ff29c07071e90eccd56f7983dda32d","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 18 10:38:25 2010"},"message":"New heap profiler: include all heap objects and refs into snapshot.\n\nOtherwise, retaned memory sizes are not precise. This increases size\nof heap snapshot, I will deal with this later. Heap objects and\nreferences previously missing in snapshot are now marked as 'hidden'.\nThat means, they not shown to user, but participate in sizes\ncalculation.\n\nOther small changes:\n - added 'shortcut' graph edges: e.g. to pin global objects on top\n   level;\n - meta-information in JSON snapshot is no more double encoded.\n\nReview URL: http://codereview.chromium.org/5139002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5849 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"af7b6fecfede35f9119dff3b583c059fd22d4896","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 15 13:23:30 2010"},"commit":"af7b6fecfede35f9119dff3b583c059fd22d4896","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 15 13:23:30 2010"},"message":"Split globals.h into two parts, where only one depends on V8.\nMade allocation.{h,cc} independent of V8, allowing utils.h to allocate\nvectors and collectors.\n\nReview URL: http://codereview.chromium.org/5005001\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5826 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"17573d771a3136b67036251b98b5eda7897bc8dc","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 10 08:38:42 2010"},"commit":"17573d771a3136b67036251b98b5eda7897bc8dc","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 10 08:38:42 2010"},"message":"Landing for Justin Schuh.\n\nAdd 128MB limit for executable pages.\n\nBUG=http://code.google.com/p/v8/issues/detail?id=925\nTEST=None.\nTBR=jschuh@chromium.org\nReview URL: http://codereview.chromium.org/4634003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5799 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"455cfe5932e9173b668c5b10a613cc3c112c64b7","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 04 10:27:39 2010"},"commit":"455cfe5932e9173b668c5b10a613cc3c112c64b7","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 04 10:27:39 2010"},"message":"Make presubmit lint the \"include\" dir.\nMake include dir content pass lint.\n\nReview URL: http://codereview.chromium.org/4421002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5767 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"efe74b695d6454a2ef9541253b1bbeab04daf5d7","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 04 08:52:49 2010"},"commit":"efe74b695d6454a2ef9541253b1bbeab04daf5d7","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 04 08:52:49 2010"},"message":"Extract essential type declarations into separate file.\n\nReview URL: http://codereview.chromium.org/4320004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5765 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fbdcbdf748ed264a4f72d71d55cb076d3de7f065","author":{"name":"serya@chromium.org","email":"serya@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 01 10:51:44 2010"},"commit":"fbdcbdf748ed264a4f72d71d55cb076d3de7f065","committer":{"name":"serya@chromium.org","email":"serya@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 01 10:51:44 2010"},"message":"Refactoring of v8:Arguments similary we did with v8::AccessorInfo (http://codereview.chromium.org/242050). GC-controlled values moved to a separate array.\nReview URL: http://codereview.chromium.org/4117010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5746 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0ea6c1e09f5122f8e6d68731ca2e940817e61535","author":{"name":"serya@chromium.org","email":"serya@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 21 14:21:00 2010"},"commit":"0ea6c1e09f5122f8e6d68731ca2e940817e61535","committer":{"name":"serya@chromium.org","email":"serya@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 21 14:21:00 2010"},"message":"Optimizing HandleScope. Also fixed HandleScope destruction when API getter throws an exception.\nReview URL: http://codereview.chromium.org/3792003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5689 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d4bc8e1585af89d9798558383d0e9ea00c53b238","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 18 09:15:38 2010"},"commit":"d4bc8e1585af89d9798558383d0e9ea00c53b238","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 18 09:15:38 2010"},"message":"New Heap profiler: add dumping HeapNumbers and InternalFields to snapshot.\n\nHeapNumbers do consume memory, so it's worth dumping them. However, we\ndon't dump their values, as they are not as self-descriptive as values\nof strings, and they will increase snapshot size. Storing heap numbers\nvalues can be added if we will feel a sufficient demand for that.\n\nInternalFields are used, e.g. for storing references to DOM nodes\nevent handlers.\n\nReview URL: http://codereview.chromium.org/3769007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5635 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"788c5e344dada75adba69d20f59c0f7972e25f33","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Oct 13 14:57:00 2010"},"commit":"788c5e344dada75adba69d20f59c0f7972e25f33","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Oct 13 14:57:00 2010"},"message":"Better align heap snapshots contents with debugger info.\n\nI created a heap snapshot in Chromium, and then started comparing\nit side-by-side with representations of objects provided by\nthe debugger, fixing discrepancies.\n\nReview URL: http://codereview.chromium.org/3590029\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5612 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2ffa84ad4dfb3c840d690fc9a88451681f1b032d","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 05 12:01:46 2010"},"commit":"2ffa84ad4dfb3c840d690fc9a88451681f1b032d","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 05 12:01:46 2010"},"message":"Fix typo in the spec reference.\n\nTBR=ager@chromium.org\n\nReview URL: http://codereview.chromium.org/3547012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5589 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"91b9a92336a5226d61a8313be8a5d9eb8cda04ae","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 05 11:51:41 2010"},"commit":"91b9a92336a5226d61a8313be8a5d9eb8cda04ae","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 05 11:51:41 2010"},"message":"Addressing Mads' comments from http://codereview.chromium.org/3585010/show.\n\nReview URL: http://codereview.chromium.org/3613009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5588 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"eb24a86e1b8b539bb6b8d91461a39c6f5eb4acc2","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 05 08:53:51 2010"},"commit":"eb24a86e1b8b539bb6b8d91461a39c6f5eb4acc2","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 05 08:53:51 2010"},"message":"StackTrace should provide access to //@ sourceURL=... value\nReview URL: http://codereview.chromium.org/3602013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5586 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b999ae3cbd3d3d6cd8053e2ee295a367251ee315","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 04 15:04:16 2010"},"commit":"b999ae3cbd3d3d6cd8053e2ee295a367251ee315","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 04 15:04:16 2010"},"message":"API: expose RegExp.\n\nReview URL: http://codereview.chromium.org/3585010\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5584 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0012576e2bc8f0e35fdd88426a8c34183ed66ae3","author":{"name":"podivilov@chromium.org","email":"podivilov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 27 15:09:55 2010"},"commit":"0012576e2bc8f0e35fdd88426a8c34183ed66ae3","committer":{"name":"podivilov@chromium.org","email":"podivilov@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 27 15:09:55 2010"},"message":"Add Debug::CancelDebugBreak method to api\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5535 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"228d56bd8e08ae28fdf5c0cf4d1227a719953b2e","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 14 15:11:24 2010"},"commit":"228d56bd8e08ae28fdf5c0cf4d1227a719953b2e","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 14 15:11:24 2010"},"message":"Add support for abortion in v8::OutputStream.\n\nIt's a good idea to allow receiver to interrupt data transmission.\n\nReview URL: http://codereview.chromium.org/3409002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5452 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"23880790515b91d1c9460f422c53e4abeab22ff6","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 14 11:49:06 2010"},"commit":"23880790515b91d1c9460f422c53e4abeab22ff6","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 14 11:49:06 2010"},"message":"Implement heap snapshots serialization into JSON. API is designed\nto avoid storing serialized snapshot on VM, instead it is emitted\nusing output stream interface.\n\nThe size of JSON emitted is roughly equal to used heap size\n(when stored as an ASCII string).\n\nNow a whole heap snapshot can be serialized and transmitted outside\nVM. This makes possible:\n  - implementing non-async UI for heap snapshots inspection;\n  - storing heap snapshots for further inspection;\n  - remote profiling (we can even implement a snapshotting mode\n    where a snapshot isn't even stored in VM, only transmitted --\n    good for mobile devices);\n  - creating tools for outside heap snapshots processing, e.g.\n    converting to HPROF.\n\nReview URL: http://codereview.chromium.org/3311028\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5450 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d3e457303e3156de8aab9627ac8e7d4505932c19","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 03 11:31:58 2010"},"commit":"d3e457303e3156de8aab9627ac8e7d4505932c19","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 03 11:31:58 2010"},"message":"Add API callback for tracking allocated memory\n\nAllows the host application to provide a mechanism for notification and custom logging through a callback (set through the API V8::AddMemoryAllocationCallback and removed through V8::RemoveMemoryAllocationCallback), when V8 allocates ro frees memory. \n\nThis replaces the current histogram data \"V8.ExecutableMemoryMax\" by allowing usage data to be logged by the application as required rather than always through V8. \n\nBUG=http://crbug.com/54222\nTEST=Set the callback function with the API and cause V8 to allocate memory.\n\nPatch by Paul Mehta <pmehta@chromium.org>\n\nReview URL: http://codereview.chromium.org/3329006\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5403 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"40788b57c98d32a0128c47fde97dfd5b7c4e388b","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 18 13:29:20 2010"},"commit":"40788b57c98d32a0128c47fde97dfd5b7c4e388b","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 18 13:29:20 2010"},"message":"Remove unused typedef.\n\nReview URL: http://codereview.chromium.org/3164022\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5302 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e839a1ca58d7b44a89c3893eaa140b5331b2fc00","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 18 08:19:29 2010"},"commit":"e839a1ca58d7b44a89c3893eaa140b5331b2fc00","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 18 08:19:29 2010"},"message":"Heap profiler: allow returning aggregated snapshots via the new API.\n\nThis is intended for smoother migration to the new API in Chromium.\nAlso, aggregated heap snapshots can be used for cheaply obtaining\nheap statistics, e.g. in tests.\n\nReview URL: http://codereview.chromium.org/3124024\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5297 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0d8ec2a8d86eaf02572eb0767436e84d05a6665b","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 16 11:53:52 2010"},"commit":"0d8ec2a8d86eaf02572eb0767436e84d05a6665b","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 16 11:53:52 2010"},"message":"Remove temporary support for two indexed property query APIs.\n\nReview URL: http://codereview.chromium.org/3143015\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5271 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"57769489d569ccc035696879d72ed42aeebab678","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 10 10:05:18 2010"},"commit":"57769489d569ccc035696879d72ed42aeebab678","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 10 10:05:18 2010"},"message":"First phase of migration to new indexed property query callbacks.\n\nEventually indexed property query callbacks will return attributes\n(as an integer) or an empty handle if property is not intercepted.\n\nTo gradually migrate to this new API, USE_NEW_QUERY_CALLBACK\nmacro would control if old or new style API is used.\n\nSo the migration plan is:\n\n1) introduce new API which should be explictily enabled;\n2) switch to new API defining USE_NEW_QUERY_CALLBACK before\ninclude of <v8.h> (that would require changes to client code as well)\n3) remove old API from v8\n4) remove #define USE_NEW_QUERY_CALLBACK from clients.\n\nBUG=http://code.google.com/p/v8/issues/detail?id=816\n\nReview URL: http://codereview.chromium.org/3101001\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5228 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"59645c6a193da9f0215cc656b2e18bb22ce296c2","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 10 09:53:56 2010"},"commit":"59645c6a193da9f0215cc656b2e18bb22ce296c2","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 10 09:53:56 2010"},"message":"Add v8::Value::IsRegExp method.\n\nPatch by Vlad Burlik.\n\nReview URL: http://codereview.chromium.org/3064051\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5227 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1695003bb99b2908f7bf704808164331e730020c","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 09 11:37:24 2010"},"commit":"1695003bb99b2908f7bf704808164331e730020c","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 09 11:37:24 2010"},"message":"Heap profiler: reduce heap snapshots size.\n\nThe size of a snapshot is now 65-80% of the JS heap size (tested on\nGMail and Wave), previously it was >200%.\n\nBUG=783\n\nReview URL: http://codereview.chromium.org/3060008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5211 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"793d0a92b99208e3af4e92430eba6d1825a4a6ae","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 19 13:26:25 2010"},"commit":"793d0a92b99208e3af4e92430eba6d1825a4a6ae","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 19 13:26:25 2010"},"message":"Add a check that weak object handle is not in NEAR_DEATH state after weak callback invocation.\n\nIf object enters NEAR_DEATH state, it must be explicitly cleared and/or disposed, otherwise\nit would retain JS object forever.  Note as well that parameter is reset to NULL on first\ninvocation so weak handle callback would be in hard situation.\n\nReview URL: http://codereview.chromium.org/3011009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5096 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"35a80e16241308b4f476875d0f96282cf697a029","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 19 09:51:33 2010"},"commit":"35a80e16241308b4f476875d0f96282cf697a029","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 19 09:51:33 2010"},"message":"Landing for hans@chromium.org.\n\nTYPE_CHECK in v8.h should assign to volatile qualified null-pointer.\n\nUnless the pointer is volatile qualified, Clang will warn that LLVM\nremoves the assignment during optimization. This is not a problem as\nthat code should never execute, but the warning is treated as an error\nwhen building Chromium, and thus stops the build.\n\nCode review URL: http://codereview.chromium.org/3005010/show\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5093 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c98ac6e82c51d2ca5320fe75a23a87d0568ecce6","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 15 13:21:50 2010"},"commit":"c98ac6e82c51d2ca5320fe75a23a87d0568ecce6","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 15 13:21:50 2010"},"message":"Heap profiler: implement diffing of snapshots.\n\nTo trace objects between snapshots, an external map of object tags is\nmaintained. After the first heap snapshot has been taken, the map is\nupdated by reporting object moves from the GC. If no snapshots were\ntaken, there is no overhead (except for flag checking).\n\nI considered graph comparison algorithms that doesn't require using\nobject tags, but they are all of a high computational complexity, and\nwill still fail to detect object moves properly, even for trivial\ncases, so using tags looks like unavoidable.\n\nReview URL: http://codereview.chromium.org/3020002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5078 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"84ffa5610b0e44e51c349b9a17e0f69f5900dfff","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 14 08:23:35 2010"},"commit":"84ffa5610b0e44e51c349b9a17e0f69f5900dfff","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 14 08:23:35 2010"},"message":"Debugger: introduce parametrized debug break, the parameter is passed\nback to EventListener to be able to dynamically specify behavior\non asynchronously enforced VM breakouts.\n\nReview URL: http://codereview.chromium.org/2962007/show\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5063 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"abaf8347a5f485ea35f2e764b287e1fcca5ea323","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 12 13:17:27 2010"},"commit":"abaf8347a5f485ea35f2e764b287e1fcca5ea323","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jul 12 13:17:27 2010"},"message":"Allow to capture stack trace for uncaught exceptions\nReview URL: http://codereview.chromium.org/2961003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5043 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a835641dee0ba6083501e5f66494ac5eef87013b","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 02 07:39:42 2010"},"commit":"a835641dee0ba6083501e5f66494ac5eef87013b","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 02 07:39:42 2010"},"message":"Landing for victorw@chromium.org.\n\nFix issues so v8 could be built as a DLL.\n\n-. get rid of all the compiler warning by moving dllexport/dllimport\nto the individual members for classes which have inline members.\n\n-. update v8 gyp to build v8.dll for chromium multi-dll version (win\nand component==shared_library)\n\nNote: most of the code are contributed by sjesse.\n\nCode review URL: http://codereview.chromium.org/2882009/show\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@5006 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"685cae6021ec9dfaadcdf9ff0695d6dd16ff70d6","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 18 10:52:59 2010"},"commit":"685cae6021ec9dfaadcdf9ff0695d6dd16ff70d6","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 18 10:52:59 2010"},"message":"API: Resolve linker issues with using V8 as a DLL\n\nThis changes the way the constants kJSObjectType, kFirstNonstringType and kProxyType are made available to the inlined part of the V8 API. This change to fixed constants resolves linker this linker error Windows\n\nerror LNK2001: unresolved external symbol \"public: static int v8::internal::Internals::kJSObjectType\" (?kJSObjectType@Internals@internal@v8@@2HA)\n\nwhen linking against a V8 DLL.\n\nThis change also makes it possible to build all the C++ tests with ENABLE_DEBUGGER_SUPPORT not defined. Now C++ tests run ENABLE_DEBUGGER_SUPPORT not defined, and only the JavaScript tests which tests the debugger fails when ENABLE_DEBUGGER_SUPPORT is not defined.\nReview URL: http://codereview.chromium.org/2820016\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4898 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"93387f272efa5dcb94892dfd67fa3b5621104276","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 17 12:56:55 2010"},"commit":"93387f272efa5dcb94892dfd67fa3b5621104276","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 17 12:56:55 2010"},"message":"Heap profiler: add a missing link between a function closure and shared function info.\n\nReview URL: http://codereview.chromium.org/2846012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4891 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"52975ae407eb8362bb639b08831970bc7d00522d","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 15 17:01:02 2010"},"commit":"52975ae407eb8362bb639b08831970bc7d00522d","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 15 17:01:02 2010"},"message":"Remove old named property query API.\n\nReview URL: http://codereview.chromium.org/2742007\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4867 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f213b096bcac20fb8507a6262a9500dde77544cc","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 15 11:44:07 2010"},"commit":"f213b096bcac20fb8507a6262a9500dde77544cc","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 15 11:44:07 2010"},"message":"Heap profiler: publish API and add test.\n\nReview URL: http://codereview.chromium.org/2822009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4864 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"76e24831a66daf38caa2a2d7249252d89cad34ff","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 14 13:09:27 2010"},"commit":"76e24831a66daf38caa2a2d7249252d89cad34ff","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 14 13:09:27 2010"},"message":"API: Added functions to retreive information on indexed properties managed by the embedding layer\n\nBUG=737\nTEST=test-api/PixelArrayInfo, test-api/ExternalArrayInfo\nReview URL: http://codereview.chromium.org/2818003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4860 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c7ab2b6aa389a93c2b0be6f17389abd4bbb5e64a","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 08 09:35:47 2010"},"commit":"c7ab2b6aa389a93c2b0be6f17389abd4bbb5e64a","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 08 09:35:47 2010"},"message":"Remove the SetExternalStringDiposeCallback API\n\nChanged the disposal of external string resources to call a virtual Dispose method on the resource. The default inplementation of Dispose deletes the object and will capture the delete operator matching the new operator used to allocate the object.\nReview URL: http://codereview.chromium.org/2658008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4816 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6dc72b690cae1a1b8a2a3b684051951a9faffa1f","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 08 06:20:49 2010"},"commit":"6dc72b690cae1a1b8a2a3b684051951a9faffa1f","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 08 06:20:49 2010"},"message":"Add an overloaded PreCompile method that takes a Handle<String>.\n\nCode review URL: http://codereview.chromium.org/2633004/show\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4815 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"09acdc8446d9444cdad59a85b74df03b37a91463","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 07 08:49:07 2010"},"commit":"09acdc8446d9444cdad59a85b74df03b37a91463","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 07 08:49:07 2010"},"message":"Add an API to control the disposal of external string resources\n\nA new callback have been added which - if set - will be called to dispose of external string resources passed from the embedder to the V8 engine.\nReview URL: http://codereview.chromium.org/2645004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4805 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"12f6306420cc25546960c880c86b79ce04e7ff7a","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 04 11:49:44 2010"},"commit":"12f6306420cc25546960c880c86b79ce04e7ff7a","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 04 11:49:44 2010"},"message":"First phase of migration to new named property query callbacks.\n\nEventually named property query callbacks will return attributes\n(as an integer) or an empty handle if property is not intercepted.\n\nTo gradually migrate to this new API, USE_NEW_QUERY_CALLBACK\nmacro would control if old or new style API is used.\n\nSo the migration plan is:\n\n1) introduce new API which should be explictily enabled;\n2) switch to new API defining USE_NEW_QUERY_CALLBACK before\n  include of <v8.h> (that would require changes to client code as well)\n3) remove old API from v8\n4) remove #define USE_NEW_QUERY_CALLBACK from clients.\n\nReview URL: http://codereview.chromium.org/2576003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4797 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ed90d5648b0744a5331e6c6ec047c0a4966b5073","author":{"name":"dimich@chromium.org","email":"dimich@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 04 07:53:40 2010"},"commit":"ed90d5648b0744a5331e6c6ec047c0a4966b5073","committer":{"name":"dimich@chromium.org","email":"dimich@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jun 04 07:53:40 2010"},"message":"Remove unused tpedef.\n\nReview URL: http://codereview.chromium.org/2560002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4793 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"26be30912daf9164782badf389b942e86442c98e","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 01 14:08:19 2010"},"commit":"26be30912daf9164782badf389b942e86442c98e","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jun 01 14:08:19 2010"},"message":"Fix generated code for String.charCodeAt.\n\nReview URL: http://codereview.chromium.org/2468001\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4770 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a7bba921c44de205d48a078a7794e29bd7a64b9b","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 26 11:28:14 2010"},"commit":"a7bba921c44de205d48a078a7794e29bd7a64b9b","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 26 11:28:14 2010"},"message":"Update comment in the API to explicitly state that the handle returned\nfrom Context::New is persistent and has to be disposed at some point\nin order to allow garbage collecting the context.\n\nReview URL: http://codereview.chromium.org/2220003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4727 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"897f7dedc1f260cca4021699bc872293769c4998","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 25 12:14:49 2010"},"commit":"897f7dedc1f260cca4021699bc872293769c4998","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 25 12:14:49 2010"},"message":"Allow to define accessors on objects.\n\nCurrently one can only define accessors on object templates.  This patch\nallows to create accessors on the fly.\n\nThese accessors could control access to elements as well.  This element\nsupport is somewhat rudimentary and may require future work (for example,\nwe probably don't want to convert index into a string.)\n\nReview URL: http://codereview.chromium.org/2123012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4714 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ab6055d85d0fa496b10bf4151afee980ced6769d","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 25 06:38:19 2010"},"commit":"ab6055d85d0fa496b10bf4151afee980ced6769d","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 25 06:38:19 2010"},"message":"Landing patch by tonyg@chromium.org:\n\nChanging ScriptData API to serialize its internal representation to a\nconst char* array.\n\nThis decouples the API from the internal representation and avoids the need for\ncallers to serialize themselves.\n\nAs a side-effect, ScriptData::New() no longer assumes ownership of its input.\nThis shouldn't matter as typical usage patterns for the old API would have\nrequired a copy prior to calling ScriptData::New().\n\nReview URL: http://codereview.chromium.org/2118010/show\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4710 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f6a2ccf6b4a6ca1c34c0ea4b691f5c51b2d295e2","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 20 17:15:46 2010"},"commit":"f6a2ccf6b4a6ca1c34c0ea4b691f5c51b2d295e2","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 20 17:15:46 2010"},"message":"Provide debug event listener with access to the debuggee context. Also introduce new event listener setter that allows to set a callback that accepts single parameter encapsulating all debug event details so that additional information can later be passed to the listener without breaking compatibility with existing clients.\n\nReview URL: http://codereview.chromium.org/2108024\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4693 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3d7ce8ac19d3256d12f211afb636bc60f6e0c122","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 18 14:19:33 2010"},"commit":"3d7ce8ac19d3256d12f211afb636bc60f6e0c122","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 18 14:19:33 2010"},"message":"CPU profiler: add secure profiles by filtering out functions using security tokens.\n\nAs several pages can run in a single V8 instance, it is possible to\nhave functions from different security contexts intermixed in a single\nCPU profile.  To avoid exposing function names from one page to\nanother, filtering is introduced.\n\nThe basic idea is that instead of capturing return addresses from\nstack, we're now capturing JSFunction addresses (as we anyway work\nonly with JS stack frames.)  Each JSFunction can reach out for\ncontext's security token. When providing a profile to a page, the\nprofile is filtered using the security token of caller page. Any\nfunctions with different security tokens are filtered out (yes, we\nonly do fast path check for now) and their ticks are attributed to\ntheir parents.\n\nReview URL: http://codereview.chromium.org/2083005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4673 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e2014fb1a3043c180ed645174230d670a9601342","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 10 06:24:18 2010"},"commit":"e2014fb1a3043c180ed645174230d670a9601342","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 10 06:24:18 2010"},"message":"Export SetResourceConstraints so it can be used with\nvisibility=hidden.\n\nReview URL: http://codereview.chromium.org/2050004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4624 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f5b5edf2a38169f384694eb46330cb98bdae1984","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 06 07:32:44 2010"},"commit":"f5b5edf2a38169f384694eb46330cb98bdae1984","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu May 06 07:32:44 2010"},"message":"Adds C++ API for retrieving a stack trace without running JavaScript\n\nThis API is extensible, and parameterized with flags so that callers can specify what subset of information they want to capture for each stack frame. \n\nPatch by jaimeyap, see http://codereview.chromium.org/1694011 for details.\nReview URL: http://codereview.chromium.org/2028001\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4597 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"16d3811d500c5938ebdae4325a0f951818453ccf","author":{"name":"serya@chromium.org","email":"serya@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 04 14:49:50 2010"},"commit":"16d3811d500c5938ebdae4325a0f951818453ccf","committer":{"name":"serya@chromium.org","email":"serya@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 04 14:49:50 2010"},"message":"Changing string length field  type from int to SMI. It will make it be a regular field. Code generated in EmitNamedLoad could be patched for faster access to string.length.\n\nReview URL: http://codereview.chromium.org/1706013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4581 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0676163f5241c235bc4fde322f0de4cf9200f932","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 27 13:02:23 2010"},"commit":"0676163f5241c235bc4fde322f0de4cf9200f932","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 27 13:02:23 2010"},"message":"Fix copy paste: IsUint32() checks if value is unsigned, not signed.\n\nReview URL: http://codereview.chromium.org/1762008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4513 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"97f6a6a7f7baae614bd1f683852998a940c0ab1b","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 14 15:57:27 2010"},"commit":"97f6a6a7f7baae614bd1f683852998a940c0ab1b","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 14 15:57:27 2010"},"message":"Update document to descirbe semantics of hints.\n\nReview URL: http://codereview.chromium.org/1658002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4421 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6e8c85dc84721cd4ee119d0ce6a3220263aec05d","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 13 17:00:33 2010"},"commit":"6e8c85dc84721cd4ee119d0ce6a3220263aec05d","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 13 17:00:33 2010"},"message":"Expose a hint which communicates that string might be written many times.\n\nReview URL: http://codereview.chromium.org/1609021\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4400 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c898c7ae033a46a10fe0f5b6c59459a6ef4baa08","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 08 18:23:10 2010"},"commit":"c898c7ae033a46a10fe0f5b6c59459a6ef4baa08","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Apr 08 18:23:10 2010"},"message":"Landing http://codereview.chromium.org/1594017 for Ryan.\n\nTBR=ager@chromium.org\n\nReview URL: http://codereview.chromium.org/1512028\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4367 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d73f9f0f3338fdf4c972d0313808fa6c10fb30ce","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 06 18:04:45 2010"},"commit":"d73f9f0f3338fdf4c972d0313808fa6c10fb30ce","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 06 18:04:45 2010"},"message":"Update doc as well.\n\nTBR=ager@chromium.org\n\nReview URL: http://codereview.chromium.org/1619003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4353 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e116cce61b6982a7c411402a9dd23eed67d12abc","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 06 17:58:43 2010"},"commit":"e116cce61b6982a7c411402a9dd23eed67d12abc","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 06 17:58:43 2010"},"message":"Landing http://codereview.chromium.org/1539013 for ry@tinyclouds.org.\n\nTBR=ager@chromium.org\n\nReview URL: http://codereview.chromium.org/1629001\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4352 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"393aa6865b9385704c0e997c5b36594da5b3a334","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 06 14:54:20 2010"},"commit":"393aa6865b9385704c0e997c5b36594da5b3a334","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 06 14:54:20 2010"},"message":"C++ profiler: publish the new API, make compatible with WebKit / Chromium.\n\nI succeeded at connecting the new implementation to Chromium, this\ncommit includes required (although, not all) adjustments.\n\nReview URL: http://codereview.chromium.org/1547023\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4349 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6fbad6e230eac6726eaea8f47c5453dc1274e70d","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 25 17:08:22 2010"},"commit":"6fbad6e230eac6726eaea8f47c5453dc1274e70d","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 25 17:08:22 2010"},"message":"Simplify passing of AccessorInfo to interceptors:\n\n * Use slots on the native stack when possible instead of Relocatable.\n * Got rid of a gap in AccessorInfo fields.\n * Added test for non-cacheable post-interceptor lookup.\n\nReview URL: http://codereview.chromium.org/1327002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4288 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"652335b995a8473e848c45a55fbf1b7a13f64de0","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 24 13:24:46 2010"},"commit":"652335b995a8473e848c45a55fbf1b7a13f64de0","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 24 13:24:46 2010"},"message":"Implement support for reattaching a global object to a context. This\ncan be used to use the same global object for different contexts at\ndifferent points in time.\n\nReview URL: http://codereview.chromium.org/1207003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4253 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"54f0a5b221f81d1daa680333ed0eb605301850a2","author":{"name":"pfeldman@chromium.org","email":"pfeldman@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 24 13:09:02 2010"},"commit":"54f0a5b221f81d1daa680333ed0eb605301850a2","committer":{"name":"pfeldman@chromium.org","email":"pfeldman@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 24 13:09:02 2010"},"message":"Expose debug context into the native code. This change is doing several things:\n\n1) Exposes Local<Context> v8::Debug::GetDebugContext().\nRationale: We can already get debugger context instance using various workarounds,\nso exposing it explicitly in the API only makes things more clear.\n\n2) Removes debugger.HasJavaScriptFrames() requirement for entering debugger context.\nRationale: Sometimes we'd like to call into debugger from the external native code.\n\n3) Makes Debugger v8::Debug::Call execute on debugger context's global object.\nRationale: This is somewhat arguable, but temporary measure. We've agreed that we\nshould introduce a DebugAPI object that would expose necessary API in the debug-delay.\nThe problem is that it would take some time to define this API and it is not really\nconvenient to do that on the v8 land given the difference in v8 / host lifecycle.\nThe plan is to compose this API as a Debug.* wrapper outside v8 by means of exposing\ndebugger context's global object here, and once API settles down, upstream it to v8 and\nstart making Debug::Calls on this new DebugAPI object instead.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4251 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4d1f8cbfd63ee22205b9bd1a8f2e03bc7f963a1b","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 23 13:11:44 2010"},"commit":"4d1f8cbfd63ee22205b9bd1a8f2e03bc7f963a1b","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 23 13:11:44 2010"},"message":"New GCCallbacks with additional parameters.\n\nAuthor: Ilya Tikhonovsky <loislo@chromium.org>\nOriginal issue: http://codereview.chromium.org/1094002\n\nTBR=sgjesse@chromium.org\n\nReview URL: http://codereview.chromium.org/1165004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4226 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7d6a3b433ffc47c136ecdff0abad5e07e0de25e1","author":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 23 11:40:38 2010"},"commit":"7d6a3b433ffc47c136ecdff0abad5e07e0de25e1","committer":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 23 11:40:38 2010"},"message":"Merge the partial_snapshots branch back into bleeding_edge. For\nnow, the custom call generator stuff is disabled.\nReview URL: http://codereview.chromium.org/1094014\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4217 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c413105da7de507499e8da49b5148cf12fb5e6d5","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 11 09:48:01 2010"},"commit":"c413105da7de507499e8da49b5148cf12fb5e6d5","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 11 09:48:01 2010"},"message":"Make the assumption on the minimum buffer size for GetLogLines explicit.\n\nReview URL: http://codereview.chromium.org/799008\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4097 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"95964bd95fd7cf40e8b9d88671e45d1544cfe2ab","author":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 08 11:19:20 2010"},"commit":"95964bd95fd7cf40e8b9d88671e45d1544cfe2ab","committer":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 08 11:19:20 2010"},"message":"Let the callers of V8::ContextDisposedNoticication() know\nhow many pending context disposals there are.\nReview URL: http://codereview.chromium.org/669266\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4049 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fe3b87557704752124b6e4eb60be1a67844b9277","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 04 12:13:04 2010"},"commit":"fe3b87557704752124b6e4eb60be1a67844b9277","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 04 12:13:04 2010"},"message":"Add IsExecutionTerminating api method.\n\nIsExecutionTerminating returns true if a termination exception is\ncurrently being propagated.  C++ code should not reenter V8 when\nIsExecutionTerminating returns true.\n\nReview URL: http://codereview.chromium.org/668052\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4016 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d51f2c96cbd23077fa93314631c379d21769a3b4","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 03 13:44:20 2010"},"commit":"d51f2c96cbd23077fa93314631c379d21769a3b4","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 03 13:44:20 2010"},"message":"Added implementation if Uint32::Value.\n\nReview URL: http://codereview.chromium.org/661275\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4008 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9f681fa9d609b0f2014f33b6930e55da43a1bd17","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 02 18:47:03 2010"},"commit":"9f681fa9d609b0f2014f33b6930e55da43a1bd17","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 02 18:47:03 2010"},"message":"Small API improvements:\n\n * Added Get and Set taking uint32_t for faster and more convenient\n   access to elements.\n\n * Added less verbose casting for handles. Now instead of\n       v8::Local<v8::String>::Cast(args[0])\n   one can write\n       args[0].As<v8::String>().\n\nReview URL: http://codereview.chromium.org/660243\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@4002 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a60beefd1bd2fc7d7975f54147d64a5739fbb120","author":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 01 08:49:33 2010"},"commit":"a60beefd1bd2fc7d7975f54147d64a5739fbb120","committer":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 01 08:49:33 2010"},"message":"Tweak the new context disposal GC heuristic to cleanly separate\nit from the old heuristic (disabled if the new notications are \nused) and make sure to not force a GC if one has already happened\nafter V8 received the last context disposal notification.\nReview URL: http://codereview.chromium.org/660267\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3984 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4abae7a7289736161c94cf978851c274e3a483e6","author":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Feb 26 11:51:33 2010"},"commit":"4abae7a7289736161c94cf978851c274e3a483e6","committer":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Feb 26 11:51:33 2010"},"message":"Add an explicit API entry to notify V8 that one or more\ncontexts have been disposed. \nReview URL: http://codereview.chromium.org/661173\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3971 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"39e63f0aecb4d7b143bae8327a240dce2662a1ab","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 17 13:23:46 2010"},"commit":"39e63f0aecb4d7b143bae8327a240dce2662a1ab","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 17 13:23:46 2010"},"message":"Implement tagging of profiler log event blocks.\n\nThis change allows to associate integer tags with blocks of profiler\nlog events, and repeat calls to 'ResumeProfiler' / 'PauseProfiler' in\norder to establsh nested (not necessary properly nested) blocks. By\nsupporting this, we will be able to match WebInspector's CPU profiler\nabilities in DevTools.\n\nI also refactored some testing code.\n\nReview URL: http://codereview.chromium.org/619004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3889 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dcef87af6655e50c4d978b294f5b584eeb0067ac","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Feb 16 15:15:31 2010"},"commit":"dcef87af6655e50c4d978b294f5b584eeb0067ac","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Feb 16 15:15:31 2010"},"message":"Enable passing of script data via script creation methods.\n\nPatch by Andrey Kosyakov <caseq@chromium.org>\nOriginal issue http://codereview.chromium.org/606053\n\nTBR=sgjesse@chromium.org\n\nReview URL: http://codereview.chromium.org/608013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3876 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d3ce4347d93ceba31c6127c96a7f85b413f2cda6","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 15 14:19:15 2010"},"commit":"d3ce4347d93ceba31c6127c96a7f85b413f2cda6","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Feb 15 14:19:15 2010"},"message":"Add GetScriptOrigin and GetScriptLineNumber functions for Timeline panel.\n\nPatch by Ilya Tikhonovsky <loislo@chromium.org>.\nOriginal issue: http://codereview.chromium.org/565007\n\nTBR=sgjesse@chromium.org\n\nReview URL: http://codereview.chromium.org/594058\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3860 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5ecfd4bfe92fe71bb89f286f84d0a814a107f4bd","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 10 14:44:15 2010"},"commit":"5ecfd4bfe92fe71bb89f286f84d0a814a107f4bd","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 10 14:44:15 2010"},"message":"Refactor prototype setting code and expose SetPrototype to public V8 API.\n\nReview URL: http://codereview.chromium.org/598020\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3829 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5d60fa7ac85e775dd03951ced422ff967e68afc5","author":{"name":"peter.rybin@gmail.com","email":"peter.rybin@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 18 15:48:41 2010"},"commit":"5d60fa7ac85e775dd03951ced422ff967e68afc5","committer":{"name":"peter.rybin@gmail.com","email":"peter.rybin@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 18 15:48:41 2010"},"message":"Implement issue 549  Make V8 call DebugMessageDispatchHandler with Locker locked\n\nReview URL: http://codereview.chromium.org/505025\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3634 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ec86bea132aa34da4d7cafbd05d8ffe60b7f1c97","author":{"name":"peter.rybin@gmail.com","email":"peter.rybin@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 15 21:14:56 2010"},"commit":"ec86bea132aa34da4d7cafbd05d8ffe60b7f1c97","committer":{"name":"peter.rybin@gmail.com","email":"peter.rybin@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 15 21:14:56 2010"},"message":"Implement issue 554 Add \"ProcessDebuggerRequests\" call to Debug Agent API\n\nReview URL: http://codereview.chromium.org/549057\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3623 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"41e1d6a6a56b4ed74fd62f3a168d1a9fd1d481e3","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 11 12:13:24 2010"},"commit":"41e1d6a6a56b4ed74fd62f3a168d1a9fd1d481e3","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jan 11 12:13:24 2010"},"message":"Added ScriptData::HasError.\n\nReview URL: http://codereview.chromium.org/542010\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3575 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d3e63a319b513b9e7ab02e2da080820d88cabb97","author":{"name":"peter.rybin@gmail.com","email":"peter.rybin@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Dec 18 20:30:29 2009"},"commit":"d3e63a319b513b9e7ab02e2da080820d88cabb97","committer":{"name":"peter.rybin@gmail.com","email":"peter.rybin@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Dec 18 20:30:29 2009"},"message":"Reapply \"wait for connection\" feature implementation\n\nReview URL: http://codereview.chromium.org/491079\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3500 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a8cab84e04c8dcfaa62bd405bec8a937f4ce8535","author":{"name":"peter.rybin@gmail.com","email":"peter.rybin@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sun Dec 13 21:15:02 2009"},"commit":"a8cab84e04c8dcfaa62bd405bec8a937f4ce8535","committer":{"name":"peter.rybin@gmail.com","email":"peter.rybin@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sun Dec 13 21:15:02 2009"},"message":"Implement \"wait for connection\" feature\n\nReview URL: http://codereview.chromium.org/489005\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3457 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"41eb2f22d02a6a8a0d7b1c601fa6b1d5deaf398c","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 09 14:32:45 2009"},"commit":"41eb2f22d02a6a8a0d7b1c601fa6b1d5deaf398c","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Dec 09 14:32:45 2009"},"message":"External string table.\n\nInstead of weak handles external strings use a separate table.  This\ntable uses 5 times less memory than weak handles.  Moreover, since we\ndon't have to follow the weak handle callback protocol we can collect\nthe strings faster and even on scavenge collections.\n\nReview URL: http://codereview.chromium.org/467037\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3439 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6d163d9fd0fdef82558944f505f6773824bb2bee","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Nov 27 14:10:48 2009"},"commit":"6d163d9fd0fdef82558944f505f6773824bb2bee","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Nov 27 14:10:48 2009"},"message":"Remove usage of JSArray in Script object\n\nStoring a JSArray in the Script object could cause an indirect reference from the compilation cache to a global object to be created. Now the line ends are only stored as a FixedArrya and when that is needed in JavaScript a JSArray copy is created. Changed some of the JavaScript code to cache the line ends in a local variable for better performance.\n\nBUG=http://code.google.com/p/v8/issues/detail?id=528\nTEST=test/test-api/Bug528\nReview URL: http://codereview.chromium.org/434117\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3374 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"eb4d261e24d14e6b6800d521a5b3c41ece205336","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 24 14:10:06 2009"},"commit":"eb4d261e24d14e6b6800d521a5b3c41ece205336","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 24 14:10:06 2009"},"message":"Remove the different length string types\n\nThe different length string types was used to encode the string length and the hash in one field. This is now split into two fields one for length and one for hash. The hash field still encodes the array index of the string if it has one. If an array index is encoded in the hash field the string length is added to the top bits of the hash field to avoid a hash value of zero.\n\nOn 32-bit this causes an additional 4 bytes to be used for all string objects. On 64-bit this will be half on average dur to pointer alignment.\nReview URL: http://codereview.chromium.org/436001\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3350 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d55d3ce89a95c6fb43d6ed176457efdc4d8f77b4","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 18 08:59:28 2009"},"commit":"d55d3ce89a95c6fb43d6ed176457efdc4d8f77b4","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 18 08:59:28 2009"},"message":"Add DebugMessageDispatchHandler \n\nA callback on the debugger thread when a message is received. Allows the \nembedding application to wake up the main thread in order to handle the \nmessage. Useful when the embedding application is idle and sitting in a \nselect() call.\n\nPatch by Ryan Dahl <coldredlemur@gmail.com>\n\nReview URL: http://codereview.chromium.org/395013\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3326 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b5a19c103605f56e107da5bf2399dd8109c9c18a","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 05 13:27:21 2009"},"commit":"b5a19c103605f56e107da5bf2399dd8109c9c18a","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 05 13:27:21 2009"},"message":"Rework the way we handle the fact that the ARM simulator uses a\nseparate JS stack.\n\nIn exception handling, we need to be able to compare addresses into\nthe JavaScript portion of the stack with the address of a C++ handler\non the stack.  Since the stacks are separate on the simulator, we need\na JavaScript stack address corresponding to a C++ try catch handler in\norder to perform valid address comparisons.\n\nOn the simulator, we now link the C++ try catch handlers indirectly\nthrough the JS stack and use the JS stack indirection address for\ncomparisons.\n\n      JS                    C++\n                           \n                           handler\n [C++ address]   <------    next_\n                \\\n                 \\\n                  \\---->   handler\n [C++ address]   <------    next_\n\n\nOn actual hardware the C++ try catch handlers continue to be directly\nlinked.\n\nBUG=http://code.google.com/p/v8/issues/detail?id=271\nReview URL: http://codereview.chromium.org/360004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3228 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"850487401d0748da3dc15e487f4fc77ce353dda6","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 03 08:53:34 2009"},"commit":"850487401d0748da3dc15e487f4fc77ce353dda6","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 03 08:53:34 2009"},"message":"Added TryCatch::ReThrow method.\n\nReview URL: http://codereview.chromium.org/342078\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3201 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fb2317b63b36271c50c01064ed844efdc56cf2da","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 27 11:54:01 2009"},"commit":"fb2317b63b36271c50c01064ed844efdc56cf2da","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 27 11:54:01 2009"},"message":"New snapshot framework.  Doesn't work on ARM yet (code targets\nare different).  Is able to deserialize the whole heap and run\nsome stuff.  Not available as the primary snapshot system yet.\nReview URL: http://codereview.chromium.org/335009\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3142 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"46e6297e3e41b8d3c72d9a10df98e26fb7869cd0","author":{"name":"kbr@chromium.org","email":"kbr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 20 15:26:17 2009"},"commit":"46e6297e3e41b8d3c72d9a10df98e26fb7869cd0","committer":{"name":"kbr@chromium.org","email":"kbr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 20 15:26:17 2009"},"message":"Added infrastructure for optimizing new CanvasArray types in WebGL\nspecification under development. The optimizations are patterned after\nthose previously done for CanvasPixelArray. This CL adds all of the\nnecessary framework but continues to use the generic KeyedLoadIC and\nKeyedStoreIC code, to create a baseline for benchmarking purposes. The\nnext CL will add the optimized ICs to ic-ia32.cc and ic-x64.cc.\n\nThese new CanvasArray types have different semantics than\nCanvasPixelArray; out-of-range values are clamped via C cast\nsemantics, which is cheaper than the clamping behavior specified by\nCanvasPixelArray. Out-of-range indices raise exceptions instead of\nbeing silently ignored.\n\nAs part of this work, pulled FloatingPointHelper::AllocateHeapNumber\nup to MacroAssembler on ia32 and x64 platforms. Slightly refactored\nKeyedLoadIC and KeyedStoreIC. Fixed encoding for fistp_d on x64 and\nadded a few more instructions that are needed for the new ICs. The\ntest cases in test-api.cc have been verified by hand to exercise all\nof the generated code paths in the forthcoming specialized ICs.\n\nReview URL: http://codereview.chromium.org/293023\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3096 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"390fd2a3b8b1bda3b10c3d3745e5fb4b7bbd6388","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 20 07:51:49 2009"},"commit":"390fd2a3b8b1bda3b10c3d3745e5fb4b7bbd6388","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 20 07:51:49 2009"},"message":"Add an API to V8 to get simple heap statistics.\nReview URL: http://codereview.chromium.org/261037\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3089 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5560d27764df5881e0407094193ed1d844df2df1","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 16 12:51:18 2009"},"commit":"5560d27764df5881e0407094193ed1d844df2df1","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 16 12:51:18 2009"},"message":"Move implementation of Integer::NewFromUnsigned into api.cc.\n\nReview URL: http://codereview.chromium.org/269105\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3084 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f4516c8bdd9cda1b0ed17073a47745281490d78d","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 16 10:29:10 2009"},"commit":"f4516c8bdd9cda1b0ed17073a47745281490d78d","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 16 10:29:10 2009"},"message":"Remove dependency on V8_TARGET_ARCH in v8.h\n\nReview URL: http://codereview.chromium.org/287004\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3080 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e0b8ab8815f51f8c37a27301a50de0c10d709827","author":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Oct 14 15:26:38 2009"},"commit":"e0b8ab8815f51f8c37a27301a50de0c10d709827","committer":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Oct 14 15:26:38 2009"},"message":"- Add String::Concat(Handle<String> left, Handle<String> right) to the V8 API.\n\nThis is the first step to address http://crbug.com/23131 by creating\na series of V8 ConsStrings as more data arrives from the server.\n\nReview URL: http://codereview.chromium.org/271085\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3066 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1f8399bdda73b6ae0f273607ca2e9e295d446b48","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Oct 14 14:32:39 2009"},"commit":"1f8399bdda73b6ae0f273607ca2e9e295d446b48","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Oct 14 14:32:39 2009"},"message":"Partially revert r2761.\n\nDo not create handles for values of internal fields---this operation is performance\ncritical and plain pointers are safe.\n\nAppy the same approach to External wrapping and unwrapping.\n\nPlus some minor refactorings.\n\nReview URL: http://codereview.chromium.org/270085\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3064 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5767628039315e3b01b4fa2a4938709d73cb7a24","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 12 11:19:20 2009"},"commit":"5767628039315e3b01b4fa2a4938709d73cb7a24","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Oct 12 11:19:20 2009"},"message":"Removed 31-bit smis.\n\nReview URL: http://codereview.chromium.org/267049\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3046 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"82a231412d8b02fe348587b03104c8d50d545c0a","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 08 12:54:29 2009"},"commit":"82a231412d8b02fe348587b03104c8d50d545c0a","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 08 12:54:29 2009"},"message":"Introduce v8::Integer::NewFromUnsigned method.\n\nReview URL: http://codereview.chromium.org/251100\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3038 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"aed6a37c1025bbb5e22e382887bf2efc2cec15fb","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 08 12:36:12 2009"},"commit":"aed6a37c1025bbb5e22e382887bf2efc2cec15fb","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 08 12:36:12 2009"},"message":"X64: Convert smis to holding 32 bits of payload.\n\nReview URL: http://codereview.chromium.org/196139\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3037 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5191c81dff1fe7b1dd7be3c61d31728f95dd75ee","author":{"name":"mike@belshe.com","email":"mike@belshe.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 06 00:06:17 2009"},"commit":"5191c81dff1fe7b1dd7be3c61d31728f95dd75ee","committer":{"name":"mike@belshe.com","email":"mike@belshe.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 06 00:06:17 2009"},"message":"Remove the high-priority flag from IdleNotification() since\nit is a strange API and unused anyway.\n\nWhen we roll this to Chrome, we'll need a small chrome patch\nto fix Chrome's usage of the API.\n\nReview URL: http://codereview.chromium.org/257035\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3019 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8925e8af0a77ea9dca069f65bdee5881144773ee","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 02 15:51:07 2009"},"commit":"8925e8af0a77ea9dca069f65bdee5881144773ee","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Oct 02 15:51:07 2009"},"message":"Add a method to convert unsigned C integer into V8 Integer.\n\nReview URL: http://codereview.chromium.org/260002\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3013 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f2de3fd6d218105e98adbadea4f0eb0c59b66645","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 01 10:33:05 2009"},"commit":"f2de3fd6d218105e98adbadea4f0eb0c59b66645","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 01 10:33:05 2009"},"message":"Fix the stack limits setting API so it is usable.\nReview URL: http://codereview.chromium.org/242074\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@3005 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"87fbbd5dfc109513ffeec5b5f1ce2ed758070aab","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 30 12:25:46 2009"},"commit":"87fbbd5dfc109513ffeec5b5f1ce2ed758070aab","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 30 12:25:46 2009"},"message":"Changed structure of accessor arguments passing to allow accessor\ncallbacks to be called directly from native code.\n\nReview URL: http://codereview.chromium.org/242050\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2995 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"260c39270f8f5845d716e72ff55b805a473458ba","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 30 08:27:58 2009"},"commit":"260c39270f8f5845d716e72ff55b805a473458ba","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 30 08:27:58 2009"},"message":"API: added warning about FunctionTemplate::GetFunction lifetime.\n\nReview URL: http://codereview.chromium.org/251042\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2992 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"00c15b7c8bed65efeb8bf7e7a88d916d3e8ce9d2","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 28 14:32:48 2009"},"commit":"00c15b7c8bed65efeb8bf7e7a88d916d3e8ce9d2","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 28 14:32:48 2009"},"message":"API: added a few missing HandleScope-s.\n\nReview URL: http://codereview.chromium.org/245024\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2980 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"228f4aee13b4b17f7424e975b70a08c15e002d56","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 25 12:29:24 2009"},"commit":"228f4aee13b4b17f7424e975b70a08c15e002d56","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 25 12:29:24 2009"},"message":"Add another method that allows to lookup for a real named property not only\nin prototype chain, but in the object itself.\n\nReview URL: http://codereview.chromium.org/235004\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2969 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a0bf4c55c465011507924f5dad865263085fc201","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 18 12:18:08 2009"},"commit":"a0bf4c55c465011507924f5dad865263085fc201","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 18 12:18:08 2009"},"message":"Fix documentation of security callbacks.\n\nActually 1st parameter could be any object in prototype chain from this to actual holder, not only a\nthe global object.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2937 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"87dab2f5cd3e0ceab4562f9f9674182c048e4bbc","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 17 08:58:06 2009"},"commit":"87dab2f5cd3e0ceab4562f9f9674182c048e4bbc","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 17 08:58:06 2009"},"message":"Add Object::IsDirty function in the API.\n\nReview URL: http://codereview.chromium.org/209013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2911 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"681e67b77581ab6ad83add383a727eabfe4b4690","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 15 11:11:09 2009"},"commit":"681e67b77581ab6ad83add383a727eabfe4b4690","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 15 11:11:09 2009"},"message":"Make 'hidden' the default visibility for gcc.  Add build option,\nvisibility=[hidden|default], that controls visibility and make\n'hidden' the default.  Export a few variables that had been forgotten.\n\nReview URL: http://codereview.chromium.org/206011\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2884 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d391c5491e19b182f21fd5d98ffd0c42df80a81b","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 09 09:30:33 2009"},"commit":"d391c5491e19b182f21fd5d98ffd0c42df80a81b","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 09 09:30:33 2009"},"message":"Made function prototype property DontEnum for compatibility with\nSafari.  Fixed const error in api.\n\nReview URL: http://codereview.chromium.org/200056\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2852 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6a323d3afed9cac0786b5fbbd59d2967cd0acf37","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 07 07:54:51 2009"},"commit":"6a323d3afed9cac0786b5fbbd59d2967cd0acf37","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 07 07:54:51 2009"},"message":"Const Correctness for String::Value\n\nPatch by Patrick Gansterer <paroga@paroga.com>.\nReview at http://codereview.chromium.org/199043.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2831 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"af6c6a5533b56a618cf4c1b74a1c4d73feb15dd4","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 26 10:33:11 2009"},"commit":"af6c6a5533b56a618cf4c1b74a1c4d73feb15dd4","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 26 10:33:11 2009"},"message":"Api inlining.  Made some core functionality available in the api and\nmade inline versions of some hot functions.  Changed api to use\ninternal Object pointers rather than void pointers.\n\nSpeeds up getElementById by ~7%.\nReview URL: http://codereview.chromium.org/173348\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2761 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6f3c50460ae348c6e4b9ac2169f818a8fb7fa3c8","author":{"name":"mike@belshe.com","email":"mike@belshe.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 25 02:54:39 2009"},"commit":"6f3c50460ae348c6e4b9ac2169f818a8fb7fa3c8","committer":{"name":"mike@belshe.com","email":"mike@belshe.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 25 02:54:39 2009"},"message":"Update the Idle collector to do a full GC\nafter being idle for some time.\n\nRemove the default argument from CollectAllGarbage.\n\nReview URL: http://codereview.chromium.org/174302\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2748 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"855c654b25b1b876b9775d04230423ce8a65b1c3","author":{"name":"feng@chromium.org","email":"feng@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 20 00:07:19 2009"},"commit":"855c654b25b1b876b9775d04230423ce8a65b1c3","committer":{"name":"feng@chromium.org","email":"feng@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 20 00:07:19 2009"},"message":"Add LowMemoryNotification to the API on Android platform.\n\nAndroid system provides a unique feature that it sends a notification to the\nbrowser in low memory condition, and the browser cleans up cache and frees\nresources. Forcing a GC in low memory condition can free DOM objects and also\ncan shrink the old spaces.\n\nThis patch addresses the last comment in \nhttp://codereview.chromium.org/173016/show\n\n\t\nMads Ager 2009/08/19 17:24:23 \nI would prefer to not use the flags to signal that a compacting collection is\nrequested.\n\nTBR = ager\nReview URL: http://codereview.chromium.org/173102\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2725 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0efbd40bafb48c5a4ddb1d3bc299eb123c30801f","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 19 15:14:11 2009"},"commit":"0efbd40bafb48c5a4ddb1d3bc299eb123c30801f","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 19 15:14:11 2009"},"message":"Add support for forceful termination of JavaScript execution.\n\nThe termination is achieved by throwing an exception that is uncatchable by JavaScript exception handlers.\nReview URL: http://codereview.chromium.org/174056\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2723 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e64bf9ad6c38069ebc9d3c02c039c1585bd9a34b","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 17 14:26:48 2009"},"commit":"e64bf9ad6c38069ebc9d3c02c039c1585bd9a34b","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 17 14:26:48 2009"},"message":"Added API for getting object mirrors\nAdded Debug::GetMirror call to get a mirror for a given object.\n\nReview URL: http://codereview.chromium.org/172045\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2700 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"11e7f2a30b87b37999fe3af47f9f4087e35105dd","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 17 13:34:41 2009"},"commit":"11e7f2a30b87b37999fe3af47f9f4087e35105dd","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 17 13:34:41 2009"},"message":"Added API call to get the stack trace for an exception\nAdded TryCatch::StackTrace that gets the stack trace for the thrown\nexception.\n\nReview URL: http://codereview.chromium.org/171042\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2698 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"570788b1156ccad67ee8aa64a02495729d06df2c","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 17 11:41:00 2009"},"commit":"570788b1156ccad67ee8aa64a02495729d06df2c","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Aug 17 11:41:00 2009"},"message":"Context-independent script compilation.\nAdded Script::New calls that create a new context-independent\n(boilerplate) script which can be executed in any context, unlike the\ncurrent scripts which bind the context in which they're compiled.\n\nReview URL: http://codereview.chromium.org/172043\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2697 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7f18bef0d26623611f7be7f3178d49cd8a95f5ff","author":{"name":"bak@chromium.org","email":"bak@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 13 09:35:51 2009"},"commit":"7f18bef0d26623611f7be7f3178d49cd8a95f5ff","committer":{"name":"bak@chromium.org","email":"bak@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 13 09:35:51 2009"},"message":"Added idle notification to the API.\nThe implementation is still empty.\n\nReview URL: http://codereview.chromium.org/165445\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2674 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ba974ace1bff7b202a477b688919f94964e64116","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 12 10:27:35 2009"},"commit":"ba974ace1bff7b202a477b688919f94964e64116","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 12 10:27:35 2009"},"message":"Add api call to determine whether a string can be externalized.\n\nReview URL: http://codereview.chromium.org/164393\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2664 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d6fcda0044a986a9c14e1eb9234d18bbfe42e78c","author":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 06 13:35:21 2009"},"commit":"d6fcda0044a986a9c14e1eb9234d18bbfe42e78c","committer":{"name":"vitalyr@chromium.org","email":"vitalyr@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 06 13:35:21 2009"},"message":"API: added function to find instance of template in prototype chain.\n\nAlso inlined Object::IsInstanceOf.\n\nThis new function is intended to be used to speed up DOM bindings.\n\nReview URL: http://codereview.chromium.org/165044\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2636 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"27ffe641d65460df14e2fdaf7785c56cfe9f2df3","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 05 07:59:46 2009"},"commit":"27ffe641d65460df14e2fdaf7785c56cfe9f2df3","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 05 07:59:46 2009"},"message":"On Linus don't force-export V8 symbols unless v8 is built as a shared library.\n\nThis lands: http://codereview.chromium.org/160556.\n\nTBR=piman@chromium.org\nReview URL: http://codereview.chromium.org/160634\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2622 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5470f9b1325f39f036bfaaa19b78f890fdf466b1","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 04 14:14:01 2009"},"commit":"5470f9b1325f39f036bfaaa19b78f890fdf466b1","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Aug 04 14:14:01 2009"},"message":"Add an ability to initiate GC through V8 API.\n\nI'm planning to use it in DevTools heap profiler. It is a common scenario in debugging memory leaks to enforce GC, then perform an operation, then enforce GC again to check for non-collected (that is, leaked) objects. Using the existing GC extension isn't possible because it doesn't exposed in the normal operation mode of Chromium.\n\nReview URL: http://codereview.chromium.org/159787\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2619 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e97554ed10c6d1f5863ac623dacf7266b9cee0c9","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 29 11:23:36 2009"},"commit":"e97554ed10c6d1f5863ac623dacf7266b9cee0c9","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jul 29 11:23:36 2009"},"message":"Add generic V8 API functions for controlling profiling aspects.\n\nAs we'll have several aspects of heap profiling, it is more handy to control them using binary flags than by individual functions. CPU profiling represent just a particular aspect to control, so {Pause,Resume}Profiler and IsProfilerPaused are only left for compatibility.\n\nFor now, PROFILER_FLAG_HEAP_STATS and PROFILER_FLAG_JS_CONSTRUCTOR are equivalent, but later will be split.\n\nReview URL: http://codereview.chromium.org/159581\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2574 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1ce28eda0bf4a469d564d0f108f165291aa4d716","author":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 28 08:43:51 2009"},"commit":"1ce28eda0bf4a469d564d0f108f165291aa4d716","committer":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Jul 28 08:43:51 2009"},"message":"- Expose CanvasPixelArray functionality directly in JavaScript\n  indexed property accesses.\n- The IC stubs have not been updated to handle these directly, but\n  at least we do not have to leave the VM to access bytes.\n\nReview URL: http://codereview.chromium.org/159263\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2549 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9acd081326c6547c4cc30e18d9804ddf2a1b6d75","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 23 13:36:28 2009"},"commit":"9acd081326c6547c4cc30e18d9804ddf2a1b6d75","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jul 23 13:36:28 2009"},"message":"Force inlining of some handle methods.\n\nReview URL: http://codereview.chromium.org/159236\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2529 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3c6c3993818c5bc1c02b3bc444e3e496e2c206f7","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 17 10:35:15 2009"},"commit":"3c6c3993818c5bc1c02b3bc444e3e496e2c206f7","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jul 17 10:35:15 2009"},"message":"Introduce faster utilty methods for storing and retrieving native pointers\nin internal fields.\n\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2498 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"04029518444a005312aa9c7fee50dccc07299a5e","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jun 24 11:52:52 2009"},"commit":"04029518444a005312aa9c7fee50dccc07299a5e","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Jun 24 11:52:52 2009"},"message":"A helper function to speed up creation of V8 wrappers for DOM Nodes.\n\nReview URL: http://codereview.chromium.org/141044\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2260 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d62f77fd2160333cd6d780552f6ef209c245aa8c","author":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 11 19:44:48 2009"},"commit":"d62f77fd2160333cd6d780552f6ef209c245aa8c","committer":{"name":"antonm@chromium.org","email":"antonm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jun 11 19:44:48 2009"},"message":"Lars spotted that Handle::operator -> and * are not inlined.  That apparently buys us almost ~10%\nspeedup for some DOM operations.\n\nReview URL: http://codereview.chromium.org/122038\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2148 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"24d22b567a6ae2f7f0dc433545b91a2ff680c1d0","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 08 09:46:09 2009"},"commit":"24d22b567a6ae2f7f0dc433545b91a2ff680c1d0","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Jun 08 09:46:09 2009"},"message":"Introduce an API to force the deletion of a property ignoring\ninterceptors and dont-delete attributes.\n\nMinor change to the behavior of eval: throw exception when calling\neval in a context for which the global has been detached.  This\nmatches the behavior of both Firefox and Safari post navigation in the\nbrowser.\nReview URL: http://codereview.chromium.org/118374\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2118 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"064af4286ec809e9ad7b8f1949c538c97d2ba283","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 25 12:34:47 2009"},"commit":"064af4286ec809e9ad7b8f1949c538c97d2ba283","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 25 12:34:47 2009"},"message":"Expose IsProfilerPaused function on the public interface.\n\nThis is needed for DevTools Profiler because of its asynchronous and multi-client architecture.\n\nReview URL: http://codereview.chromium.org/115761\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2041 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"10b8928e0e585caa984df948868cdc51ab99830e","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 20 07:44:59 2009"},"commit":"10b8928e0e585caa984df948868cdc51ab99830e","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 20 07:44:59 2009"},"message":"Expose the calling context through the API.  \n\nIn C++ callbacks, we can now get the context of the javascript code\nthat called the callback.\n\nReview URL: http://codereview.chromium.org/113622\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@2006 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e3464bca9dc0c654f0db331d4df366f1d9c6994a","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 19 09:59:41 2009"},"commit":"e3464bca9dc0c654f0db331d4df366f1d9c6994a","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 19 09:59:41 2009"},"message":"Fix compilation on MinGW\n\nOn MinGW _WIN32_WINNT needs to be 0x501 (Windows XP) instead of 0x500 (Windows 2000) for some TCP/IP API's to be present.\n\nMinGW uses stdint.h whereas Visual C++ does not.\nReview URL: http://codereview.chromium.org/113576\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1999 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"94879a93b09b4a77aacb60e0ce73eef3ca8adb86","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 18 13:14:37 2009"},"commit":"94879a93b09b4a77aacb60e0ce73eef3ca8adb86","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 18 13:14:37 2009"},"message":"Add a script cache to the debugger\n\nWhen loaded scripts are requested this cache is filled with all the script objects in the heap. Hereafter its content is kept in sync with the active scripts in the heap through the notifications of new scripts compiled and by using weak handles to get notified when a script is collected.\n\nThrough the tracking of collected scripts the debugger event OnScriptCollected have been added to notify a debugger that a script previously returned through the scripts command is no longer in use.\n\nMake the ComputeIntegerHash globally available.\n\nMoved clearing of the mirror cache to when debugger is really left. Previously recursive invocations of the debugger cause the mirror cache to be cleared causing handles to become either stale or reference other objects.\nReview URL: http://codereview.chromium.org/115462\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1988 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9336f58fa26de440023de36695628cdd7c8552e3","author":{"name":"davemoore@chromium.org","email":"davemoore@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 06 18:30:37 2009"},"commit":"9336f58fa26de440023de36695628cdd7c8552e3","committer":{"name":"davemoore@chromium.org","email":"davemoore@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 06 18:30:37 2009"},"message":"Make check in GetExternalString a runtime check instead of ASSERT.\nThis will allow us to remove the separate call to IsExternal() from our\nchrome client code, speeding up the combination.\n\nReview URL: http://codereview.chromium.org/113035\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1887 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"bf63b8f1731093e872d8060df10199f3efbe4e46","author":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 05 15:57:47 2009"},"commit":"bf63b8f1731093e872d8060df10199f3efbe4e46","committer":{"name":"mikhail.naganov@gmail.com","email":"mikhail.naganov@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 05 15:57:47 2009"},"message":"Introduce internal Log class that handles writing log messages, enable logging to memory buffer.\n\nThis will enable reading profiler log in Chrome. The current implementation of memory buffer is trivial (fixed size buffer, no memory recycling) but enough to start end-to-end DevTools Profiler implementation. Later it will be enhanced.\n\nReview URL: http://codereview.chromium.org/108011\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1870 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b43261362253c1fa511cb19887421fc5e63a3ead","author":{"name":"deanm@chromium.org","email":"deanm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 05 10:21:28 2009"},"commit":"b43261362253c1fa511cb19887421fc5e63a3ead","committer":{"name":"deanm@chromium.org","email":"deanm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 05 10:21:28 2009"},"message":"Use our own macros for 64-bit constants.\n\nReview URL: http://codereview.chromium.org/109017\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1861 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3fa2a67ffbde9f82fc71d23f7fc5435f52a2533c","author":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 05 09:50:29 2009"},"commit":"3fa2a67ffbde9f82fc71d23f7fc5435f52a2533c","committer":{"name":"lrn@chromium.org","email":"lrn@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 05 09:50:29 2009"},"message":"Changed definition of INT64_C and UINT64_C to use the one in stdint.h.\nSince Chromium build system appears to define __STDC_CONSTANT_MACROS, we might as well use the macro definitions from stdint.h in all cases.\n\nReview URL: http://codereview.chromium.org/109016\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1858 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3cdb194c56403882231037151e15c48971e8ca37","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 05 09:38:45 2009"},"commit":"3cdb194c56403882231037151e15c48971e8ca37","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 05 09:38:45 2009"},"message":"Add the ability to set embedder data on created contexts from the API.\n\nExpose the active context where a break event occoured through the debug message handler.\nReview URL: http://codereview.chromium.org/109013\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1857 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"aa5f53101f59340e719477f8a52c8eb3751f5023","author":{"name":"whesse@chromium.org","email":"whesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 04 13:29:29 2009"},"commit":"aa5f53101f59340e719477f8a52c8eb3751f5023","committer":{"name":"whesse@chromium.org","email":"whesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon May 04 13:29:29 2009"},"message":"Include 64-bit pointer and constant types in include/v8.h.\nMake some definitions in globals.h 64-bit safe\nReview URL: http://codereview.chromium.org/100336\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1844 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9926c85e1fa101b0268a40de4e0ed919cb0b70b9","author":{"name":"asargent@chromium.org","email":"asargent@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 01 16:39:21 2009"},"commit":"9926c85e1fa101b0268a40de4e0ed919cb0b70b9","committer":{"name":"asargent@chromium.org","email":"asargent@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri May 01 16:39:21 2009"},"message":"Add to documentation for GetIdentityHash \n\nReview URL: http://codereview.chromium.org/99250\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1836 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2beedf118187d68f5be5109f4d9a705a137472ae","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 29 12:54:07 2009"},"commit":"2beedf118187d68f5be5109f4d9a705a137472ae","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 29 12:54:07 2009"},"message":"Create a transition API for the debug message handler.\n\nKept the previous message handler API to avoid breaking clients depending on it.\n\nThe new message handler API uses a new name ending with 2.\nReview URL: http://codereview.chromium.org/100158\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1816 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"37036ff44657c28b1291712579efd29f48cc1acf","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 29 11:12:58 2009"},"commit":"37036ff44657c28b1291712579efd29f48cc1acf","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 29 11:12:58 2009"},"message":"Remove tab to satisfy lint\n\nTBR=ager@chromium.org\n\nReview URL: http://codereview.chromium.org/99180\n\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1815 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"f8319c3cbac44dc72c314c0f5ae5cc60887de956","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 29 09:04:20 2009"},"commit":"f8319c3cbac44dc72c314c0f5ae5cc60887de956","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 29 09:04:20 2009"},"message":"Re-submit http://codereview.chromium.org/99122 after fixing compilation issues.\n\nTBR=yurys@chromium.org\nReview URL: http://codereview.chromium.org/100155\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1813 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"95288e916e4fed9ecf4a36d8db7da465484d3c98","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 29 08:23:58 2009"},"commit":"95288e916e4fed9ecf4a36d8db7da465484d3c98","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 29 08:23:58 2009"},"message":"Changed the debugger message API to receive an object instead of a JSON string.\n\nThe object delivered to the debug message handler contains additional information on the current break handling the messages.\n\nClients which require just JSON message parsing can simply get the JSON using the GetJSON message on the message object to still have the previous behaviour.\n\n  NewMessageHangler(const v8::Debug::Message& message) {\n    v8::String::Value val(message.GetJSON());\n    OldMessageHandler(Vector<uint16_t>(const_cast<uint16_t*>(*val), val.length()));\n  }\n\nRefactored some of the debugger code to use internal handles instead of API handles. Also changed Object to JSObject is some places.\n\nThe access to the active context when the break occurred is still not implemented. I will add this in a new CL, as this one is quite big already.\nReview URL: http://codereview.chromium.org/99122\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1811 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8fefc769f5274be04fa43f843dcbc1794bfc6210","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 24 12:05:40 2009"},"commit":"8fefc769f5274be04fa43f843dcbc1794bfc6210","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 24 12:05:40 2009"},"message":"Removed the debug message thread.\n\nThe debug message thread was introduced to make it possible to have the message handler callback be called from a different thread than the thread running V8 where the debug event occoured, but it never had any practical use, and prevents providing information to the message handler which is only available from the V8 thread.\n\nIn the future any thread decoupling will have do be done by the embedder.\n\nThis also removes the queue used for outbound messages.\n\nRenamed the class Message to CommandMessage as it is only used for debugger commands from the client. Related message queue classes has also been renamed.\nReview URL: http://codereview.chromium.org/93118\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1788 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"a3a0d643054258483763b5f0c82e4a1849a3dc62","author":{"name":"pfeldman@chromium.org","email":"pfeldman@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 22 14:16:50 2009"},"commit":"a3a0d643054258483763b5f0c82e4a1849a3dc62","committer":{"name":"pfeldman@chromium.org","email":"pfeldman@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Apr 22 14:16:50 2009"},"message":"DevTools: Add support for eventless host message dispatching.\n\nReview URL: http://codereview.chromium.org/87026\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1773 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7fc551ecc3a8a9796248ba197d183a8773eb2dee","author":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 21 14:06:48 2009"},"commit":"7fc551ecc3a8a9796248ba197d183a8773eb2dee","committer":{"name":"yurys@chromium.org","email":"yurys@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 21 14:06:48 2009"},"message":"As long as all debugger messages are handled by a single static method we need a way to identify request sender to route the response to the right handler. To accomplish this clients can send some additional data along with command text and debugger will later pass this data to the message handler along with the response text.\n\nReview URL: http://codereview.chromium.org/67266\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1755 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"0d21e7b3b0633520838289d76fdf44501b97460e","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 21 13:28:34 2009"},"commit":"0d21e7b3b0633520838289d76fdf44501b97460e","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 21 13:28:34 2009"},"message":"review\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1753 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c47a188fae28e9ba3375a53806eee19a27d040a1","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 21 13:28:22 2009"},"commit":"c47a188fae28e9ba3375a53806eee19a27d040a1","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 21 13:28:22 2009"},"message":"doc\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1752 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d26e6dd0b4b95b61598b2a66413ed422c94c2c04","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 21 13:28:11 2009"},"commit":"d26e6dd0b4b95b61598b2a66413ed422c94c2c04","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 21 13:28:11 2009"},"message":"force-set\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1751 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b8dc312b250241b64c6ac396116291d0d8b2ff00","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 21 07:22:06 2009"},"commit":"b8dc312b250241b64c6ac396116291d0d8b2ff00","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Apr 21 07:22:06 2009"},"message":"Make it possible to add a user data object to each script compiled.\nReview URL: http://codereview.chromium.org/90003\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1748 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b9c5232c1d5b08a62ea1f6111ad848fb26343383","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 31 06:51:25 2009"},"commit":"b9c5232c1d5b08a62ea1f6111ad848fb26343383","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 31 06:51:25 2009"},"message":"Add os.chdir and os.setenv to d8.  Move system() to os.system().\nProtect os.chdir, os.setenv, os.system against string conversion\nfailures.  Add comment about the issue to include/v8.h.\nReview URL: http://codereview.chromium.org/57005\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1644 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"8b7a288e4822a4a9d784afaf16db64fbd80495ac","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 27 09:56:53 2009"},"commit":"8b7a288e4822a4a9d784afaf16db64fbd80495ac","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 27 09:56:53 2009"},"message":"Debugger message handler can be called from V8 thread.\n\nThe message handler function set through the debugger API is normally called in a different thread than the V8 thread where execution is stopped due to debugger event. This change adds an option to the API for specifying that the message handler should be called directly from the V8 thread. For an application like Chrome where thread dispatching is already in place this makes more sense.\n\nAdd an option to the message handler debugger API to process messages in the thread where V8 is running instead of posting it to a queue for processing on a additional thread.\nReview URL: http://codereview.chromium.org/42643\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1627 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9142c42df29f5cd7966ac0101ff0e5ec04fac0ee","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 27 00:24:49 2009"},"commit":"9142c42df29f5cd7966ac0101ff0e5ec04fac0ee","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 27 00:24:49 2009"},"message":"Fixed a bunch of memory leaks in tests, including:\n - String traversal test data (now in a zone)\n - Debug message thread (now joined on exit)\n - Threading test threads (now joined on exit)\n - Changed message tests framework to cope with valgrind\nAlso, fixed a bug where we'd try to delete stack-allocated objects\nwhen tearing down v8.  Good times.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1622 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d8e53cf150be0047d6c3a3496204e2a7e47b1be1","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 23 22:23:39 2009"},"commit":"d8e53cf150be0047d6c3a3496204e2a7e47b1be1","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 23 22:23:39 2009"},"message":"Extend debugger agent protocol with a connect message.Added a name of the embedding application when enabeling the debugger agent.Send a connection message from the debugger agent to the remote debugger when connecting. This message contains the V8 version, the protcol version (currently 1) and the name of the embedding application. Currently this information is just printed raw as received.\nReview URL: http://codereview.chromium.org/52012\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1579 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"7b50c072f9a72d73a44b9ef8e0081cf5e4e86648","author":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 23 19:51:10 2009"},"commit":"7b50c072f9a72d73a44b9ef8e0081cf5e4e86648","committer":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Mar 23 19:51:10 2009"},"message":"Add a new C++ pointer wrapping API to External to not dilute the\nExternal::Cast.\n\nReview URL: http://codereview.chromium.org/52021\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1578 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1db91bee3414b2d5d0bc2dcaacd78437249da823","author":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 20 22:13:50 2009"},"commit":"1db91bee3414b2d5d0bc2dcaacd78437249da823","committer":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 20 22:13:50 2009"},"message":"- Do not allocate proxy objects if the pointer can be wrapped in a Smi representation.\n\nReview URL: http://codereview.chromium.org/42466\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1568 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"318c9eed21071880761af66661f64bf93bc1c136","author":{"name":"mike@belshe.com","email":"mike@belshe.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 19 23:35:09 2009"},"commit":"318c9eed21071880761af66661f64bf93bc1c136","committer":{"name":"mike@belshe.com","email":"mike@belshe.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 19 23:35:09 2009"},"message":"Add a public API for using an empty sring.\n\nv8::String::Empty()\n\n\nReview URL: http://codereview.chromium.org/42423\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1556 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"ea653021fc78133cb8a3adcf85b5f45b1d94b70a","author":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 19 18:50:00 2009"},"commit":"ea653021fc78133cb8a3adcf85b5f45b1d94b70a","committer":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Mar 19 18:50:00 2009"},"message":"- Allow hidden properties to be set on any JSObject through the V8 C++ API.\n- Use the hidden properties to expose a IdentityHash accessor.\n\nReview URL: http://codereview.chromium.org/50016\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1550 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c5d777338ae108b5cf04012e8e88d8383b294dac","author":{"name":"mike@belshe.com","email":"mike@belshe.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 18 19:24:15 2009"},"commit":"c5d777338ae108b5cf04012e8e88d8383b294dac","committer":{"name":"mike@belshe.com","email":"mike@belshe.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 18 19:24:15 2009"},"message":"Expose Cloning through API.\n\n\nReview URL: http://codereview.chromium.org/42339\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1540 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"db13f13806e6c701ef3b64450b7aaf3a8013c459","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 18 13:54:33 2009"},"commit":"db13f13806e6c701ef3b64450b7aaf3a8013c459","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Mar 18 13:54:33 2009"},"message":"Don't pollute API-users' namespaces with overly generic \"EXPORT\" define.\nReview URL: http://codereview.chromium.org/42334\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1537 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"46f753a1840dd893cc7c48577a70ac5d42b77744","author":{"name":"davemoore@chromium.org","email":"davemoore@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 13 16:06:31 2009"},"commit":"46f753a1840dd893cc7c48577a70ac5d42b77744","committer":{"name":"davemoore@chromium.org","email":"davemoore@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Mar 13 16:06:31 2009"},"message":"- Added ability to call histograms from within v8\n- Changed the StatsRates to use the new HistogramTimers\n\nReview URL: http://codereview.chromium.org/42020\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1510 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9d17b0d4c82ce3477c014044f6914fdbf6692f69","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 10 08:10:50 2009"},"commit":"9d17b0d4c82ce3477c014044f6914fdbf6692f69","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 10 08:10:50 2009"},"message":"Whenever a script object is created it is assigned a unique id. Currently this id is assigned from an 32 bit integer counter.\n\nChanged the script break points to be able to handle both break points based on script names and script ids. When break points are set through a script id the position is relative to the script itself. This is different from the script break points set through script names where the line/coulmn offset is taken into account.\n\nThis has the side effect that function break points are not converted into script break points for named scripts.\n\nShow the script id in the D8 shell debugger when listing all scripts using the 'scripts' command.\nReview URL: http://codereview.chromium.org/40317\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1468 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"92aa4ab36ca9db4fed339e1b40cd2f46ba71c12f","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 03 12:23:45 2009"},"commit":"92aa4ab36ca9db4fed339e1b40cd2f46ba71c12f","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Mar 03 12:23:45 2009"},"message":"Add V8 debugger agent.\n\nThe debugger agent listens on a TCP/IP port for a remote debugger connection. When such a connection is established the debuger JSON protocol is communicated between the agent the the remote debugger. The messages containing the JSON protocol has a RFC-822 like header with a Content-Length field and with the body containing the JSON in UTF-8 encoding.\n\nThe D8 shell has option --debugger-agent to start the debugger agent.\nReview URL: http://codereview.chromium.org/27355\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1405 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"44b83d3e77787322245d22631d1c4f4ce30c1800","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Feb 19 14:02:42 2009"},"commit":"44b83d3e77787322245d22631d1c4f4ce30c1800","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Feb 19 14:02:42 2009"},"message":"Add host callback for debug break.\n\nAdd the ability to have the host embedding V8 receive a callback in the V8 thread while V8 is processing a debug callback. When V8 is processing a debug callback the thread where V8 is executing is sitting in a tight loop processing debug commands until the continue command has been executed. In some embedding situations it is beneficial to be able to call back into the embedding host from the thread where V8 is sitting. The might have functions which needs to be called to complement the JavaScript debugging.\n\nUsing the uint16_t array to pass a void* is a temporary hack.\nReview URL: http://codereview.chromium.org/20491\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1318 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"be6b490fb0e1a65e06c5fb30581bb01b3f7e36f1","author":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Feb 12 16:58:55 2009"},"commit":"be6b490fb0e1a65e06c5fb30581bb01b3f7e36f1","committer":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Feb 12 16:58:55 2009"},"message":"Remove experimental ExternalSymbolCallback feature. This is not needed\nsince we can now transform String objects to be external when needed.\n\nReview URL: http://codereview.chromium.org/21285\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1260 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1bf2c7405e33fefe4fe8b63a57957f01718885cf","author":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 11 23:52:52 2009"},"commit":"1bf2c7405e33fefe4fe8b63a57957f01718885cf","committer":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Feb 11 23:52:52 2009"},"message":"Allow the morphing of strings to external strings to avoid having to\ncreate copies in the embedding code (aka WebKit V8 bindings) on every\nexternal use.\n\nReview URL: http://codereview.chromium.org/21117\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1252 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"05a56bf1ea255ebeb45713ddd1f920ea9b6214dc","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Feb 05 13:53:41 2009"},"commit":"05a56bf1ea255ebeb45713ddd1f920ea9b6214dc","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Feb 05 13:53:41 2009"},"message":"Add explicit null checks after string conversions in the shells.\n\nThis fixes issue 224.\nReview URL: http://codereview.chromium.org/20081\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1233 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"d131ecf3dd61ee766992ad4efcb90c93246d871a","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Feb 03 07:59:12 2009"},"commit":"d131ecf3dd61ee766992ad4efcb90c93246d871a","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Feb 03 07:59:12 2009"},"message":"Changed the debugger API to allow only one debug event listener to be registered. The public API now only has SetDebugEventListener instead of AddDebugEventListener and RemoveDebugEventListener.\n\nMoved the registrered debug event listener from the context to a global handle in the Debugger class. Storing it in the context did not make much sense.\n\nChanged a lot of tests to handle the API change.\n\nBUG=1242707\nReview URL: http://codereview.chromium.org/19753\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1212 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"75037cbd6ea0e81ad47acc59f8689c6e126033d2","author":{"name":"mike@belshe.com","email":"mike@belshe.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 29 19:47:00 2009"},"commit":"75037cbd6ea0e81ad47acc59f8689c6e126033d2","committer":{"name":"mike@belshe.com","email":"mike@belshe.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 29 19:47:00 2009"},"message":"Enable programmatic access to Profile pause/resume\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1185 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e718576d4fcbadca08f46f6a73cada36b0de31d8","author":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 23 17:22:23 2009"},"commit":"e718576d4fcbadca08f46f6a73cada36b0de31d8","committer":{"name":"iposva@chromium.org","email":"iposva@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Jan 23 17:22:23 2009"},"message":"Split handle scopes into an internal version and a version accessible\nthrough the API. This allows us to verify state on entry through the API.\nIn this change verification in the API entry is checking that the current\nthread holds the V8 lock when a HandleScope is instantiated if a v8::Locker\nhas ever been used by the V8 instance.\nReview URL: http://codereview.chromium.org/18707\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1140 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"569fb985ce05c0e011d78da2eb8a3cc596cf1afa","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 08 11:35:34 2009"},"commit":"569fb985ce05c0e011d78da2eb8a3cc596cf1afa","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Jan 08 11:35:34 2009"},"message":"Added more constness to the api.  There are still some methods back\nthat could be const but aren't, but now at least all the obvious ones\nshould be.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@1045 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6297a19160957a2d46f4aadc8cbdd856b9fc9a9e","author":{"name":"deanm@chromium.org","email":"deanm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Dec 11 11:20:04 2008"},"commit":"6297a19160957a2d46f4aadc8cbdd856b9fc9a9e","committer":{"name":"deanm@chromium.org","email":"deanm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Dec 11 11:20:04 2008"},"message":"Improve mark-compact object grouping interface.\n\nThe main goal was to improve O(n^2) behavior when there are many object groups.  The old API required the grouping to be done on the v8 side, along with a linear search.  The new interface requires the caller to do the grouping, passing V8 entire groups at a time.  This removes the group id concept on the v8 side.\n\n  - Changed AddObjectToGroup to AddObjectGroup.\n  - Removed the group id concept from the V8 side.\n  - Remove a static constructor while I'm here, lazily initialize\n    the object groups list.\n  - Cleaned up return by non-const references to return pointers.\n\nReview URL: http://codereview.chromium.org/13341\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@965 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"88d4740d89478c315822f41fe66e7a1c4a994d38","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 01 07:40:43 2008"},"commit":"88d4740d89478c315822f41fe66e7a1c4a994d38","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Dec 01 07:40:43 2008"},"message":"Commiting Evan's change to use char instead of wchar_t for counter names.\n\nCode review URL:\n\n  http://codereview.chromium.org/13011/show\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@871 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"80c02907147a36b9e52c4ed3a14cbb4308f34e6d","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 27 08:01:27 2008"},"commit":"80c02907147a36b9e52c4ed3a14cbb4308f34e6d","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Nov 27 08:01:27 2008"},"message":"Added a debugger call to run a JavaScript function in the debugger. When called the debugger will be entered and the JavaScript function will be called with the debugger ExecutionState object as its first parameter.\n\nThis makes it possible to get information like current line number, current script resource, backtrace information etc. which is not part of the normal API.\nReview URL: http://codereview.chromium.org/12472\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@854 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"96d15ef6b43031d2afa1f253607120b686ab0713","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 17 15:13:40 2008"},"commit":"96d15ef6b43031d2afa1f253607120b686ab0713","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Nov 17 15:13:40 2008"},"message":"Add experimental support for external two-byte symbols.\n\nThis might be a big win in a browser setting where a lot of string\nconversions can be avoided.  On the other hand it adds extra pressure\non the global handle system.\nReview URL: http://codereview.chromium.org/11404\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@772 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"98525aabe31576eb019f5a1b792799147095eba4","author":{"name":"feng@chromium.org","email":"feng@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 12 23:21:54 2008"},"commit":"98525aabe31576eb019f5a1b792799147095eba4","committer":{"name":"feng@chromium.org","email":"feng@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Nov 12 23:21:54 2008"},"message":"Fix the exception order by remember JS handler in an external handler.\n\nReview URL: http://codereview.chromium.org/10625\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@744 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"db2408705567791739853718710555422d29cab1","author":{"name":"whessev8","email":"whessev8@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Nov 07 09:55:57 2008"},"commit":"db2408705567791739853718710555422d29cab1","committer":{"name":"whessev8","email":"whessev8@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Nov 07 09:55:57 2008"},"message":"Fix typo and remove undefined, unused API function from include/v8-debug.h\nReview URL: http://codereview.chromium.org/9504\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@710 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"2013421859f8f18a841bbea537c2f205ae7f6edf","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 30 12:51:06 2008"},"commit":"2013421859f8f18a841bbea537c2f205ae7f6edf","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 30 12:51:06 2008"},"message":"Add support for API accessors that prohibit overwriting by accessors\ndefined in JavaScript code by using __defineGetter__ and\n__defineSetter__.\n\nAlso, disable access checks when configuring objects created from\ntemplates.\nReview URL: http://codereview.chromium.org/8914\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@656 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"e08ce319ca6ef49b68dc66321d92d9265de08abc","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 23 10:31:49 2008"},"commit":"e08ce319ca6ef49b68dc66321d92d9265de08abc","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 23 10:31:49 2008"},"message":"Added v8::Object::GetProperties method that returns an array of all\nthe enumerable properties of an object.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@568 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c7ed0707a3221a69ebb89d64270cbaf039c7a201","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 23 08:25:23 2008"},"commit":"c7ed0707a3221a69ebb89d64270cbaf039c7a201","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 23 08:25:23 2008"},"message":"- Added const in a few places.\n- Changed WeakReferenceCallback to take a Persistent<Value> instead of\n  a Persistent<Object>.\n- Removed Message::GetUnderline and Message::GetScriptData.\n- Added Value::IsDate, Date::Cast and Date::Value.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@564 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"85251f756c7dbe54cc57d432def31e78758e4a1e","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Oct 22 12:00:19 2008"},"commit":"85251f756c7dbe54cc57d432def31e78758e4a1e","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Oct 22 12:00:19 2008"},"message":"- Changed regexp logging to include the string being matched and to\n  escape commas.\n- Fixed issue with block-comparing unaligned strings on arm.\n- Added short documentation to one of the Persistent constructors.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@554 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"42ef2c3d7779616fd9c4cf9d430efbd981f5d0fe","author":{"name":"feng@chromium.org","email":"feng@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 21 19:07:58 2008"},"commit":"42ef2c3d7779616fd9c4cf9d430efbd981f5d0fe","committer":{"name":"feng@chromium.org","email":"feng@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Oct 21 19:07:58 2008"},"message":"Split window support from V8. \n\nHere is a description of the background and design of split window in Chrome and V8:\nhttps://docs.google.com/a/google.com/Doc?id=chhjkpg_47fwddxbfr\n\nThis change list splits the window object into two parts: 1) an inner window object used as the global object of contexts; 2) an outer window object exposed to JavaScript and accessible by the name 'window'. Firefox did it awhile ago, here are some discussions: https://wiki.mozilla.org/Gecko:SplitWindow. One additional benefit of splitting window in Chrome is that accessing global variables don't need security checks anymore, it can improve applications that use many global variables.\n\nV8 support of split window:\n  There are a small number of changes on V8 api to support split window:\nSecurity context is removed from V8, so does related API functions;\nA global object can be detached from its context and reused by a new context;\nAccess checks on an object template can be turned on/off by default;\nAn object can turn on its access checks later;\n\n  V8 has a new object type, ApiGlobalObject, which is the outer window object type. The existing JSGlobalObject becomes the inner window object type. Security checks are moved from JSGlobalObject to ApiGlobalObject. ApiGlobalObject is the one exposed to JavaScript, it is accessible through Context::Global(). ApiGlobalObject's prototype is set to JSGlobalObject so that property lookups are forwarded to JSGlobalObject. ApiGlobalObject forwards all other property access requests to JSGlobalObject, such as SetProperty, DeleteProperty, etc.\n\n  Security token is moved to a global context, and ApiGlobalObject has a reference to its global context. JSGlobalObject has a reference to its global context as well. When accessing properties on a global object in JavaScript, the domain security check is performed by comparing the security token of the lexical context (Top::global_context()) to the token of global object's context. The check is only needed when the receiver is a window object, such as 'window.document'. Accessing global variables, such as 'var foo = 3; foo' does not need checks because the receiver is the inner window object.\n\n  When an outer window is detached from its global context (when a frame navigates away from a page), it is completely detached from the inner window. A new context is created for the new page, and the outer global object is reused. At this point, the access check on the DOMWindow wrapper of the old context is turned on. The code in old context is still able to access DOMWindow properties, but it has to go through domain security checks.\n\n\nIt is debatable on how to implement the outer window object. Currently each property access function has to check if the receiver is ApiGlobalObject type. This approach might be error-prone that one may forget to check the receiver when adding new functions. It is unlikely a performance issue because accessing global variables are more common than 'window.foo' style coding.\n\nI am still working on the ARM port, and I'd like to hear comments and suggestions on the best way to support it in V8.\n\n\nReview URL: http://codereview.chromium.org/7366\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@540 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1aee7c79aa64218809ba3f8423c68b3a55b3036c","author":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 09 05:39:00 2008"},"commit":"1aee7c79aa64218809ba3f8423c68b3a55b3036c","committer":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Oct 09 05:39:00 2008"},"message":"Fix typo in include/v8.h (issue 108) and mark test-spaces/LargeObjectSpace as flaky on ARM (issue 113). TBR=ager@chromium.org\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@472 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"3228e4c1e9e9cbce6f4b1cd9667e2fb676fe74cb","author":{"name":"deanm@chromium.org","email":"deanm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 30 11:43:18 2008"},"commit":"3228e4c1e9e9cbce6f4b1cd9667e2fb676fe74cb","committer":{"name":"deanm@chromium.org","email":"deanm@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 30 11:43:18 2008"},"message":"Disallow copy and assigning a few public objects.\n\nBUG=97\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@398 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6bb7f43fa3bb1f1a73ed4d84aeb9c7a916f0bdcb","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 11 07:29:25 2008"},"commit":"6bb7f43fa3bb1f1a73ed4d84aeb9c7a916f0bdcb","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 11 07:29:25 2008"},"message":"Removed Message::GetStackTrace.\n\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@262 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"4d95ac7339c820dd1f1f07b22282c7e45ffa9753","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 10 14:54:15 2008"},"commit":"4d95ac7339c820dd1f1f07b22282c7e45ffa9753","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 10 14:54:15 2008"},"message":"Added option for TryCatches to not capture the message object on\nexceptions.\n\nIt turned out that the stack overflow fix from before had disabled\nmessage storing in another test.  Previously, stack overflows would\nactually cause a message object to start being created but cause\nanother exception which would not be reported and that's what stopped\nthe infinite regress.  This change resores that behavior.\n\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@259 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6974e4b2c7633f1844df0aecd77e90f68c16fbc4","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 10 11:41:48 2008"},"commit":"6974e4b2c7633f1844df0aecd77e90f68c16fbc4","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 10 11:41:48 2008"},"message":"Fixed bug #57.  Introduced String::Utf8Value and replaced a bunch of\nuses of String::AsciiValue with String::Utf8Value.  Fixed shell sample\n'load' so it doesn't print error messages.\n\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@254 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9bed566bdb819f607c19b56d79b60c55cbdffb02","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 09 20:08:45 2008"},"commit":"9bed566bdb819f607c19b56d79b60c55cbdffb02","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 09 20:08:45 2008"},"message":"Changed copyright header from google inc. to v8 project authors.\nAdded presubmit step to check copyright.\n\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@242 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"de607bd33e131fa2456b10550a3abed30c530c9b","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 09 18:55:41 2008"},"commit":"de607bd33e131fa2456b10550a3abed30c530c9b","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 09 18:55:41 2008"},"message":"Added source info to TryCatches.  Reorganized exception messaging\nsomewhat and folded stack traces into message.  Use of this in the\nshell will follow in a separate changelist.\n\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@235 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"db11860b73a385eb076a6a03e97ef631cd74880c","author":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 08 19:46:49 2008"},"commit":"db11860b73a385eb076a6a03e97ef631cd74880c","committer":{"name":"erik.corry@gmail.com","email":"erik.corry@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 08 19:46:49 2008"},"message":"Explain better the constraints for external string resources.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@218 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"cd3bf78bca7ec58fefeac8182a6b95af843492c5","author":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 08 07:24:10 2008"},"commit":"cd3bf78bca7ec58fefeac8182a6b95af843492c5","committer":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 08 07:24:10 2008"},"message":"Fix broken build. Sorry about that.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@193 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"6b7e71a22fa68fc1416a0f4dfa8060bdf7365b02","author":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 08 07:01:12 2008"},"commit":"6b7e71a22fa68fc1416a0f4dfa8060bdf7365b02","committer":{"name":"kasperl@chromium.org","email":"kasperl@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 08 07:01:12 2008"},"message":"Fix issues 28 and 30 by changed the header guard to V8_H_ and\nincluding HandleScope::ZapRange in release mode.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@189 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"1d8c4a9d94b920f3754825836eec48c3f6af3a17","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 05 13:39:14 2008"},"commit":"1d8c4a9d94b920f3754825836eec48c3f6af3a17","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Sep 05 13:39:14 2008"},"message":"A new instance of the utf-8 conversion changelist, this time against\nbleeding_edge.\n\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@170 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"fd6a5b3f8e5ed7bd4974d22406161de78529140d","author":{"name":"sgjesse","email":"sgjesse@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 04 10:03:17 2008"},"commit":"fd6a5b3f8e5ed7bd4974d22406161de78529140d","committer":{"name":"sgjesse","email":"sgjesse@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Sep 04 10:03:17 2008"},"message":"Renamed the include file debug.h to v8-debug.h to avoid possible\nname conflicts.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@133 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"546b52c323b56558e673a94821724e4081524cdb","author":{"name":"mads.s.ager@gmail.com","email":"mads.s.ager@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 20:37:06 2008"},"commit":"546b52c323b56558e673a94821724e4081524cdb","committer":{"name":"mads.s.ager@gmail.com","email":"mads.s.ager@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 20:37:06 2008"},"message":"More updates to the API documentation.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@85 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"b35e30e727a811a8b69decba663d5ad463553e70","author":{"name":"mads.s.ager","email":"mads.s.ager@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 18:48:24 2008"},"commit":"b35e30e727a811a8b69decba663d5ad463553e70","committer":{"name":"mads.s.ager","email":"mads.s.ager@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 18:48:24 2008"},"message":"Comment formatting change.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@83 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"96ae958eb1ed04a70de54468257402a3ba5bff1e","author":{"name":"mads.s.ager@gmail.com","email":"mads.s.ager@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 18:22:49 2008"},"commit":"96ae958eb1ed04a70de54468257402a3ba5bff1e","committer":{"name":"mads.s.ager@gmail.com","email":"mads.s.ager@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 18:22:49 2008"},"message":"Updated V8 API documentation.\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@82 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"9195764ad71fd668fd0dc9efe7f7bec67d8f4be3","author":{"name":"lesleyb555","email":"lesleyb555@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 17:31:57 2008"},"commit":"9195764ad71fd668fd0dc9efe7f7bec67d8f4be3","committer":{"name":"lesleyb555","email":"lesleyb555@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 17:31:57 2008"},"message":"Corrected a few typos, other minor edits to comments\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@80 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5a57a29dbe80d48f9714a5d21a16d6382bf0f6e6","author":{"name":"sgjesse@gmail.com","email":"sgjesse@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 11:48:50 2008"},"commit":"5a57a29dbe80d48f9714a5d21a16d6382bf0f6e6","committer":{"name":"sgjesse@gmail.com","email":"sgjesse@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 11:48:50 2008"},"message":"Renamed the top level directory 'public' to 'include'.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@74 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"371ddc71031d78cc2146292aab99d534f418e170","author":{"name":"mads.s.ager@gmail.com","email":"mads.s.ager@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 09:02:51 2008"},"commit":"371ddc71031d78cc2146292aab99d534f418e170","committer":{"name":"mads.s.ager@gmail.com","email":"mads.s.ager@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Mon Sep 01 09:02:51 2008"},"message":"Update version number.  Now working on 0.2.5.\n\nFixed typo in v8.h.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@62 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"5540a1a43c2890cd1481bd236966a56f8b03d32b","author":{"name":"lesleyb555","email":"lesleyb555@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sat Aug 30 10:36:54 2008"},"commit":"5540a1a43c2890cd1481bd236966a56f8b03d32b","committer":{"name":"lesleyb555","email":"lesleyb555@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Sat Aug 30 10:36:54 2008"},"message":"updated front page\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@52 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"743c424c660dff02595d077d308c1ed0723c6a63","author":{"name":"lesleyb555","email":"lesleyb555@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 29 17:09:30 2008"},"commit":"743c424c660dff02595d077d308c1ed0723c6a63","committer":{"name":"lesleyb555","email":"lesleyb555@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 29 17:09:30 2008"},"message":"Checking I can edit\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@51 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"dceb5f6a8f0148e3cd292204487fb5db62c6bcd5","author":{"name":"mads.s.ager@gmail.com","email":"mads.s.ager@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 28 09:55:41 2008"},"commit":"dceb5f6a8f0148e3cd292204487fb5db62c6bcd5","committer":{"name":"mads.s.ager@gmail.com","email":"mads.s.ager@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Thu Aug 28 09:55:41 2008"},"message":"Improved test support.\n\nFixed issue with building samples and cctests on 64-bit machines.\n\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@23 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"05bbf90b3af78cbb10626a5a4a8e7fa88c80e6a9","author":{"name":"christian.plesner.hansen","email":"christian.plesner.hansen@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 27 10:11:39 2008"},"commit":"05bbf90b3af78cbb10626a5a4a8e7fa88c80e6a9","committer":{"name":"christian.plesner.hansen","email":"christian.plesner.hansen@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Aug 27 10:11:39 2008"},"message":"Changed shell sample to take flags directly from the command-line.  Added api call that implements this.\n\nAdded better test support.\n\nAdded load, quit and version functions to the shell sample so it's easier to run benchmarks and tests.\n\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@18 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"c42f5829a1aea4c2aafd10583b339f7b0711ab3e","author":{"name":"christian.plesner.hansen","email":"christian.plesner.hansen@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 22 13:33:59 2008"},"commit":"c42f5829a1aea4c2aafd10583b339f7b0711ab3e","committer":{"name":"christian.plesner.hansen","email":"christian.plesner.hansen@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Aug 22 13:33:59 2008"},"message":"Included mjsunit JavaScript test suite and C++ unit tests.\n\nIn the shell sample don't print the result of executing a script, only\nevaluating expressions.\n\nFixed issue when building samples on Windows using a shared V8\nlibrary.  Added visibility option on Linux build which makes the\ngenerated library 18% smaller.\n\nChanged build system to accept multiple build modes in one build and\ngenerate seperate objects, libraries and executables for each mode.\n\nRemoved deferred negation optimization (a * -b => -(a * b)) since this\nvisibly changes operand conversion order.\n\nImproved parsing performance by introducing stack guard in preparsing.\nWithout a stack guard preparsing always bails out with stack overflow.\n\n\ngit-svn-id: http://v8.googlecode.com/svn/branches/bleeding_edge@16 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":42},{"_id":"37","message":"NO_COMMITS","milestone":37},{"_id":"35","message":"NO_COMMITS","milestone":35},{"_id":"34","message":"NO_COMMITS","milestone":34},{"_id":"32","message":"NO_COMMITS","milestone":32},{"_id":"33","message":"NO_COMMITS","milestone":33},{"_id":"36","message":"NO_COMMITS","milestone":36},{"_id":"30","message":"NO_COMMITS","milestone":30},{"_id":"31","message":"NO_COMMITS","milestone":31},{"_id":"28","message":"NO_COMMITS","milestone":28},{"_id":"27","message":"NO_COMMITS","milestone":27},{"_id":"26","message":"NO_COMMITS","milestone":26},{"_id":"25","message":"NO_COMMITS","milestone":25},{"_id":"23","message":"NO_COMMITS","milestone":23},{"_id":"24","message":"NO_COMMITS","milestone":24},{"_id":"17e5cd2e36dd4372fb38bce9ef3b2a60894d5905","author":{"name":"serya@chromium.org","email":"serya@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 30 12:51:36 2010"},"commit":"17e5cd2e36dd4372fb38bce9ef3b2a60894d5905","committer":{"name":"serya@chromium.org","email":"serya@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Fri Apr 30 12:51:36 2010"},"message":"Changing string length field  type from int to SMI. It will make it be a regular field. Code generated in EmitNamedLoad could be patched for faster access to string.length.\n\nReview URL: http://codereview.chromium.org/1706013\n\ngit-svn-id: http://v8.googlecode.com/svn/trunk@4556 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":22},{"_id":"19","message":"NO_COMMITS","milestone":19},{"_id":"21","message":"NO_COMMITS","milestone":21},{"_id":"29","message":"NO_COMMITS","milestone":29},{"_id":"150887a13c303665103aed8aa97c604c462e725c","author":{"name":"hajimehoshi","email":"hajimehoshi@chromium.org","time":"Tue Jan 12 06:28:09 2016"},"commit":"150887a13c303665103aed8aa97c604c462e725c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Jan 12 06:28:57 2016"},"message":"Add Add ExternalStringResourceBase::IsCompressible\n\nThis CL introduces ExternalStringResourceBase::IsCompressible.\n\nThis CL is a preparation for CompressibleString, which can\nbe compressed for memory reduction in Blink. We've found that\nJavaScript strings account for a relatively large part of Blink\nmemory usage, and we are now trying to replace JavaScript String/\nAtomicString with CompressibleString.\n\nWhen a string is compressed, the original char data is deleted\nand V8 pointer cache becomes invalid. This CL introduces\nisCompressible  property and if an external string's isCompressble\nreturn true, this is stored short_external_*_map instead of\nexternal_*_map so that V8 always requires the char pointer whenever\nV8 needs the string data.\n\nBUG=chromium:574317\nLOG=n\n\nReview URL: https://codereview.chromium.org/1490193002\n\nCr-Commit-Position: refs/heads/master@{#33224}\n","milestone":49},{"_id":"09685b5b00b3418945dca895193b9d81e2e0cdee","author":{"name":"littledan","email":"littledan@chromium.org","time":"Thu Jan 07 00:12:29 2016"},"commit":"09685b5b00b3418945dca895193b9d81e2e0cdee","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Jan 07 00:13:03 2016"},"message":"Add UseCounters for various standards-related code paths\n\n- Each of the three deprecated Promise functions\n- Two nonstandard pieces of Intl functionality\n- Accesses of the RegExp.prototype.unicode getter on the prototype\n\nBUG=v8:3785,v8:3238,v8:4633\nLOG=N\nR=adamk\nTBR=hpayer\n\nReview URL: https://codereview.chromium.org/1558113002\n\nCr-Commit-Position: refs/heads/master@{#33142}\n","milestone":49},{"_id":"88b58591aca6b6237442a8c0483cd541f96d41a2","author":{"name":"cbruni","email":"cbruni@chromium.org","time":"Tue Dec 22 16:36:47 2015"},"commit":"88b58591aca6b6237442a8c0483cd541f96d41a2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 22 16:37:24 2015"},"message":"[proxies] Expose proxies in the API\n\nAdd API-accessors for [[ProxyTarget]], [[ProxyHandler]]. Additionally\ncreate new proxies and revoke proxies via the API.\n\nBUG=v8:1543\nLOG=n\n\nReview URL: https://codereview.chromium.org/1542943002\n\nCr-Commit-Position: refs/heads/master@{#33013}\n","milestone":49},{"_id":"98f819c3e0c92d54a306cdacadda73cf96d21b52","author":{"name":"littledan","email":"littledan@chromium.org","time":"Tue Dec 22 06:35:22 2015"},"commit":"98f819c3e0c92d54a306cdacadda73cf96d21b52","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 22 06:36:17 2015"},"message":"Add web compat workarounds for ES2015 RegExp semantics\n\nUnexpectedly, websites depend on doing feature testing with\nRegExp.prototype.sticky and browser testing with RegExp.prototype.toString().\nES2015 newly throws exceptions for both of these. In order to enable shipping\nnew ES2015 semantics, this patch puts in narrow workarounds for those two\ncases, keeping their old behavior. UseCounters are added for how often\nthose particular cases come up, so we can see if it can be deprecated.\n\nR=yangguo\nBUG=v8:4637,v8:4617\nLOG=Y\nCQ_INCLUDE_TRYBOTS=tryserver.chromium.linux:linux_chromium_rel_ng;tryserver.blink:linux_blink_rel\n\nReview URL: https://codereview.chromium.org/1543723002\n\nCr-Commit-Position: refs/heads/master@{#32997}\n","milestone":49},{"_id":"0018ca5ebb81ea3b6fd62bcf348710470c642ca2","author":{"name":"jochen","email":"jochen@chromium.org","time":"Sun Dec 20 18:13:33 2015"},"commit":"0018ca5ebb81ea3b6fd62bcf348710470c642ca2","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Sun Dec 20 18:14:13 2015"},"message":"Mark all APIs without callers in Blink as deprecated\n\nR=vogelheim@chromium.org\nBUG=none\nLOG=y\n\nReview URL: https://codereview.chromium.org/1526643002\n\nCr-Commit-Position: refs/heads/master@{#32980}\n","milestone":49},{"_id":"70a7c754bf3445a8b783b75ca2a7aa34cdeb080b","author":{"name":"fmeawad","email":"fmeawad@chromium.org","time":"Thu Dec 17 18:48:07 2015"},"commit":"70a7c754bf3445a8b783b75ca2a7aa34cdeb080b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Dec 17 18:48:35 2015"},"message":"Implement tracing interface for v8\n\nThis is based on the Skia Implementation.\n\nMore on the project can be found here:\nhttps://docs.google.com/a/chromium.org/document/d/1_4LAnInOB8tM_DLjptWiszRwa4qwiSsDzMkO4tU-Qes/edit#heading=h.p97rw6yt8o2j\n\nThe V8 Tracing platform will replace the isolate->event_logger().\nBut since the current embedders (namely chromium) currently use the isolate->event_logger, I made the default implementation (event-tracer) call into isolate->event_logger if an event_logger was set.\nOnce the embedders properly implement the interface (for example in chromium it would look like this: https://codereview.chromium.org/707273005/), the default implementation will be doing nothing.\n\nOnce the embedders side is fixed, we will change how V8 uses the tracing framework beyond the call from Logger:CallEventLogger. (which would also include a d8 implementation)\n\nBUG=v8:4560\nLOG=N\n\nReview URL: https://codereview.chromium.org/988893003\n\nCr-Commit-Position: refs/heads/master@{#32959}\n","milestone":49},{"_id":"aeb8073c4a540010bb637d50790018041c5041c8","author":{"name":"akodat","email":"akodat@rocketsoftware.com","time":"Wed Dec 16 15:49:28 2015"},"commit":"aeb8073c4a540010bb637d50790018041c5041c8","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Dec 16 15:49:49 2015"},"message":"Add Isolate::DiscardThreadSpecificMetadata method to embedder API.\n\nIf many threads use the same Isolate (or many Isolates) and then\nterminate, their PerIsolateThreadData objects are never cleaned\nup, resulting in a slow memory leak and, worse, the\nPerIsolateThreadData chain getting larger and larger, adversely\naffecting performance.\n\nIn this situation, embedders will now be encouraged to apply\nDiscardThreadSpecificMetadata against any Isolate a thread is\ndone with, especially if the thread is about to terminate.\n\nNote that it is harmless to run DiscardThreadSpecificMetadata\nagainst an Isolate for which a thread has no thread data and\nper-Isolate thread data can be reestablished if a thread starts\nusing an Isolate again after running DiscardThreadSpecificMetadata\nagainst it.\n\nIt is, however, an embedder error to run\nDiscardThreadSpecificMetadata against an Isolate in thread with a\nLocker for the Isolate in the stack or against an Entered Isolate.\n\nThis change cannot cause any change in behavior in existing apps\nas the only added coded can only be reached via the new\nDiscardThreadSpecificMetadata method.\n\nR=Jakob, jochen\nBUG=\n\nReview URL: https://codereview.chromium.org/1522703002\n\nCr-Commit-Position: refs/heads/master@{#32909}\n","milestone":49},{"_id":"5819e4be5bd128556b0d735abe6b58173da67079","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Fri Dec 11 09:53:50 2015"},"commit":"5819e4be5bd128556b0d735abe6b58173da67079","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Dec 11 09:54:00 2015"},"message":"Re-re-land FastAccessorBuilder.\n\n... using the RawMachineAssembler and the work in crrev.com/1407313004.\n\nThe original change collided with crrev.com/1513543003.\n\nBUG=chromium:508898\nLOG=Y\n\nCommitted: https://crrev.com/515d9ccd8e6df7bf2ca01e2a55aaad30226399e1\nCr-Commit-Position: refs/heads/master@{#32742}\n\npatch from issue 1474543004 at patchset 260001 (http://crrev.com/1474543004#ps260001)\n\nCommitted: https://crrev.com/ee5c38d7db907ff86dd4049721c0cb4bc90a6c4d\nCr-Commit-Position: refs/heads/master@{#32753}\n\npatch from issue 1504713012 at patchset 20001 (http://crrev.com/1504713012#ps20001)\n\nReview URL: https://codereview.chromium.org/1518703002\n\nCr-Commit-Position: refs/heads/master@{#32786}\n","milestone":49},{"_id":"2fe34ebdcdee0f21b88daa4098a7918e91abb8fb","author":{"name":"epertoso","email":"epertoso@chromium.org","time":"Thu Dec 10 15:36:20 2015"},"commit":"2fe34ebdcdee0f21b88daa4098a7918e91abb8fb","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Dec 10 15:36:54 2015"},"message":"Removes the Callee parameter from FunctionCallbackInfo.\n\nThis will help us to instantiate AccessorPair's getters and setters only when they are needed.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1510483002\n\nCr-Commit-Position: refs/heads/master@{#32759}\n","milestone":49},{"_id":"515d9ccd8e6df7bf2ca01e2a55aaad30226399e1","author":{"name":"vogelheim","email":"vogelheim@chromium.org","time":"Thu Dec 10 10:09:31 2015"},"commit":"515d9ccd8e6df7bf2ca01e2a55aaad30226399e1","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Dec 10 10:10:11 2015"},"message":"Implement FastAccessorBuilder.\n\n... using the RawMachineAssembler and the work in cl/1407313004\n\nBUG=chromium:508898\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1474543004\n\nCr-Commit-Position: refs/heads/master@{#32742}\n","milestone":49},{"_id":"6422994f9031c70853df1063f6906571fa5e6150","author":{"name":"mstarzinger","email":"mstarzinger@chromium.org","time":"Tue Dec 08 18:59:11 2015"},"commit":"6422994f9031c70853df1063f6906571fa5e6150","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 08 18:59:45 2015"},"message":"Remove bogus include from v8.h header.\n\nThis was introduced due to a false positive by the linter script. We\nhave blacklisted the \"build/include_what_you_use\" linter bucket in our\npresubmit.py wrapper for that reason.\n\nR=jochen@chromium.org\n\nReview URL: https://codereview.chromium.org/1509843002\n\nCr-Commit-Position: refs/heads/master@{#32679}\n","milestone":49},{"_id":"91e1b9f67b20d4d26c0297704e3216912dd4011b","author":{"name":"littledan","email":"littledan@chromium.org","time":"Tue Dec 08 02:28:43 2015"},"commit":"91e1b9f67b20d4d26c0297704e3216912dd4011b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 08 02:29:33 2015"},"message":"Deprecate Promise::Chain from V8 APIs\n\nThe Promise::Chain logic is moved to a helper function to avoid\na violation of deprecated function usage.\n\nR=rossberg,jochen\nBUG=v8:3237\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1477023002\n\nCr-Commit-Position: refs/heads/master@{#32670}\n","milestone":49},{"_id":"425983190a915d64db996e714b7e08991fc37b2f","author":{"name":"littledan","email":"littledan@chromium.org","time":"Mon Dec 07 23:34:30 2015"},"commit":"425983190a915d64db996e714b7e08991fc37b2f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Dec 07 23:34:48 2015"},"message":"Improve style of V8 API code\n\nFix some minor issues that the linter is complaining about\n\nR=jochen\n\nReview URL: https://codereview.chromium.org/1507823002\n\nCr-Commit-Position: refs/heads/master@{#32667}\n","milestone":49},{"_id":"0f2bffa11e17603682c99b353a2910e818a78716","author":{"name":"jochen","email":"jochen@chromium.org","time":"Fri Dec 04 15:25:13 2015"},"commit":"0f2bffa11e17603682c99b353a2910e818a78716","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Dec 04 15:25:40 2015"},"message":"Mark deprecated debugger APIs as such\n\nWe should consider deprecating the message based API as well in the\nfuture.\n\nBUG=none\nR=yangguo@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1485333007\n\nCr-Commit-Position: refs/heads/master@{#32621}\n","milestone":49},{"_id":"747f455b074751040cc8ac0ede83f3880ccc488b","author":{"name":"cbruni","email":"cbruni@chromium.org","time":"Fri Dec 04 13:49:08 2015"},"commit":"747f455b074751040cc8ac0ede83f3880ccc488b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Dec 04 13:49:24 2015"},"message":"[runtime] [proxy] removing JSFunctionProxy and related code.\n\nBUG=v8:1543\nLOG=N\n\nReview URL: https://codereview.chromium.org/1496503002\n\nCr-Commit-Position: refs/heads/master@{#32616}\n","milestone":49},{"_id":"ef3bee66d113d49a9d381b408603fcc04cc3b5ad","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Dec 03 15:32:22 2015"},"commit":"ef3bee66d113d49a9d381b408603fcc04cc3b5ad","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Dec 03 15:32:32 2015"},"message":"Mark BooleanObject::New() as deprecated\n\nEmbedders should use the factory method that takes an Isolate* instead\n\nBUG=none\nR=vogelheim@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1494503003\n\nCr-Commit-Position: refs/heads/master@{#32573}\n","milestone":49},{"_id":"e0a661fc4c50628c946a5f7a267be88c4ad161b7","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Dec 03 11:44:03 2015"},"commit":"e0a661fc4c50628c946a5f7a267be88c4ad161b7","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Dec 03 11:44:51 2015"},"message":"Deprecate non-standard Array methods and clarify Object::isArray\n\nBUG=none\nR=neis@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1493053004\n\nCr-Commit-Position: refs/heads/master@{#32551}\n","milestone":49},{"_id":"cab2512a5ec87da12f9b8533661df330af732cb9","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Wed Dec 02 19:53:05 2015"},"commit":"cab2512a5ec87da12f9b8533661df330af732cb9","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Dec 02 19:53:47 2015"},"message":"Removed support deprecated (//@|/*@) source(URL|MappingURL)=\n\nLOG=Y\nBUG=chromium:558998\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/1495633002\n\nCr-Commit-Position: refs/heads/master@{#32528}\n","milestone":49},{"_id":"6c0d1a11006168d5852302f3a7fb38943c7e2c7e","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Dec 02 12:47:16 2015"},"commit":"6c0d1a11006168d5852302f3a7fb38943c7e2c7e","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Dec 02 12:47:41 2015"},"message":"Pass explicit Isolate parameter to v8::Debug methods that need it\n\nBUG=v8:2487\nLOG=n\nR=vogelheim@chromium.org\n\nReview URL: https://codereview.chromium.org/1496493002\n\nCr-Commit-Position: refs/heads/master@{#32509}\n","milestone":49},{"_id":"17b4e7450d84a78b23c0baa8b524248d0de08c9a","author":{"name":"jochen","email":"jochen@chromium.org","time":"Tue Dec 01 10:58:02 2015"},"commit":"17b4e7450d84a78b23c0baa8b524248d0de08c9a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Dec 01 10:58:46 2015"},"message":"Mark soon-to-be-deprecated TryCatch ctor as deprecated\n\nBUG=none\nR=vogelheim@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1488563002\n\nCr-Commit-Position: refs/heads/master@{#32451}\n","milestone":49},{"_id":"026095a3c7932573e1810b8064ec3008ed696601","author":{"name":"ulan","email":"ulan@chromium.org","time":"Mon Nov 30 10:35:10 2015"},"commit":"026095a3c7932573e1810b8064ec3008ed696601","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Nov 30 10:35:57 2015"},"message":"Introduce instance type for transition arrays.\n\nThe motivation is to allow specialized marking visitor for transition arrays and collect all transition array in a list for post-processing in ClearNonLiveReferences.\n\nBUG=chromium:554488\nLOG=NO\n\nReview URL: https://codereview.chromium.org/1480873003\n\nCr-Commit-Position: refs/heads/master@{#32396}\n","milestone":49},{"_id":"7730edcc1226c03a577ea699d2fb29fb11fccf60","author":{"name":"jochen","email":"jochen@chromium.org","time":"Mon Nov 30 08:16:35 2015"},"commit":"7730edcc1226c03a577ea699d2fb29fb11fccf60","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Mon Nov 30 08:16:59 2015"},"message":"Remove easy to remove calls to Isolate::Current() from api.cc\n\nR=vogelheim@chromium.org\nLOG=n\nBUG=v8:2487\n\nReview URL: https://codereview.chromium.org/1474353002\n\nCr-Commit-Position: refs/heads/master@{#32389}\n","milestone":49},{"_id":"a594545ac8547aba56ce4fc5a32ee253c8a66aa0","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Nov 26 18:26:23 2015"},"commit":"a594545ac8547aba56ce4fc5a32ee253c8a66aa0","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 26 18:27:05 2015"},"message":"Isoalte Isoschmalte [typo fix]\n\nBUG=none\nR=jkummerow@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1477243002\n\nCr-Commit-Position: refs/heads/master@{#32353}\n","milestone":49},{"_id":"b73118112a8e2b45386cfbf3d81c7253a5cdc93a","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Nov 26 16:01:51 2015"},"commit":"b73118112a8e2b45386cfbf3d81c7253a5cdc93a","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 26 16:02:36 2015"},"message":"Mark PromiseRejectMessage::GetStackTrace as deprecated\n\nIt's not used anywhere.\n\nBUG=none\nLOG=y\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/1477213002\n\nCr-Commit-Position: refs/heads/master@{#32348}\n","milestone":49},{"_id":"3c2bec8d70092ea8f9ec134bbd07630fc049fa8b","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Nov 26 14:19:27 2015"},"commit":"3c2bec8d70092ea8f9ec134bbd07630fc049fa8b","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 26 14:19:53 2015"},"message":"Mark HiddenValue API as deprecated\n\nBUG=none\nR=vogelheim@chromium.org\n\nReview URL: https://codereview.chromium.org/1459373003\n\nCr-Commit-Position: refs/heads/master@{#32340}\n","milestone":49},{"_id":"c47ce4cc8e0708dba27a6fce9863e7c0d3205f5d","author":{"name":"jochen","email":"jochen@chromium.org","time":"Thu Nov 26 11:21:24 2015"},"commit":"c47ce4cc8e0708dba27a6fce9863e7c0d3205f5d","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 26 11:21:39 2015"},"message":"Add explicit Isolate parameter to Exception::CreateMessage()\n\nThis way, we can also capture a stack trace for SMIs\n\nBUG=chromium:495801\nR=yangguo@chromium.org\nLOG=y\n\nReview URL: https://codereview.chromium.org/1472143006\n\nCr-Commit-Position: refs/heads/master@{#32331}\n","milestone":49},{"_id":"b60d17eccde74db90148cf7e5a74be28fcaa7773","author":{"name":"thakis","email":"thakis@chromium.org","time":"Wed Nov 25 17:16:10 2015"},"commit":"b60d17eccde74db90148cf7e5a74be28fcaa7773","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Nov 25 17:16:44 2015"},"message":"Unconditionally expand STATIC_ASSERT to the C++11 form.\n\nAlso add a note that it should go away over time.\n\nBUG=none\nLOG=n\n\nReview URL: https://codereview.chromium.org/1475033003\n\nCr-Commit-Position: refs/heads/master@{#32290}\n","milestone":49},{"_id":"5335e7d55a99f931f4de3b0c4b6ba52291030c2c","author":{"name":"jochen","email":"jochen@chromium.org","time":"Wed Nov 25 11:17:12 2015"},"commit":"5335e7d55a99f931f4de3b0c4b6ba52291030c2c","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Nov 25 11:17:54 2015"},"message":"Clarify how to replace ForceSet\n\nBUG=none\nR=vogelheim@chromium.org\nLOG=n\n\nReview URL: https://codereview.chromium.org/1473783003\n\nCr-Commit-Position: refs/heads/master@{#32263}\n","milestone":49},{"_id":"c1e5f005d79c436d90f474f8bc6448c4555a619f","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Wed Nov 25 08:01:50 2015"},"commit":"c1e5f005d79c436d90f474f8bc6448c4555a619f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Wed Nov 25 08:02:27 2015"},"message":"Removed support deprecated (//@|/*@) source(URL|MappingURL)=\n\nLOG=Y\nBUG=chromium:558998\nR=yangguo@chromium.org\n\nReview URL: https://codereview.chromium.org/1474543005\n\nCr-Commit-Position: refs/heads/master@{#32249}\n","milestone":49},{"_id":"4307e448997d4a5ab6f4f0bd1216e7910177fa3f","author":{"name":"epertoso","email":"epertoso@chromium.org","time":"Tue Nov 24 14:32:41 2015"},"commit":"4307e448997d4a5ab6f4f0bd1216e7910177fa3f","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Tue Nov 24 14:33:23 2015"},"message":"Adds the possibility of setting a Code object as the callback of a FunctionTemplate.\n\nBUG=\n\nReview URL: https://codereview.chromium.org/1407313004\n\nCr-Commit-Position: refs/heads/master@{#32213}\n","milestone":49},{"_id":"89e859fb2b5cf5c30aca3492fdb6e98fa87950a3","author":{"name":"kozyatinskiy","email":"kozyatinskiy@chromium.org","time":"Thu Nov 19 19:32:31 2015"},"commit":"89e859fb2b5cf5c30aca3492fdb6e98fa87950a3","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 19 19:32:38 2015"},"message":"[V8] Unify get function name for debugging purpose\n\nFollowing logic is using for getting function name in JSFunction::GetDebugName:\n1. if function has displayName and its type is string then use it\n2. if function has defined property Function.name as value and its type string then use it\n3. otherwise use SharedFunctionInfo::DebugName as functionName.\n\nJSFunction::GetDebugName is exposed in V8 API and in FunctionMirror interface.\n\nBUG=chromium:17356\nR=yangguo@chromium.org,mstarzinger@chromium.org\nLOG=Y\n\nReview URL: https://codereview.chromium.org/1449473005\n\nCr-Commit-Position: refs/heads/master@{#32124}\n","milestone":49},{"_id":"ed7d7954832d14ddc5a5afc037d84f6f584d6d33","author":{"name":"adamk","email":"adamk@chromium.org","time":"Thu Nov 19 02:19:52 2015"},"commit":"ed7d7954832d14ddc5a5afc037d84f6f584d6d33","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Thu Nov 19 02:20:20 2015"},"message":"[api] Remove deprecated and unused Set/Map::FromArray\n\nR=jochen@chromium.org\nCQ_INCLUDE_TRYBOTS=tryserver.chromium.linux:linux_chromium_rel_ng\n\nReview URL: https://codereview.chromium.org/1456923003\n\nCr-Commit-Position: refs/heads/master@{#32099}\n","milestone":49},{"_id":"f25e0f2f26e5e03db0ea26cb16ca57e0f4c1bb67","author":{"name":"hablich","email":"hablich@chromium.org","time":"Fri Nov 13 14:26:54 2015"},"commit":"f25e0f2f26e5e03db0ea26cb16ca57e0f4c1bb67","committer":{"name":"Commit bot","email":"commit-bot@chromium.org","time":"Fri Nov 13 14:27:28 2015"},"message":"Update version to 4.9\n\nTBR=machenbach@chromium.org\nNOTRY=true\n\nReview URL: https://codereview.chromium.org/1443673002\n\nCr-Commit-Position: refs/heads/master@{#31985}\n","milestone":49},{"_id":"17","message":"NO_COMMITS","milestone":17},{"_id":"16","message":"NO_COMMITS","milestone":16},{"_id":"18","message":"NO_COMMITS","milestone":18},{"_id":"14","message":"NO_COMMITS","milestone":14},{"_id":"15","message":"NO_COMMITS","milestone":15},{"_id":"b9ce637a396f3cb3845105ba1f5553d25b25abef","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 03 11:38:18 2009"},"commit":"b9ce637a396f3cb3845105ba1f5553d25b25abef","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Nov 03 11:38:18 2009"},"message":"Merge bleeding_edge r3201 and r3202 to trunk.\n\nReview URL: http://codereview.chromium.org/342095\n\ngit-svn-id: http://v8.googlecode.com/svn/trunk@3203 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":13},{"_id":"98aff2fe110015974dbb787dc353f9760034df71","author":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 30 08:27:10 2009"},"commit":"98aff2fe110015974dbb787dc353f9760034df71","committer":{"name":"sgjesse@chromium.org","email":"sgjesse@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed Sep 30 08:27:10 2009"},"message":"Merge bleeding_edge revision 2969 and 2980 to trunk.\nReview URL: http://codereview.chromium.org/257002\n\ngit-svn-id: http://v8.googlecode.com/svn/trunk@2990 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":13},{"_id":"2bc58ef330b2d92ba287754282872699c151db4a","author":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 22 10:00:30 2009"},"commit":"2bc58ef330b2d92ba287754282872699c151db4a","committer":{"name":"christian.plesner.hansen@gmail.com","email":"christian.plesner.hansen@gmail.com@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue Sep 22 10:00:30 2009"},"message":"Pushed 1.3.12 to trunk.\n\nReview URL: http://codereview.chromium.org/214051\n\ngit-svn-id: http://v8.googlecode.com/svn/trunk@2949 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":13},{"_id":"1bf0cd04f43405cf4353d7c5360e53149ecb9f2c","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 20 11:34:19 2009"},"commit":"1bf0cd04f43405cf4353d7c5360e53149ecb9f2c","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Wed May 20 11:34:19 2009"},"message":"Push bleeding_edge revisions 2004 and 2006 to trunk.\n\nr2004 fixes compilation on newer gcc versions.\n\nr2006 exposes the calling JavaScript context through the API.\n\nReview URL: http://codereview.chromium.org/112047\n\ngit-svn-id: http://v8.googlecode.com/svn/trunk@2012 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":12},{"_id":"8545c0a7fa49686919a6fb9f7473ff9ff2bf22e0","author":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 05 09:53:13 2009"},"commit":"8545c0a7fa49686919a6fb9f7473ff9ff2bf22e0","committer":{"name":"ager@chromium.org","email":"ager@chromium.org@ce2b1a6d-e550-0410-aec6-3dcde31c8c00","time":"Tue May 05 09:53:13 2009"},"message":"merge bleeding_edge revision 1858 to trunk\n\ngit-svn-id: http://v8.googlecode.com/svn/trunk@1859 ce2b1a6d-e550-0410-aec6-3dcde31c8c00\n","milestone":12},{"_id":"11","message":"NO_COMMITS","milestone":11},{"_id":"10","message":"NO_COMMITS","milestone":10},{"_id":"9","message":"NO_COMMITS","milestone":9},{"_id":"8","message":"NO_COMMITS","milestone":8},{"_id":"7","message":"NO_COMMITS","milestone":7}]}